<!-- doc/src/sgml/pgstattuple.sgml -->

<sect1 id="pgstattuple" xreflabel="pgstattuple">
<!-- pgdoc-cn_start sig_en=aa0853234e74556cc3ee3b160c21848b sig_cn_org=None source=14.1 
 <title>pgstattuple</title>
________________________________________________________-->
 <title>pgstattuple</title>
<!-- pgdoc-cn_end sig_en=aa0853234e74556cc3ee3b160c21848b -->

<!-- pgdoc-cn_start sig_en=f4a82a0088c4707ae6d668748552a368 sig_cn_org=None source=14.1 
 <indexterm zone="pgstattuple">
  <primary>pgstattuple</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="pgstattuple">
  <primary>pgstattuple</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=f4a82a0088c4707ae6d668748552a368 -->

<!-- pgdoc-cn_start sig_en=375dc0a860caa2a697dce7442271f4a0 sig_cn_org=None source=14.1 
 <para>
  The <filename>pgstattuple</filename> module provides various functions to
  obtain tuple-level statistics.
 </para>
________________________________________________________-->
 <para>
  <filename>pgstattuple</filename>模块提供多种函数来获得元组层的统计信息。
 </para>
<!-- pgdoc-cn_end sig_en=375dc0a860caa2a697dce7442271f4a0 -->

<!-- pgdoc-cn_start sig_en=d19f385937794235c52e010985eab5b8 sig_cn_org=None source=14.1 
 <para>
  Because these functions return detailed page-level information, access is
  restricted by default.  By default, only the
  role <literal>pg_stat_scan_tables</literal> has <literal>EXECUTE</literal>
  privilege.  Superusers of course bypass this restriction.  After the
  extension has been installed, users may issue <command>GRANT</command>
  commands to change the privileges on the functions to allow others to
  execute them.  However, it might be preferable to add those users to
  the <literal>pg_stat_scan_tables</literal> role instead.
 </para>
________________________________________________________-->
 <para>
   由于这些函数返回详细的页面级信息，因此默认访问权限是受限制的。 默认情况下，只有角色<literal>pg_stat_scan_tables</literal>具有<literal>EXECUTE</literal>特权。 超级用户当然可以绕过这个限制。扩展程序安装后,用户可以发送<command>GRANT</command>命令来更改函数的权限以允许其他用户来执行它们。但是，最好将这些用户添加到<literal>pg_stat_scan_tables</literal>角色。
 </para>
<!-- pgdoc-cn_end sig_en=d19f385937794235c52e010985eab5b8 -->

 <sect2>
<!-- pgdoc-cn_start sig_en=a75e46b58752dd4a3c18092d0816bc01 sig_cn_org=None source=14.1 
  <title>Functions</title>
________________________________________________________-->
  <title>函数</title>
<!-- pgdoc-cn_end sig_en=a75e46b58752dd4a3c18092d0816bc01 -->

  <variablelist>
   <varlistentry>
<!-- pgdoc-cn_start sig_en=2c5995e90b899dcf74fb39a15e82a595 sig_cn_org=None source=14.1 
    <term>
     <indexterm>
      <primary>pgstattuple</primary>
     </indexterm>
     <function>pgstattuple(regclass) returns record</function>
    </term>
________________________________________________________-->
    <term>
     <function>pgstattuple(regclass) 返回 record</function>
   <indexterm>
    <primary>pgstattuple</primary>
   </indexterm>    
    </term>
<!-- pgdoc-cn_end sig_en=2c5995e90b899dcf74fb39a15e82a595 -->

    <listitem>
<!-- pgdoc-cn_start sig_en=69d96b92b4d5404d030bff4009ba6082 sig_cn_org=None source=14.1 
     <para>
      <function>pgstattuple</function> returns a relation's physical length,
      percentage of <quote>dead</quote> tuples, and other info. This may help users
      to determine whether vacuum is necessary or not.  The argument is the
      target relation's name (optionally schema-qualified) or OID.
      For example:
<programlisting>
test=&gt; SELECT * FROM pgstattuple('pg_catalog.pg_proc');
-[ RECORD 1 ]-&minus;-&minus;-&minus;+-&minus;-&minus;-&minus;-
table_len          | 458752
tuple_count        | 1470
tuple_len          | 438896
tuple_percent      | 95.67
dead_tuple_count   | 11
dead_tuple_len     | 3157
dead_tuple_percent | 0.69
free_space         | 8932
free_percent       | 1.95
</programlisting>
     The output columns are described in <xref linkend="pgstattuple-columns"/>.
    </para>
________________________________________________________-->
     <para>
      <function>pgstattuple</function>返回一个关系的物理长度、<quote>死亡</quote>元组的百分比以及其他信息。这可以帮助用户决定是否需要清理。参数是目标关系的名称（可以有选择地用模式限定）或者 OID。例如：
<programlisting>
test=&gt; SELECT * FROM pgstattuple('pg_catalog.pg_proc');
-[ RECORD 1 ]------+-------
table_len          | 458752
tuple_count        | 1470
tuple_len          | 438896
tuple_percent      | 95.67
dead_tuple_count   | 11
dead_tuple_len     | 3157
dead_tuple_percent | 0.69
free_space         | 8932
free_percent       | 1.95
</programlisting>
     <xref linkend="pgstattuple-columns"/>中描述了输出列。
    </para>
<!-- pgdoc-cn_end sig_en=69d96b92b4d5404d030bff4009ba6082 -->

    <table id="pgstattuple-columns">
<!-- pgdoc-cn_start sig_en=b3f564191fffafb7fed778b888101daf sig_cn_org=None source=14.1 
     <title><function>pgstattuple</function> Output Columns</title>
________________________________________________________-->
     <title><function>pgstattuple</function> 输出列</title>
<!-- pgdoc-cn_end sig_en=b3f564191fffafb7fed778b888101daf -->
     <tgroup cols="3">
      <thead>
<!-- pgdoc-cn_start sig_en=42e493aa9f1cab41487d1d50f85dc25c sig_cn_org=None source=14.1 
       <row>
        <entry>Column</entry>
        <entry>Type</entry>
        <entry>Description</entry>
       </row>
________________________________________________________-->
       <row>
        <entry>列</entry>
        <entry>类型</entry>
        <entry>描述</entry>
       </row>
<!-- pgdoc-cn_end sig_en=42e493aa9f1cab41487d1d50f85dc25c -->
      </thead>

      <tbody>
<!-- pgdoc-cn_start sig_en=d4c8118167b5e9810c782f67aa14919d sig_cn_org=None source=14.1 
       <row>
        <entry><structfield>table_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Physical relation length in bytes</entry>
       </row>
________________________________________________________-->
       <row>
        <entry><structfield>table_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>物理关系长度，以字节计</entry>
       </row>
<!-- pgdoc-cn_end sig_en=d4c8118167b5e9810c782f67aa14919d -->
<!-- pgdoc-cn_start sig_en=e821e0b0e0a39d498c1ffaa0725a3e72 sig_cn_org=None source=14.1 
       <row>
        <entry><structfield>tuple_count</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of live tuples</entry>
       </row>
________________________________________________________-->
       <row>
        <entry><structfield>tuple_count</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>存活元组的数量</entry>
       </row>
<!-- pgdoc-cn_end sig_en=e821e0b0e0a39d498c1ffaa0725a3e72 -->
<!-- pgdoc-cn_start sig_en=1db30ca14b095772caa75e1745535768 sig_cn_org=None source=14.1 
       <row>
        <entry><structfield>tuple_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Total length of live tuples in bytes</entry>
       </row>
________________________________________________________-->
       <row>
        <entry><structfield>tuple_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>存活元组的总长度，以字节计</entry>
       </row>
<!-- pgdoc-cn_end sig_en=1db30ca14b095772caa75e1745535768 -->
<!-- pgdoc-cn_start sig_en=4795059dec2039368e04b81ff09f15eb sig_cn_org=None source=14.1 
       <row>
        <entry><structfield>tuple_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>Percentage of live tuples</entry>
       </row>
________________________________________________________-->
       <row>
        <entry><structfield>tuple_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>存活元组的百分比</entry>
       </row>
<!-- pgdoc-cn_end sig_en=4795059dec2039368e04b81ff09f15eb -->
<!-- pgdoc-cn_start sig_en=07727a0c1a92c5de35b27a6eed11c444 sig_cn_org=None source=14.1 
       <row>
        <entry><structfield>dead_tuple_count</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of dead tuples</entry>
       </row>
________________________________________________________-->
       <row>
        <entry><structfield>dead_tuple_count</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>死亡元组的数量</entry>
       </row>
<!-- pgdoc-cn_end sig_en=07727a0c1a92c5de35b27a6eed11c444 -->
<!-- pgdoc-cn_start sig_en=41533021251830e75dabf79a4bd3c942 sig_cn_org=None source=14.1 
       <row>
        <entry><structfield>dead_tuple_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Total length of dead tuples in bytes</entry>
       </row>
________________________________________________________-->
       <row>
        <entry><structfield>dead_tuple_len</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>死亡元组的总长度，以字节计</entry>
       </row>
<!-- pgdoc-cn_end sig_en=41533021251830e75dabf79a4bd3c942 -->
<!-- pgdoc-cn_start sig_en=d2cb2996e3b30ef5b769d6a187411577 sig_cn_org=None source=14.1 
       <row>
        <entry><structfield>dead_tuple_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>Percentage of dead tuples</entry>
       </row>
________________________________________________________-->
       <row>
        <entry><structfield>dead_tuple_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>死亡元组的百分比</entry>
       </row>
<!-- pgdoc-cn_end sig_en=d2cb2996e3b30ef5b769d6a187411577 -->
<!-- pgdoc-cn_start sig_en=5305405f52562d959efd8cc44c6d73cc sig_cn_org=None source=14.1 
       <row>
        <entry><structfield>free_space</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Total free space in bytes</entry>
       </row>
________________________________________________________-->
       <row>
        <entry><structfield>free_space</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>空闲空间总量，以字节计</entry>
       </row>
<!-- pgdoc-cn_end sig_en=5305405f52562d959efd8cc44c6d73cc -->
<!-- pgdoc-cn_start sig_en=03418506274983a17c92b2de663ef277 sig_cn_org=None source=14.1 
       <row>
        <entry><structfield>free_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>Percentage of free space</entry>
       </row>
________________________________________________________-->
       <row>
        <entry><structfield>free_percent</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>空闲空间的百分比</entry>
       </row>
<!-- pgdoc-cn_end sig_en=03418506274983a17c92b2de663ef277 -->

      </tbody>
     </tgroup>
    </table>

    <note>
<!-- pgdoc-cn_start sig_en=497292dd64a17ac93c63c0713a4c30f6 sig_cn_org=None source=14.1 
     <para>
      The <literal>table_len</literal> will always be greater than the sum
      of the <literal>tuple_len</literal>, <literal>dead_tuple_len</literal>
      and <literal>free_space</literal>. The difference is accounted for by
      fixed page overhead, the per-page table of pointers to tuples, and
      padding to ensure that tuples are correctly aligned.
     </para>
________________________________________________________-->
     <para>
      <literal>table_len</literal>将总是比<literal>tuple_len</literal>、
	  <literal>dead_tuple_len</literal>和<literal>free_space</literal>的和要大。
	  不同之处在于固定的页面开销，每页指向元组的指针表和填充以确保元组正确对齐。
     </para>
<!-- pgdoc-cn_end sig_en=497292dd64a17ac93c63c0713a4c30f6 -->
    </note>

<!-- pgdoc-cn_start sig_en=8ed9086712575d5ada5fe1bf27a87d2e sig_cn_org=None source=14.1 
    <para>
     <function>pgstattuple</function> acquires only a read lock on the
     relation. So the results do not reflect an instantaneous snapshot;
     concurrent updates will affect them.
    </para>
________________________________________________________-->
    <para>
     <function>pgstattuple</function>只要求在关系上的一个读锁。因此结果不能反映一个即时快照，并发更新将影响结果。
    </para>
<!-- pgdoc-cn_end sig_en=8ed9086712575d5ada5fe1bf27a87d2e -->

<!-- pgdoc-cn_start sig_en=c6d67e921a952febdf639a1f398a366c sig_cn_org=None source=14.1 
    <para>
     <function>pgstattuple</function> judges a tuple is <quote>dead</quote> if
     <function>HeapTupleSatisfiesDirty</function> returns false.
    </para>
________________________________________________________-->
    <para>
     如果<function>HeapTupleSatisfiesDirty</function>返回假，<function>pgstattuple</function>就判定一个元组是<quote>死亡的</quote>。
    </para>
<!-- pgdoc-cn_end sig_en=c6d67e921a952febdf639a1f398a366c -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pgstattuple(text) returns record</function>
    </term>

    <listitem>
<!-- pgdoc-cn_start sig_en=e974ca4865016ac80fff2cd1518cc00e sig_cn_org=None source=14.1 
     <para>
      This is the same as <function>pgstattuple(regclass)</function>, except
      that the target relation is specified as TEXT. This function is kept
      because of backward-compatibility so far, and will be deprecated in
      some future release.
     </para>
________________________________________________________-->
     <para>
      与<function>pgstattuple(regclass)</function>相同，只不过通过  TEXT 指定目标关系。这个函数只是为了向后兼容而保留，在未来的发布中将会被废除。
     </para>
<!-- pgdoc-cn_end sig_en=e974ca4865016ac80fff2cd1518cc00e -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=830c5fcad3832e9210521ea62482078d sig_cn_org=None source=14.1 
    <term>
    <indexterm>
     <primary>pgstatindex</primary>
    </indexterm>
     <function>pgstatindex(regclass) returns record</function>
    </term>
________________________________________________________-->
    <term>
    <indexterm>
     <primary>pgstatindex</primary>
    </indexterm>
     <function>pgstatindex(regclass) 返回 record</function>
    </term>
<!-- pgdoc-cn_end sig_en=830c5fcad3832e9210521ea62482078d -->

    <listitem>
<!-- pgdoc-cn_start sig_en=dfa077cbcb0877411da93298b421a6af sig_cn_org=None source=14.1 
     <para>
      <function>pgstatindex</function> returns a record showing information
      about a B-tree index.  For example:
<programlisting>
test=&gt; SELECT * FROM pgstatindex('pg_cast_oid_index');
-[ RECORD 1 ]-&minus;-&minus;-&minus;+-&minus;-&minus;-&minus;
version            | 2
tree_level         | 0
index_size         | 16384
root_block_no      | 1
internal_pages     | 0
leaf_pages         | 1
empty_pages        | 0
deleted_pages      | 0
avg_leaf_density   | 54.27
leaf_fragmentation | 0
</programlisting>
     </para>
________________________________________________________-->
     <para>
      <function>pgstatindex</function>返回一个记录显示有关一个 B-树索引的信息。例如：
<programlisting>
test=&gt; SELECT * FROM pgstatindex('pg_cast_oid_index');
-[ RECORD 1 ]------+------
version            | 2
tree_level         | 0
index_size         | 16384
root_block_no      | 1
internal_pages     | 0
leaf_pages         | 1
empty_pages        | 0
deleted_pages      | 0
avg_leaf_density   | 54.27
leaf_fragmentation | 0
</programlisting>
     </para>
<!-- pgdoc-cn_end sig_en=dfa077cbcb0877411da93298b421a6af -->

<!-- pgdoc-cn_start sig_en=bee653c225ed26294985aa92eb1de704 sig_cn_org=None source=14.1 
    <para>
     The output columns are:

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Column</entry>
        <entry>Type</entry>
        <entry>Description</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>B-tree version number</entry>
       </row>

       <row>
        <entry><structfield>tree_level</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>Tree level of the root page</entry>
       </row>

       <row>
        <entry><structfield>index_size</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Total index size in bytes</entry>
       </row>

       <row>
        <entry><structfield>root_block_no</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Location of root page (zero if none)</entry>
       </row>

       <row>
        <entry><structfield>internal_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of <quote>internal</quote> (upper-level) pages</entry>
       </row>

       <row>
        <entry><structfield>leaf_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of leaf pages</entry>
       </row>

       <row>
        <entry><structfield>empty_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of empty pages</entry>
       </row>

       <row>
        <entry><structfield>deleted_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of deleted pages</entry>
       </row>

       <row>
        <entry><structfield>avg_leaf_density</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>Average density of leaf pages</entry>
       </row>

       <row>
        <entry><structfield>leaf_fragmentation</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>Leaf page fragmentation</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>
________________________________________________________-->
    <para>
     输出列是：

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>列</entry>
        <entry>类型</entry>
        <entry>描述</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>B-树 版本号</entry>
       </row>

       <row>
        <entry><structfield>tree_level</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>根页的树层次</entry>
       </row>

       <row>
        <entry><structfield>index_size</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>以字节计的索引总尺寸</entry>
       </row>

       <row>
        <entry><structfield>root_block_no</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>根页的位置（如果没有则为零）</entry>
       </row>

       <row>
        <entry><structfield>internal_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry><quote>内部</quote>（上层）页面的数量</entry>
       </row>

       <row>
        <entry><structfield>leaf_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>叶子页的数量</entry>
       </row>

       <row>
        <entry><structfield>empty_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>空页的数量</entry>
       </row>

       <row>
        <entry><structfield>deleted_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>删除页的数量</entry>
       </row>

       <row>
        <entry><structfield>avg_leaf_density</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>叶子页的平均密度</entry>
       </row>

       <row>
        <entry><structfield>leaf_fragmentation</structfield></entry>
        <entry><type>float8</type></entry>
        <entry>叶子页碎片</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>
<!-- pgdoc-cn_end sig_en=bee653c225ed26294985aa92eb1de704 -->

<!-- pgdoc-cn_start sig_en=1145d29dfa0c9beb80915f523c779801 sig_cn_org=None source=14.1 
    <para>
     The reported <literal>index_size</literal> will normally correspond to one more
     page than is accounted for by <literal>internal_pages + leaf_pages +
     empty_pages + deleted_pages</literal>, because it also includes the
     index's metapage.
    </para>
________________________________________________________-->
    <para>
     报告的<literal>index_size</literal>通常对应于<literal>internal_pages + leaf_pages + empty_pages + deleted_pages</literal>加一，因为它还包括索引的元页。
    </para>
<!-- pgdoc-cn_end sig_en=1145d29dfa0c9beb80915f523c779801 -->

<!-- pgdoc-cn_start sig_en=482ee2a1eae36191f27ba4908eda9953 sig_cn_org=None source=14.1 
    <para>
     As with <function>pgstattuple</function>, the results are accumulated
     page-by-page, and should not be expected to represent an
     instantaneous snapshot of the whole index.
    </para>
________________________________________________________-->
    <para>
     对于<function>pgstattuple</function>，结果是一页一页累计的并且不要期望结果会表示整个索引的一个即时快照。
    </para>
<!-- pgdoc-cn_end sig_en=482ee2a1eae36191f27ba4908eda9953 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pgstatindex(text) returns record</function>
    </term>

    <listitem>
<!-- pgdoc-cn_start sig_en=f9b9270bb843f6555ec2bb4c4dceb44e sig_cn_org=None source=14.1 
     <para>
      This is the same as <function>pgstatindex(regclass)</function>, except
      that the target index is specified as TEXT. This function is kept
      because of backward-compatibility so far, and will be deprecated in
      some future release.
     </para>
________________________________________________________-->
     <para>
      与<function>pgstatindex(regclass)</function>相同，只不过通过  TEXT 指定目标索引。这个函数只是为了向后兼容而保留，在未来的某个发布中将会被废除。
     </para>
<!-- pgdoc-cn_end sig_en=f9b9270bb843f6555ec2bb4c4dceb44e -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=bac5a881143c1bdb8d7d2b56b894e57d sig_cn_org=None source=14.1 
    <term>
     <indexterm>
      <primary>pgstatginindex</primary>
     </indexterm>
     <function>pgstatginindex(regclass) returns record</function>
    </term>
________________________________________________________-->
    <term>
     <indexterm>
      <primary>pgstatginindex</primary>
     </indexterm>
     <function>pgstatginindex(regclass) 返回 record</function>
    </term>
<!-- pgdoc-cn_end sig_en=bac5a881143c1bdb8d7d2b56b894e57d -->

    <listitem>
<!-- pgdoc-cn_start sig_en=af57f3469ba1040790a7b09237730777 sig_cn_org=None source=14.1 
     <para>
      <function>pgstatginindex</function> returns a record showing information
      about a GIN index.  For example:
<programlisting>
test=&gt; SELECT * FROM pgstatginindex('test_gin_index');
-[ RECORD 1 ]-&minus;+-&minus;
version        | 1
pending_pages  | 0
pending_tuples | 0
</programlisting>
     </para>
________________________________________________________-->
     <para>
      <function>pgstatginindex</function>返回一个记录显示有关一个 GIN 索引的信息。例如：
<programlisting>
test=&gt; SELECT * FROM pgstatginindex('test_gin_index');
-[ RECORD 1 ]--+--
version        | 1
pending_pages  | 0
pending_tuples | 0
</programlisting>
     </para>
<!-- pgdoc-cn_end sig_en=af57f3469ba1040790a7b09237730777 -->

<!-- pgdoc-cn_start sig_en=9b35c3df8925729501f03d0691879e3a sig_cn_org=None source=14.1 
    <para>
     The output columns are:

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Column</entry>
        <entry>Type</entry>
        <entry>Description</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>GIN version number</entry>
       </row>

       <row>
        <entry><structfield>pending_pages</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>Number of pages in the pending list</entry>
       </row>

       <row>
        <entry><structfield>pending_tuples</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of tuples in the pending list</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>
________________________________________________________-->
    <para>
     输出列是：

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>列</entry>
        <entry>类型</entry>
        <entry>描述</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>GIN 版本号</entry>
       </row>

       <row>
        <entry><structfield>pending_pages</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>待处理列表中的页面数</entry>
       </row>

       <row>
        <entry><structfield>pending_tuples</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>待处理列表中的元组数</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>
<!-- pgdoc-cn_end sig_en=9b35c3df8925729501f03d0691879e3a -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=b4c33c9e7bf464e8e40a8f35dfce5f28 sig_cn_org=None source=14.1 
    <term>
     <indexterm>
      <primary>pgstathashindex</primary>
     </indexterm>
     <function>pgstathashindex(regclass) returns record</function>
    </term>
________________________________________________________-->
    <term>
     <indexterm>
      <primary>pgstathashindex</primary>
     </indexterm>
     <function>pgstathashindex(regclass) returns record</function>
    </term>
<!-- pgdoc-cn_end sig_en=b4c33c9e7bf464e8e40a8f35dfce5f28 -->

    <listitem>
<!-- pgdoc-cn_start sig_en=1ee1991302ab6c0512d434032366e530 sig_cn_org=None source=14.1 
     <para>
      <function>pgstathashindex</function> returns a record showing information
      about a HASH index.  For example:
<programlisting>
test=&gt; select * from pgstathashindex('con_hash_index');
-[ RECORD 1 ]-&minus;+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-
version        | 4
bucket_pages   | 33081
overflow_pages | 0
bitmap_pages   | 1
unused_pages   | 32455
live_items     | 10204006
dead_items     | 0
free_percent   | 61.8005949100872
</programlisting>
     </para>
________________________________________________________-->
     <para>
      <function>pgstathashindex</function>返回一个显示HASH索引信息的记录。例如：
<programlisting>
test=&gt; select * from pgstathashindex('con_hash_index');
-[ RECORD 1 ]--+-----------------
version        | 4
bucket_pages   | 33081
overflow_pages | 0
bitmap_pages   | 1
unused_pages   | 32455
live_items     | 10204006
dead_items     | 0
free_percent   | 61.8005949100872
</programlisting>
     </para>
<!-- pgdoc-cn_end sig_en=1ee1991302ab6c0512d434032366e530 -->

<!-- pgdoc-cn_start sig_en=1bbdf5d3e18f72e99c2541ced18f3564 sig_cn_org=None source=14.1 
    <para>
     The output columns are:

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Column</entry>
        <entry>Type</entry>
        <entry>Description</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>HASH version number</entry>
       </row>

       <row>
        <entry><structfield>bucket_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of bucket pages</entry>
       </row>

       <row>
        <entry><structfield>overflow_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of overflow pages</entry>
       </row>

       <row>
        <entry><structfield>bitmap_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of bitmap pages</entry>
       </row>

       <row>
        <entry><structfield>unused_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of unused pages</entry>
       </row>

       <row>
        <entry><structfield>live_items</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of live tuples</entry>
       </row>

       <row>
        <entry><structfield>dead_tuples</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>Number of dead tuples</entry>
       </row>

       <row>
        <entry><structfield>free_percent</structfield></entry>
        <entry><type>float</type></entry>
        <entry>Percentage of free space</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>
________________________________________________________-->
    <para>
     输出字段是：

    <informaltable>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>字段</entry>
        <entry>类型</entry>
        <entry>描述</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><structfield>version</structfield></entry>
        <entry><type>integer</type></entry>
        <entry>HASH版本号</entry>
       </row>

       <row>
        <entry><structfield>bucket_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>存储桶页面的数量</entry>
       </row>

       <row>
        <entry><structfield>overflow_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>溢出页面的数量</entry>
       </row>

       <row>
        <entry><structfield>bitmap_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>位图页数</entry>
       </row>

       <row>
        <entry><structfield>unused_pages</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>未使用页面的数量</entry>
       </row>

       <row>
        <entry><structfield>live_items</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>活元组的数量</entry>
       </row>

       <row>
        <entry><structfield>dead_tuples</structfield></entry>
        <entry><type>bigint</type></entry>
        <entry>死元组的数量</entry>
       </row>

       <row>
        <entry><structfield>free_percent</structfield></entry>
        <entry><type>float</type></entry>
        <entry>自由空间的百分比</entry>
       </row>

      </tbody>
     </tgroup>
    </informaltable>
    </para>
<!-- pgdoc-cn_end sig_en=1bbdf5d3e18f72e99c2541ced18f3564 -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=661a07e4f0d80b3622fa8f42302ea16b sig_cn_org=None source=14.1 
    <term>
     <indexterm>
      <primary>pg_relpages</primary>
     </indexterm>
     <function>pg_relpages(regclass) returns bigint</function>
    </term>
________________________________________________________-->
    <term>
     <indexterm>
      <primary>pg_relpages</primary>
     </indexterm>
     <function>pg_relpages(regclass) 返回 bigint</function>
    </term>
<!-- pgdoc-cn_end sig_en=661a07e4f0d80b3622fa8f42302ea16b -->

    <listitem>
<!-- pgdoc-cn_start sig_en=971554c88d78d79d3d1f477d73ac7b57 sig_cn_org=None source=14.1 
     <para>
      <function>pg_relpages</function> returns the number of pages in the
      relation.
     </para>
________________________________________________________-->
     <para>
      <function>pg_relpages</function>返回关系中的页面数。
     </para>
<!-- pgdoc-cn_end sig_en=971554c88d78d79d3d1f477d73ac7b57 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>pg_relpages(text) returns bigint</function>
    </term>

    <listitem>
<!-- pgdoc-cn_start sig_en=c04d0c9b13b8ecab12abbbc31bf2bedd sig_cn_org=None source=14.1 
     <para>
      This is the same as <function>pg_relpages(regclass)</function>, except
      that the target relation is specified as TEXT. This function is kept
      because of backward-compatibility so far, and will be deprecated in
      some future release.
     </para>
________________________________________________________-->
     <para>
      与<function>pg_relpages(regclass)</function>相同，只不过用  TEXT 来 指定目标关系。这个函数只是为了向后兼容而保留，在未来的某个发布中将会被废除。
     </para>
<!-- pgdoc-cn_end sig_en=c04d0c9b13b8ecab12abbbc31bf2bedd -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=29e477e08006c5075611048a021963ba sig_cn_org=None source=14.1 
    <term>
     <indexterm>
      <primary>pgstattuple_approx</primary>
     </indexterm>
     <function>pgstattuple_approx(regclass) returns record</function>
    </term>
________________________________________________________-->
    <term>
     <indexterm>
      <primary>pgstattuple_approx</primary>
     </indexterm>
     <function>pgstattuple_approx(regclass) returns record</function>
    </term>
<!-- pgdoc-cn_end sig_en=29e477e08006c5075611048a021963ba -->

    <listitem>
<!-- pgdoc-cn_start sig_en=f8821bbcedf046cc31d4e64e588e6460 sig_cn_org=None source=14.1 
     <para>
      <function>pgstattuple_approx</function> is a faster alternative to
      <function>pgstattuple</function> that returns approximate results.
      The argument is the target relation's name or OID.
      For example:
<programlisting>
test=&gt; SELECT * FROM pgstattuple_approx('pg_catalog.pg_proc'::regclass);
-[ RECORD 1 ]-&minus;-&minus;-&minus;-&minus;+-&minus;-&minus;-&minus;-
table_len            | 573440
scanned_percent      | 2
approx_tuple_count   | 2740
approx_tuple_len     | 561210
approx_tuple_percent | 97.87
dead_tuple_count     | 0
dead_tuple_len       | 0
dead_tuple_percent   | 0
approx_free_space    | 11996
approx_free_percent  | 2.09
</programlisting>
      The output columns are described in <xref linkend="pgstatapprox-columns"/>.
     </para>
________________________________________________________-->
     <para>
      <function>pgstattuple_approx</function>是<function>pgstattuple</function>的一个更加快速的替代品，它返回近似的结果。参数是目标关系的 OID 或者名称。例如：
<programlisting>
test=&gt; SELECT * FROM pgstattuple_approx('pg_catalog.pg_proc'::regclass);
-[ RECORD 1 ]--------+-------
table_len            | 573440
scanned_percent      | 2
approx_tuple_count   | 2740
approx_tuple_len     | 561210
approx_tuple_percent | 97.87
dead_tuple_count     | 0
dead_tuple_len       | 0
dead_tuple_percent   | 0
approx_free_space    | 11996
approx_free_percent  | 2.09
</programlisting>
      输出列在<xref linkend="pgstatapprox-columns"/>中描述。
     </para>
<!-- pgdoc-cn_end sig_en=f8821bbcedf046cc31d4e64e588e6460 -->

<!-- pgdoc-cn_start sig_en=d096b536f8d12412e9712f3f11721f49 sig_cn_org=None source=14.1 
     <para>
      Whereas <function>pgstattuple</function> always performs a
      full-table scan and returns an exact count of live and dead tuples
      (and their sizes) and free space, <function>pgstattuple_approx</function>
      tries to avoid the full-table scan and returns exact dead tuple
      statistics along with an approximation of the number and
      size of live tuples and free space.
     </para>
________________________________________________________-->
     <para>
      鉴于<function>pgstattuple</function>总是执行全表扫描并且返回存活和死亡元组的准确计数、尺寸和空闲空间，<function>pgstattuple_approx</function>尝试避免全表扫描并且返回死亡元组的准确统计信息，以及存活元组和空闲空间的近似数量及尺寸。
     </para>
<!-- pgdoc-cn_end sig_en=d096b536f8d12412e9712f3f11721f49 -->

<!-- pgdoc-cn_start sig_en=69c37abc44baa732295e132c608faa7c sig_cn_org=None source=14.1 
     <para>
      It does this by skipping pages that have only visible tuples
      according to the visibility map (if a page has the corresponding VM
      bit set, then it is assumed to contain no dead tuples). For such
      pages, it derives the free space value from the free space map, and
      assumes that the rest of the space on the page is taken up by live
      tuples.
     </para>
________________________________________________________-->
     <para>
      这个函数通过根据可见性映射跳过只包含可见元组的页面来实现这一目的（如果一个页面对应的 VM 位被设置，那么就说明它不含有死亡元组）。对于这样的额页面，它会从空闲空间映射中得到空闲空间值，并且假定该页面上的剩余空间由存活元组占据。
     </para>
<!-- pgdoc-cn_end sig_en=69c37abc44baa732295e132c608faa7c -->

<!-- pgdoc-cn_start sig_en=f35e1c8d06184887651b10571d1c30c8 sig_cn_org=None source=14.1 
     <para>
      For pages that cannot be skipped, it scans each tuple, recording its
      presence and size in the appropriate counters, and adding up the
      free space on the page. At the end, it estimates the total number of
      live tuples based on the number of pages and tuples scanned (in the
      same way that VACUUM estimates pg_class.reltuples).
     </para>
________________________________________________________-->
     <para>
      对于不能被跳过的页面，它会扫描每个元组，在合适的计数器中记录它的存在以及尺寸，并且统计该页面上的空闲空间。最后，它会基于已扫描的页面和元组数量来估计存活元组的总数（采用与 VACUUM 估计 pg_class.reltuples 时相同的方法）。
     </para>
<!-- pgdoc-cn_end sig_en=f35e1c8d06184887651b10571d1c30c8 -->

     <table id="pgstatapprox-columns">
<!-- pgdoc-cn_start sig_en=a1d7d7d9ed227a0068f015b166a4aeb6 sig_cn_org=None source=14.1 
      <title><function>pgstattuple_approx</function> Output Columns</title>
________________________________________________________-->
      <title><function>pgstattuple_approx</function>输出列</title>
<!-- pgdoc-cn_end sig_en=a1d7d7d9ed227a0068f015b166a4aeb6 -->
      <tgroup cols="3">
       <thead>
<!-- pgdoc-cn_start sig_en=772f96e71026d4562c1fd21952267d9c sig_cn_org=None source=14.1 
        <row>
         <entry>Column</entry>
         <entry>Type</entry>
         <entry>Description</entry>
        </row>
________________________________________________________-->
        <row>
         <entry>列</entry>
         <entry>类型</entry>
         <entry>描述</entry>
        </row>
<!-- pgdoc-cn_end sig_en=772f96e71026d4562c1fd21952267d9c -->
       </thead>

       <tbody>
<!-- pgdoc-cn_start sig_en=45b7e1f177f98a1c7ea63b13a901203a sig_cn_org=None source=14.1 
        <row>
         <entry><structfield>table_len</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>Physical relation length in bytes (exact)</entry>
        </row>
________________________________________________________-->
        <row>
         <entry><structfield>table_len</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>以字节计的物理关系长度（准确）</entry>
        </row>
<!-- pgdoc-cn_end sig_en=45b7e1f177f98a1c7ea63b13a901203a -->
<!-- pgdoc-cn_start sig_en=adf71a444ea97fc471dad3e11f94bba2 sig_cn_org=None source=14.1 
        <row>
         <entry><structfield>scanned_percent</structfield></entry>
         <entry><type>float8</type></entry>
         <entry>Percentage of table scanned</entry>
        </row>
________________________________________________________-->
        <row>
         <entry><structfield>scanned_percent</structfield></entry>
         <entry><type>float8</type></entry>
         <entry>已扫描表的百分比</entry>
        </row>
<!-- pgdoc-cn_end sig_en=adf71a444ea97fc471dad3e11f94bba2 -->
<!-- pgdoc-cn_start sig_en=1644d5308a6ea8626e4476c280f2bbd6 sig_cn_org=None source=14.1 
        <row>
         <entry><structfield>approx_tuple_count</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>Number of live tuples (estimated)</entry>
        </row>
________________________________________________________-->
        <row>
         <entry><structfield>approx_tuple_count</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>存活元组的数量（估计）</entry>
        </row>
<!-- pgdoc-cn_end sig_en=1644d5308a6ea8626e4476c280f2bbd6 -->
<!-- pgdoc-cn_start sig_en=fb2287839c5c9a36c328e9055aea2758 sig_cn_org=None source=14.1 
        <row>
         <entry><structfield>approx_tuple_len</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>Total length of live tuples in bytes (estimated)</entry>
        </row>
________________________________________________________-->
        <row>
         <entry><structfield>approx_tuple_len</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>以字节计的存活元组总长度（估计）</entry>
        </row>
<!-- pgdoc-cn_end sig_en=fb2287839c5c9a36c328e9055aea2758 -->
<!-- pgdoc-cn_start sig_en=5abb11c8c3653cc8c72d3ea9f19e2a0b sig_cn_org=None source=14.1 
        <row>
         <entry><structfield>approx_tuple_percent</structfield></entry>
         <entry><type>float8</type></entry>
         <entry>Percentage of live tuples</entry>
        </row>
________________________________________________________-->
        <row>
         <entry><structfield>approx_tuple_percent</structfield></entry>
         <entry><type>float8</type></entry>
         <entry>存活元组的百分比</entry>
        </row>
<!-- pgdoc-cn_end sig_en=5abb11c8c3653cc8c72d3ea9f19e2a0b -->
<!-- pgdoc-cn_start sig_en=d0287da3b25ccf781bda5dee7bc1bbeb sig_cn_org=None source=14.1 
        <row>
         <entry><structfield>dead_tuple_count</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>Number of dead tuples (exact)</entry>
        </row>
________________________________________________________-->
        <row>
         <entry><structfield>dead_tuple_count</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>死亡元组的数量（准确）</entry>
        </row>
<!-- pgdoc-cn_end sig_en=d0287da3b25ccf781bda5dee7bc1bbeb -->
<!-- pgdoc-cn_start sig_en=2ce37cadfe008bd163032c32c6bcdbe9 sig_cn_org=None source=14.1 
        <row>
         <entry><structfield>dead_tuple_len</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>Total length of dead tuples in bytes (exact)</entry>
        </row>
________________________________________________________-->
        <row>
         <entry><structfield>dead_tuple_len</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>以字节计的死亡元组总长度（准确）</entry>
        </row>
<!-- pgdoc-cn_end sig_en=2ce37cadfe008bd163032c32c6bcdbe9 -->
<!-- pgdoc-cn_start sig_en=a247ec8f7ff3e3e21c4e8b729dfcf256 sig_cn_org=None source=14.1 
        <row>
         <entry><structfield>dead_tuple_percent</structfield></entry>
         <entry><type>float8</type></entry>
         <entry>Percentage of dead tuples</entry>
        </row>
________________________________________________________-->
        <row>
         <entry><structfield>dead_tuple_percent</structfield></entry>
         <entry><type>float8</type></entry>
         <entry>死亡元组的百分比</entry>
        </row>
<!-- pgdoc-cn_end sig_en=a247ec8f7ff3e3e21c4e8b729dfcf256 -->
<!-- pgdoc-cn_start sig_en=055c32e9d9f8e0ffa31f7ce47b3bf884 sig_cn_org=None source=14.1 
        <row>
         <entry><structfield>approx_free_space</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>Total free space in bytes (estimated)</entry>
        </row>
________________________________________________________-->
        <row>
         <entry><structfield>approx_free_space</structfield></entry>
         <entry><type>bigint</type></entry>
         <entry>以字节计的总空闲空间（估计）</entry>
        </row>
<!-- pgdoc-cn_end sig_en=055c32e9d9f8e0ffa31f7ce47b3bf884 -->
<!-- pgdoc-cn_start sig_en=5130ef171c633930ea1cd17ab906f51d sig_cn_org=None source=14.1 
        <row>
         <entry><structfield>approx_free_percent</structfield></entry>
         <entry><type>float8</type></entry>
         <entry>Percentage of free space</entry>
        </row>
________________________________________________________-->
        <row>
         <entry><structfield>approx_free_percent</structfield></entry>
         <entry><type>float8</type></entry>
         <entry>空闲空间的百分比</entry>
        </row>
<!-- pgdoc-cn_end sig_en=5130ef171c633930ea1cd17ab906f51d -->

       </tbody>
      </tgroup>
     </table>

<!-- pgdoc-cn_start sig_en=0e043455b61bc23be1a9244ca28438bf sig_cn_org=None source=14.1 
     <para>
      In the above output, the free space figures may not match the
      <function>pgstattuple</function> output exactly, because the free
      space map gives us an exact figure, but is not guaranteed to be
      accurate to the byte.
     </para>
________________________________________________________-->
     <para>
      在上述的输出中，空闲空间数字可能不完全匹配<function>pgstattuple</function>的输出，这是因为空闲空间映射会给出一个准确的数字，但是这个数字不能保证是一个准确的字节数。
     </para>
<!-- pgdoc-cn_end sig_en=0e043455b61bc23be1a9244ca28438bf -->

    </listitem>
   </varlistentry>

  </variablelist>
 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=c9d18a21a6b8c7d5325e8feeb56b7420 sig_cn_org=None source=14.1 
  <title>Authors</title>
________________________________________________________-->
  <title>作者</title>
<!-- pgdoc-cn_end sig_en=c9d18a21a6b8c7d5325e8feeb56b7420 -->

<!-- pgdoc-cn_start sig_en=136b8fe26ed9194ca97df6c7bb0e5b56 sig_cn_org=None source=14.1 
  <para>
   Tatsuo Ishii, Satoshi Nagayasu and Abhijit Menon-Sen
  </para>
________________________________________________________-->
  <para>
   Tatsuo Ishii, Satoshi Nagayasu 和 Abhijit Menon-Sen
  </para>
<!-- pgdoc-cn_end sig_en=136b8fe26ed9194ca97df6c7bb0e5b56 -->
 </sect2>

</sect1>
