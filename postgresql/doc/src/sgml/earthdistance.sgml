<!-- doc/src/sgml/earthdistance.sgml -->

<sect1 id="earthdistance" xreflabel="earthdistance">
<!-- pgdoc-cn_start sig_en=34ccb6bf74d6b218d2c7c4f178113a2d sig_cn_org=None source=14.1 
 <title>earthdistance</title>
________________________________________________________-->
 <title>earthdistance</title>
<!-- pgdoc-cn_end sig_en=34ccb6bf74d6b218d2c7c4f178113a2d -->

<!-- pgdoc-cn_start sig_en=4882a32cdbec80aac8126d3dfd12655e sig_cn_org=None source=14.1 
 <indexterm zone="earthdistance">
  <primary>earthdistance</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="earthdistance">
  <primary>earthdistance</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=4882a32cdbec80aac8126d3dfd12655e -->

<!-- pgdoc-cn_start sig_en=02cee6ce7449b6f126819f7d5cde18ea sig_cn_org=None source=14.1 
 <para>
  The <filename>earthdistance</filename> module provides two different approaches to
  calculating great circle distances on the surface of the Earth. The one
  described first depends on the <filename>cube</filename> module.
  The second one is based on the built-in <type>point</type> data type,
  using longitude and latitude for the coordinates.
 </para>
________________________________________________________-->
 <para>
  <filename>earthdistance</filename>模块提供两种不同的方法来计算地球表面的大圆距离。
  第一种要介绍的依赖于<filename>cube</filename>模块。第二种基于内建的<type>point</type>数据类型，为座标使用精度和纬度。
 </para>
<!-- pgdoc-cn_end sig_en=02cee6ce7449b6f126819f7d5cde18ea -->

<!-- pgdoc-cn_start sig_en=9dc4f83997b0be00986e10e8eb5c98de sig_cn_org=None source=14.1 
 <para>
  In this module, the Earth is assumed to be perfectly spherical.
  (If that's too inaccurate for you, you might want to look at the
  <application><ulink url="https://postgis.net/">PostGIS</ulink></application>
  project.)
 </para>
________________________________________________________-->
 <para>
  在这个模块中，地球被假定为完美的球型（如果这对你不够精确，你可能希望去看看<application><ulink url="https://postgis.net/">PostGIS</ulink></application>项目）。
 </para>
<!-- pgdoc-cn_end sig_en=9dc4f83997b0be00986e10e8eb5c98de -->

<!-- pgdoc-cn_start sig_en=93dd2e09f07067cd40afaeab1187f3c3 sig_cn_org=None source=14.1 
 <para>
  The <filename>cube</filename> module must be installed
  before <filename>earthdistance</filename> can be installed
  (although you can use the <literal>CASCADE</literal> option
  of <command>CREATE EXTENSION</command> to install both in one command).
 </para>
________________________________________________________-->
 <para>
  <filename>cube</filename>模块必须在<filename>earthdistance</filename>之前被安装。
  （尽管你可以使用<command>CREATE EXTENSION</command>的<literal>CASCADE</literal>选项在一个命令中同时安装）。
 </para>
<!-- pgdoc-cn_end sig_en=93dd2e09f07067cd40afaeab1187f3c3 -->

 <caution>
<!-- pgdoc-cn_start sig_en=386e4009df83685d27f1ee4856707980 sig_cn_org=None source=14.1 
  <para>
   It is strongly recommended that <filename>earthdistance</filename>
   and <filename>cube</filename> be installed in the same schema, and that
   that schema be one for which CREATE privilege has not been and will not
   be granted to any untrusted users.
   Otherwise there are installation-time security hazards
   if <filename>earthdistance</filename>'s schema contains objects defined
   by a hostile user.
   Furthermore, when using <filename>earthdistance</filename>'s functions
   after installation, the entire search path should contain only trusted
   schemas.
  </para>
________________________________________________________-->
  <para>
   强烈建议将 <filename>earthdistance</filename>和<filename>cube</filename>安装在同一模式中，并且该模式的 CREATE 特权尚未授予且不会授予任何不受信任的用户。
   否则，如果<filename>earthdistance</filename>的模式包含由敌对用户定义的对象，则存在安装时的安全隐患。
   此外，在安装后使用<filename>earthdistance</filename>的函数时，整个搜索路径应仅包含受信任的架构。
  </para>
<!-- pgdoc-cn_end sig_en=386e4009df83685d27f1ee4856707980 -->
 </caution>

 <sect2>
<!-- pgdoc-cn_start sig_en=f8c0fce3c1f6e20b0da441e2f26505c7 sig_cn_org=None source=14.1 
  <title>Cube-Based Earth Distances</title>
________________________________________________________-->
  <title>基于立方体的地球距离</title>
<!-- pgdoc-cn_end sig_en=f8c0fce3c1f6e20b0da441e2f26505c7 -->

<!-- pgdoc-cn_start sig_en=9369446cfd02d40c551333842247dc55 sig_cn_org=17a15d83d05ffcdcb86e4b522c8b8342 source=15.7 
  <para>
   Data is stored in cubes that are points (both corners are the same) using 3
   coordinates representing the x, y, and z distance from the center of the
   Earth.  A <glossterm linkend="glossary-domain">domain</glossterm>
   <type>earth</type> over type <type>cube</type> is provided, which
   includes constraint checks that the value meets these restrictions and
   is reasonably close to the actual surface of the Earth.
  </para>
________________________________________________________-->
  <para>
   数据存储在立方体中，这些立方体是使用表示距离地球中心的x、y和z坐标的点（两个角是相同的）。
   提供了一个<type>earth</type>上的<type>cube</type>的<glossterm linkend="glossary-domain">domain</glossterm>，
   其中包括约束检查，确保值符合这些限制，并且与地球实际表面相当接近。
</para>
<!-- pgdoc-cn_end sig_en=9369446cfd02d40c551333842247dc55 -->

<!-- pgdoc-cn_start sig_en=f98c745daf95baf0121b916a371fbe3f sig_cn_org=None source=14.1 
  <para>
   The radius of the Earth is obtained from the <function>earth()</function>
   function. It is given in meters. But by changing this one function you can
   change the module to use some other units, or to use a different value of
   the radius that you feel is more appropriate.
  </para>
________________________________________________________-->
  <para>
   地球的半径获得自<function>earth()</function>函数。其单位是米。但是通过改变这一个函数你能够把该模块改为使用某些其他单位，或者使用一种你认为更合适的不同半径值。
  </para>
<!-- pgdoc-cn_end sig_en=f98c745daf95baf0121b916a371fbe3f -->

<!-- pgdoc-cn_start sig_en=f5f073cd938ece795903c464680df3cf sig_cn_org=None source=14.1 
  <para>
   This package has applications to astronomical databases as well.
   Astronomers will probably want to change <function>earth()</function> to return a
   radius of <literal>180/pi()</literal> so that distances are in degrees.
  </para>
________________________________________________________-->
  <para>
   这个包也有在天文数据库中的应用。天文学家可能想要改变<function>earth()</function>来返回一个<literal>180/pi()</literal>的半径，这样距离就会是度数。
  </para>
<!-- pgdoc-cn_end sig_en=f5f073cd938ece795903c464680df3cf -->

<!-- pgdoc-cn_start sig_en=a4cfd86ae7f87c7f524ccb26f11623da sig_cn_org=None source=14.1 
  <para>
   Functions are provided to support input in latitude and longitude (in
   degrees), to support output of latitude and longitude, to calculate
   the great circle distance between two points and to easily specify a
   bounding box usable for index searches.
  </para>
________________________________________________________-->
  <para>
   函数也被提供来支持经纬度输入（以度数）、经纬度输出、计算两点间的大圆距离以及容易地指定一个可用于索引搜索的边界框。
  </para>
<!-- pgdoc-cn_end sig_en=a4cfd86ae7f87c7f524ccb26f11623da -->

<!-- pgdoc-cn_start sig_en=72c22bad59f0f3c5f9e0cf8742abcd1a sig_cn_org=None source=14.1 
  <para>
   The provided functions are shown
   in <xref linkend="earthdistance-cube-functions"/>.
  </para>
________________________________________________________-->
  <para>
   所提供的函数在<xref linkend="earthdistance-cube-functions"/>中描述。
  </para>
<!-- pgdoc-cn_end sig_en=72c22bad59f0f3c5f9e0cf8742abcd1a -->

  <table id="earthdistance-cube-functions">
<!-- pgdoc-cn_start sig_en=901cb74277a79bd3c7a9ce8a6c7db9af sig_cn_org=None source=14.1 
   <title>Cube-Based Earthdistance Functions</title>
________________________________________________________-->
   <title>基于立方体的地球距离函数</title>
<!-- pgdoc-cn_end sig_en=901cb74277a79bd3c7a9ce8a6c7db9af -->
    <tgroup cols="1">
     <thead>
<!-- pgdoc-cn_start sig_en=4c899847d3051ef2b6955dda3de51c66 sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        Function
       </para>
       <para>
        Description
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        函数
       </para>
       <para>
        描述
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=4c899847d3051ef2b6955dda3de51c66 -->
     </thead>

     <tbody>
<!-- pgdoc-cn_start sig_en=895a74fd570420fc6b12b8d9ee48379d sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>earth</primary></indexterm>
        <function>earth</function> ()
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        Returns the assumed radius of the Earth.
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>earth</primary></indexterm>
        <function>earth</function> ()
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        返回假定的地球半径。
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=895a74fd570420fc6b12b8d9ee48379d -->

<!-- pgdoc-cn_start sig_en=04ab57d3e6eef06ad7f9b02a4f0ed169 sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>sec_to_gc</primary></indexterm>
        <function>sec_to_gc</function> ( <type>float8</type> )
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        Converts the normal straight line
        (secant) distance between two points on the surface of the Earth
        to the great circle distance between them.
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>sec_to_gc</primary></indexterm>
        <function>sec_to_gc</function> ( <type>float8</type> )
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        将地球表面两点间的普通直线（切线）距离转换为它们之间的大圆距离。
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=04ab57d3e6eef06ad7f9b02a4f0ed169 -->

<!-- pgdoc-cn_start sig_en=f4b0fac61ee18bd0c0505378a57f00b2 sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>gc_to_sec</primary></indexterm>
        <function>gc_to_sec</function> ( <type>float8</type> )
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        Converts the great circle distance between two points on the
        surface of the Earth to the normal straight line (secant) distance
        between them.
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>gc_to_sec</primary></indexterm>
        <function>gc_to_sec</function> ( <type>float8</type> )
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        将地球表面两点间的大圆距离转换为它们之间的普通直线（切线）距离。
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=f4b0fac61ee18bd0c0505378a57f00b2 -->

<!-- pgdoc-cn_start sig_en=8b46248ea5b660173d73a2f38e074a59 sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>ll_to_earth</primary></indexterm>
        <function>ll_to_earth</function> ( <type>float8</type>, <type>float8</type> )
        <returnvalue>earth</returnvalue>
       </para>
       <para>
        Returns the location of a point on the surface of the Earth given
        its latitude (argument 1) and longitude (argument 2) in degrees.
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>ll_to_earth</primary></indexterm>
        <function>ll_to_earth</function> ( <type>float8</type>, <type>float8</type> )
        <returnvalue>earth</returnvalue>
       </para>
       <para>
        返回以度数给定的纬度（参数 1）和经度（参数 2）的点在地球表面上的位置。
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=8b46248ea5b660173d73a2f38e074a59 -->

<!-- pgdoc-cn_start sig_en=7b848db4fa891f0e92fa36150d6599e5 sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>latitude</primary></indexterm>
        <function>latitude</function> ( <type>earth</type> )
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        Returns the latitude in degrees of a point on the surface of the
        Earth.
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>latitude</primary></indexterm>
        <function>latitude</function> ( <type>earth</type> )
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        返回地球表面上一个点的纬度（以度数形式）。
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=7b848db4fa891f0e92fa36150d6599e5 -->

<!-- pgdoc-cn_start sig_en=e263c860c8c90b2b4f8102613cf16053 sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>longitude</primary></indexterm>
        <function>longitude</function> ( <type>earth</type> )
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        Returns the longitude in degrees of a point on the surface of the
        Earth.
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>longitude</primary></indexterm>
        <function>longitude</function> ( <type>earth</type> )
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        返回地球表面上的点的经度（以度数形式）。
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=e263c860c8c90b2b4f8102613cf16053 -->

<!-- pgdoc-cn_start sig_en=6b28355e0e7e6f0298a2c541fc868b92 sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>earth_distance</primary></indexterm>
        <function>earth_distance</function> ( <type>earth</type>, <type>earth</type> )
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        Returns the great circle distance between two points on the
        surface of the Earth.
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>earth_distance</primary></indexterm>
        <function>earth_distance</function> ( <type>earth</type>, <type>earth</type> )
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        返回地球表面上两个点之间的大圆距离。
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=6b28355e0e7e6f0298a2c541fc868b92 -->

<!-- pgdoc-cn_start sig_en=d4968e38fbe7eaa656cf0e4d61112fc0 sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>earth_box</primary></indexterm>
        <function>earth_box</function> ( <type>earth</type>, <type>float8</type> )
        <returnvalue>cube</returnvalue>
       </para>
       <para>
        Returns a box suitable for an indexed search using the <type>cube</type>
        <literal>@&gt;</literal>
        operator for points within a given great circle distance of a location.
        Some points in this box are further than the specified great circle
        distance from the location, so a second check using
        <function>earth_distance</function> should be included in the query.
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <indexterm><primary>earth_box</primary></indexterm>
        <function>earth_box</function> ( <type>earth</type>, <type>float8</type> )
        <returnvalue>cube</returnvalue>
       </para>
       <para>
        为一个位置的给定大圆距离范围内的点使用<type>cube</type><literal>@&gt;</literal>操作符返回一个适合于索引搜索的框。
        这个框中的某些点到该位置的大圆距离会超过指定的大圆距离，因此使用<function>earth_distance</function>的第二次检查应该被包括在查询中。
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=d4968e38fbe7eaa656cf0e4d61112fc0 -->
     </tbody>
   </tgroup>
  </table>

 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=9e75d7a88feca5d89cad685f26f9427d sig_cn_org=None source=14.1 
  <title>Point-Based Earth Distances</title>
________________________________________________________-->
  <title>基于点的地球距离</title>
<!-- pgdoc-cn_end sig_en=9e75d7a88feca5d89cad685f26f9427d -->

<!-- pgdoc-cn_start sig_en=7530192c74621562c3c17a620c2cac26 sig_cn_org=None source=14.1 
  <para>
   The second part of the module relies on representing Earth locations as
   values of type <type>point</type>, in which the first component is taken to
   represent longitude in degrees, and the second component is taken to
   represent latitude in degrees.  Points are taken as (longitude, latitude)
   and not vice versa because longitude is closer to the intuitive idea of
   x-axis and latitude to y-axis.
  </para>
________________________________________________________-->
  <para>
   这个模块的第二部分依赖于将地球位置表示为类型<type>point</type>的值，其中第一部分被用来表示经度数，第二部分被用来表示纬度数。点被取做 (longitude, latitude) 并且不能反过来，因为经度更接近直观上的 x 轴，而纬度则接近 y 轴。
  </para>
<!-- pgdoc-cn_end sig_en=7530192c74621562c3c17a620c2cac26 -->

<!-- pgdoc-cn_start sig_en=dd3b1a06f9eeca8b277f4b166cf89d08 sig_cn_org=None source=14.1 
  <para>
   A single operator is provided, shown
   in <xref linkend="earthdistance-point-operators"/>.
  </para>
________________________________________________________-->
  <para>
   如<xref linkend="earthdistance-point-operators"/>所示，这一部分只提供了一个单一操作符。
  </para>
<!-- pgdoc-cn_end sig_en=dd3b1a06f9eeca8b277f4b166cf89d08 -->

  <table id="earthdistance-point-operators">
<!-- pgdoc-cn_start sig_en=da9c59c681393c3d6de1b86af5de6502 sig_cn_org=None source=14.1 
   <title>Point-Based Earthdistance Operators</title>
________________________________________________________-->
   <title>基于点的地球距离操作符</title>
<!-- pgdoc-cn_end sig_en=da9c59c681393c3d6de1b86af5de6502 -->
    <tgroup cols="1">
     <thead>
<!-- pgdoc-cn_start sig_en=860582efa5a4237e828778cb17b589cb sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        Operator
       </para>
       <para>
        Description
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        操作符
       </para>
       <para>
        描述
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=860582efa5a4237e828778cb17b589cb -->
     </thead>
     <tbody>
<!-- pgdoc-cn_start sig_en=27e154bb34726c0f1b3a3342afcebe5f sig_cn_org=None source=14.1 
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <type>point</type> <literal>&lt;@&gt;</literal> <type>point</type>
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        Computes the distance in statute miles between
        two points on the Earth's surface.
       </para></entry>
      </row>
________________________________________________________-->
      <row>
       <entry role="func_table_entry"><para role="func_signature">
        <type>point</type> <literal>&lt;@&gt;</literal> <type>point</type>
        <returnvalue>float8</returnvalue>
       </para>
       <para>
        计算地球表面上两个点之间以法定英里计算的距离。
       </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=27e154bb34726c0f1b3a3342afcebe5f -->
     </tbody>
   </tgroup>
  </table>

<!-- pgdoc-cn_start sig_en=47348579d4c9298fa9a1f24e961fce15 sig_cn_org=None source=14.1 
  <para>
   Note that unlike the <type>cube</type>-based part of the module, units
   are hardwired here: changing the <function>earth()</function> function will
   not affect the results of this operator.
  </para>
________________________________________________________-->
  <para>
   注意和这个模块的基于<type>cube</type>的部分不同，这里的单位是被硬编码的：改变<function>earth()</function>函数将不会影响这个操作符的结果。
  </para>
<!-- pgdoc-cn_end sig_en=47348579d4c9298fa9a1f24e961fce15 -->

<!-- pgdoc-cn_start sig_en=f90b7aa36becfda2fdc719fbe5d10e66 sig_cn_org=None source=14.1 
  <para>
   One disadvantage of the longitude/latitude representation is that
   you need to be careful about the edge conditions near the poles
   and near +/- 180 degrees of longitude.  The <type>cube</type>-based
   representation avoids these discontinuities.
  </para>
________________________________________________________-->
  <para>
   经度/纬度表示的一个缺点是你需要小心靠近两极和靠近经度正负 180 度处的边界情况。基于<type>cube</type>的表示可以避免这些不连续性。
  </para>
<!-- pgdoc-cn_end sig_en=f90b7aa36becfda2fdc719fbe5d10e66 -->

 </sect2>

</sect1>
