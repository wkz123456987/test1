<!-- doc/src/sgml/information_schema.sgml -->

<chapter id="information-schema">
<!-- pgdoc-cn_start sig_en=6e34df45185389bb615fec591b29279c sig_cn_org=None source=14.1 
 <title>The Information Schema</title>
________________________________________________________-->
 <title>信息模式</title>
<!-- pgdoc-cn_end sig_en=6e34df45185389bb615fec591b29279c -->

<!-- pgdoc-cn_start sig_en=33042c8178c85ab7dd86addc9f3b5daa sig_cn_org=None source=14.1 
 <indexterm zone="information-schema">
  <primary>information schema</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="information-schema">
  <primary>信息模式</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=33042c8178c85ab7dd86addc9f3b5daa -->

<!-- pgdoc-cn_start sig_en=fcfbc0d4983317727306bf87352bb9d1 sig_cn_org=None source=14.1 
 <para>
  The information schema consists of a set of views that contain
  information about the objects defined in the current database.  The
  information schema is defined in the SQL standard and can therefore
  be expected to be portable and remain stable &mdash; unlike the system
  catalogs, which are specific to
  <productname>PostgreSQL</productname> and are modeled after
  implementation concerns.  The information schema views do not,
  however, contain information about
  <productname>PostgreSQL</productname>-specific features; to inquire
  about those you need to query the system catalogs or other
  <productname>PostgreSQL</productname>-specific views.
 </para>
________________________________________________________-->
 <para>
  信息模式由一组视图构成，它们包含定义在当前数据库中对象的信息。信息模式以 SQL 标准定义，因此能够被移植并且保持稳定 &mdash; 系统目录则不同，它们是与<productname>PostgreSQL</productname>相关的并且是为了实现的考虑而建模的。不过，信息模式视图不包含与<productname>PostgreSQL</productname>-相关特性有关的信息。要咨询那些信息你需要查询系统目录或其他<productname>PostgreSQL</productname>-相关视图。
 </para>
<!-- pgdoc-cn_end sig_en=fcfbc0d4983317727306bf87352bb9d1 -->

 <note>
<!-- pgdoc-cn_start sig_en=e78853b222584af1f275b59a986bebc3 sig_cn_org=None source=14.1 
  <para>
   When querying the database for constraint information, it is possible
   for a standard-compliant query that expects to return one row to
   return several.  This is because the SQL standard requires constraint
   names to be unique within a schema, but
   <productname>PostgreSQL</productname> does not enforce this
   restriction.  <productname>PostgreSQL</productname>
   automatically-generated constraint names avoid duplicates in the
   same schema, but users can specify such duplicate names.
  </para>
________________________________________________________-->
  <para>
   当在数据库中查询约束信息时，一个期望返回一行的标准兼容的查询可能返回多行。这是因为 SQL 标准要求约束名在一个模式中唯一，但是<productname>PostgreSQL</productname>并不强制这种限制。<productname>PostgreSQL</productname>自动产生的约束名避免在相同的模式中重复，但是用户能够指定这种重复的名称。
  </para>
<!-- pgdoc-cn_end sig_en=e78853b222584af1f275b59a986bebc3 -->

<!-- pgdoc-cn_start sig_en=5f2e4437012a82b5533f945f771c28a5 sig_cn_org=None source=14.1 
  <para>
   This problem can appear when querying information schema views such
   as <literal>check_constraint_routine_usage</literal>,
   <literal>check_constraints</literal>, <literal>domain_constraints</literal>, and
   <literal>referential_constraints</literal>.  Some other views have similar
   issues but contain the table name to help distinguish duplicate
   rows, e.g., <literal>constraint_column_usage</literal>,
   <literal>constraint_table_usage</literal>, <literal>table_constraints</literal>.
  </para>
________________________________________________________-->
  <para>
   这个问题可能在查询信息模式视图时出现，例如<literal>check_constraint_routine_usage</literal>、
   <literal>check_constraints</literal>、<literal>domain_constraints</literal>和
   <literal>referential_constraints</literal>。一些其他视图也有相似的问题，但是它们包含了表名来帮助区分重复行，例如<literal>constraint_column_usage</literal>、
   <literal>constraint_table_usage</literal>、<literal>table_constraints</literal>。
  </para>
<!-- pgdoc-cn_end sig_en=5f2e4437012a82b5533f945f771c28a5 -->
 </note>


 <sect1 id="infoschema-schema">
<!-- pgdoc-cn_start sig_en=de14e87f01a419784037570d6e92df25 sig_cn_org=None source=14.1 
  <title>The Schema</title>
________________________________________________________-->
  <title>模式</title>
<!-- pgdoc-cn_end sig_en=de14e87f01a419784037570d6e92df25 -->

<!-- pgdoc-cn_start sig_en=0dd2987798fbd9a8d054cccbabb502d7 sig_cn_org=None source=14.1 
  <para>
   The information schema itself is a schema named
   <literal>information_schema</literal>.  This schema automatically
   exists in all databases.  The owner of this schema is the initial
   database user in the cluster, and that user naturally has all the
   privileges on this schema, including the ability to drop it (but
   the space savings achieved by that are minuscule).
  </para>
________________________________________________________-->
  <para>
   信息模式本身是一个名为<literal>information_schema</literal>的模式。这个模式自动存在于所有数据库中。这个模式的拥有者是集簇中的初始数据库用户，并且该用户自然地拥有这个模式上的所有特权，包括删除它的能力（但是这样节省的空间是很小的）。
  </para>
<!-- pgdoc-cn_end sig_en=0dd2987798fbd9a8d054cccbabb502d7 -->

<!-- pgdoc-cn_start sig_en=a257bba177abf5375a53df80d9ecac9a sig_cn_org=None source=14.1 
  <para>
   By default, the information schema is not in the schema search
   path, so you need to access all objects in it through qualified
   names.  Since the names of some of the objects in the information
   schema are generic names that might occur in user applications, you
   should be careful if you want to put the information schema in the
   path.
  </para>
________________________________________________________-->
  <para>
   默认情况下，信息模式不在模式搜索路径中，因此你需要使用限定名访问其中的所有对象。因为信息模式中的某些对象的名称是可能出现在用户应用中的一般名称，如果你想把该信息模式放在路径中，你应该小心。
  </para>
<!-- pgdoc-cn_end sig_en=a257bba177abf5375a53df80d9ecac9a -->
 </sect1>

 <sect1 id="infoschema-datatypes">
<!-- pgdoc-cn_start sig_en=4db1c7313abae97c18199af614e269c9 sig_cn_org=None source=14.1 
  <title>Data Types</title>
________________________________________________________-->
  <title>数据类型</title>
<!-- pgdoc-cn_end sig_en=4db1c7313abae97c18199af614e269c9 -->

<!-- pgdoc-cn_start sig_en=50d13cd6b91de3da6bc45e9f94b16103 sig_cn_org=None source=14.1 
  <para>
   The columns of the information schema views use special data types
   that are defined in the information schema.  These are defined as
   simple domains over ordinary built-in types.  You should not use
   these types for work outside the information schema, but your
   applications must be prepared for them if they select from the
   information schema.
  </para>
________________________________________________________-->
  <para>
   信息模式视图的列使用定义在信息模式中的特殊数据类型。它们被定义为普通内建类型之上的简单域。你不应在信息模式之外使用这些类型进行工作，但是如果你的应用从信息模式中进行选择，那你的应用就必须准备好面对它们。
  </para>
<!-- pgdoc-cn_end sig_en=50d13cd6b91de3da6bc45e9f94b16103 -->

<!-- pgdoc-cn_start sig_en=06efa702dfc9d79ce44b5a8a3a559b4e sig_cn_org=None source=14.1 
  <para>
   These types are:

   <variablelist>
    <varlistentry>
     <term><type>cardinal_number</type></term>
     <listitem>
      <para>
       A nonnegative integer.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>character_data</type></term>
     <listitem>
      <para>
       A character string (without specific maximum length).
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>sql_identifier</type></term>
     <listitem>
      <para>
       A character string.  This type is used for SQL identifiers, the
       type <type>character_data</type> is used for any other kind of
       text data.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>time_stamp</type></term>
     <listitem>
      <para>
       A domain over the type <type>timestamp with time zone</type>
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>yes_or_no</type></term>
     <listitem>
      <para>
       A character string domain that contains
       either <literal>YES</literal> or <literal>NO</literal>.  This
       is used to represent Boolean (true/false) data in the
       information schema.  (The information schema was invented
       before the type <type>boolean</type> was added to the SQL
       standard, so this convention is necessary to keep the
       information schema backward compatible.)
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   Every column in the information schema has one of these five types.
  </para>
________________________________________________________-->
  <para>
   这些类型是：

   <variablelist>
    <varlistentry>
     <term><type>cardinal_number</type></term>
     <listitem>
      <para>
       一种非负整数。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>character_data</type></term>
     <listitem>
      <para>
       一种字符串（没有指定最大长度）。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>sql_identifier</type></term>
     <listitem>
      <para>
       一种字符串。这种类型被用于 SQL 标识符，类型<type>character_data</type>被用于任何其他类型的文本数据。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>time_stamp</type></term>
     <listitem>
      <para>
       在类型<type>timestamp with time zone</type>之上的一个域。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><type>yes_or_no</type></term>
     <listitem>
      <para>
       一种字符串域，它包含<literal>YES</literal>或<literal>NO</literal>。这被用来在信息模式中表示布尔（真/假）（信息模式是在类型<type>boolean</type>被加到 SQL 标准之前被发明的，因此这个惯例是用来使信息模式向后兼容）。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   信息模式中的每一列都是这五种类型之一。
  </para>
<!-- pgdoc-cn_end sig_en=06efa702dfc9d79ce44b5a8a3a559b4e -->
 </sect1>

 <sect1 id="infoschema-information-schema-catalog-name">
  <title><literal>information_schema_catalog_name</literal></title>

<!-- pgdoc-cn_start sig_en=422c4448cc4631b8f9a17f64d2fb64e9 sig_cn_org=None source=14.1 
  <para>
   <literal>information_schema_catalog_name</literal> is a table that
   always contains one row and one column containing the name of the
   current database (current catalog, in SQL terminology).
  </para>
________________________________________________________-->
  <para>
   <literal>information_schema_catalog_name</literal>是一个表，它总是包含一行和一列，其中包含了当前数据库（SQL 术语中的当前目录）的名字。
  </para>
<!-- pgdoc-cn_end sig_en=422c4448cc4631b8f9a17f64d2fb64e9 -->

  <table>
<!-- pgdoc-cn_start sig_en=08a624ac46088bb506002ca026d9d3fd sig_cn_org=None source=14.1 
   <title><structname>information_schema_catalog_name</structname> Columns</title>
________________________________________________________-->
   <title><structname>information_schema_catalog_name</structname> 列</title>
<!-- pgdoc-cn_end sig_en=08a624ac46088bb506002ca026d9d3fd -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=cf10cc8e0cfcc4b35216f21911524642 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>catalog_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains this information schema
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>catalog_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含这个信息模式的数据库名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=cf10cc8e0cfcc4b35216f21911524642 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-administrable-role-authorizations">
  <title><literal>administrable_role_&zwsp;authorizations</literal></title>

<!-- pgdoc-cn_start sig_en=de41b7175e46cdbd6ea8ea73b9ed22c0 sig_cn_org=None source=14.1 
  <para>
   The view <literal>administrable_role_authorizations</literal>
   identifies all roles that the current user has the admin option
   for.
  </para>
________________________________________________________-->
  <para>
   视图<literal>administrable_role_authorizations</literal>标识当前用户对其有管理选项的所有角色。
  </para>
<!-- pgdoc-cn_end sig_en=de41b7175e46cdbd6ea8ea73b9ed22c0 -->

  <table>
<!-- pgdoc-cn_start sig_en=ce9b017f01cf3ac17fb048fda88f39d1 sig_cn_org=None source=14.1 
   <title><structname>administrable_role_authorizations</structname> Columns</title>
________________________________________________________-->
   <title><structname>administrable_role_authorizations</structname> 列</title>
<!-- pgdoc-cn_end sig_en=ce9b017f01cf3ac17fb048fda88f39d1 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ee4bf2329fde2fff05c3989f5d58be41 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role to which this role membership was granted (can
       be the current user, or a different role in case of nested role
       memberships)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予此角色成员的角色名称(可以是当前用户，或在嵌套角色成员的情况下不同的角色。)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ee4bf2329fde2fff05c3989f5d58be41 -->

<!-- pgdoc-cn_start sig_en=0e28a97ac4a9487b9cb480d75a7ff3fb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>role_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of a role
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>role_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       一个角色的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0e28a97ac4a9487b9cb480d75a7ff3fb -->

<!-- pgdoc-cn_start sig_en=18730e808f9ed85d2251312bb45341c8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Always <literal>YES</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       总是 <literal>YES</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=18730e808f9ed85d2251312bb45341c8 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-applicable-roles">
  <title><literal>applicable_roles</literal></title>

<!-- pgdoc-cn_start sig_en=77d316198826e02300908648f0884008 sig_cn_org=None source=14.1 
  <para>
   The view <literal>applicable_roles</literal> identifies all roles
   whose privileges the current user can use.  This means there is
   some chain of role grants from the current user to the role in
   question.  The current user itself is also an applicable role.  The
   set of applicable roles is generally used for permission checking.
   <indexterm><primary>applicable role</primary></indexterm>
   <indexterm><primary>role</primary><secondary>applicable</secondary></indexterm>
  </para>
________________________________________________________-->
  <para>
   视图<literal>applicable_roles</literal>当前用户可以使用其特权的所有角色。这意味着有某种角色授权链从当前用户到讨论中的角色。当前用户本身也是一个可应用的角色。可应用的角色的集合通常被用于权限检查。
   <indexterm><primary>applicable role</primary></indexterm>
   <indexterm><primary>role</primary><secondary>applicable</secondary></indexterm>
  </para>
<!-- pgdoc-cn_end sig_en=77d316198826e02300908648f0884008 -->

  <table>
<!-- pgdoc-cn_start sig_en=bfa069cf6682c8c6466fc60781817f3c sig_cn_org=None source=14.1 
   <title><structname>applicable_roles</structname> Columns</title>
________________________________________________________-->
   <title><structname>applicable_roles</structname> 列</title>
<!-- pgdoc-cn_end sig_en=bfa069cf6682c8c6466fc60781817f3c -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ee4bf2329fde2fff05c3989f5d58be41 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role to which this role membership was granted (can
       be the current user, or a different role in case of nested role
       memberships)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予此角色成员的角色名称(可以是当前用户，或在嵌套角色成员的情况下不同的角色。)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ee4bf2329fde2fff05c3989f5d58be41 -->

<!-- pgdoc-cn_start sig_en=0e28a97ac4a9487b9cb480d75a7ff3fb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>role_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of a role
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>role_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       一个角色的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0e28a97ac4a9487b9cb480d75a7ff3fb -->

<!-- pgdoc-cn_start sig_en=0b6a7d71ec6408c78073c195a6ed0279 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the grantee has the admin option on
       the role, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果被授权人在角色上有管理选项则为<literal>YES</literal> ，如果没有则为<literal>NO</literal> 
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0b6a7d71ec6408c78073c195a6ed0279 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-attributes">
  <title><literal>attributes</literal></title>

<!-- pgdoc-cn_start sig_en=f6d658ce2d92b2a32f3ec5b093b7eaef sig_cn_org=None source=14.1 
  <para>
   The view <literal>attributes</literal> contains information about
   the attributes of composite data types defined in the database.
   (Note that the view does not give information about table columns,
   which are sometimes called attributes in PostgreSQL contexts.)
   Only those attributes are shown that the current user has access to (by way
   of being the owner of or having some privilege on the type).
  </para>
________________________________________________________-->
  <para>
   视图<literal>attributes</literal>包含数据库中定义的组合数据类型的属性的有关信息（注意该视图并不给出有关表列的信息，表列有时候在 PostgreSQL 上下文环境中也被称为属性）。只有当前用户能够访问（由于是拥有者获得的权限或是在类型上有某些特权）的那些属性会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=f6d658ce2d92b2a32f3ec5b093b7eaef -->

  <table>
<!-- pgdoc-cn_start sig_en=e7892c19210878dca3c38192c8a9d75c sig_cn_org=None source=14.1 
   <title><structname>attributes</structname> Columns</title>
________________________________________________________-->
   <title><structname>attributes</structname> 列</title>
<!-- pgdoc-cn_end sig_en=e7892c19210878dca3c38192c8a9d75c -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=78185297f8e65ba7634ec85f4c4f5ea6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the data type (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该数据类型的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=78185297f8e65ba7634ec85f4c4f5ea6 -->

<!-- pgdoc-cn_start sig_en=88c5647bff45e1a6f5975a4d74938113 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the data type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该数据类型的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=88c5647bff45e1a6f5975a4d74938113 -->

<!-- pgdoc-cn_start sig_en=bd0b388ce5af1bb3b0c70ede79d6fe32 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the data type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       数据类型名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bd0b388ce5af1bb3b0c70ede79d6fe32 -->

<!-- pgdoc-cn_start sig_en=d7b5e49a9a4caea8e868a6928fda36c7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attribute_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the attribute
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attribute_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       属性名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d7b5e49a9a4caea8e868a6928fda36c7 -->

<!-- pgdoc-cn_start sig_en=a354f0f84b50c6fe121a1a44c1a56ec4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordinal_position</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Ordinal position of the attribute within the data type (count starts at 1)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordinal_position</structfield> <type>cardinal_number</type>
      </para>
      <para>
       属性在该数据类型内部的顺序位置（从 1 开始计算）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a354f0f84b50c6fe121a1a44c1a56ec4 -->

<!-- pgdoc-cn_start sig_en=d233b004d6e7f61f3a73cec9b1889f46 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attribute_default</structfield> <type>character_data</type>
      </para>
      <para>
       Default expression of the attribute
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attribute_default</structfield> <type>character_data</type>
      </para>
      <para>
       该属性的默认表达式
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d233b004d6e7f61f3a73cec9b1889f46 -->

<!-- pgdoc-cn_start sig_en=74b0043afc4b258089022f77e2699372 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_nullable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the attribute is possibly nullable,
       <literal>NO</literal> if it is known not nullable.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_nullable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该属性是可能为空的，值为<literal>YES</literal>，否则为<literal>NO</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=74b0043afc4b258089022f77e2699372 -->

<!-- pgdoc-cn_start sig_en=215ca3b32b719e103bd6d63eed0e81dc sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       Data type of the attribute, if it is a built-in type, or
       <literal>ARRAY</literal> if it is some array (in that case, see
       the view <literal>element_types</literal>), else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>attribute_udt_name</literal> and
       associated columns).
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       如果该属性是一个内建类型，此列值为该属性的数据类型；
       如果该属性是某种数组，此列值为<literal>ARRAY</literal>（在这种情况下，见视图<literal>element_types</literal>）；
       其他情况，此列值为<literal>USER-DEFINED</literal>（在这种情况下，该类型在<literal>attribute_udt_name</literal>和相关列中标识）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=215ca3b32b719e103bd6d63eed0e81dc -->

<!-- pgdoc-cn_start sig_en=6a7ad1c3bd2e51ced28e8ddae2e13ea3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a character or bit
       string type, the declared maximum length; null for all other
       data types or if no maximum length was declared.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一个字符或位串类型，这里是声明的最大长度；如果没有声明最大长度，则对于所有其他数据类型为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6a7ad1c3bd2e51ced28e8ddae2e13ea3 -->

<!-- pgdoc-cn_start sig_en=6926f5823e2f8581efcb7ad56df6a44b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a character type,
       the maximum possible length in octets (bytes) of a datum; null
       for all other data types.  The maximum octet length depends on
       the declared character maximum length (see above) and the
       server encoding.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一个字符类型，这里是一个数据的最大可能长度（以字节计）；对其他所有数据类型为空。
	   最大字节长度取决于声明的字符最大长度（见上文）和服务器编码。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6926f5823e2f8581efcb7ad56df6a44b -->

<!-- pgdoc-cn_start sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 -->

<!-- pgdoc-cn_start sig_en=359de2c127ff4bf584099b3dbafa94c0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=359de2c127ff4bf584099b3dbafa94c0 -->

<!-- pgdoc-cn_start sig_en=5daa3e735df10fe5f7c15e2746e03745 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5daa3e735df10fe5f7c15e2746e03745 -->

<!-- pgdoc-cn_start sig_en=6f6f56ce544ae2265cb32e470cdf12c3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the collation of the attribute
       (always the current database), null if default or the data type
       of the attribute is not collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含此属性排序规则的数据库名（总是当前数据库），如果默认或者该属性的数据类型不可排序则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6f6f56ce544ae2265cb32e470cdf12c3 -->

<!-- pgdoc-cn_start sig_en=97e713d8723425f6588a8533132cf19e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the collation of the attribute,
       null if default or the data type of the attribute is not
       collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含此属性排序规则的模式名，如果默认或者该属性的数据类型不可排序则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=97e713d8723425f6588a8533132cf19e -->

<!-- pgdoc-cn_start sig_en=03c379dc2397d11efa7e4030176fe2e4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the collation of the attribute, null if default or the
       data type of the attribute is not collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该属性排序规则的名称，如果默认或者该属性的数据类型不可排序则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=03c379dc2397d11efa7e4030176fe2e4 -->

<!-- pgdoc-cn_start sig_en=c36599d2814aea92b60e7ebe1c59d09f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a numeric type, this
       column contains the (declared or implicit) precision of the
       type for this attribute.  The precision indicates the number of
       significant digits.  It can be expressed in decimal (base 10)
       or binary (base 2) terms, as specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种数字类型，这列包含这个属性类型的（声明的或隐式的）精度。精度指示了有效位数。
       它可以按照列<literal>numeric_precision_radix</literal>中指定的被表示为十进制（基于 10）或二进制（基于 2）。对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c36599d2814aea92b60e7ebe1c59d09f -->

<!-- pgdoc-cn_start sig_en=053029a44f9185057d623fdf55fa69ed sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a numeric type, this
       column indicates in which base the values in the columns
       <literal>numeric_precision</literal> and
       <literal>numeric_scale</literal> are expressed.  The value is
       either 2 or 10.  For all other data types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种数字类型，这一列指示<literal>numeric_precision</literal>和<literal>numeric_scale</literal>列中的值是基于什么来表示。
       该值为 2 或 10。对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=053029a44f9185057d623fdf55fa69ed -->

<!-- pgdoc-cn_start sig_en=9c1796589125777dcb42d64e9f5d268d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies an exact numeric
       type, this column contains the (declared or implicit) scale of
       the type for this attribute.  The scale indicates the number of
       significant digits to the right of the decimal point.  It can
       be expressed in decimal (base 10) or binary (base 2) terms, as
       specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种准确数字类型，这列包含这个属性类型的（声明的或隐式的）比例。
       比例指示了有效位数。它可以按照列<literal>numeric_precision_radix</literal>中指定的被表示为十进制（基于 10）或二进制（基于 2）。
       对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9c1796589125777dcb42d64e9f5d268d -->

<!-- pgdoc-cn_start sig_en=b1f561d617baf0db1a8c3d416ad5eb90 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a date, time,
       timestamp, or interval type, this column contains the (declared
       or implicit) fractional seconds precision of the type for this
       attribute, that is, the number of decimal digits maintained
       following the decimal point in the seconds value.  For all
       other data types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种日期、时间、时间戳或时间间隔类型，这一列包含这个属性类型的（声明的或隐式的）分数秒的精度，也就是秒值的小数点后的十进制位数。
       对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b1f561d617baf0db1a8c3d416ad5eb90 -->

<!-- pgdoc-cn_start sig_en=804e9c9d65ee327f89bc8df1272384ee sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies an interval type,
       this column contains the specification which fields the
       intervals include for this attribute, e.g., <literal>YEAR TO
       MONTH</literal>, <literal>DAY TO SECOND</literal>, etc.  If no
       field restrictions were specified (that is, the interval
       accepts all fields), and for all other data types, this field
       is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种时间间隔类型，这一列包含时间间隔为这个属性包括哪些域的声明，例如<literal>YEAR TO MONTH</literal>、<literal>DAY TO SECOND</literal>等等。
       如果没有指定域限制（也就是该时间间隔接受所有域），并且对于所有其他数据类型，这个域为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=804e9c9d65ee327f89bc8df1272384ee -->

<!-- pgdoc-cn_start sig_en=e563cefb8278a8bbb9d23e0812b9a76b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available
       in <productname>PostgreSQL</productname>
       (see <literal>datetime_precision</literal> for the fractional
       seconds precision of interval type attributes)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性（关于时间间隔类型属性的分数秒精度可见<literal>datetime_precision</literal>）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e563cefb8278a8bbb9d23e0812b9a76b -->

<!-- pgdoc-cn_start sig_en=bb7c5afb45ceabc5b6d119c5445fc04b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attribute_udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the attribute data type is defined in
       (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attribute_udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       属性数据类型被定义的数据库名（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bb7c5afb45ceabc5b6d119c5445fc04b -->

<!-- pgdoc-cn_start sig_en=430af877a428e400754f9302b4e3f276 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attribute_udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that the attribute data type is defined in
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attribute_udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       属性数据类型被定义的模式名
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=430af877a428e400754f9302b4e3f276 -->

<!-- pgdoc-cn_start sig_en=74cfc322ccef7fd01d093201ec27c632 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attribute_udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the attribute data type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attribute_udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       属性数据类型的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=74cfc322ccef7fd01d093201ec27c632 -->

<!-- pgdoc-cn_start sig_en=daac500380aced6577917d77130a7b3d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=daac500380aced6577917d77130a7b3d -->

<!-- pgdoc-cn_start sig_en=d78a2ca05035726a001dded35cbcbd0f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d78a2ca05035726a001dded35cbcbd0f -->

<!-- pgdoc-cn_start sig_en=c39393e41b9b3c96d06be5c5077cb108 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c39393e41b9b3c96d06be5c5077cb108 -->

<!-- pgdoc-cn_start sig_en=bb80dcd755af451face68c0645f42c4a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是空，因为数组在<productname>PostgreSQL</productname>中总是有无限制的最大势
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bb80dcd755af451face68c0645f42c4a -->

<!-- pgdoc-cn_start sig_en=772d91346ab33d4f318511e03844075d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       An identifier of the data type descriptor of the column, unique
       among the data type descriptors pertaining to the table.  This
       is mainly useful for joining with other instances of such
       identifiers.  (The specific format of the identifier is not
       defined and not guaranteed to remain the same in future
       versions.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该列的数据类型描述符的一个标识符，在从属于该表的数据类型标识符之中唯一。
       这主要用于与这类标识符的其他实例进行连接（该标识符的指定格式没有被定义并且不保证在未来的版本中保持相同）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=772d91346ab33d4f318511e03844075d -->

<!-- pgdoc-cn_start sig_en=a899f5cf259a033b69028adc60fa11da sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_derived_reference_attribute</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_derived_reference_attribute</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a899f5cf259a033b69028adc60fa11da -->
    </tbody>
   </tgroup>
  </table>

<!-- pgdoc-cn_start sig_en=bf6e100ae635c322015a7ba97acbe136 sig_cn_org=None source=14.1 
  <para>
   See also under <xref linkend="infoschema-columns"/>, a similarly
   structured view, for further information on some of the columns.
  </para>
________________________________________________________-->
  <para>
   关于某些列的详情，参见<xref linkend="infoschema-columns"/>之下的一个相似结构的视图。
  </para>
<!-- pgdoc-cn_end sig_en=bf6e100ae635c322015a7ba97acbe136 -->
 </sect1>

 <sect1 id="infoschema-character-sets">
  <title><literal>character_sets</literal></title>

<!-- pgdoc-cn_start sig_en=4087b294424ba58a0e7cbdb2478dc0f0 sig_cn_org=None source=14.1 
  <para>
   The view <literal>character_sets</literal> identifies the character
   sets available in the current database.  Since PostgreSQL does not
   support multiple character sets within one database, this view only
   shows one, which is the database encoding.
  </para>
________________________________________________________-->
  <para>
   视图<literal>character_sets</literal>标识当前数据库中可用的字符集。因为 PostgreSQL 不支持在同一个数据库中有多个字符集，这个视图只显示一个字符集，它就是数据库编码。
  </para>
<!-- pgdoc-cn_end sig_en=4087b294424ba58a0e7cbdb2478dc0f0 -->

<!-- pgdoc-cn_start sig_en=ac8db7b69c8ce48bd9ce1128c5a4d644 sig_cn_org=a3c4e06f32eafb59079f0d80fee887df source=15.7 
  <para>
   Take note of how the following terms are used in the SQL standard:
   <variablelist>
    <varlistentry>
     <term>character repertoire</term>
     <listitem>
      <para>
       An abstract collection of characters, for
       example <literal>UNICODE</literal>, <literal>UCS</literal>, or
       <literal>LATIN1</literal>.  Not exposed as an SQL object, but
       visible in this view.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>character encoding form</term>
     <listitem>
      <para>
       An encoding of some character repertoire.  Most older character
       repertoires only use one encoding form, and so there are no
       separate names for them (e.g., <literal>LATIN2</literal> is an
       encoding form applicable to the <literal>LATIN2</literal>
       repertoire).  But for example Unicode has the encoding forms
       <literal>UTF8</literal>, <literal>UTF16</literal>, etc. (not
       all supported by PostgreSQL).  Encoding forms are not exposed
       as an SQL object, but are visible in this view.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>character set</term>
     <listitem>
      <para>
       A named SQL object that identifies a character repertoire, a
       character encoding, and a default collation.  A predefined
       character set would typically have the same name as an encoding
       form, but users could define other names.  For example, the
       character set <literal>UTF8</literal> would typically identify
       the character repertoire <literal>UCS</literal>, encoding
       form <literal>UTF8</literal>, and some default collation.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   You can think of an <quote>encoding</quote> in PostgreSQL either as
   a character set or a character encoding form.  They will have the
   same name, and there can only be one in one database.
  </para>
________________________________________________________-->
  <para>
   请注意SQL标准中以下术语的用法：
   <variablelist>
    <varlistentry>
     <term>character repertoire</term>
     <listitem>
      <para>
       一个抽象的字符集合，例如<literal>UNICODE</literal>，<literal>UCS</literal>或
       <literal>LATIN1</literal>。不作为SQL对象公开，但在此视图中可见。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>character encoding form</term>
     <listitem>
      <para>
       一种字符集的编码形式。大多数旧的字符集只使用一种编码形式，因此它们没有单独的名称
       （例如，<literal>LATIN2</literal>是适用于<literal>LATIN2</literal>字符集的编码形式）。
       但是例如Unicode有编码形式<literal>UTF8</literal>，<literal>UTF16</literal>等
       （并非所有都受PostgreSQL支持）。编码形式不作为SQL对象公开，但在此视图中可见。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>character set</term>
     <listitem>
      <para>
       一个命名的SQL对象，用于标识字符集、字符编码和默认排序规则。预定义的字符集通常与编码形式
       同名，但用户可以定义其他名称。例如，字符集<literal>UTF8</literal>通常会标识字符集
       <literal>UCS</literal>，编码形式<literal>UTF8</literal>和一些默认排序规则。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   在PostgreSQL中，您可以将<quote>编码</quote>视为字符集或字符编码形式。它们将具有相同的名称，
   并且一个数据库中只能有一个。
  </para>
<!-- pgdoc-cn_end sig_en=ac8db7b69c8ce48bd9ce1128c5a4d644 -->

  <table>
<!-- pgdoc-cn_start sig_en=7776a638fe3fba28e97d514bc3bbd652 sig_cn_org=None source=14.1 
   <title><structname>character_sets</structname> Columns</title>
________________________________________________________-->
   <title><structname>character_sets</structname> 列</title>
<!-- pgdoc-cn_end sig_en=7776a638fe3fba28e97d514bc3bbd652 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ce3ffe709a2e0a7f22b39a0da3c2b253 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Character sets are currently not implemented as schema objects, so this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       当前字符集并未被实现为模式对象，因此这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ce3ffe709a2e0a7f22b39a0da3c2b253 -->

<!-- pgdoc-cn_start sig_en=090a9b3a7958668b8664ae4ae3579b3b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Character sets are currently not implemented as schema objects, so this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       当前字符集并未被实现为模式对象，因此这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=090a9b3a7958668b8664ae4ae3579b3b -->

<!-- pgdoc-cn_start sig_en=f4e94e3e613ccf04112b995a9d1a4608 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the character set, currently implemented as showing the name of the database encoding
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该字符集的名字，当前实现为显示该数据库编码的名字
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f4e94e3e613ccf04112b995a9d1a4608 -->

<!-- pgdoc-cn_start sig_en=840ac005cbab2497cb3be81e3b96e7a7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_repertoire</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Character repertoire, showing <literal>UCS</literal> if the encoding is <literal>UTF8</literal>, else just the encoding name
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_repertoire</structfield> <type>sql_identifier</type>
      </para>
      <para>
       字元集，如果编码为<literal>UTF8</literal>则显示<literal>UCS</literal>，否则只显示编码名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=840ac005cbab2497cb3be81e3b96e7a7 -->

<!-- pgdoc-cn_start sig_en=36eccb129c20c78d6964a1f7ed3acb76 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>form_of_use</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Character encoding form, same as the database encoding
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>form_of_use</structfield> <type>sql_identifier</type>
      </para>
      <para>
       字符编码形式，与数据库编码相同
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=36eccb129c20c78d6964a1f7ed3acb76 -->

<!-- pgdoc-cn_start sig_en=656ef6034d8c2d3b2faf34ffcec573e0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_collate_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the default collation (always the current database, if any collation is identified)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_collate_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该默认排序规则的数据库名（如果任意排序规则被标识，总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=656ef6034d8c2d3b2faf34ffcec573e0 -->

<!-- pgdoc-cn_start sig_en=821e1482b5250693b048f746bb02e4cd sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_collate_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the default collation
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_collate_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该默认排序规则的模式名
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=821e1482b5250693b048f746bb02e4cd -->

<!-- pgdoc-cn_start sig_en=2734042b9fda3c1c3e110957e40f92ae sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_collate_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the default collation.  The default collation is
       identified as the collation that matches
       the <literal>COLLATE</literal> and <literal>CTYPE</literal>
       settings of the current database.  If there is no such
       collation, then this column and the associated schema and
       catalog columns are null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_collate_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       默认排序规则的名字。该默认排序规则被标识为匹配当前数据库的<literal>COLLATE</literal>和<literal>CTYPE</literal>设置的排序规则。
       如果没有那种排序规则，那么这一列和相关模式以及目录列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2734042b9fda3c1c3e110957e40f92ae -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-check-constraint-routine-usage">
  <title><literal>check_constraint_routine_usage</literal></title>

<!-- pgdoc-cn_start sig_en=dd2b8f58638059a6cd86fae629a13314 sig_cn_org=None source=14.1 
  <para>
   The view <literal>check_constraint_routine_usage</literal>
   identifies routines (functions and procedures) that are used by a
   check constraint.  Only those routines are shown that are owned by
   a currently enabled role.
  </para>
________________________________________________________-->
  <para>
   视图<literal>check_constraint_routine_usage</literal>标识由检查约束使用的例程(函数和过程)。只有那些例程显示为当前启用的角色所拥有。
  </para>
<!-- pgdoc-cn_end sig_en=dd2b8f58638059a6cd86fae629a13314 -->

  <table>
<!-- pgdoc-cn_start sig_en=766530065544c172aa0596e58cba7afb sig_cn_org=None source=14.1 
   <title><structname>check_constraint_routine_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>check_constraint_routine_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=766530065544c172aa0596e58cba7afb -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=4410b9e771c593508e5a970146fccaa7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the constraint (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含约束的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4410b9e771c593508e5a970146fccaa7 -->

<!-- pgdoc-cn_start sig_en=398490d6470acf189396af481bd23faf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含约束的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=398490d6470acf189396af481bd23faf -->

<!-- pgdoc-cn_start sig_en=f19ff222ebf15251411dc8bf2ad9a521 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       约束的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f19ff222ebf15251411dc8bf2ad9a521 -->

<!-- pgdoc-cn_start sig_en=739a839874f2bf79f2e181b41be2fd92 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=739a839874f2bf79f2e181b41be2fd92 -->

<!-- pgdoc-cn_start sig_en=f69c524afe2317388c37b8ec9c284cb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f69c524afe2317388c37b8ec9c284cb4 -->

<!-- pgdoc-cn_start sig_en=50f51b6c55eb602db3cc8768dd9921c9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function.  See <xref linkend="infoschema-routines"/> for more information.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       函数的<quote>特定名称</quote>。  详请参见 <xref linkend="infoschema-routines"/>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=50f51b6c55eb602db3cc8768dd9921c9 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-check-constraints">
  <title><literal>check_constraints</literal></title>

<!-- pgdoc-cn_start sig_en=62737c88efa7af687addd6230f9347ae sig_cn_org=None source=14.1 
  <para>
   The view <literal>check_constraints</literal> contains all check
   constraints, either defined on a table or on a domain, that are
   owned by a currently enabled role.  (The owner of the table or
   domain is the owner of the constraint.)
  </para>
________________________________________________________-->
  <para>
   视图<literal>check_constraints</literal>包含所有检查约束，不管是定义在一个表上的还是定义在一个域上的，它们被一个当前启用的角色所拥有（表或域的拥有者就是约束的拥有者）。
  </para>
<!-- pgdoc-cn_end sig_en=62737c88efa7af687addd6230f9347ae -->

  <table>
<!-- pgdoc-cn_start sig_en=e28f888cfbf7dec795cc7c857333821b sig_cn_org=None source=14.1 
   <title><structname>check_constraints</structname> Columns</title>
________________________________________________________-->
   <title><structname>check_constraints</structname> 列</title>
<!-- pgdoc-cn_end sig_en=e28f888cfbf7dec795cc7c857333821b -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=4410b9e771c593508e5a970146fccaa7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the constraint (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含约束的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4410b9e771c593508e5a970146fccaa7 -->

<!-- pgdoc-cn_start sig_en=398490d6470acf189396af481bd23faf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含约束的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=398490d6470acf189396af481bd23faf -->

<!-- pgdoc-cn_start sig_en=f19ff222ebf15251411dc8bf2ad9a521 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       约束的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f19ff222ebf15251411dc8bf2ad9a521 -->

<!-- pgdoc-cn_start sig_en=ac8e1e7cd13d038dd0a81b658489b289 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>check_clause</structfield> <type>character_data</type>
      </para>
      <para>
       The check expression of the check constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>check_clause</structfield> <type>character_data</type>
      </para>
      <para>
       该检查约束的检查表达式
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ac8e1e7cd13d038dd0a81b658489b289 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-collations">
  <title><literal>collations</literal></title>

<!-- pgdoc-cn_start sig_en=44e65ed751b3c27a22f1bad076f4abef sig_cn_org=None source=14.1 
  <para>
   The view <literal>collations</literal> contains the collations
   available in the current database.
  </para>
________________________________________________________-->
  <para>
   视图<literal>collations</literal>包含在当前数据库中可用的排序规则。
  </para>
<!-- pgdoc-cn_end sig_en=44e65ed751b3c27a22f1bad076f4abef -->

  <table>
<!-- pgdoc-cn_start sig_en=db0e735d024f9315da2a949618f1e1a7 sig_cn_org=None source=14.1 
   <title><structname>collations</structname> Columns</title>
________________________________________________________-->
   <title><structname>collations</structname> 列</title>
<!-- pgdoc-cn_end sig_en=db0e735d024f9315da2a949618f1e1a7 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=fba2ae9f98fde8f69f5ba17a426f35e4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the collation (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该排序规则的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fba2ae9f98fde8f69f5ba17a426f35e4 -->

<!-- pgdoc-cn_start sig_en=d825e6a36fbc7d1a80f6cddb5b0496a0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the collation
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该排序规则的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d825e6a36fbc7d1a80f6cddb5b0496a0 -->

<!-- pgdoc-cn_start sig_en=6d89f81d78e6afdc7642bd1a1a3d9b2f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the default collation
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       默认排序规则的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6d89f81d78e6afdc7642bd1a1a3d9b2f -->

<!-- pgdoc-cn_start sig_en=c500652ad7c6f01d8ecd3ead44972dff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pad_attribute</structfield> <type>character_data</type>
      </para>
      <para>
       Always <literal>NO PAD</literal> (The alternative <literal>PAD
       SPACE</literal> is not supported by PostgreSQL.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pad_attribute</structfield> <type>character_data</type>
      </para>
      <para>
       总是<literal>NO PAD</literal>（另一种选择<literal>PAD SPACE</literal>没有被 PostgreSQL 支持）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c500652ad7c6f01d8ecd3ead44972dff -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-collation-character-set-applicab"> <!-- max 44 characters -->
  <title><literal>collation_character_set_&zwsp;applicability</literal></title>

<!-- pgdoc-cn_start sig_en=89e50ce9e21e494d367a85e1ff81f8a9 sig_cn_org=None source=14.1 
  <para>
   The view <literal>collation_character_set_applicability</literal>
   identifies which character set the available collations are
   applicable to.  In PostgreSQL, there is only one character set per
   database (see explanation
   in <xref linkend="infoschema-character-sets"/>), so this view does
   not provide much useful information.
  </para>
________________________________________________________-->
  <para>
   视图<literal>collation_character_set_applicability</literal>标识可用的排序规则适用于哪些字符集。在 PostgreSQL 中，每个数据库中只有一种字符集（解释见<xref linkend="infoschema-character-sets"/>），因此这个视图没有提供很有用的信息。
  </para>
<!-- pgdoc-cn_end sig_en=89e50ce9e21e494d367a85e1ff81f8a9 -->

  <table>
<!-- pgdoc-cn_start sig_en=3a5ffd31cab8a4089cd3a77a3700b77d sig_cn_org=None source=14.1 
   <title><structname>collation_character_set_applicability</structname> Columns</title>
________________________________________________________-->
   <title><structname>collation_character_set_applicability</structname> 列</title>
<!-- pgdoc-cn_end sig_en=3a5ffd31cab8a4089cd3a77a3700b77d -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=fba2ae9f98fde8f69f5ba17a426f35e4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the collation (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该排序规则的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fba2ae9f98fde8f69f5ba17a426f35e4 -->

<!-- pgdoc-cn_start sig_en=d825e6a36fbc7d1a80f6cddb5b0496a0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the collation
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该排序规则的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d825e6a36fbc7d1a80f6cddb5b0496a0 -->

<!-- pgdoc-cn_start sig_en=6d89f81d78e6afdc7642bd1a1a3d9b2f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the default collation
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       默认排序规则的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6d89f81d78e6afdc7642bd1a1a3d9b2f -->

<!-- pgdoc-cn_start sig_en=64c54b822865694196881262a7593f46 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Character sets are currently not implemented as schema objects, so this column is null
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       字符集当前还未被实现为模式对象，所以这一列为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=64c54b822865694196881262a7593f46 -->

<!-- pgdoc-cn_start sig_en=59c5a3be51576aef5ad77c07bd749cb5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Character sets are currently not implemented as schema objects, so this column is null
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       字符集当前还未被实现为模式对象，所以这一列为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=59c5a3be51576aef5ad77c07bd749cb5 -->

<!-- pgdoc-cn_start sig_en=5574348cb192194590798b231e9d7cf1 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the character set
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       字符集名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5574348cb192194590798b231e9d7cf1 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-column-column-usage">
  <title><literal>column_column_usage</literal></title>

<!-- pgdoc-cn_start sig_en=b26abea807350a267b41927363fafd9c sig_cn_org=None source=14.1 
  <para>
   The view <literal>column_column_usage</literal> identifies all generated
   columns that depend on another base column in the same table.  Only tables
   owned by a currently enabled role are included.
  </para>
________________________________________________________-->
  <para>
   视图<literal>column_column_usage</literal>标识依赖于同一表中的另一个基本列生成的所有列。只包含当前启用的角色所拥有的表。
  </para>
<!-- pgdoc-cn_end sig_en=b26abea807350a267b41927363fafd9c -->

  <table>
<!-- pgdoc-cn_start sig_en=551eb9ff689cfd5c963344fbc981d4fe sig_cn_org=None source=14.1 
   <title><structname>column_column_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>column_column_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=551eb9ff689cfd5c963344fbc981d4fe -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=b012d2f4cbdd70a868b053aeb3bfdf2c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the table (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含表的数据库的名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b012d2f4cbdd70a868b053aeb3bfdf2c -->

<!-- pgdoc-cn_start sig_en=e3d4dda57f0d8b3684bb37cfc62dd6e8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含表的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e3d4dda57f0d8b3684bb37cfc62dd6e8 -->

<!-- pgdoc-cn_start sig_en=2170e2f48a321ca74d5f420a104984f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2170e2f48a321ca74d5f420a104984f9 -->

<!-- pgdoc-cn_start sig_en=dbbc9336a06c542f34fc90dd71bafa61 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the base column that a generated column depends on
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       生成列所依赖的基本列的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=dbbc9336a06c542f34fc90dd71bafa61 -->

<!-- pgdoc-cn_start sig_en=0bcf56c6ba37b04b084a87d7f8e268e8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dependent_column</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the generated column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dependent_column</structfield> <type>sql_identifier</type>
      </para>
      <para>
       生成的列的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0bcf56c6ba37b04b084a87d7f8e268e8 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-column-domain-usage">
  <title><literal>column_domain_usage</literal></title>

<!-- pgdoc-cn_start sig_en=8b69a00298288b9d7f2e6a8c98611211 sig_cn_org=None source=14.1 
  <para>
   The view <literal>column_domain_usage</literal> identifies all
   columns (of a table or a view) that make use of some domain defined
   in the current database and owned by a currently enabled role.
  </para>
________________________________________________________-->
  <para>
   视图<literal>column_domain_usage</literal>标识所有使用定义在当前数据库中并且被一个当前启用的角色拥有的域的列（表列或视图列）。
  </para>
<!-- pgdoc-cn_end sig_en=8b69a00298288b9d7f2e6a8c98611211 -->

  <table>
<!-- pgdoc-cn_start sig_en=9e40fa12bdc5a86d5df83259885b1019 sig_cn_org=None source=14.1 
   <title><structname>column_domain_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>column_domain_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=9e40fa12bdc5a86d5df83259885b1019 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=d59a45a5be568b89d4f870980597a34c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the domain (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该域的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d59a45a5be568b89d4f870980597a34c -->

<!-- pgdoc-cn_start sig_en=8e20a76c34a619fc6b8ca24d2c5465c5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the domain
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该域的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8e20a76c34a619fc6b8ca24d2c5465c5 -->

<!-- pgdoc-cn_start sig_en=7fd0984ee7f86f700b3ad1a25dce827f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the domain
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       域名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7fd0984ee7f86f700b3ad1a25dce827f -->

<!-- pgdoc-cn_start sig_en=b012d2f4cbdd70a868b053aeb3bfdf2c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the table (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含表的数据库的名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b012d2f4cbdd70a868b053aeb3bfdf2c -->

<!-- pgdoc-cn_start sig_en=e3d4dda57f0d8b3684bb37cfc62dd6e8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含表的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e3d4dda57f0d8b3684bb37cfc62dd6e8 -->

<!-- pgdoc-cn_start sig_en=2170e2f48a321ca74d5f420a104984f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2170e2f48a321ca74d5f420a104984f9 -->

<!-- pgdoc-cn_start sig_en=8d673331d60eea51cc5a3fc89e3214ea sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       列名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8d673331d60eea51cc5a3fc89e3214ea -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-column-options">
  <title><literal>column_options</literal></title>

<!-- pgdoc-cn_start sig_en=456959ab2feef931607e81cba36a97a2 sig_cn_org=None source=14.1 
  <para>
   The view <literal>column_options</literal> contains all the
   options defined for foreign table columns in the current database.  Only
   those foreign table columns are shown that the current user has access to
   (by way of being the owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>column_options</literal>包含为当前数据库中外部表列定义的所有选项。只有当前用户能够访问（作为拥有者或具有某些特权）的那些外部表列才被显示。
  </para>
<!-- pgdoc-cn_end sig_en=456959ab2feef931607e81cba36a97a2 -->

  <table>
<!-- pgdoc-cn_start sig_en=abf39f0682b5a8f5989f0ba9486d2a3d sig_cn_org=None source=14.1 
   <title><structname>column_options</structname> Columns</title>
________________________________________________________-->
   <title><structname>column_options</structname> 列</title>
<!-- pgdoc-cn_end sig_en=abf39f0682b5a8f5989f0ba9486d2a3d -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=85f498242c7eddae7d37672052ac1ed6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the foreign table (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该外部表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=85f498242c7eddae7d37672052ac1ed6 -->

<!-- pgdoc-cn_start sig_en=1b2c6b99b33aa762ab35d9b4077cb604 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the foreign table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该外部表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1b2c6b99b33aa762ab35d9b4077cb604 -->

<!-- pgdoc-cn_start sig_en=657be79e2dc09bc6c58ccf99b48ca8ed sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       外部表名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=657be79e2dc09bc6c58ccf99b48ca8ed -->

<!-- pgdoc-cn_start sig_en=8d673331d60eea51cc5a3fc89e3214ea sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       列名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8d673331d60eea51cc5a3fc89e3214ea -->

<!-- pgdoc-cn_start sig_en=e9c46c3df966f1c748cec8414e5e6cf2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of an option
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       一个选项名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e9c46c3df966f1c748cec8414e5e6cf2 -->

<!-- pgdoc-cn_start sig_en=1652f31550639d6c88ae7b02ad4e8772 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_value</structfield> <type>character_data</type>
      </para>
      <para>
       Value of the option
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_value</structfield> <type>character_data</type>
      </para>
      <para>
       该选项的值
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1652f31550639d6c88ae7b02ad4e8772 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-column-privileges">
  <title><literal>column_privileges</literal></title>

<!-- pgdoc-cn_start sig_en=6df4776b40f9e55a88dff552a237fb88 sig_cn_org=None source=14.1 
  <para>
   The view <literal>column_privileges</literal> identifies all
   privileges granted on columns to a currently enabled role or by a
   currently enabled role.  There is one row for each combination of
   column, grantor, and grantee.
  </para>
________________________________________________________-->
  <para>
   视图<literal>column_privileges</literal>标识所有授予给一个当前启用的角色或者被一个当前启用的角色授予的特权。对每一个列、授予者、被授予者的组合只有一行。
  </para>
<!-- pgdoc-cn_end sig_en=6df4776b40f9e55a88dff552a237fb88 -->

<!-- pgdoc-cn_start sig_en=20588565de5af5ac8952b418f6931576 sig_cn_org=None source=14.1 
  <para>
   If a privilege has been granted on an entire table, it will show up in
   this view as a grant for each column, but only for the
   privilege types where column granularity is possible:
   <literal>SELECT</literal>, <literal>INSERT</literal>,
   <literal>UPDATE</literal>, <literal>REFERENCES</literal>.
  </para>
________________________________________________________-->
  <para>
   如果一个特权被授予在一整个表上，它在这个视图中被显示为在每一列上授予，但是只有可用于列粒度的特权类型才会这样：
   <literal>SELECT</literal>、<literal>INSERT</literal>、
   <literal>UPDATE</literal>、<literal>REFERENCES</literal>。
  </para>
<!-- pgdoc-cn_end sig_en=20588565de5af5ac8952b418f6931576 -->

  <table>
<!-- pgdoc-cn_start sig_en=975078f796f51891a9db6d88d4221ee5 sig_cn_org=None source=14.1 
   <title><structname>column_privileges</structname> Columns</title>
________________________________________________________-->
   <title><structname>column_privileges</structname> 列</title>
<!-- pgdoc-cn_end sig_en=975078f796f51891a9db6d88d4221ee5 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ef93823b7a2949262fd771a7fc97ccb8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that granted the privilege
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ef93823b7a2949262fd771a7fc97ccb8 -->

<!-- pgdoc-cn_start sig_en=47eb41136204607ed172b8a312c8d9ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that the privilege was granted to
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47eb41136204607ed172b8a312c8d9ff -->

<!-- pgdoc-cn_start sig_en=478ce04a43f28036578a91680696137c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that contains the column (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该列的表所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=478ce04a43f28036578a91680696137c -->

<!-- pgdoc-cn_start sig_en=ac25be687ecd68b87f4ef3bb4264b110 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that contains the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该列的表所在的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ac25be687ecd68b87f4ef3bb4264b110 -->

<!-- pgdoc-cn_start sig_en=c81f5b32d2708aaaecd5129e2bc36de2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that contains the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该列的表名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c81f5b32d2708aaaecd5129e2bc36de2 -->

<!-- pgdoc-cn_start sig_en=8d673331d60eea51cc5a3fc89e3214ea sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       列名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8d673331d60eea51cc5a3fc89e3214ea -->

<!-- pgdoc-cn_start sig_en=016766b1c0a6f423ee101548a6044e27 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       Type of the privilege: <literal>SELECT</literal>,
       <literal>INSERT</literal>, <literal>UPDATE</literal>, or
       <literal>REFERENCES</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       特权类型：<literal>SELECT</literal>、<literal>INSERT</literal>、<literal>UPDATE</literal>或 <literal>REFERENCES</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=016766b1c0a6f423ee101548a6044e27 -->

<!-- pgdoc-cn_start sig_en=8952048d243a6f039c69a84562efd845 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特权是可授予的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8952048d243a6f039c69a84562efd845 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-column-udt-usage">
  <title><literal>column_udt_usage</literal></title>

<!-- pgdoc-cn_start sig_en=ba5080e667c54167d46b657480090f25 sig_cn_org=None source=14.1 
  <para>
   The view <literal>column_udt_usage</literal> identifies all columns
   that use data types owned by a currently enabled role.  Note that in
   <productname>PostgreSQL</productname>, built-in data types behave
   like user-defined types, so they are included here as well.  See
   also <xref linkend="infoschema-columns"/> for details.
  </para>
________________________________________________________-->
  <para>
   视图<literal>column_udt_usage</literal>标识所有使用被一个当前启用的角色拥有的数据类型的列。注意在<productname>PostgreSQL</productname>中，内建数据类型的行为和用户定义的类型相似，因此它们也被包括在这里。详见<xref linkend="infoschema-columns"/>。
  </para>
<!-- pgdoc-cn_end sig_en=ba5080e667c54167d46b657480090f25 -->

  <table>
<!-- pgdoc-cn_start sig_en=34b5221de4a4193a94dc8c9f2dd12670 sig_cn_org=None source=14.1 
   <title><structname>column_udt_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>column_udt_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=34b5221de4a4193a94dc8c9f2dd12670 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=1b70f0719c0fe7e94b5f63203889c381 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the column data type (the underlying
       type of the domain, if applicable) is defined in (always the
       current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该列数据类型（如果适用，底层的域类型）被定义的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1b70f0719c0fe7e94b5f63203889c381 -->

<!-- pgdoc-cn_start sig_en=51ecdd9b91da621fbdbb8b16c6546cbb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that the column data type (the underlying
       type of the domain, if applicable) is defined in
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该列数据类型（如果适用，底层的域类型）被定义的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=51ecdd9b91da621fbdbb8b16c6546cbb -->

<!-- pgdoc-cn_start sig_en=d1f3a14f4e2ebdb2e4a0cf40f39ed837 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column data type (the underlying type of the
       domain, if applicable)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该列数据类型（如果适用，底层的域类型）的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d1f3a14f4e2ebdb2e4a0cf40f39ed837 -->

<!-- pgdoc-cn_start sig_en=b012d2f4cbdd70a868b053aeb3bfdf2c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the table (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含表的数据库的名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b012d2f4cbdd70a868b053aeb3bfdf2c -->

<!-- pgdoc-cn_start sig_en=e3d4dda57f0d8b3684bb37cfc62dd6e8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含表的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e3d4dda57f0d8b3684bb37cfc62dd6e8 -->

<!-- pgdoc-cn_start sig_en=2170e2f48a321ca74d5f420a104984f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2170e2f48a321ca74d5f420a104984f9 -->

<!-- pgdoc-cn_start sig_en=8d673331d60eea51cc5a3fc89e3214ea sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       列名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8d673331d60eea51cc5a3fc89e3214ea -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-columns">
  <title><literal>columns</literal></title>

<!-- pgdoc-cn_start sig_en=7b36bbe67ec968d3e9731230218b3348 sig_cn_org=None source=14.1 
  <para>
   The view <literal>columns</literal> contains information about all
   table columns (or view columns) in the database.  System columns
   (<literal>ctid</literal>, etc.) are not included.  Only those columns are
   shown that the current user has access to (by way of being the
   owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>columns</literal>包含数据库中有关所有表列（或视图列）的信息。系统列（<literal>ctid</literal>等）不被包括在内。只有那些当前用户能够访问（作为拥有者或具有某些特权）的列才被显示。
  </para>
<!-- pgdoc-cn_end sig_en=7b36bbe67ec968d3e9731230218b3348 -->

  <table>
<!-- pgdoc-cn_start sig_en=9b47ce66a1ac2389c16ad0b2958cc00b sig_cn_org=None source=14.1 
   <title><structname>columns</structname> Columns</title>
________________________________________________________-->
   <title><structname>columns</structname> 列</title>
<!-- pgdoc-cn_end sig_en=9b47ce66a1ac2389c16ad0b2958cc00b -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=b012d2f4cbdd70a868b053aeb3bfdf2c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the table (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含表的数据库的名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b012d2f4cbdd70a868b053aeb3bfdf2c -->

<!-- pgdoc-cn_start sig_en=e3d4dda57f0d8b3684bb37cfc62dd6e8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含表的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e3d4dda57f0d8b3684bb37cfc62dd6e8 -->

<!-- pgdoc-cn_start sig_en=2170e2f48a321ca74d5f420a104984f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2170e2f48a321ca74d5f420a104984f9 -->

<!-- pgdoc-cn_start sig_en=8d673331d60eea51cc5a3fc89e3214ea sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       列名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8d673331d60eea51cc5a3fc89e3214ea -->

<!-- pgdoc-cn_start sig_en=1a2ff5adfc0bc912f6451276d5370334 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordinal_position</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Ordinal position of the column within the table (count starts at 1)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordinal_position</structfield> <type>cardinal_number</type>
      </para>
      <para>
       该列在表内的顺序位置（从 1 开始计）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1a2ff5adfc0bc912f6451276d5370334 -->

<!-- pgdoc-cn_start sig_en=a9ce74b2bf1678ae59d321e80e9d34d2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_default</structfield> <type>character_data</type>
      </para>
      <para>
       Default expression of the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_default</structfield> <type>character_data</type>
      </para>
      <para>
       该列的默认表达式
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a9ce74b2bf1678ae59d321e80e9d34d2 -->

<!-- pgdoc-cn_start sig_en=7ee6d37970ad0c2776ddcf79e76e23a5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_nullable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the column is possibly nullable,
       <literal>NO</literal> if it is known not nullable.  A not-null
       constraint is one way a column can be known not nullable, but
       there can be others.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_nullable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该列可以为空，则为<literal>YES</literal>，否则为<literal>NO</literal>。一个非空约束是让一列成为不能为空的方法，但还有其他方法。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7ee6d37970ad0c2776ddcf79e76e23a5 -->

<!-- pgdoc-cn_start sig_en=5aee42bc9c7e210ff1f2f6ecb1ec532c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       Data type of the column, if it is a built-in type, or
       <literal>ARRAY</literal> if it is some array (in that case, see
       the view <literal>element_types</literal>), else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>udt_name</literal> and associated
       columns).  If the column is based on a domain, this column
       refers to the type underlying the domain (and the domain is
       identified in <literal>domain_name</literal> and associated
       columns).
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       如果该列的数据类型是一种内建类型，则为该列的数据类型；如果是某种数组（此种情况见视图<literal>element_types</literal>），则为<literal>ARRAY</literal>；否则为<literal>USER-DEFINED</literal>（此种情况下该类型被标识在<literal>udt_name</literal>和相关列中）。
       如果该列基于一个域，这一列引用该域底层的类型（该列被标识在<literal>domain_name</literal>和相关列中）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5aee42bc9c7e210ff1f2f6ecb1ec532c -->

<!-- pgdoc-cn_start sig_en=6a7ad1c3bd2e51ced28e8ddae2e13ea3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a character or bit
       string type, the declared maximum length; null for all other
       data types or if no maximum length was declared.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一个字符或位串类型，这里是声明的最大长度；如果没有声明最大长度，则对于所有其他数据类型为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6a7ad1c3bd2e51ced28e8ddae2e13ea3 -->

<!-- pgdoc-cn_start sig_en=6926f5823e2f8581efcb7ad56df6a44b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a character type,
       the maximum possible length in octets (bytes) of a datum; null
       for all other data types.  The maximum octet length depends on
       the declared character maximum length (see above) and the
       server encoding.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一个字符类型，这里是一个数据的最大可能长度（以字节计）；对其他所有数据类型为空。
	   最大字节长度取决于声明的字符最大长度（见上文）和服务器编码。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6926f5823e2f8581efcb7ad56df6a44b -->

<!-- pgdoc-cn_start sig_en=f0c429083d6fde2c1fd791701a8b482f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a numeric type, this
       column contains the (declared or implicit) precision of the
       type for this column.  The precision indicates the number of
       significant digits.  It can be expressed in decimal (base 10)
       or binary (base 2) terms, as specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种数字类型，这列包含这个属性类型的（声明的或隐式的）精度。精度指示了有效位数。
       它可以按照列<literal>numeric_precision_radix</literal>中指定的被表示为十进制（基于 10）或二进制（基于 2）。对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f0c429083d6fde2c1fd791701a8b482f -->

<!-- pgdoc-cn_start sig_en=053029a44f9185057d623fdf55fa69ed sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a numeric type, this
       column indicates in which base the values in the columns
       <literal>numeric_precision</literal> and
       <literal>numeric_scale</literal> are expressed.  The value is
       either 2 or 10.  For all other data types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种数字类型，这一列指示<literal>numeric_precision</literal>和<literal>numeric_scale</literal>列中的值是基于什么来表示。
       该值为 2 或 10。对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=053029a44f9185057d623fdf55fa69ed -->

<!-- pgdoc-cn_start sig_en=66af7b9433a3c5c37454e84b6e891d55 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies an exact numeric
       type, this column contains the (declared or implicit) scale of
       the type for this column.  The scale indicates the number of
       significant digits to the right of the decimal point.  It can
       be expressed in decimal (base 10) or binary (base 2) terms, as
       specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种准确数字类型，这列包含这个属性类型的（声明的或隐式的）比例。
       比例指示了有效位数。它可以按照列<literal>numeric_precision_radix</literal>中指定的被表示为十进制（基于 10）或二进制（基于 2）。
       对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=66af7b9433a3c5c37454e84b6e891d55 -->

<!-- pgdoc-cn_start sig_en=165b562a6ea92b4606cc7904741c6e8f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a date, time,
       timestamp, or interval type, this column contains the (declared
       or implicit) fractional seconds precision of the type for this
       column, that is, the number of decimal digits maintained
       following the decimal point in the seconds value.  For all
       other data types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种日期、时间、时间戳或时间间隔类型，这一列包含这个属性类型的（声明的或隐式的）分数秒的精度，也就是秒值的小数点后的十进制位数。
       对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=165b562a6ea92b4606cc7904741c6e8f -->

<!-- pgdoc-cn_start sig_en=a669c259fa5c56dfd550dfc7bd2dda85 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies an interval type,
       this column contains the specification which fields the
       intervals include for this column, e.g., <literal>YEAR TO
       MONTH</literal>, <literal>DAY TO SECOND</literal>, etc.  If no
       field restrictions were specified (that is, the interval
       accepts all fields), and for all other data types, this field
       is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种时间间隔类型，这一列包含时间间隔为这个属性包括哪些域的声明，例如<literal>YEAR TO MONTH</literal>、<literal>DAY TO SECOND</literal>等等。
       如果没有指定域限制（也就是该时间间隔接受所有域），并且对于所有其他数据类型，这个域为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a669c259fa5c56dfd550dfc7bd2dda85 -->

<!-- pgdoc-cn_start sig_en=6755b6323d25a3806a4de1245a71340b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available
       in <productname>PostgreSQL</productname>
       (see <literal>datetime_precision</literal> for the fractional
       seconds precision of interval type columns)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性（关于时间间隔类型属性的分数秒精度可见<literal>datetime_precision</literal>）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6755b6323d25a3806a4de1245a71340b -->

<!-- pgdoc-cn_start sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 -->

<!-- pgdoc-cn_start sig_en=359de2c127ff4bf584099b3dbafa94c0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=359de2c127ff4bf584099b3dbafa94c0 -->

<!-- pgdoc-cn_start sig_en=5daa3e735df10fe5f7c15e2746e03745 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5daa3e735df10fe5f7c15e2746e03745 -->

<!-- pgdoc-cn_start sig_en=7d1bda1a18af7da3ce25b35421acb4b8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the collation of the column
       (always the current database), null if default or the data type
       of the column is not collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含此属性排序规则的数据库名（总是当前数据库），如果默认或者该属性的数据类型不可排序则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7d1bda1a18af7da3ce25b35421acb4b8 -->

<!-- pgdoc-cn_start sig_en=701293709853259e4bb60c53c326a112 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the collation of the column, null
       if default or the data type of the column is not collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该列的包含排序规则的模式名，如果默认或者该列的数据类型不可排序则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=701293709853259e4bb60c53c326a112 -->

<!-- pgdoc-cn_start sig_en=a2aaff8af1a313f2b452407e63a8f9de sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the collation of the column, null if default or the
       data type of the column is not collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该列的排序规则的名称，如果默认或者该列的数据类型不可排序则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a2aaff8af1a313f2b452407e63a8f9de -->

<!-- pgdoc-cn_start sig_en=7f6cd716a6d29cdbfd921f414b3f7a96 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       If the column has a domain type, the name of the database that
       the domain is defined in (always the current database), else
       null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       如果该列有一个域类型，这里是该域所在的数据库名（总是当前数据库），否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7f6cd716a6d29cdbfd921f414b3f7a96 -->

<!-- pgdoc-cn_start sig_en=b145e69837eb12837deb59b68882be10 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       If the column has a domain type, the name of the schema that
       the domain is defined in, else null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       如果该列有一个域类型，这里是该域所在的模式名，否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b145e69837eb12837deb59b68882be10 -->

<!-- pgdoc-cn_start sig_en=c18d07e354f2034130cc61544a44fb6d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       If the column has a domain type, the name of the domain, else null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       如果该列有一个域类型，这里是该域的名称，否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c18d07e354f2034130cc61544a44fb6d -->

<!-- pgdoc-cn_start sig_en=1b70f0719c0fe7e94b5f63203889c381 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the column data type (the underlying
       type of the domain, if applicable) is defined in (always the
       current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该列数据类型（如果适用，底层的域类型）被定义的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1b70f0719c0fe7e94b5f63203889c381 -->

<!-- pgdoc-cn_start sig_en=51ecdd9b91da621fbdbb8b16c6546cbb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that the column data type (the underlying
       type of the domain, if applicable) is defined in
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该列数据类型（如果适用，底层的域类型）被定义的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=51ecdd9b91da621fbdbb8b16c6546cbb -->

<!-- pgdoc-cn_start sig_en=d1f3a14f4e2ebdb2e4a0cf40f39ed837 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column data type (the underlying type of the
       domain, if applicable)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该列数据类型（如果适用，底层的域类型）的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d1f3a14f4e2ebdb2e4a0cf40f39ed837 -->

<!-- pgdoc-cn_start sig_en=daac500380aced6577917d77130a7b3d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=daac500380aced6577917d77130a7b3d -->

<!-- pgdoc-cn_start sig_en=d78a2ca05035726a001dded35cbcbd0f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d78a2ca05035726a001dded35cbcbd0f -->

<!-- pgdoc-cn_start sig_en=c39393e41b9b3c96d06be5c5077cb108 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c39393e41b9b3c96d06be5c5077cb108 -->

<!-- pgdoc-cn_start sig_en=bb80dcd755af451face68c0645f42c4a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是空，因为数组在<productname>PostgreSQL</productname>中总是有无限制的最大势
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bb80dcd755af451face68c0645f42c4a -->

<!-- pgdoc-cn_start sig_en=772d91346ab33d4f318511e03844075d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       An identifier of the data type descriptor of the column, unique
       among the data type descriptors pertaining to the table.  This
       is mainly useful for joining with other instances of such
       identifiers.  (The specific format of the identifier is not
       defined and not guaranteed to remain the same in future
       versions.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该列的数据类型描述符的一个标识符，在从属于该表的数据类型标识符之中唯一。
       这主要用于与这类标识符的其他实例进行连接（该标识符的指定格式没有被定义并且不保证在未来的版本中保持相同）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=772d91346ab33d4f318511e03844075d -->

<!-- pgdoc-cn_start sig_en=050bc0b91fe32115c015c4d4021f3dae sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_self_referencing</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_self_referencing</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=050bc0b91fe32115c015c4d4021f3dae -->

<!-- pgdoc-cn_start sig_en=65860996428d7ca4b15c44acd14a7b1a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_identity</structfield> <type>yes_or_no</type>
      </para>
      <para>
       If the column is an identity column, then <literal>YES</literal>,
       else <literal>NO</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_identity</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该列是一个标识列，则为<literal>YES</literal>，否则为<literal>NO</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=65860996428d7ca4b15c44acd14a7b1a -->

<!-- pgdoc-cn_start sig_en=e708d922bcb6ea8d76336eb537654b47 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_generation</structfield> <type>character_data</type>
      </para>
      <para>
       If the column is an identity column, then <literal>ALWAYS</literal>
       or <literal>BY DEFAULT</literal>, reflecting the definition of the
       column.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_generation</structfield> <type>character_data</type>
      </para>
      <para>
       如果该列是一个标识列，则为<literal>ALWAYS</literal>或者<literal>BY DEFAULT</literal>，它反映该列的定义。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e708d922bcb6ea8d76336eb537654b47 -->

<!-- pgdoc-cn_start sig_en=b5eea87d9f22e75059e03458b2b49784 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_start</structfield> <type>character_data</type>
      </para>
      <para>
       If the column is an identity column, then the start value of the
       internal sequence, else null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_start</structfield> <type>character_data</type>
      </para>
      <para>
       如果该列是一个标识列，则是内部序列的起始值，否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b5eea87d9f22e75059e03458b2b49784 -->

<!-- pgdoc-cn_start sig_en=b3f9c10ba626a793964f7eef71d1a766 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_increment</structfield> <type>character_data</type>
      </para>
      <para>
       If the column is an identity column, then the increment of the internal
       sequence, else null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_increment</structfield> <type>character_data</type>
      </para>
      <para>
       如果该列是一个标识列，则是内部序列的增量，否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b3f9c10ba626a793964f7eef71d1a766 -->

<!-- pgdoc-cn_start sig_en=d00bbfb4d490f970cf547f754795d4a0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_maximum</structfield> <type>character_data</type>
      </para>
      <para>
       If the column is an identity column, then the maximum value of the
       internal sequence, else null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_maximum</structfield> <type>character_data</type>
      </para>
      <para>
       如果该列是一个标识列，则是内部序列的最大值，否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d00bbfb4d490f970cf547f754795d4a0 -->

<!-- pgdoc-cn_start sig_en=d818bc07b1e3e5a36be4da804722b820 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_minimum</structfield> <type>character_data</type>
      </para>
      <para>
       If the column is an identity column, then the minimum value of the
       internal sequence, else null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_minimum</structfield> <type>character_data</type>
      </para>
      <para>
       如果该列是一个标识列，则是内部序列的最小值，否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d818bc07b1e3e5a36be4da804722b820 -->

<!-- pgdoc-cn_start sig_en=472137483ca95a88f06a1909bf76faae sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_cycle</structfield> <type>yes_or_no</type>
      </para>
      <para>
       If the column is an identity column, then <literal>YES</literal> if the
       internal sequence cycles or <literal>NO</literal> if it does not;
       otherwise null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>identity_cycle</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该列是一个标识列，则<literal>YES</literal>和<literal>NO</literal>分别表示内部序列可循环和不可循环，否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=472137483ca95a88f06a1909bf76faae -->

<!-- pgdoc-cn_start sig_en=5e6847ceb8406c4eb937e7d1eb74cbfb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_generated</structfield> <type>character_data</type>
      </para>
      <para>
       If the column is a generated column, then <literal>ALWAYS</literal>,
       else <literal>NEVER</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_generated</structfield> <type>character_data</type>
      </para>
      <para>
       如果列是生成的列，则<literal>ALWAYS</literal>，否则 <literal>NEVER</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5e6847ceb8406c4eb937e7d1eb74cbfb -->

<!-- pgdoc-cn_start sig_en=47d6acea102718b338bed139b7888e09 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>generation_expression</structfield> <type>character_data</type>
      </para>
      <para>
       If the column is a generated column, then the generation expression,
       else null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>generation_expression</structfield> <type>character_data</type>
      </para>
      <para>
       如果列是生成的列，则生成表达式，否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47d6acea102718b338bed139b7888e09 -->

<!-- pgdoc-cn_start sig_en=37b8136980165636d4467ff9f9502e07 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_updatable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the column is updatable,
       <literal>NO</literal> if not (Columns in base tables are always
       updatable, columns in views not necessarily)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_updatable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该列是可更新的，则为<literal>YES</literal>，否则为<literal>NO</literal>（基表中的列总是可更新的，视图中的列则不一定）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=37b8136980165636d4467ff9f9502e07 -->
    </tbody>
   </tgroup>
  </table>

<!-- pgdoc-cn_start sig_en=125c2b9b24aa869192d00e02897b9064 sig_cn_org=None source=14.1 
  <para>
   Since data types can be defined in a variety of ways in SQL, and
   <productname>PostgreSQL</productname> contains additional ways to
   define data types, their representation in the information schema
   can be somewhat difficult.  The column <literal>data_type</literal>
   is supposed to identify the underlying built-in type of the column.
   In <productname>PostgreSQL</productname>, this means that the type
   is defined in the system catalog schema
   <literal>pg_catalog</literal>.  This column might be useful if the
   application can handle the well-known built-in types specially (for
   example, format the numeric types differently or use the data in
   the precision columns).  The columns <literal>udt_name</literal>,
   <literal>udt_schema</literal>, and <literal>udt_catalog</literal>
   always identify the underlying data type of the column, even if the
   column is based on a domain.  (Since
   <productname>PostgreSQL</productname> treats built-in types like
   user-defined types, built-in types appear here as well.  This is an
   extension of the SQL standard.)  These columns should be used if an
   application wants to process data differently according to the
   type, because in that case it wouldn't matter if the column is
   really based on a domain.  If the column is based on a domain, the
   identity of the domain is stored in the columns
   <literal>domain_name</literal>, <literal>domain_schema</literal>,
   and <literal>domain_catalog</literal>.  If you want to pair up
   columns with their associated data types and treat domains as
   separate types, you could write <literal>coalesce(domain_name,
   udt_name)</literal>, etc.
  </para>
________________________________________________________-->
  <para>
   因为在 SQL 中有多种方式定义数据类型，而<productname>PostgreSQL</productname>还包含额外的方式来定义数据类型，它们在信息模式中的表示可能有点困难。列<literal>data_type</literal>应该标识列的底层内建类型。在<productname>PostgreSQL</productname>中，这表示定义在系统目录模式<literal>pg_catalog</literal>中的类型。如果应用能够特别地（例如以不同方式格式化数字类型或使用精度列中的数据）处理众所周知的内建类型，这列可能会有用。列<literal>udt_name</literal>、<literal>udt_schema</literal>和<literal>udt_catalog</literal>总是标识列的底层数据类型，即使该列是基于一个域的（因为<productname>PostgreSQL</productname>对待内建类型和用户定义类型的方式是一样的，内建类型也出现在这里。这是 SQL 标准的一种扩展）。如果一个应用想要根据该类型以不同的方式处理数据，就应该使用这些列，因为在那种情况下即使该列真地基于一个域也没有关系。如果该列是基于一个域，该域的标识被存储在列<literal>domain_name</literal>、<literal>domain_schema</literal>和<literal>domain_catalog</literal>。如果你想要把列和它们相关的数据类型配对并且把域视作单独的类型，你可以写<literal>coalesce(domain_name,
   udt_name)</literal>等等。
  </para>
<!-- pgdoc-cn_end sig_en=125c2b9b24aa869192d00e02897b9064 -->
 </sect1>

 <sect1 id="infoschema-constraint-column-usage">
  <title><literal>constraint_column_usage</literal></title>

<!-- pgdoc-cn_start sig_en=a9ed5f0963ac3237f5d345a29e297c7c sig_cn_org=None source=14.1 
  <para>
   The view <literal>constraint_column_usage</literal> identifies all
   columns in the current database that are used by some constraint.
   Only those columns are shown that are contained in a table owned by
   a currently enabled role.  For a check constraint, this view
   identifies the columns that are used in the check expression.  For
   a foreign key constraint, this view identifies the columns that the
   foreign key references.  For a unique or primary key constraint,
   this view identifies the constrained columns.
  </para>
________________________________________________________-->
  <para>
   视图<literal>constraint_column_usage</literal>标识在当前数据库中被某个约束使用的所有列。只有包含在被一个当前启用的角色拥有的表中的那些列才被显示。对于一个检查约束，这个视图标识被用在该检查约束中的列。对于一个外键约束，这个视图标识外键引用的列。对于一个唯一或主键约束，这个视图标识被约束的列。
  </para>
<!-- pgdoc-cn_end sig_en=a9ed5f0963ac3237f5d345a29e297c7c -->

  <table>
<!-- pgdoc-cn_start sig_en=116d975713b33ee81d03b0672f74a64f sig_cn_org=None source=14.1 
   <title><structname>constraint_column_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>constraint_column_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=116d975713b33ee81d03b0672f74a64f -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=6a801174f8f9b2c7cf55c8e3549737a9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that contains the
       column that is used by some constraint (always the current
       database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被某个约束使用的列的表所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6a801174f8f9b2c7cf55c8e3549737a9 -->

<!-- pgdoc-cn_start sig_en=db89bfac3c9e6758980bdddb06060494 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that contains the
       column that is used by some constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被某个约束使用的列的表所在的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=db89bfac3c9e6758980bdddb06060494 -->

<!-- pgdoc-cn_start sig_en=ba670bf3bc6512831ca203348c05bf80 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that contains the column that is used by some
       constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被某个约束使用的列的表名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ba670bf3bc6512831ca203348c05bf80 -->

<!-- pgdoc-cn_start sig_en=52a8cc714a46338399050de950f71b10 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column that is used by some constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被某个约束使用的列名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=52a8cc714a46338399050de950f71b10 -->

<!-- pgdoc-cn_start sig_en=b67d42fba8a9bc1aab73b4f6fcb1b4b7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the constraint (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该约束的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b67d42fba8a9bc1aab73b4f6fcb1b4b7 -->

<!-- pgdoc-cn_start sig_en=053e3c41481ba2ff26264788fdb8bfcd sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该约束的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=053e3c41481ba2ff26264788fdb8bfcd -->

<!-- pgdoc-cn_start sig_en=f19ff222ebf15251411dc8bf2ad9a521 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       约束的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f19ff222ebf15251411dc8bf2ad9a521 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-constraint-table-usage">
  <title><literal>constraint_table_usage</literal></title>

<!-- pgdoc-cn_start sig_en=b1f7451af4607681b0bd58538a912f29 sig_cn_org=None source=14.1 
  <para>
   The view <literal>constraint_table_usage</literal> identifies all
   tables in the current database that are used by some constraint and
   are owned by a currently enabled role.  (This is different from the
   view <literal>table_constraints</literal>, which identifies all
   table constraints along with the table they are defined on.)  For a
   foreign key constraint, this view identifies the table that the
   foreign key references.  For a unique or primary key constraint,
   this view simply identifies the table the constraint belongs to.
   Check constraints and not-null constraints are not included in this
   view.
  </para>
________________________________________________________-->
  <para>
   视图<literal>constraint_table_usage</literal>标识在当前数据库中被某个约束使用的所有表（这与视图<literal>table_constraints</literal>不同，它标识哪些表约束定义在哪些表上）。对于一个外键约束，这个视图标识该外键引用的表。对于一个唯一或主键约束，这个视图仅标识该约束属于的表。检查约束和非空约束不被包括在这个视图中。
  </para>
<!-- pgdoc-cn_end sig_en=b1f7451af4607681b0bd58538a912f29 -->

  <table>
<!-- pgdoc-cn_start sig_en=3fd433434ecc3933119775022325ef21 sig_cn_org=None source=14.1 
   <title><structname>constraint_table_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>constraint_table_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=3fd433434ecc3933119775022325ef21 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=90025a3b8c5a0e6482e2f1b695bf6310 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that is used by
       some constraint (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被某个约束使用的表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=90025a3b8c5a0e6482e2f1b695bf6310 -->

<!-- pgdoc-cn_start sig_en=7f7d5dc1a2504949788c113cbff0f67d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that is used by some
       constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被某个约束使用的表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7f7d5dc1a2504949788c113cbff0f67d -->

<!-- pgdoc-cn_start sig_en=09d080da3d2ab672a4c330d0bf16e744 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that is used by some constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被某个约束使用的表名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=09d080da3d2ab672a4c330d0bf16e744 -->

<!-- pgdoc-cn_start sig_en=b67d42fba8a9bc1aab73b4f6fcb1b4b7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the constraint (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该约束的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b67d42fba8a9bc1aab73b4f6fcb1b4b7 -->

<!-- pgdoc-cn_start sig_en=053e3c41481ba2ff26264788fdb8bfcd sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该约束的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=053e3c41481ba2ff26264788fdb8bfcd -->

<!-- pgdoc-cn_start sig_en=f19ff222ebf15251411dc8bf2ad9a521 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       约束的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f19ff222ebf15251411dc8bf2ad9a521 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-data-type-privileges">
  <title><literal>data_type_privileges</literal></title>

<!-- pgdoc-cn_start sig_en=62a6214fc50a8aac4f9d06e0727323f5 sig_cn_org=None source=14.1 
  <para>
   The view <literal>data_type_privileges</literal> identifies all
   data type descriptors that the current user has access to, by way
   of being the owner of the described object or having some privilege
   for it.  A data type descriptor is generated whenever a data type
   is used in the definition of a table column, a domain, or a
   function (as parameter or return type) and stores some information
   about how the data type is used in that instance (for example, the
   declared maximum length, if applicable).  Each data type
   descriptor is assigned an arbitrary identifier that is unique
   among the data type descriptor identifiers assigned for one object
   (table, domain, function).  This view is probably not useful for
   applications, but it is used to define some other views in the
   information schema.
  </para>
________________________________________________________-->
  <para>
   视图<literal>data_type_privileges</literal>标识当前用户能够访问（作为被描述对象的拥有者或者具有其上的某种特权）的所有数据类型描述符。只要一个数据类型被用在一个表列、一个域或一个函数（作为参数或返回类型）就会生成一个数据类型描述符并且在那个实例中存储一些有关该数据类型如何被使用的信息（例如，声明的最大长度，如果适用）。每一个数据类型描述符被赋予一个任意的标识符，它在被赋予给一个对象（表、域、函数）的数据类型描述符中唯一。这个视图对于应用可能没什么用，但是它被用于定义信息模式中的一些其他视图。
  </para>
<!-- pgdoc-cn_end sig_en=62a6214fc50a8aac4f9d06e0727323f5 -->

  <table>
<!-- pgdoc-cn_start sig_en=95d0c377e43d87ccc95b6bbd8dcace7e sig_cn_org=None source=14.1 
   <title><structname>data_type_privileges</structname> Columns</title>
________________________________________________________-->
   <title><structname>data_type_privileges</structname> 列</title>
<!-- pgdoc-cn_end sig_en=95d0c377e43d87ccc95b6bbd8dcace7e -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=276a75c42f366f150081d0de062a84e5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the described object (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该被描述对象的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=276a75c42f366f150081d0de062a84e5 -->

<!-- pgdoc-cn_start sig_en=b0cd61462a7faded8c67d27dc2a20e2a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the described object
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该被描述对象的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b0cd61462a7faded8c67d27dc2a20e2a -->

<!-- pgdoc-cn_start sig_en=48a6c324bcfc9bc30578353c1c52b538 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the described object
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该描述对象的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=48a6c324bcfc9bc30578353c1c52b538 -->

<!-- pgdoc-cn_start sig_en=2cf0ad53cf42084e9307f6d951d3c2f7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_type</structfield> <type>character_data</type>
      </para>
      <para>
       The type of the described object: one of
       <literal>TABLE</literal> (the data type descriptor pertains to
       a column of that table), <literal>DOMAIN</literal> (the data
       type descriptors pertains to that domain),
       <literal>ROUTINE</literal> (the data type descriptor pertains
       to a parameter or the return data type of that function).
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_type</structfield> <type>character_data</type>
      </para>
      <para>
       被描述对象的类型：<literal>TABLE</literal>（从属于表的一列的数据类型描述符）、<literal>DOMAIN</literal> （从属于域的数据类型描述符）、<literal>ROUTINE</literal>（从属于函数的一个参数或返回数据类型的数据类型描述符）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2cf0ad53cf42084e9307f6d951d3c2f7 -->

<!-- pgdoc-cn_start sig_en=f87201ef9be1c9a006373c8ef2e745ad sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The identifier of the data type descriptor, which is unique
       among the data type descriptors for that same object.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       数据类型描述符的标识符，它在同一对象的数据类型描述符之间唯一。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f87201ef9be1c9a006373c8ef2e745ad -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-domain-constraints">
  <title><literal>domain_constraints</literal></title>

<!-- pgdoc-cn_start sig_en=0acaed045c3a8284b6c65018038d650c sig_cn_org=None source=14.1 
  <para>
   The view <literal>domain_constraints</literal> contains all constraints
   belonging to domains defined in the current database.  Only those domains
   are shown that the current user has access to (by way of being the owner or
   having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>domain_constraints</literal>包含所有属于当前数据库中定义的域的约束。只有当前用户能访问的那些域才被显示（作为拥有者或具有某些特权）。
  </para>
<!-- pgdoc-cn_end sig_en=0acaed045c3a8284b6c65018038d650c -->

  <table>
<!-- pgdoc-cn_start sig_en=e91b896b55a8c5cd8bbbc7bfed83c49b sig_cn_org=None source=14.1 
   <title><structname>domain_constraints</structname> Columns</title>
________________________________________________________-->
   <title><structname>domain_constraints</structname> 列</title>
<!-- pgdoc-cn_end sig_en=e91b896b55a8c5cd8bbbc7bfed83c49b -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=b67d42fba8a9bc1aab73b4f6fcb1b4b7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the constraint (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该约束的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b67d42fba8a9bc1aab73b4f6fcb1b4b7 -->

<!-- pgdoc-cn_start sig_en=053e3c41481ba2ff26264788fdb8bfcd sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该约束的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=053e3c41481ba2ff26264788fdb8bfcd -->

<!-- pgdoc-cn_start sig_en=f19ff222ebf15251411dc8bf2ad9a521 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       约束的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f19ff222ebf15251411dc8bf2ad9a521 -->

<!-- pgdoc-cn_start sig_en=58fba4f12b666d1ad5d496c65844da85 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the domain (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该域的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=58fba4f12b666d1ad5d496c65844da85 -->

<!-- pgdoc-cn_start sig_en=2ebfe125899dd5ef27f82d72f5053e1e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the domain
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该域的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2ebfe125899dd5ef27f82d72f5053e1e -->

<!-- pgdoc-cn_start sig_en=7fd0984ee7f86f700b3ad1a25dce827f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the domain
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       域名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7fd0984ee7f86f700b3ad1a25dce827f -->

<!-- pgdoc-cn_start sig_en=c06b1dcf237079fd5fbcf137e20d8f62 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_deferrable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the constraint is deferrable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_deferrable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该约束是可延迟的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c06b1dcf237079fd5fbcf137e20d8f62 -->

<!-- pgdoc-cn_start sig_en=9b3b08b03772d3efd9ada27b338ddbc3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>initially_deferred</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the constraint is deferrable and initially deferred, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>initially_deferred</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该约束是可延迟的且初始就被延迟，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9b3b08b03772d3efd9ada27b338ddbc3 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-domain-udt-usage">
  <title><literal>domain_udt_usage</literal></title>

<!-- pgdoc-cn_start sig_en=4aff727e378256d818af1cfc8201ff1e sig_cn_org=None source=14.1 
  <para>
   The view <literal>domain_udt_usage</literal> identifies all domains
   that are based on data types owned by a currently enabled role.
   Note that in <productname>PostgreSQL</productname>, built-in data
   types behave like user-defined types, so they are included here as
   well.
  </para>
________________________________________________________-->
  <para>
   视图<literal>domain_udt_usage</literal>标识所有基于被一个当前启用的角色拥有的数据类型的域。注意在<productname>PostgreSQL</productname>中，内建数据类型的行为相似于用户定义的类型，因此它们也被包括在这里。
  </para>
<!-- pgdoc-cn_end sig_en=4aff727e378256d818af1cfc8201ff1e -->

  <table>
<!-- pgdoc-cn_start sig_en=504da730af7cce372d103d8eae42d51f sig_cn_org=None source=14.1 
   <title><structname>domain_udt_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>domain_udt_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=504da730af7cce372d103d8eae42d51f -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=316a0c46fe65497857cbff91901d620b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the domain data type is defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该域数据类型被定义的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=316a0c46fe65497857cbff91901d620b -->

<!-- pgdoc-cn_start sig_en=86ce8a135505064fc37a50ce37b42789 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that the domain data type is defined in
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该域数据类型被定义的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=86ce8a135505064fc37a50ce37b42789 -->

<!-- pgdoc-cn_start sig_en=054f589d439783d50ba59f301656ada4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the domain data type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该域数据类型的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=054f589d439783d50ba59f301656ada4 -->

<!-- pgdoc-cn_start sig_en=58fba4f12b666d1ad5d496c65844da85 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the domain (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该域的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=58fba4f12b666d1ad5d496c65844da85 -->

<!-- pgdoc-cn_start sig_en=2ebfe125899dd5ef27f82d72f5053e1e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the domain
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该域的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2ebfe125899dd5ef27f82d72f5053e1e -->

<!-- pgdoc-cn_start sig_en=7fd0984ee7f86f700b3ad1a25dce827f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the domain
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       域名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7fd0984ee7f86f700b3ad1a25dce827f -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-domains">
  <title><literal>domains</literal></title>

<!-- pgdoc-cn_start sig_en=bd9c5fbe8a41841cc711160b89f3f1c9 sig_cn_org=50ba84aae41a815b8a00fd37c1183607 source=15.7 
  <para>
   The view <literal>domains</literal> contains all
   <glossterm linkend="glossary-domain">domains</glossterm> defined in the
   current database.  Only those domains are shown that the current user has
   access to (by way of being the owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>domains</literal>包含当前数据库中定义的所有<glossterm linkend="glossary-domain">域</glossterm>。
   仅显示当前用户有权限访问的域（通过拥有者或某些特权）。
</para>
<!-- pgdoc-cn_end sig_en=bd9c5fbe8a41841cc711160b89f3f1c9 -->

  <table>
<!-- pgdoc-cn_start sig_en=792894af021442161bb1cd5a3fcad00f sig_cn_org=None source=14.1 
   <title><structname>domains</structname> Columns</title>
________________________________________________________-->
   <title><structname>domains</structname> 列</title>
<!-- pgdoc-cn_end sig_en=792894af021442161bb1cd5a3fcad00f -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=58fba4f12b666d1ad5d496c65844da85 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the domain (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该域的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=58fba4f12b666d1ad5d496c65844da85 -->

<!-- pgdoc-cn_start sig_en=2ebfe125899dd5ef27f82d72f5053e1e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the domain
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该域的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2ebfe125899dd5ef27f82d72f5053e1e -->

<!-- pgdoc-cn_start sig_en=7fd0984ee7f86f700b3ad1a25dce827f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the domain
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       域名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7fd0984ee7f86f700b3ad1a25dce827f -->

<!-- pgdoc-cn_start sig_en=44de3dfa7d64d1d1e0f8434c0a229e21 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       Data type of the domain, if it is a built-in type, or
       <literal>ARRAY</literal> if it is some array (in that case, see
       the view <literal>element_types</literal>), else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>udt_name</literal> and associated
       columns).
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       该域的数据类型如果是一种内建类型，这里是该域的数据类型；如果是某种数组（此种情况见视图<literal>element_types</literal>），则为<literal>ARRAY</literal>；
       否则为<literal>USER-DEFINED</literal>（此种情况中，该类型被标识在<literal>udt_name</literal>和相关列中）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=44de3dfa7d64d1d1e0f8434c0a229e21 -->

<!-- pgdoc-cn_start sig_en=f09f36f56c15110c4c4630e01d66ae3b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If the domain has a character or bit string type, the declared
       maximum length; null for all other data types or if no maximum
       length was declared.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果该域有一个字符或位串类型，这里是声明的最大长度；如果没有声明最大长度，则对于所有其他数据类型为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f09f36f56c15110c4c4630e01d66ae3b -->

<!-- pgdoc-cn_start sig_en=66c3a4bc5880851acaf6b7c7b253edec sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If the domain has a character type, the maximum possible length
       in octets (bytes) of a datum; null for all other data types.
       The maximum octet length depends on the declared character
       maximum length (see above) and the server encoding.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果该域有一个字符类型，这里是一个数据的最大可能长度（以字节计）；对其他所有数据类型为空。
       最大字节长度取决于声明的字符最大长度（见上文）和服务器编码。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=66c3a4bc5880851acaf6b7c7b253edec -->

<!-- pgdoc-cn_start sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 -->

<!-- pgdoc-cn_start sig_en=359de2c127ff4bf584099b3dbafa94c0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=359de2c127ff4bf584099b3dbafa94c0 -->

<!-- pgdoc-cn_start sig_en=5daa3e735df10fe5f7c15e2746e03745 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5daa3e735df10fe5f7c15e2746e03745 -->

<!-- pgdoc-cn_start sig_en=99beaff61cba7f5a42dd930ce306ddd1 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the collation of the domain
       (always the current database), null if default or the data type
       of the domain is not collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含此域排序规则的数据库名（总是当前数据库），如果默认或者该域的数据类型不可排序则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=99beaff61cba7f5a42dd930ce306ddd1 -->

<!-- pgdoc-cn_start sig_en=471ee09c36f746855131d6bcb46f007b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the collation of the domain, null
       if default or the data type of the domain is not collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含此域排序规则的模式名，如果默认或者该域的数据类型不可排序则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=471ee09c36f746855131d6bcb46f007b -->

<!-- pgdoc-cn_start sig_en=a3cd74141ff9799d6034e5bf6aace4ca sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the collation of the domain, null if default or the
       data type of the domain is not collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该域排序规则的名称，如果默认或者该域的数据类型不可排序则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a3cd74141ff9799d6034e5bf6aace4ca -->

<!-- pgdoc-cn_start sig_en=5f9826d402a7840b4c628ecc14501954 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If the domain has a numeric type, this column contains the
       (declared or implicit) precision of the type for this domain.
       The precision indicates the number of significant digits.  It
       can be expressed in decimal (base 10) or binary (base 2) terms,
       as specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果该域有一种数字类型，这列包含这个域类型的（声明的或隐式的）精度。精度指示了有效位数。
       它可以按照列<literal>numeric_precision_radix</literal>中指定的被表示为十进制（基于 10）或二进制（基于 2）。
       对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5f9826d402a7840b4c628ecc14501954 -->

<!-- pgdoc-cn_start sig_en=87910873d17b9c7fb0ef27a36feba219 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If the domain has a numeric type, this column indicates in
       which base the values in the columns
       <literal>numeric_precision</literal> and
       <literal>numeric_scale</literal> are expressed.  The value is
       either 2 or 10.  For all other data types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果该域有一种数字类型，这一列指示<literal>numeric_precision</literal>和<literal>numeric_scale</literal>列中的值是基于什么来表示。
       该值为 2 或 10。对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=87910873d17b9c7fb0ef27a36feba219 -->

<!-- pgdoc-cn_start sig_en=18a4607e36d5dad1d4e00806a9b16fc4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If the domain has an exact numeric type, this column contains
       the (declared or implicit) scale of the type for this domain.
       The scale indicates the number of significant digits to the
       right of the decimal point.  It can be expressed in decimal
       (base 10) or binary (base 2) terms, as specified in the column
       <literal>numeric_precision_radix</literal>.  For all other data
       types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果该域有一种准确数字类型，这列包含这个域类型的（声明的或隐式的）比例。比例指示了有效位数。
       它可以按照列<literal>numeric_precision_radix</literal>中指定的被表示为十进制（基于 10）或二进制（基于 2）。
       对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=18a4607e36d5dad1d4e00806a9b16fc4 -->

<!-- pgdoc-cn_start sig_en=eb3274c8bf5e12d47738b546df52415f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies a date, time,
       timestamp, or interval type, this column contains the (declared
       or implicit) fractional seconds precision of the type for this
       domain, that is, the number of decimal digits maintained
       following the decimal point in the seconds value.  For all
       other data types, this column is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种日期、时间、时间戳或时间间隔类型，
       这一列包含这个域类型的（声明的或隐式的）分数秒的精度，也就是秒值的小数点后的十进制位数。对于所有其他数据类型，这一列为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=eb3274c8bf5e12d47738b546df52415f -->

<!-- pgdoc-cn_start sig_en=47dbfc02e1c5e104c5a84d13df753f86 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       If <literal>data_type</literal> identifies an interval type,
       this column contains the specification which fields the
       intervals include for this domain, e.g., <literal>YEAR TO
       MONTH</literal>, <literal>DAY TO SECOND</literal>, etc.  If no
       field restrictions were specified (that is, the interval
       accepts all fields), and for all other data types, this field
       is null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       如果<literal>data_type</literal>标识一种时间间隔类型，这一列包含时间间隔为这个域包括哪些域的声明，例如<literal>YEAR TO MONTH</literal>、<literal>DAY TO SECOND</literal>等等。
       如果没有指定域限制（也就是该时间间隔接受所有域），并且对于所有其他数据类型，这个域为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47dbfc02e1c5e104c5a84d13df753f86 -->

<!-- pgdoc-cn_start sig_en=543b8fc22099d466c3037f393a1e492e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available
       in <productname>PostgreSQL</productname>
       (see <literal>datetime_precision</literal> for the fractional
       seconds precision of interval type domains)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性（关于时间间隔类型域的分数秒精度可见<literal>datetime_precision</literal>）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=543b8fc22099d466c3037f393a1e492e -->

<!-- pgdoc-cn_start sig_en=2d85c10b2e8aa725e387e2b29307c33f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_default</structfield> <type>character_data</type>
      </para>
      <para>
       Default expression of the domain
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_default</structfield> <type>character_data</type>
      </para>
      <para>
       该域的默认表达式
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2d85c10b2e8aa725e387e2b29307c33f -->

<!-- pgdoc-cn_start sig_en=316a0c46fe65497857cbff91901d620b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the domain data type is defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该域数据类型被定义的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=316a0c46fe65497857cbff91901d620b -->

<!-- pgdoc-cn_start sig_en=86ce8a135505064fc37a50ce37b42789 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that the domain data type is defined in
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该域数据类型被定义的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=86ce8a135505064fc37a50ce37b42789 -->

<!-- pgdoc-cn_start sig_en=054f589d439783d50ba59f301656ada4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the domain data type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该域数据类型的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=054f589d439783d50ba59f301656ada4 -->

<!-- pgdoc-cn_start sig_en=daac500380aced6577917d77130a7b3d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=daac500380aced6577917d77130a7b3d -->

<!-- pgdoc-cn_start sig_en=d78a2ca05035726a001dded35cbcbd0f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d78a2ca05035726a001dded35cbcbd0f -->

<!-- pgdoc-cn_start sig_en=c39393e41b9b3c96d06be5c5077cb108 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c39393e41b9b3c96d06be5c5077cb108 -->

<!-- pgdoc-cn_start sig_en=bb80dcd755af451face68c0645f42c4a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是空，因为数组在<productname>PostgreSQL</productname>中总是有无限制的最大势
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bb80dcd755af451face68c0645f42c4a -->

<!-- pgdoc-cn_start sig_en=7c7afcb28a2d785930d8d5a23389deb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       An identifier of the data type descriptor of the domain, unique
       among the data type descriptors pertaining to the domain (which
       is trivial, because a domain only contains one data type
       descriptor).  This is mainly useful for joining with other
       instances of such identifiers.  (The specific format of the
       identifier is not defined and not guaranteed to remain the same
       in future versions.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该域的数据类型描述符的一个标识符，在从属于该域的数据类型标识符之中唯一（这不重要，因为一个域只包含一个数据类型描述符）。
       这主要用于与这类标识符的其他实例进行连接（该标识符的指定格式没有被定义并且不保证在未来的版本中保持相同）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7c7afcb28a2d785930d8d5a23389deb4 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-element-types">
  <title><literal>element_types</literal></title>

<!-- pgdoc-cn_start sig_en=635cd7b57778f5fcebf6f8525ab8c0a1 sig_cn_org=None source=14.1 
  <para>
   The view <literal>element_types</literal> contains the data type
   descriptors of the elements of arrays.  When a table column, composite-type attribute,
   domain, function parameter, or function return value is defined to
   be of an array type, the respective information schema view only
   contains <literal>ARRAY</literal> in the column
   <literal>data_type</literal>.  To obtain information on the element
   type of the array, you can join the respective view with this view.
   For example, to show the columns of a table with data types and
   array element types, if applicable, you could do:
<programlisting>
SELECT c.column_name, c.data_type, e.data_type AS element_type
FROM information_schema.columns c LEFT JOIN information_schema.element_types e
     ON ((c.table_catalog, c.table_schema, c.table_name, 'TABLE', c.dtd_identifier)
       = (e.object_catalog, e.object_schema, e.object_name, e.object_type, e.collection_type_identifier))
WHERE c.table_schema = '...' AND c.table_name = '...'
ORDER BY c.ordinal_position;
</programlisting>
   This view only includes objects that the current user has access
   to, by way of being the owner or having some privilege.
  </para>
________________________________________________________-->
  <para>
   视图<literal>element_types</literal>包含数组元素的数据类型描述符。当一个表列、组合类型属性、域、函数参数或函数返回值被定义为一种数组类型，相应的信息模式视图只在列<literal>data_type</literal>中包含<literal>ARRAY</literal>。要获得该数组元素类型的信息，你可以连接该相应的视图和这个视图。例如，要显示一个表的列及其数据类型和数组元素类型，你可以：
<programlisting>
SELECT c.column_name, c.data_type, e.data_type AS element_type
FROM information_schema.columns c LEFT JOIN information_schema.element_types e
     ON ((c.table_catalog, c.table_schema, c.table_name, 'TABLE', c.dtd_identifier)
       = (e.object_catalog, e.object_schema, e.object_name, e.object_type, e.collection_type_identifier))
WHERE c.table_schema = '...' AND c.table_name = '...'
ORDER BY c.ordinal_position;
</programlisting>
   这个视图只包括当前用户能够访问（作为拥有者或具有某些特权）的对象。
  </para>
<!-- pgdoc-cn_end sig_en=635cd7b57778f5fcebf6f8525ab8c0a1 -->

  <table>
<!-- pgdoc-cn_start sig_en=16b0a3ba1ed19318e11524447c784491 sig_cn_org=None source=14.1 
   <title><structname>element_types</structname> Columns</title>
________________________________________________________-->
   <title><structname>element_types</structname> 列</title>
<!-- pgdoc-cn_end sig_en=16b0a3ba1ed19318e11524447c784491 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=72fa813c9f1eccce8fedf6aa7d2d36d8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the object that uses the
       array being described (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含使用被描述的数组的对象的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=72fa813c9f1eccce8fedf6aa7d2d36d8 -->

<!-- pgdoc-cn_start sig_en=a28d9ae737ad131edd31211668874426 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the object that uses the array
       being described
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含使用被描述的数组的对象的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a28d9ae737ad131edd31211668874426 -->

<!-- pgdoc-cn_start sig_en=8599c28860834941e3380932829a6bb0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the object that uses the array being described
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       使用被描述的模式的对象名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8599c28860834941e3380932829a6bb0 -->

<!-- pgdoc-cn_start sig_en=81abb102446f1952de4969137afbafeb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_type</structfield> <type>character_data</type>
      </para>
      <para>
       The type of the object that uses the array being described: one
       of <literal>TABLE</literal> (the array is used by a column of
       that table), <literal>USER-DEFINED TYPE</literal> (the array is
       used by an attribute of that composite type),
       <literal>DOMAIN</literal> (the array is used by that domain),
       <literal>ROUTINE</literal> (the array is used by a parameter or
       the return data type of that function).
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_type</structfield> <type>character_data</type>
      </para>
      <para>
       使用被描述的数组的对象的类型：<literal>TABLE</literal>（被一个表列使用的数组）、<literal>USER-DEFINED TYPE</literal>（被组合类型的一个属性使用的数组）、<literal>DOMAIN</literal> （被域使用的数组）、<literal>ROUTINE</literal>（被函数的一个参数或返回数据类型使用的数组）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=81abb102446f1952de4969137afbafeb -->

<!-- pgdoc-cn_start sig_en=dbb1ba343d16b520f04471652e70c90a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collection_type_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The identifier of the data type descriptor of the array being
       described.  Use this to join with the
       <literal>dtd_identifier</literal> columns of other information
       schema views.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collection_type_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被描述的数组的数据类型描述符的标识符。使用这个去与其他信息模式视图的<literal>dtd_identifier</literal>列连接。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=dbb1ba343d16b520f04471652e70c90a -->

<!-- pgdoc-cn_start sig_en=254118551d91c594cffff9000d26420c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       Data type of the array elements, if it is a built-in type, else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>udt_name</literal> and associated
       columns).
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       如果数组元素的数据类型是内建类型，这里是数组元素的数据类型，否则为<literal>USER-DEFINED</literal>（在那种情况下，该类型被标识在<literal>udt_name</literal>和相关列中）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=254118551d91c594cffff9000d26420c -->

<!-- pgdoc-cn_start sig_en=67f2cf9758d157dcf3a680425c7a578d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to array element data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的数组元素数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=67f2cf9758d157dcf3a680425c7a578d -->

<!-- pgdoc-cn_start sig_en=20d82a1dacd2d346798aac12cac5929b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to array element data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的数组元素数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=20d82a1dacd2d346798aac12cac5929b -->

<!-- pgdoc-cn_start sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 -->

<!-- pgdoc-cn_start sig_en=359de2c127ff4bf584099b3dbafa94c0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=359de2c127ff4bf584099b3dbafa94c0 -->

<!-- pgdoc-cn_start sig_en=5daa3e735df10fe5f7c15e2746e03745 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5daa3e735df10fe5f7c15e2746e03745 -->

<!-- pgdoc-cn_start sig_en=2f5974c8f40554ea7d1d89fa6e88ab2d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the collation of the element
       type (always the current database), null if default or the data
       type of the element is not collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含元素类型排序规则的数据库名称（总是当前数据库）, 如果默认或该元素的数据类型是不可排序的则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2f5974c8f40554ea7d1d89fa6e88ab2d -->

<!-- pgdoc-cn_start sig_en=19f2e479f7c8bcfbe5de057a094d49d9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the collation of the element
       type, null if default or the data type of the element is not
       collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含元素类型排序规则的模式名称, 如果默认或该元素的数据类型是不可排序的则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19f2e479f7c8bcfbe5de057a094d49d9 -->

<!-- pgdoc-cn_start sig_en=ca04523d694f510c7ff56fdd6e1779bc sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the collation of the element type, null if default or
       the data type of the element is not collatable
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       元素类型的排序规则名, 如果默认或该元素的数据类型是不可排序的则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ca04523d694f510c7ff56fdd6e1779bc -->

<!-- pgdoc-cn_start sig_en=85d860f02d688dbf21db5852f3d187a6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to array element data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的数组元素数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=85d860f02d688dbf21db5852f3d187a6 -->

<!-- pgdoc-cn_start sig_en=2974a6b886c39cf523acfdba4e5c2d6d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to array element data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的数组元素数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2974a6b886c39cf523acfdba4e5c2d6d -->

<!-- pgdoc-cn_start sig_en=518568cb543732d81073adb3cf746746 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to array element data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的数组元素数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=518568cb543732d81073adb3cf746746 -->

<!-- pgdoc-cn_start sig_en=13c5712ab7e959490ce723e72a09a1b7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to array element data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的数组元素数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=13c5712ab7e959490ce723e72a09a1b7 -->

<!-- pgdoc-cn_start sig_en=2bbc86aac691fc9fe10182abd018f834 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       Always null, since this information is not applied to array element data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的数组元素数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2bbc86aac691fc9fe10182abd018f834 -->

<!-- pgdoc-cn_start sig_en=6a467709580787503cb0cff749fd5980 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to array element data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的数组元素数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6a467709580787503cb0cff749fd5980 -->

<!-- pgdoc-cn_start sig_en=8bb82557dd8a4bf1237dcd66ab8a5791 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_default</structfield> <type>character_data</type>
      </para>
      <para>
       Not yet implemented
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>domain_default</structfield> <type>character_data</type>
      </para>
      <para>
       还未被实现
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8bb82557dd8a4bf1237dcd66ab8a5791 -->

<!-- pgdoc-cn_start sig_en=ad82c3224d9a0a00e3c89580dce7473e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the data type of the elements is
       defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       元素的数据类型所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ad82c3224d9a0a00e3c89580dce7473e -->

<!-- pgdoc-cn_start sig_en=cd9750aac419ced1ca89a5a99b8d5107 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that the data type of the elements is
       defined in
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       定义元素的数据类型的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=cd9750aac419ced1ca89a5a99b8d5107 -->

<!-- pgdoc-cn_start sig_en=5cd257cc124d43048ebc4d51a7eb85f6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the data type of the elements
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       元素的数据类型名
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5cd257cc124d43048ebc4d51a7eb85f6 -->

<!-- pgdoc-cn_start sig_en=daac500380aced6577917d77130a7b3d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=daac500380aced6577917d77130a7b3d -->

<!-- pgdoc-cn_start sig_en=d78a2ca05035726a001dded35cbcbd0f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d78a2ca05035726a001dded35cbcbd0f -->

<!-- pgdoc-cn_start sig_en=c39393e41b9b3c96d06be5c5077cb108 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c39393e41b9b3c96d06be5c5077cb108 -->

<!-- pgdoc-cn_start sig_en=bb80dcd755af451face68c0645f42c4a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是空，因为数组在<productname>PostgreSQL</productname>中总是有无限制的最大势
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bb80dcd755af451face68c0645f42c4a -->

<!-- pgdoc-cn_start sig_en=a3a0693605f353ff298c9bd62c056b23 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       An identifier of the data type descriptor of the element.  This
       is currently not useful.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该元素的数据类型描述符的标识符。当前没有用。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a3a0693605f353ff298c9bd62c056b23 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-enabled-roles">
  <title><literal>enabled_roles</literal></title>

<!-- pgdoc-cn_start sig_en=d598cb81fd06de6570b42369718bf182 sig_cn_org=None source=14.1 
  <para>
   The view <literal>enabled_roles</literal> identifies the currently
   <quote>enabled roles</quote>.  The enabled roles are recursively
   defined as the current user together with all roles that have been
   granted to the enabled roles with automatic inheritance.  In other
   words, these are all roles that the current user has direct or
   indirect, automatically inheriting membership in.
   <indexterm><primary>enabled role</primary></indexterm>
   <indexterm><primary>role</primary><secondary>enabled</secondary></indexterm>
  </para>
________________________________________________________-->
  <para>
   视图<literal>enabled_roles</literal>标识当前<quote>已被启用的角色</quote>。已被启用的角色被递归地定义为：当前用户以及被授予给具有自动继承的已被启用角色的所有角色。换句话说，就是当前用户是其直接或间接成员的所有角色。
   <indexterm><primary>enabled role</primary></indexterm>
   <indexterm><primary>role</primary><secondary>enabled</secondary></indexterm>
  </para>
<!-- pgdoc-cn_end sig_en=d598cb81fd06de6570b42369718bf182 -->

<!-- pgdoc-cn_start sig_en=6ce0da382d0a3b029c9358eaac92cb56 sig_cn_org=None source=14.1 
  <para>
   For permission checking, the set of <quote>applicable roles</quote>
   is applied, which can be broader than the set of enabled roles.  So
   generally, it is better to use the view
   <literal>applicable_roles</literal> instead of this one; See
   <xref linkend="infoschema-applicable-roles"/> for details on
   <literal>applicable_roles</literal> view.
  </para>
________________________________________________________-->
  <para>
   为了权限检查，<quote>可应用角色</quote>的集合被应用，它会比已被启用角色的集合包含的角色范围更宽。因此通常使用视图<literal>applicable_roles</literal>要更好，<literal>applicable_roles</literal>视图的详情请见<xref linkend="infoschema-applicable-roles"/>。
  </para>
<!-- pgdoc-cn_end sig_en=6ce0da382d0a3b029c9358eaac92cb56 -->

  <table>
<!-- pgdoc-cn_start sig_en=0f5d067f37926e7f5c3b7562de9da90f sig_cn_org=None source=14.1 
   <title><structname>enabled_roles</structname> Columns</title>
________________________________________________________-->
   <title><structname>enabled_roles</structname> 列</title>
<!-- pgdoc-cn_end sig_en=0f5d067f37926e7f5c3b7562de9da90f -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=0e28a97ac4a9487b9cb480d75a7ff3fb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>role_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of a role
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>role_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       一个角色的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0e28a97ac4a9487b9cb480d75a7ff3fb -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-data-wrapper-options">
  <title><literal>foreign_data_wrapper_options</literal></title>

<!-- pgdoc-cn_start sig_en=3ab1be564c40bc75c54f888393dc87a9 sig_cn_org=None source=14.1 
  <para>
   The view <literal>foreign_data_wrapper_options</literal> contains
   all the options defined for foreign-data wrappers in the current
   database.  Only those foreign-data wrappers are shown that the
   current user has access to (by way of being the owner or having
   some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>foreign_data_wrapper_options</literal>包含为当前数据库中外部数据包装器定义的所有选项。只有那些当前用户能够访问（作为拥有者或具有某些特权）的外部数据包装器被显示。
  </para>
<!-- pgdoc-cn_end sig_en=3ab1be564c40bc75c54f888393dc87a9 -->

  <table>
<!-- pgdoc-cn_start sig_en=52b23545a2bd9a01b289c26beef12ea8 sig_cn_org=None source=14.1 
   <title><structname>foreign_data_wrapper_options</structname> Columns</title>
________________________________________________________-->
   <title><structname>foreign_data_wrapper_options</structname> 列</title>
<!-- pgdoc-cn_end sig_en=52b23545a2bd9a01b289c26beef12ea8 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=af6bde8c6b4eed950bccd163fc93b57e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the foreign-data wrapper is defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该外部数据包装器所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=af6bde8c6b4eed950bccd163fc93b57e -->

<!-- pgdoc-cn_start sig_en=03c828cb205bc9af71eb51e75df6a264 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign-data wrapper
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该外部数据包装器的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=03c828cb205bc9af71eb51e75df6a264 -->

<!-- pgdoc-cn_start sig_en=e9c46c3df966f1c748cec8414e5e6cf2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of an option
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       一个选项名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e9c46c3df966f1c748cec8414e5e6cf2 -->

<!-- pgdoc-cn_start sig_en=1652f31550639d6c88ae7b02ad4e8772 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_value</structfield> <type>character_data</type>
      </para>
      <para>
       Value of the option
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_value</structfield> <type>character_data</type>
      </para>
      <para>
       该选项的值
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1652f31550639d6c88ae7b02ad4e8772 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-data-wrappers">
  <title><literal>foreign_data_wrappers</literal></title>

<!-- pgdoc-cn_start sig_en=1c59df7acecff7fb5f813496147836fa sig_cn_org=None source=14.1 
  <para>
   The view <literal>foreign_data_wrappers</literal> contains all
   foreign-data wrappers defined in the current database.  Only those
   foreign-data wrappers are shown that the current user has access to
   (by way of being the owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>foreign_data_wrappers</literal>包含定义在当前数据库中的所有外部数据包装器。只有那些当前用户能够访问（作为拥有者或具有某些特权）的外部数据包装器才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=1c59df7acecff7fb5f813496147836fa -->

  <table>
<!-- pgdoc-cn_start sig_en=48f6c181356a97b99f866228bc4076db sig_cn_org=None source=14.1 
   <title><structname>foreign_data_wrappers</structname> Columns</title>
________________________________________________________-->
   <title><structname>foreign_data_wrappers</structname> 列</title>
<!-- pgdoc-cn_end sig_en=48f6c181356a97b99f866228bc4076db -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=73cc1b74b7881d05ea224db817161ae7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the foreign-data
       wrapper (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该外部数据包装器的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=73cc1b74b7881d05ea224db817161ae7 -->

<!-- pgdoc-cn_start sig_en=03c828cb205bc9af71eb51e75df6a264 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign-data wrapper
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该外部数据包装器的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=03c828cb205bc9af71eb51e75df6a264 -->

<!-- pgdoc-cn_start sig_en=71b8cb96a19475e45cc1da2215a17f08 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>authorization_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the owner of the foreign server
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>authorization_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       外部服务器拥有者的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=71b8cb96a19475e45cc1da2215a17f08 -->

<!-- pgdoc-cn_start sig_en=464d0f532b6f46fcc6c6a6d36dd78f6d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>library_name</structfield> <type>character_data</type>
      </para>
      <para>
       File name of the library that implementing this foreign-data wrapper
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>library_name</structfield> <type>character_data</type>
      </para>
      <para>
       实现这个外部数据包装器的库文件名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=464d0f532b6f46fcc6c6a6d36dd78f6d -->

<!-- pgdoc-cn_start sig_en=4d498ae66e21bb4e0c36bc1604a273d5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_language</structfield> <type>character_data</type>
      </para>
      <para>
       Language used to implement this foreign-data wrapper
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_language</structfield> <type>character_data</type>
      </para>
      <para>
       用于实现这个外部数据包装器的语言
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4d498ae66e21bb4e0c36bc1604a273d5 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-server-options">
  <title><literal>foreign_server_options</literal></title>

<!-- pgdoc-cn_start sig_en=f270700faece6f7240713f9e2b5121b3 sig_cn_org=None source=14.1 
  <para>
   The view <literal>foreign_server_options</literal> contains all the
   options defined for foreign servers in the current database.  Only
   those foreign servers are shown that the current user has access to
   (by way of being the owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>foreign_server_options</literal>包含为当前数据库中外部服务器定义的所有选项。只有那些当前用户能够访问（作为拥有者或具有某些特权）的外部服务器才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=f270700faece6f7240713f9e2b5121b3 -->

  <table>
<!-- pgdoc-cn_start sig_en=de18fdae77111d4c85cfa8abbbbf31bd sig_cn_org=None source=14.1 
   <title><structname>foreign_server_options</structname> Columns</title>
________________________________________________________-->
   <title><structname>foreign_server_options</structname> 列</title>
<!-- pgdoc-cn_end sig_en=de18fdae77111d4c85cfa8abbbbf31bd -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=8f43d94e811bd60ede14992eef39b31a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the foreign server is defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该外部服务器所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8f43d94e811bd60ede14992eef39b31a -->

<!-- pgdoc-cn_start sig_en=1b90d80253d28806d7357e4a8d47a399 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign server
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该外部服务器的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1b90d80253d28806d7357e4a8d47a399 -->

<!-- pgdoc-cn_start sig_en=e9c46c3df966f1c748cec8414e5e6cf2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of an option
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       一个选项名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e9c46c3df966f1c748cec8414e5e6cf2 -->

<!-- pgdoc-cn_start sig_en=1652f31550639d6c88ae7b02ad4e8772 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_value</structfield> <type>character_data</type>
      </para>
      <para>
       Value of the option
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_value</structfield> <type>character_data</type>
      </para>
      <para>
       该选项的值
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1652f31550639d6c88ae7b02ad4e8772 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-servers">
  <title><literal>foreign_servers</literal></title>

<!-- pgdoc-cn_start sig_en=490fe3c69c7ccc0dfa03dcfcfdf2bc27 sig_cn_org=None source=14.1 
  <para>
   The view <literal>foreign_servers</literal> contains all foreign
   servers defined in the current database.  Only those foreign
   servers are shown that the current user has access to (by way of
   being the owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>foreign_servers</literal>包含当前数据库中定义的所有外部服务器。只有那些当前用户能够访问（作为拥有者或具有某些特权）的外部服务器才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=490fe3c69c7ccc0dfa03dcfcfdf2bc27 -->

  <table>
<!-- pgdoc-cn_start sig_en=02e0539caa16266a91d2a073705dbf91 sig_cn_org=None source=14.1 
   <title><structname>foreign_servers</structname> Columns</title>
________________________________________________________-->
   <title><structname>foreign_servers</structname> 列</title>
<!-- pgdoc-cn_end sig_en=02e0539caa16266a91d2a073705dbf91 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=8f43d94e811bd60ede14992eef39b31a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the foreign server is defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该外部服务器所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8f43d94e811bd60ede14992eef39b31a -->

<!-- pgdoc-cn_start sig_en=1b90d80253d28806d7357e4a8d47a399 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign server
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该外部服务器的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1b90d80253d28806d7357e4a8d47a399 -->

<!-- pgdoc-cn_start sig_en=074b2b5e8a4455f3b7e37d8697db965d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the foreign-data
       wrapper used by the foreign server (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被该外部服务器使用的外部数据包装器的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=074b2b5e8a4455f3b7e37d8697db965d -->

<!-- pgdoc-cn_start sig_en=3a17fe8360bcc6aa7764050f3f36a4ab sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign-data wrapper used by the foreign server
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_data_wrapper_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被该外部服务器所使用的外部数据包装器的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=3a17fe8360bcc6aa7764050f3f36a4ab -->

<!-- pgdoc-cn_start sig_en=110e43ed85ac66612eb711e456bd4d83 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_type</structfield> <type>character_data</type>
      </para>
      <para>
       Foreign server type information, if specified upon creation
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_type</structfield> <type>character_data</type>
      </para>
      <para>
       外部服务器类型信息，如果在创建时指定过
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=110e43ed85ac66612eb711e456bd4d83 -->

<!-- pgdoc-cn_start sig_en=f4892f649a9c99f0bb59881cb873c38a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_version</structfield> <type>character_data</type>
      </para>
      <para>
       Foreign server version information, if specified upon creation
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_version</structfield> <type>character_data</type>
      </para>
      <para>
       外部服务器版本信息，如果在创建时指定过
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f4892f649a9c99f0bb59881cb873c38a -->

<!-- pgdoc-cn_start sig_en=71b8cb96a19475e45cc1da2215a17f08 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>authorization_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the owner of the foreign server
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>authorization_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       外部服务器拥有者的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=71b8cb96a19475e45cc1da2215a17f08 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-table-options">
  <title><literal>foreign_table_options</literal></title>

<!-- pgdoc-cn_start sig_en=d7b640fb0f8334246699d3656f411cc2 sig_cn_org=None source=14.1 
  <para>
   The view <literal>foreign_table_options</literal> contains all the
   options defined for foreign tables in the current database.  Only
   those foreign tables are shown that the current user has access to
   (by way of being the owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>foreign_table_options</literal>包含为当前数据库中外部表定义的所有选项。只有那些当前用户能够访问（作为拥有者或具有某些特权）的外部表才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=d7b640fb0f8334246699d3656f411cc2 -->

  <table>
<!-- pgdoc-cn_start sig_en=7d516a4f2a253befedd6607e24df2fdd sig_cn_org=None source=14.1 
   <title><structname>foreign_table_options</structname> Columns</title>
________________________________________________________-->
   <title><structname>foreign_table_options</structname> 列</title>
<!-- pgdoc-cn_end sig_en=7d516a4f2a253befedd6607e24df2fdd -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=d4050898b58a44a50cf8b186a541e486 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the foreign table (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该外部表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d4050898b58a44a50cf8b186a541e486 -->

<!-- pgdoc-cn_start sig_en=d75242381b1bab099beaf83194baeb76 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the foreign table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该外部表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d75242381b1bab099beaf83194baeb76 -->

<!-- pgdoc-cn_start sig_en=2b118787f1ab29bf8c77e133fbd1b730 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       外部表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2b118787f1ab29bf8c77e133fbd1b730 -->

<!-- pgdoc-cn_start sig_en=e9c46c3df966f1c748cec8414e5e6cf2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of an option
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       一个选项名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e9c46c3df966f1c748cec8414e5e6cf2 -->

<!-- pgdoc-cn_start sig_en=1652f31550639d6c88ae7b02ad4e8772 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_value</structfield> <type>character_data</type>
      </para>
      <para>
       Value of the option
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_value</structfield> <type>character_data</type>
      </para>
      <para>
       该选项的值
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1652f31550639d6c88ae7b02ad4e8772 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-foreign-tables">
  <title><literal>foreign_tables</literal></title>

<!-- pgdoc-cn_start sig_en=78d0b8c2d32a5b609fb1545f6dfacc57 sig_cn_org=None source=14.1 
  <para>
   The view <literal>foreign_tables</literal> contains all foreign
   tables defined in the current database.  Only those foreign
   tables are shown that the current user has access to (by way of
   being the owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>foreign_tables</literal>包含定义在当前数据库中的所有外部表。只有那些当前用户能够访问（作为拥有者或具有某些特权）的外部表才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=78d0b8c2d32a5b609fb1545f6dfacc57 -->

  <table>
<!-- pgdoc-cn_start sig_en=95648748883efc0037c25bb3ec3eb4b3 sig_cn_org=None source=14.1 
   <title><structname>foreign_tables</structname> Columns</title>
________________________________________________________-->
   <title><structname>foreign_tables</structname> 列</title>
<!-- pgdoc-cn_end sig_en=95648748883efc0037c25bb3ec3eb4b3 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=c094b89d5afef6f2439569db8fa99403 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the foreign table is defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该外部表所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c094b89d5afef6f2439569db8fa99403 -->

<!-- pgdoc-cn_start sig_en=d75242381b1bab099beaf83194baeb76 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the foreign table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该外部表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d75242381b1bab099beaf83194baeb76 -->

<!-- pgdoc-cn_start sig_en=2b118787f1ab29bf8c77e133fbd1b730 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       外部表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2b118787f1ab29bf8c77e133fbd1b730 -->

<!-- pgdoc-cn_start sig_en=8f43d94e811bd60ede14992eef39b31a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the foreign server is defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该外部服务器所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8f43d94e811bd60ede14992eef39b31a -->

<!-- pgdoc-cn_start sig_en=1b90d80253d28806d7357e4a8d47a399 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign server
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该外部服务器的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1b90d80253d28806d7357e4a8d47a399 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-key-column-usage">
  <title><literal>key_column_usage</literal></title>

<!-- pgdoc-cn_start sig_en=d620cc0e023ed3e52f68b73dda7719f4 sig_cn_org=None source=14.1 
  <para>
   The view <literal>key_column_usage</literal> identifies all columns
   in the current database that are restricted by some unique, primary
   key, or foreign key constraint.  Check constraints are not included
   in this view.  Only those columns are shown that the current user
   has access to, by way of being the owner or having some privilege.
  </para>
________________________________________________________-->
  <para>
   视图<literal>key_column_usage</literal>标识当前数据库中所有被某种唯一、主键或外键约束限制的列。检查约束不被包括在这个视图中。只有那些当前用户能够访问的列才会被显示（作为拥有者或具有某些特权）。
  </para>
<!-- pgdoc-cn_end sig_en=d620cc0e023ed3e52f68b73dda7719f4 -->

  <table>
<!-- pgdoc-cn_start sig_en=54e83a76fe8eb47b4124cef239a7c376 sig_cn_org=None source=14.1 
   <title><structname>key_column_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>key_column_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=54e83a76fe8eb47b4124cef239a7c376 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=b67d42fba8a9bc1aab73b4f6fcb1b4b7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the constraint (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该约束的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b67d42fba8a9bc1aab73b4f6fcb1b4b7 -->

<!-- pgdoc-cn_start sig_en=053e3c41481ba2ff26264788fdb8bfcd sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该约束的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=053e3c41481ba2ff26264788fdb8bfcd -->

<!-- pgdoc-cn_start sig_en=f19ff222ebf15251411dc8bf2ad9a521 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       约束的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f19ff222ebf15251411dc8bf2ad9a521 -->

<!-- pgdoc-cn_start sig_en=6a14ced73263cfca8476c2ba457502ef sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that contains the
       column that is restricted by this constraint (always the
       current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被这个约束限制的列的表所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6a14ced73263cfca8476c2ba457502ef -->

<!-- pgdoc-cn_start sig_en=529da749f89a34aa8fea03b82156e344 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that contains the
       column that is restricted by this constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被这个约束限制的列的表所在的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=529da749f89a34aa8fea03b82156e344 -->

<!-- pgdoc-cn_start sig_en=85d5a916f3946a5f8f52fa2915f952ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that contains the column that is restricted
       by this constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被这个约束限制的列的表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=85d5a916f3946a5f8f52fa2915f952ff -->

<!-- pgdoc-cn_start sig_en=e3593af5ff704504fd95bb2ad7c800f2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column that is restricted by this constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被这个约束限制的列的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e3593af5ff704504fd95bb2ad7c800f2 -->

<!-- pgdoc-cn_start sig_en=bb6594797228c9bc097c4cbc19ab2b0c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordinal_position</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Ordinal position of the column within the constraint key (count
       starts at 1)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordinal_position</structfield> <type>cardinal_number</type>
      </para>
      <para>
       该列在约束键中的顺序位置（从 1 开始计数）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bb6594797228c9bc097c4cbc19ab2b0c -->

<!-- pgdoc-cn_start sig_en=02869fb933fdee8fa0f65eb4ff189d7f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>position_in_unique_constraint</structfield> <type>cardinal_number</type>
      </para>
      <para>
       For a foreign-key constraint, ordinal position of the referenced
       column within its unique constraint (count starts at 1);
       otherwise null
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>position_in_unique_constraint</structfield> <type>cardinal_number</type>
      </para>
      <para>
       对于一个外键约束，被引用行在其唯一约束中的顺序位置（从 1 开始计数）；对于其他约束为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=02869fb933fdee8fa0f65eb4ff189d7f -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-parameters">
  <title><literal>parameters</literal></title>

<!-- pgdoc-cn_start sig_en=9540c2202a201a5c9d87ea0cfb48b6ac sig_cn_org=None source=14.1 
  <para>
   The view <literal>parameters</literal> contains information about
   the parameters (arguments) of all functions in the current database.
   Only those functions are shown that the current user has access to
   (by way of being the owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>parameters</literal>包含当前数据库中所有函数的参数的有关信息。只有那些当前用户能够访问（作为拥有者或具有某些特权）的函数才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=9540c2202a201a5c9d87ea0cfb48b6ac -->

  <table>
<!-- pgdoc-cn_start sig_en=5282901f7ba57baa1c9a47abce2e5bce sig_cn_org=None source=14.1 
   <title><structname>parameters</structname> Columns</title>
________________________________________________________-->
   <title><structname>parameters</structname> 列</title>
<!-- pgdoc-cn_end sig_en=5282901f7ba57baa1c9a47abce2e5bce -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=739a839874f2bf79f2e181b41be2fd92 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=739a839874f2bf79f2e181b41be2fd92 -->

<!-- pgdoc-cn_start sig_en=f69c524afe2317388c37b8ec9c284cb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f69c524afe2317388c37b8ec9c284cb4 -->

<!-- pgdoc-cn_start sig_en=50f51b6c55eb602db3cc8768dd9921c9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function.  See <xref linkend="infoschema-routines"/> for more information.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       函数的<quote>特定名称</quote>。  详请参见 <xref linkend="infoschema-routines"/>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=50f51b6c55eb602db3cc8768dd9921c9 -->

<!-- pgdoc-cn_start sig_en=2bd8cfb5feb34675dacda2b193f88228 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordinal_position</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Ordinal position of the parameter in the argument list of the
       function (count starts at 1)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordinal_position</structfield> <type>cardinal_number</type>
      </para>
      <para>
       该参数在函数参数列表中的顺序位置（从 1 开始计数）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2bd8cfb5feb34675dacda2b193f88228 -->

<!-- pgdoc-cn_start sig_en=16fe6d606a8936081cade44b25837daf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>parameter_mode</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>IN</literal> for input parameter,
       <literal>OUT</literal> for output parameter,
       and <literal>INOUT</literal> for input/output parameter.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>parameter_mode</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>IN</literal>表示输入参数，<literal>OUT</literal>表示输出参数，<literal>INOUT</literal>表示输入/输出参数。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=16fe6d606a8936081cade44b25837daf -->

<!-- pgdoc-cn_start sig_en=c21eb5c40bf20d66fede395f57ce8cdf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_result</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_result</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c21eb5c40bf20d66fede395f57ce8cdf -->

<!-- pgdoc-cn_start sig_en=a2841d35120677fdbb51e397807fbdeb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>as_locator</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>as_locator</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a2841d35120677fdbb51e397807fbdeb -->

<!-- pgdoc-cn_start sig_en=214204065ae0000d44c3bafa28ae0af0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>parameter_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the parameter, or null if the parameter has no name
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>parameter_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       参数名称，如果参数没有名称则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=214204065ae0000d44c3bafa28ae0af0 -->

<!-- pgdoc-cn_start sig_en=9c71fbc003dbb9f8e7b6712dcc23daa8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       Data type of the parameter, if it is a built-in type, or
       <literal>ARRAY</literal> if it is some array (in that case, see
       the view <literal>element_types</literal>), else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>udt_name</literal> and associated
       columns).
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       该参数的数据类型如果是一种内建类型，这里是该参数的数据类型；如果是某种数组（此种情况见视图<literal>element_types</literal>），则为<literal>ARRAY</literal>；
       否则为<literal>USER-DEFINED</literal>（此种情况中，该类型被标识在<literal>udt_name</literal>和相关列中）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9c71fbc003dbb9f8e7b6712dcc23daa8 -->

<!-- pgdoc-cn_start sig_en=9ed4068b3769f5ea2fc7adc9c31dfbe1 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9ed4068b3769f5ea2fc7adc9c31dfbe1 -->

<!-- pgdoc-cn_start sig_en=8cc278a48a4ef548dfe6a9711cee0ce8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8cc278a48a4ef548dfe6a9711cee0ce8 -->

<!-- pgdoc-cn_start sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 -->

<!-- pgdoc-cn_start sig_en=359de2c127ff4bf584099b3dbafa94c0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=359de2c127ff4bf584099b3dbafa94c0 -->

<!-- pgdoc-cn_start sig_en=5daa3e735df10fe5f7c15e2746e03745 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5daa3e735df10fe5f7c15e2746e03745 -->

<!-- pgdoc-cn_start sig_en=ba672c0a3874cb607c01657c13c01d38 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ba672c0a3874cb607c01657c13c01d38 -->

<!-- pgdoc-cn_start sig_en=b45d801b829949e4bfdf0dc6c389ae9f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b45d801b829949e4bfdf0dc6c389ae9f -->

<!-- pgdoc-cn_start sig_en=25bddf984e122421af98d35281a78a79 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=25bddf984e122421af98d35281a78a79 -->

<!-- pgdoc-cn_start sig_en=be7ad2fb3134c4b2b2d841e381d00d5f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=be7ad2fb3134c4b2b2d841e381d00d5f -->

<!-- pgdoc-cn_start sig_en=723ddbcbfad30c36667b1299a5f80d99 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=723ddbcbfad30c36667b1299a5f80d99 -->

<!-- pgdoc-cn_start sig_en=f8f05a7f09d743115b3a02918a772d6a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f8f05a7f09d743115b3a02918a772d6a -->

<!-- pgdoc-cn_start sig_en=f29a15fd69f8f43744f3c018425aa743 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f29a15fd69f8f43744f3c018425aa743 -->

<!-- pgdoc-cn_start sig_en=0b9242507a534f9b4a3f29969f8223d4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0b9242507a534f9b4a3f29969f8223d4 -->

<!-- pgdoc-cn_start sig_en=dd0c805bb088cf9ad98b8bcacc64cbbf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to parameter data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=dd0c805bb088cf9ad98b8bcacc64cbbf -->

<!-- pgdoc-cn_start sig_en=64ed6882c3c61b097b1282e78329e4b9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the data type of the parameter is
       defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该参数的数据类型所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=64ed6882c3c61b097b1282e78329e4b9 -->

<!-- pgdoc-cn_start sig_en=aaad93c091f4db115e9cee4b224bcbf4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that the data type of the parameter is
       defined in
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该参数的数据类型所在的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=aaad93c091f4db115e9cee4b224bcbf4 -->

<!-- pgdoc-cn_start sig_en=308d442a701ecc75910b414b4efb9b7a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the data type of the parameter
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该参数的数据类型的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=308d442a701ecc75910b414b4efb9b7a -->

<!-- pgdoc-cn_start sig_en=daac500380aced6577917d77130a7b3d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=daac500380aced6577917d77130a7b3d -->

<!-- pgdoc-cn_start sig_en=d78a2ca05035726a001dded35cbcbd0f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d78a2ca05035726a001dded35cbcbd0f -->

<!-- pgdoc-cn_start sig_en=c39393e41b9b3c96d06be5c5077cb108 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c39393e41b9b3c96d06be5c5077cb108 -->

<!-- pgdoc-cn_start sig_en=bb80dcd755af451face68c0645f42c4a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是空，因为数组在<productname>PostgreSQL</productname>中总是有无限制的最大势
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bb80dcd755af451face68c0645f42c4a -->

<!-- pgdoc-cn_start sig_en=eb009ef27fdcedd59a6e0e08415caf19 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       An identifier of the data type descriptor of the parameter,
       unique among the data type descriptors pertaining to the
       function.  This is mainly useful for joining with other
       instances of such identifiers.  (The specific format of the
       identifier is not defined and not guaranteed to remain the same
       in future versions.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该参数的数据类型描述符的一个标识符，在从属于该函数的数据类型标识符之中唯一（这不重要，因为一个域只包含一个数据类型描述符）。
       这主要用于与这类标识符的其他实例进行连接（该标识符的指定格式没有被定义并且不保证在未来的版本中保持相同）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=eb009ef27fdcedd59a6e0e08415caf19 -->

<!-- pgdoc-cn_start sig_en=3302e51507e3899bd833e64dc0d92667 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>parameter_default</structfield> <type>character_data</type>
      </para>
      <para>
       The default expression of the parameter, or null if none or if the
       function is not owned by a currently enabled role.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>parameter_default</structfield> <type>character_data</type>
      </para>
      <para>
       该参数的默认表达式，如果没有或者该函数不被一个当前启用的角色拥有则为空值。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=3302e51507e3899bd833e64dc0d92667 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-referential-constraints">
  <title><literal>referential_constraints</literal></title>

<!-- pgdoc-cn_start sig_en=42450a60117f1a09d8b384b8ef6cd7de sig_cn_org=None source=14.1 
  <para>
   The view <literal>referential_constraints</literal> contains all
   referential (foreign key) constraints in the current database.
   Only those constraints are shown for which the current user has
   write access to the referencing table (by way of being the
   owner or having some privilege other than <literal>SELECT</literal>).
  </para>
________________________________________________________-->
  <para>
   视图<literal>referential_constraints</literal>包含当前数据库中的所有引用（外键）约束。只有那些当前用户具有其引用表上写权限（作为拥有者或具有某些除<literal>SELECT</literal>之外的特权）的约束才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=42450a60117f1a09d8b384b8ef6cd7de -->

  <table>
<!-- pgdoc-cn_start sig_en=b7e091a37bfe374ca4992d231e615e1e sig_cn_org=None source=14.1 
   <title><structname>referential_constraints</structname> Columns</title>
________________________________________________________-->
   <title><structname>referential_constraints</structname> 列</title>
<!-- pgdoc-cn_end sig_en=b7e091a37bfe374ca4992d231e615e1e -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=4410b9e771c593508e5a970146fccaa7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the constraint (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含约束的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4410b9e771c593508e5a970146fccaa7 -->

<!-- pgdoc-cn_start sig_en=398490d6470acf189396af481bd23faf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含约束的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=398490d6470acf189396af481bd23faf -->

<!-- pgdoc-cn_start sig_en=f19ff222ebf15251411dc8bf2ad9a521 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       约束的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f19ff222ebf15251411dc8bf2ad9a521 -->

<!-- pgdoc-cn_start sig_en=d8f2f41608d02eeb5960a07e26ef10a2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>unique_constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the unique or primary key
       constraint that the foreign key constraint references (always
       the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>unique_constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该外键约束所引用的唯一或主键约束的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d8f2f41608d02eeb5960a07e26ef10a2 -->

<!-- pgdoc-cn_start sig_en=3ac1273955a7465722d85772c08b8486 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>unique_constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the unique or primary key
       constraint that the foreign key constraint references
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>unique_constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该外键约束所引用的唯一或主键约束的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=3ac1273955a7465722d85772c08b8486 -->

<!-- pgdoc-cn_start sig_en=dae601306f95ce7240412d8627d0d581 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>unique_constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the unique or primary key constraint that the foreign
       key constraint references
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>unique_constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该外键约束所引用的唯一或主键约束的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=dae601306f95ce7240412d8627d0d581 -->

<!-- pgdoc-cn_start sig_en=4a6939e4d82ea9127c13b4b6461ac2b0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>match_option</structfield> <type>character_data</type>
      </para>
      <para>
       Match option of the foreign key constraint:
       <literal>FULL</literal>, <literal>PARTIAL</literal>, or
       <literal>NONE</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>match_option</structfield> <type>character_data</type>
      </para>
      <para>
       外键约束的匹配选项：<literal>FULL</literal>、<literal>PARTIAL</literal>或<literal>NONE</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4a6939e4d82ea9127c13b4b6461ac2b0 -->

<!-- pgdoc-cn_start sig_en=86527b4f0f4e1216986d0a36d111c7b1 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>update_rule</structfield> <type>character_data</type>
      </para>
      <para>
       Update rule of the foreign key constraint:
       <literal>CASCADE</literal>, <literal>SET NULL</literal>,
       <literal>SET DEFAULT</literal>, <literal>RESTRICT</literal>, or
       <literal>NO ACTION</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>update_rule</structfield> <type>character_data</type>
      </para>
      <para>
       外键约束的更新规则：
       <literal>CASCADE</literal>、<literal>SET NULL</literal>、<literal>SET DEFAULT</literal>、<literal>RESTRICT</literal>或 <literal>NO ACTION</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=86527b4f0f4e1216986d0a36d111c7b1 -->

<!-- pgdoc-cn_start sig_en=6667f4865d49487c078830db85fb6914 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>delete_rule</structfield> <type>character_data</type>
      </para>
      <para>
       Delete rule of the foreign key constraint:
       <literal>CASCADE</literal>, <literal>SET NULL</literal>,
       <literal>SET DEFAULT</literal>, <literal>RESTRICT</literal>, or
       <literal>NO ACTION</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>delete_rule</structfield> <type>character_data</type>
      </para>
      <para>
       外键约束的删除规则：
       <literal>CASCADE</literal>、<literal>SET NULL</literal>、<literal>SET DEFAULT</literal>、<literal>RESTRICT</literal>或 <literal>NO ACTION</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6667f4865d49487c078830db85fb6914 -->
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="infoschema-role-column-grants">
  <title><literal>role_column_grants</literal></title>

<!-- pgdoc-cn_start sig_en=7d33392f9747ef9fcdebeda597aca43f sig_cn_org=None source=14.1 
  <para>
   The view <literal>role_column_grants</literal> identifies all
   privileges granted on columns where the grantor or grantee is a
   currently enabled role.  Further information can be found under
   <literal>column_privileges</literal>.  The only effective
   difference between this view
   and <literal>column_privileges</literal> is that this view omits
   columns that have been made accessible to the current user by way
   of a grant to <literal>PUBLIC</literal>.
  </para>
________________________________________________________-->
  <para>
   视图<literal>role_column_grants</literal>标识所有在列上授予的特权，这些特权的授予者或者被授予者是一个当前已被启用的角色。更多信息可以在<literal>column_privileges</literal>中找到。这个视图和<literal>column_privileges</literal>之间的唯一实质性区别是：这个视图忽略那些以授予给<literal>PUBLIC</literal>的方式使当前用户获得其访问权限的列。
  </para>
<!-- pgdoc-cn_end sig_en=7d33392f9747ef9fcdebeda597aca43f -->

  <table>
<!-- pgdoc-cn_start sig_en=02dc4d55b89bb595eade701ea5a627d7 sig_cn_org=None source=14.1 
   <title><structname>role_column_grants</structname> Columns</title>
________________________________________________________-->
   <title><structname>role_column_grants</structname> 列</title>
<!-- pgdoc-cn_end sig_en=02dc4d55b89bb595eade701ea5a627d7 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ef93823b7a2949262fd771a7fc97ccb8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that granted the privilege
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ef93823b7a2949262fd771a7fc97ccb8 -->

<!-- pgdoc-cn_start sig_en=47eb41136204607ed172b8a312c8d9ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that the privilege was granted to
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47eb41136204607ed172b8a312c8d9ff -->

<!-- pgdoc-cn_start sig_en=478ce04a43f28036578a91680696137c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that contains the column (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该列的表所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=478ce04a43f28036578a91680696137c -->

<!-- pgdoc-cn_start sig_en=ac25be687ecd68b87f4ef3bb4264b110 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that contains the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该列的表所在的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ac25be687ecd68b87f4ef3bb4264b110 -->

<!-- pgdoc-cn_start sig_en=c81f5b32d2708aaaecd5129e2bc36de2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that contains the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该列的表名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c81f5b32d2708aaaecd5129e2bc36de2 -->

<!-- pgdoc-cn_start sig_en=8d673331d60eea51cc5a3fc89e3214ea sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       列名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8d673331d60eea51cc5a3fc89e3214ea -->

<!-- pgdoc-cn_start sig_en=016766b1c0a6f423ee101548a6044e27 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       Type of the privilege: <literal>SELECT</literal>,
       <literal>INSERT</literal>, <literal>UPDATE</literal>, or
       <literal>REFERENCES</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       特权类型：<literal>SELECT</literal>、<literal>INSERT</literal>、<literal>UPDATE</literal>或 <literal>REFERENCES</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=016766b1c0a6f423ee101548a6044e27 -->

<!-- pgdoc-cn_start sig_en=8952048d243a6f039c69a84562efd845 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特权是可授予的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8952048d243a6f039c69a84562efd845 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-role-routine-grants">
  <title><literal>role_routine_grants</literal></title>

<!-- pgdoc-cn_start sig_en=cd7b28c51c7515171ed4874738163a4e sig_cn_org=None source=14.1 
  <para>
   The view <literal>role_routine_grants</literal> identifies all
   privileges granted on functions where the grantor or grantee is a
   currently enabled role.  Further information can be found under
   <literal>routine_privileges</literal>.  The only effective
   difference between this view
   and <literal>routine_privileges</literal> is that this view omits
   functions that have been made accessible to the current user by way
   of a grant to <literal>PUBLIC</literal>.
  </para>
________________________________________________________-->
  <para>
   视图<literal>role_routine_grants</literal>标识所有在函数上授予的特权，这些特权的授予者或者被授予者是一个当前已被启用的角色。更多信息可以在<literal>routine_privileges</literal>中找到。这个视图和<literal>routine_privileges</literal>之间的唯一实质性区别是：这个视图忽略那些以授予给<literal>PUBLIC</literal>的方式使当前用户获得其访问权限的函数。
  </para>
<!-- pgdoc-cn_end sig_en=cd7b28c51c7515171ed4874738163a4e -->

  <table>
<!-- pgdoc-cn_start sig_en=f279c6969e002e48f368a7490f561d86 sig_cn_org=None source=14.1 
   <title><structname>role_routine_grants</structname> Columns</title>
________________________________________________________-->
   <title><structname>role_routine_grants</structname> 列</title>
<!-- pgdoc-cn_end sig_en=f279c6969e002e48f368a7490f561d86 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ef93823b7a2949262fd771a7fc97ccb8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that granted the privilege
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ef93823b7a2949262fd771a7fc97ccb8 -->

<!-- pgdoc-cn_start sig_en=47eb41136204607ed172b8a312c8d9ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that the privilege was granted to
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47eb41136204607ed172b8a312c8d9ff -->

<!-- pgdoc-cn_start sig_en=739a839874f2bf79f2e181b41be2fd92 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=739a839874f2bf79f2e181b41be2fd92 -->

<!-- pgdoc-cn_start sig_en=f69c524afe2317388c37b8ec9c284cb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f69c524afe2317388c37b8ec9c284cb4 -->

<!-- pgdoc-cn_start sig_en=50f51b6c55eb602db3cc8768dd9921c9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function.  See <xref linkend="infoschema-routines"/> for more information.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       函数的<quote>特定名称</quote>。  详请参见 <xref linkend="infoschema-routines"/>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=50f51b6c55eb602db3cc8768dd9921c9 -->

<!-- pgdoc-cn_start sig_en=273e9066d8792a2ae68cac53f2b2f98a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=273e9066d8792a2ae68cac53f2b2f98a -->

<!-- pgdoc-cn_start sig_en=8a81e81656c1a4232781ce794834ee40 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8a81e81656c1a4232781ce794834ee40 -->

<!-- pgdoc-cn_start sig_en=0f221f6d414fed978269efc3ab7fe117 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the function (might be duplicated in case of overloading)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数的名称（在重载的情况下可能会重复）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0f221f6d414fed978269efc3ab7fe117 -->

<!-- pgdoc-cn_start sig_en=47636f393c1e51fea84fdd203544b95a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       Always <literal>EXECUTE</literal> (the only privilege type for functions)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       总是为<literal>EXECUTE</literal>（函数唯一的特权类型）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47636f393c1e51fea84fdd203544b95a -->

<!-- pgdoc-cn_start sig_en=8952048d243a6f039c69a84562efd845 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特权是可授予的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8952048d243a6f039c69a84562efd845 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-role-table-grants">
  <title><literal>role_table_grants</literal></title>

<!-- pgdoc-cn_start sig_en=9aca2bf42cafee9b6226f48c13ef79d1 sig_cn_org=None source=14.1 
  <para>
   The view <literal>role_table_grants</literal> identifies all
   privileges granted on tables or views where the grantor or grantee
   is a currently enabled role.  Further information can be found
   under <literal>table_privileges</literal>.  The only effective
   difference between this view
   and <literal>table_privileges</literal> is that this view omits
   tables that have been made accessible to the current user by way of
   a grant to <literal>PUBLIC</literal>.
  </para>
________________________________________________________-->
  <para>
   视图<literal>role_table_grants</literal>标识所有在表或视图上授予的特权，这些特权的授予者或者被授予者是一个当前已被启用的角色。更多信息可以在<literal>table_privileges</literal>中找到。这个视图和<literal>table_privileges</literal>之间的唯一实质性区别是：这个视图忽略那些以授予给<literal>PUBLIC</literal>的方式使当前用户获得其访问权限的表。
  </para>
<!-- pgdoc-cn_end sig_en=9aca2bf42cafee9b6226f48c13ef79d1 -->

  <table>
<!-- pgdoc-cn_start sig_en=16af7e45aa75d0d85155dd534cd8706f sig_cn_org=None source=14.1 
   <title><structname>role_table_grants</structname> Columns</title>
________________________________________________________-->
   <title><structname>role_table_grants</structname> 列</title>
<!-- pgdoc-cn_end sig_en=16af7e45aa75d0d85155dd534cd8706f -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ef93823b7a2949262fd771a7fc97ccb8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that granted the privilege
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ef93823b7a2949262fd771a7fc97ccb8 -->

<!-- pgdoc-cn_start sig_en=47eb41136204607ed172b8a312c8d9ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that the privilege was granted to
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47eb41136204607ed172b8a312c8d9ff -->

<!-- pgdoc-cn_start sig_en=8b29761a97c41d6a24f623a9c93caba0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8b29761a97c41d6a24f623a9c93caba0 -->

<!-- pgdoc-cn_start sig_en=4e34e0508cd6b953de99406b1a9c88c3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4e34e0508cd6b953de99406b1a9c88c3 -->

<!-- pgdoc-cn_start sig_en=2170e2f48a321ca74d5f420a104984f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2170e2f48a321ca74d5f420a104984f9 -->

<!-- pgdoc-cn_start sig_en=7582c3ec4aec4ff064c29a6580f56917 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       Type of the privilege: <literal>SELECT</literal>,
       <literal>INSERT</literal>, <literal>UPDATE</literal>,
       <literal>DELETE</literal>, <literal>TRUNCATE</literal>,
       <literal>REFERENCES</literal>, or <literal>TRIGGER</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       该特权的类型：<literal>SELECT</literal>、
       <literal>INSERT</literal>、<literal>UPDATE</literal>、
       <literal>DELETE</literal>、<literal>TRUNCATE</literal>、
       <literal>REFERENCES</literal>或<literal>TRIGGER</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7582c3ec4aec4ff064c29a6580f56917 -->

<!-- pgdoc-cn_start sig_en=8952048d243a6f039c69a84562efd845 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特权是可授予的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8952048d243a6f039c69a84562efd845 -->

<!-- pgdoc-cn_start sig_en=06f818627cd0a23e92971a46cab821a8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>with_hierarchy</structfield> <type>yes_or_no</type>
      </para>
      <para>
       In the SQL standard, <literal>WITH HIERARCHY OPTION</literal>
       is a separate (sub-)privilege allowing certain operations on
       table inheritance hierarchies.  In PostgreSQL, this is included
       in the <literal>SELECT</literal> privilege, so this column
       shows <literal>YES</literal> if the privilege
       is <literal>SELECT</literal>, else <literal>NO</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>with_hierarchy</structfield> <type>yes_or_no</type>
      </para>
      <para>
       在 SQL 标准中，<literal>WITH HIERARCHY OPTION</literal>是一个独立的（子）特权，它允许在表继承层级上的特定操作。
       在 PostgreSQL 中，这被包括在<literal>SELECT</literal>特权中，因此这一列在特权为<literal>SELECT</literal>时显示<literal>YES</literal>，其他时候显示<literal>NO</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=06f818627cd0a23e92971a46cab821a8 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-role-udt-grants">
  <title><literal>role_udt_grants</literal></title>

<!-- pgdoc-cn_start sig_en=f1c081c81133e8e88ddc57ae5c225b15 sig_cn_org=None source=14.1 
  <para>
   The view <literal>role_udt_grants</literal> is intended to identify
   <literal>USAGE</literal> privileges granted on user-defined types
   where the grantor or grantee is a currently enabled role.  Further
   information can be found under
   <literal>udt_privileges</literal>.  The only effective difference
   between this view and <literal>udt_privileges</literal> is that
   this view omits objects that have been made accessible to the
   current user by way of a grant to <literal>PUBLIC</literal>.  Since
   data types do not have real privileges in PostgreSQL, but only an
   implicit grant to <literal>PUBLIC</literal>, this view is empty.
  </para>
________________________________________________________-->
  <para>
   视图<literal>role_udt_grants</literal>标识所有在用户定义类型上授予的<literal>USAGE</literal>特权，这些特权的授予者或者被授予者是一个当前已被启用的角色。更多信息可以在<literal>udt_privileges</literal>中找到。这个视图和<literal>udt_privileges</literal>之间的唯一实质性区别是：这个视图忽略那些以授予给<literal>PUBLIC</literal>的方式使当前用户获得其访问权限的对象。因为数据类型在 PostgreSQL 中并没有真正的特权，而是只有一个给<literal>PUBLIC</literal>的隐式授予，这个视图为空。
  </para>
<!-- pgdoc-cn_end sig_en=f1c081c81133e8e88ddc57ae5c225b15 -->

  <table>
<!-- pgdoc-cn_start sig_en=314071bfaa60654151f837421ed0be18 sig_cn_org=None source=14.1 
   <title><structname>role_udt_grants</structname> Columns</title>
________________________________________________________-->
   <title><structname>role_udt_grants</structname> 列</title>
<!-- pgdoc-cn_end sig_en=314071bfaa60654151f837421ed0be18 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=383eec156ed815e92a0bf37a05532bb2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The name of the role that granted the privilege
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=383eec156ed815e92a0bf37a05532bb2 -->

<!-- pgdoc-cn_start sig_en=86ab380d07a0f7b963d5fa17cbba8eca sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The name of the role that the privilege was granted to
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=86ab380d07a0f7b963d5fa17cbba8eca -->

<!-- pgdoc-cn_start sig_en=05dffb613e0bf0e059952c2a0245e6f7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the type (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该类型的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=05dffb613e0bf0e059952c2a0245e6f7 -->

<!-- pgdoc-cn_start sig_en=ecc836fffd57069f8b28670bf2411e7d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该类型的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ecc836fffd57069f8b28670bf2411e7d -->

<!-- pgdoc-cn_start sig_en=8ef9318de0cfa50ee561c5b6228a9993 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       类型的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8ef9318de0cfa50ee561c5b6228a9993 -->

<!-- pgdoc-cn_start sig_en=49aa0c87a37b3a847e7b625b6d293f4a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       Always <literal>TYPE USAGE</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       总是<literal>TYPE USAGE</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=49aa0c87a37b3a847e7b625b6d293f4a -->

<!-- pgdoc-cn_start sig_en=8952048d243a6f039c69a84562efd845 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特权是可授予的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8952048d243a6f039c69a84562efd845 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-role-usage-grants">
  <title><literal>role_usage_grants</literal></title>

<!-- pgdoc-cn_start sig_en=d54564a5a836f00c3c547b563c9ac5fd sig_cn_org=None source=14.1 
  <para>
   The view <literal>role_usage_grants</literal> identifies
   <literal>USAGE</literal> privileges granted on various kinds of
   objects where the grantor or grantee is a currently enabled role.
   Further information can be found under
   <literal>usage_privileges</literal>.  The only effective difference
   between this view and <literal>usage_privileges</literal> is that
   this view omits objects that have been made accessible to the
   current user by way of a grant to <literal>PUBLIC</literal>.
  </para>
________________________________________________________-->
  <para>
   视图<literal>role_usage_grants</literal>标识所有在多种对象上授予的<literal>USAGE</literal>特权，这些特权的授予者或者被授予者是一个当前已被启用的角色。更多信息可以在<literal>usage_privileges</literal>中找到。这个视图和<literal>usage_privileges</literal>之间的唯一实质性区别是：这个视图忽略那些以授予给<literal>PUBLIC</literal>的方式使当前用户获得其访问权限的对象。
  </para>
<!-- pgdoc-cn_end sig_en=d54564a5a836f00c3c547b563c9ac5fd -->

  <table>
<!-- pgdoc-cn_start sig_en=7876db3ab820d1f2f288143a5f13691c sig_cn_org=None source=14.1 
   <title><structname>role_usage_grants</structname> Columns</title>
________________________________________________________-->
   <title><structname>role_usage_grants</structname> 列</title>
<!-- pgdoc-cn_end sig_en=7876db3ab820d1f2f288143a5f13691c -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=383eec156ed815e92a0bf37a05532bb2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The name of the role that granted the privilege
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=383eec156ed815e92a0bf37a05532bb2 -->

<!-- pgdoc-cn_start sig_en=86ab380d07a0f7b963d5fa17cbba8eca sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The name of the role that the privilege was granted to
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=86ab380d07a0f7b963d5fa17cbba8eca -->

<!-- pgdoc-cn_start sig_en=d8645d6d0f7afb20292c2f22dfa5fb55 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the object (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该对象的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d8645d6d0f7afb20292c2f22dfa5fb55 -->

<!-- pgdoc-cn_start sig_en=9275371f80634a11c30a6b4f9afee3f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the object, if applicable,
       else an empty string
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       如果适用，则为包含该对象的模式名称，否则为一个空字符串
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9275371f80634a11c30a6b4f9afee3f9 -->

<!-- pgdoc-cn_start sig_en=228c59ba81d65dab8c8b0b55213153ee sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the object
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       对象的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=228c59ba81d65dab8c8b0b55213153ee -->

<!-- pgdoc-cn_start sig_en=74a379cefbf80ec5b4bc7e75cd621bf8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_type</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>COLLATION</literal> or <literal>DOMAIN</literal> or <literal>FOREIGN DATA WRAPPER</literal> or <literal>FOREIGN SERVER</literal> or <literal>SEQUENCE</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_type</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>COLLATION</literal>或<literal>DOMAIN</literal>或<literal>FOREIGN DATA WRAPPER</literal>或<literal>FOREIGN SERVER</literal>或<literal>SEQUENCE</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=74a379cefbf80ec5b4bc7e75cd621bf8 -->

<!-- pgdoc-cn_start sig_en=2a10339892549be8b9870137eaea177d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       Always <literal>USAGE</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       总是<literal>USAGE</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2a10339892549be8b9870137eaea177d -->

<!-- pgdoc-cn_start sig_en=8952048d243a6f039c69a84562efd845 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特权是可授予的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8952048d243a6f039c69a84562efd845 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-routine-column-usage">
  <title><literal>routine_column_usage</literal></title>

<!-- pgdoc-cn_start sig_en=aa7589e2490571615ef2e9c63bad9989 sig_cn_org=e7ea659ae67fa8c6245f9ea06baffd6a source=15.7 
  <para>
   The view <literal>routine_column_usage</literal> identifies all columns
   that are used by a function or procedure, either in the SQL body or in
   parameter default expressions.  (This only works for unquoted SQL bodies,
   not quoted bodies or functions in other languages.)  A column is only
   included if its table is owned by a currently enabled role.
  </para>
________________________________________________________-->
  <para>
   视图<literal>routine_column_usage</literal>标识出函数或过程中使用的所有列，
   无论是在SQL主体中还是在参数默认表达式中。（这仅适用于未引用的SQL主体，
   而不适用于带引号的主体或其他语言中的函数。）只有当表由当前启用的角色拥有时，
   才会包含列。
</para>
<!-- pgdoc-cn_end sig_en=aa7589e2490571615ef2e9c63bad9989 -->

  <table>
<!-- pgdoc-cn_start sig_en=e74487ee4e6bc025a3a8ce0a7aef9283 sig_cn_org=None source=14.1 
   <title><literal>routine_column_usage</literal> Columns</title>
________________________________________________________-->
   <title><literal>routine_column_usage</literal> Columns</title>
<!-- pgdoc-cn_end sig_en=e74487ee4e6bc025a3a8ce0a7aef9283 -->

   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=739a839874f2bf79f2e181b41be2fd92 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=739a839874f2bf79f2e181b41be2fd92 -->

<!-- pgdoc-cn_start sig_en=f69c524afe2317388c37b8ec9c284cb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f69c524afe2317388c37b8ec9c284cb4 -->

<!-- pgdoc-cn_start sig_en=50f51b6c55eb602db3cc8768dd9921c9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function.  See <xref linkend="infoschema-routines"/> for more information.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       函数的<quote>特定名称</quote>。  详请参见 <xref linkend="infoschema-routines"/>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=50f51b6c55eb602db3cc8768dd9921c9 -->

<!-- pgdoc-cn_start sig_en=273e9066d8792a2ae68cac53f2b2f98a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=273e9066d8792a2ae68cac53f2b2f98a -->

<!-- pgdoc-cn_start sig_en=8a81e81656c1a4232781ce794834ee40 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8a81e81656c1a4232781ce794834ee40 -->

<!-- pgdoc-cn_start sig_en=0f221f6d414fed978269efc3ab7fe117 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the function (might be duplicated in case of overloading)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数的名称（在重载的情况下可能会重复）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0f221f6d414fed978269efc3ab7fe117 -->

<!-- pgdoc-cn_start sig_en=3ccd7413f94528f8e1e1e5c489394e6a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that is used by the
       function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含由该函数所使用的表的数据库的名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=3ccd7413f94528f8e1e1e5c489394e6a -->

<!-- pgdoc-cn_start sig_en=6e5da023bc7d47791b70f70c92c07320 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that is used by the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数所使用的表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6e5da023bc7d47791b70f70c92c07320 -->

<!-- pgdoc-cn_start sig_en=8db43adc9e56285a03a190f06797bb95 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that is used by the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       由函数所使用的表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8db43adc9e56285a03a190f06797bb95 -->

<!-- pgdoc-cn_start sig_en=d7c3e5b0200e64a3dcafd4915a476670 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column that is used by the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数所使用的列的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d7c3e5b0200e64a3dcafd4915a476670 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-routine-privileges">
  <title><literal>routine_privileges</literal></title>

<!-- pgdoc-cn_start sig_en=0f500c55e260aa77eb0da3b8cf6d95b2 sig_cn_org=None source=14.1 
  <para>
   The view <literal>routine_privileges</literal> identifies all
   privileges granted on functions to a currently enabled role or by a
   currently enabled role.  There is one row for each combination of function,
   grantor, and grantee.
  </para>
________________________________________________________-->
  <para>
   视图<literal>routine_privileges</literal>标识所有在函数上授予的特权，其授予者或被授予者是一个当前已被启用的角色。对于每一种函数、授予者和被授予者的组合，这里都有一行。
  </para>
<!-- pgdoc-cn_end sig_en=0f500c55e260aa77eb0da3b8cf6d95b2 -->

  <table>
<!-- pgdoc-cn_start sig_en=f0c6eabd686d715d9ded9d7a19db8efb sig_cn_org=None source=14.1 
   <title><structname>routine_privileges</structname> Columns</title>
________________________________________________________-->
   <title><structname>routine_privileges</structname> 列</title>
<!-- pgdoc-cn_end sig_en=f0c6eabd686d715d9ded9d7a19db8efb -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ef93823b7a2949262fd771a7fc97ccb8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that granted the privilege
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ef93823b7a2949262fd771a7fc97ccb8 -->

<!-- pgdoc-cn_start sig_en=47eb41136204607ed172b8a312c8d9ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that the privilege was granted to
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47eb41136204607ed172b8a312c8d9ff -->

<!-- pgdoc-cn_start sig_en=739a839874f2bf79f2e181b41be2fd92 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=739a839874f2bf79f2e181b41be2fd92 -->

<!-- pgdoc-cn_start sig_en=f69c524afe2317388c37b8ec9c284cb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f69c524afe2317388c37b8ec9c284cb4 -->

<!-- pgdoc-cn_start sig_en=50f51b6c55eb602db3cc8768dd9921c9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function.  See <xref linkend="infoschema-routines"/> for more information.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       函数的<quote>特定名称</quote>。  详请参见 <xref linkend="infoschema-routines"/>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=50f51b6c55eb602db3cc8768dd9921c9 -->

<!-- pgdoc-cn_start sig_en=273e9066d8792a2ae68cac53f2b2f98a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=273e9066d8792a2ae68cac53f2b2f98a -->

<!-- pgdoc-cn_start sig_en=8a81e81656c1a4232781ce794834ee40 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8a81e81656c1a4232781ce794834ee40 -->

<!-- pgdoc-cn_start sig_en=0f221f6d414fed978269efc3ab7fe117 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the function (might be duplicated in case of overloading)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数的名称（在重载的情况下可能会重复）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0f221f6d414fed978269efc3ab7fe117 -->

<!-- pgdoc-cn_start sig_en=47636f393c1e51fea84fdd203544b95a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       Always <literal>EXECUTE</literal> (the only privilege type for functions)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       总是为<literal>EXECUTE</literal>（函数唯一的特权类型）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47636f393c1e51fea84fdd203544b95a -->

<!-- pgdoc-cn_start sig_en=8952048d243a6f039c69a84562efd845 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特权是可授予的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8952048d243a6f039c69a84562efd845 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-routine-routine-usage">
  <title><literal>routine_routine_usage</literal></title>

<!-- pgdoc-cn_start sig_en=baad93562a3ecadd8a7ebd94a23c45b9 sig_cn_org=0e69743068e7a0775b5b05dbc30a46d7 source=15.7 
  <para>
   The view <literal>routine_routine_usage</literal> identifies all functions
   or procedures that are used by another (or the same) function or procedure,
   either in the SQL body or in parameter default expressions.  (This only
   works for unquoted SQL bodies, not quoted bodies or functions in other
   languages.)  An entry is included here only if the used function is owned
   by a currently enabled role.  (There is no such restriction on the using
   function.)
  </para>
________________________________________________________-->
  <para>
   视图<literal>routine_routine_usage</literal>标识出所有被另一个（或同一个）函数或过程使用的函数或过程，
   无论是在SQL主体中还是在参数默认表达式中。（这仅适用于未引用的SQL主体，而不适用于引用的主体或其他语言中的函数。）
   只有在被使用的函数由当前启用的角色拥有时，才会在此处包含一个条目。（对于使用函数，没有这样的限制。）
</para>
<!-- pgdoc-cn_end sig_en=baad93562a3ecadd8a7ebd94a23c45b9 -->

<!-- pgdoc-cn_start sig_en=337e8485a5a1ee106bf35ae314d39d64 sig_cn_org=None source=14.1 
  <para>
   Note that the entries for both functions in the view refer to the
   <quote>specific</quote> name of the routine, even though the column names
   are used in a way that is inconsistent with other information schema views
   about routines.  This is per SQL standard, although it is arguably a
   misdesign.  See <xref linkend="infoschema-routines"/> for more information
   about specific names.
  </para>
________________________________________________________-->
  <para>
   注意，视图中两个函数的条目都引用了例程的<quote>specific</quote>名称，
   即使列名被使用的方式与关于例程的其他信息模式视图不一致。
   这是根据SQL标准，尽管这是一个有争议的设计错误。
   有关特定名称的更多信息，请参见<xref linkend="infoschema-routines"/>。
  </para>
<!-- pgdoc-cn_end sig_en=337e8485a5a1ee106bf35ae314d39d64 -->

  <table>
<!-- pgdoc-cn_start sig_en=41b34813e881bce2a27b17f2129a1062 sig_cn_org=None source=14.1 
   <title><literal>routine_routine_usage</literal> Columns</title>
________________________________________________________-->
   <title><literal>routine_routine_usage</literal> Columns</title>
<!-- pgdoc-cn_end sig_en=41b34813e881bce2a27b17f2129a1062 -->

   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=c355e567688b2875c163a727c0581212 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the using function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含使用函数的数据库的名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c355e567688b2875c163a727c0581212 -->

<!-- pgdoc-cn_start sig_en=0034cea09176eebf6f398c80ef5cfeda sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the using function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含使用函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0034cea09176eebf6f398c80ef5cfeda -->

<!-- pgdoc-cn_start sig_en=1b416e6027c294a6f06ba4df9e86bbd6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the using function.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       使用函数的 <quote>specific name</quote> 。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1b416e6027c294a6f06ba4df9e86bbd6 -->

<!-- pgdoc-cn_start sig_en=923067eddb895397a8a671ff0a673ff6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the function that is used by the
       first function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含第一个函数使用的函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=923067eddb895397a8a671ff0a673ff6 -->

<!-- pgdoc-cn_start sig_en=71fa5e2fa76002b86c8879d07251a99a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the function that is used by the first
       function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含由第一个函数使用的函数的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=71fa5e2fa76002b86c8879d07251a99a -->

<!-- pgdoc-cn_start sig_en=8237cdaaa90e13b5c0408dcbe1ebb2c1 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function that is used by the
       first function.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       由第一个函数使用的函数的<quote>specific name</quote>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8237cdaaa90e13b5c0408dcbe1ebb2c1 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-routine-sequence-usage">
  <title><literal>routine_sequence_usage</literal></title>

<!-- pgdoc-cn_start sig_en=f54f8264734e27946a0b9083407f7195 sig_cn_org=157ee5b84946d21ef9e2c0883d606ac9 source=15.7 
  <para>
   The view <literal>routine_sequence_usage</literal> identifies all sequences
   that are used by a function or procedure, either in the SQL body or in
   parameter default expressions.  (This only works for unquoted SQL bodies,
   not quoted bodies or functions in other languages.)  A sequence is only
   included if that sequence is owned by a currently enabled role.
  </para>
________________________________________________________-->
  <para>
   视图<literal>routine_sequence_usage</literal>标识出所有被函数或过程使用的序列，
   无论是在SQL主体中还是在参数默认表达式中。（这仅适用于未引用的SQL主体，
   而不适用于引用的主体或其他语言中的函数。）只有当前启用角色拥有的序列才会被包括进来。
</para>
<!-- pgdoc-cn_end sig_en=f54f8264734e27946a0b9083407f7195 -->

  <table>
<!-- pgdoc-cn_start sig_en=cff51b52e8b14ec6f165de5b31afa435 sig_cn_org=None source=14.1 
   <title><literal>routine_sequence_usage</literal> Columns</title>
________________________________________________________-->
   <title><literal>routine_sequence_usage</literal> Columns</title>
<!-- pgdoc-cn_end sig_en=cff51b52e8b14ec6f165de5b31afa435 -->

   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=739a839874f2bf79f2e181b41be2fd92 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=739a839874f2bf79f2e181b41be2fd92 -->

<!-- pgdoc-cn_start sig_en=f69c524afe2317388c37b8ec9c284cb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f69c524afe2317388c37b8ec9c284cb4 -->

<!-- pgdoc-cn_start sig_en=50f51b6c55eb602db3cc8768dd9921c9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function.  See <xref linkend="infoschema-routines"/> for more information.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       函数的<quote>特定名称</quote>。  详请参见 <xref linkend="infoschema-routines"/>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=50f51b6c55eb602db3cc8768dd9921c9 -->

<!-- pgdoc-cn_start sig_en=273e9066d8792a2ae68cac53f2b2f98a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=273e9066d8792a2ae68cac53f2b2f98a -->

<!-- pgdoc-cn_start sig_en=8a81e81656c1a4232781ce794834ee40 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8a81e81656c1a4232781ce794834ee40 -->

<!-- pgdoc-cn_start sig_en=0f221f6d414fed978269efc3ab7fe117 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the function (might be duplicated in case of overloading)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数的名称（在重载的情况下可能会重复）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0f221f6d414fed978269efc3ab7fe117 -->

<!-- pgdoc-cn_start sig_en=d02694715b42bcfd68f7bde7e6c0456a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schema_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the sequence that is used by the
       function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schema_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含由函数使用的序列的数据库的名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d02694715b42bcfd68f7bde7e6c0456a -->

<!-- pgdoc-cn_start sig_en=36a94ce79ceeecc9854118b9f5381a74 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequence_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the sequence that is used by the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequence_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含由函数使用的序列的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=36a94ce79ceeecc9854118b9f5381a74 -->

<!-- pgdoc-cn_start sig_en=33b9447b43792f7fd3e8cc92eee013cd sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequence_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the sequence that is used by the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequence_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       函数使用的序列的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=33b9447b43792f7fd3e8cc92eee013cd -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-routine-table-usage">
  <title><literal>routine_table_usage</literal></title>

<!-- pgdoc-cn_start sig_en=b879803655e8fa51be53b21340a5f94d sig_cn_org=None source=14.1 
  <para>
   The view <literal>routine_table_usage</literal> is meant to identify all
   tables that are used by a function or procedure.  This information is
   currently not tracked by <productname>PostgreSQL</productname>.
  </para>
________________________________________________________-->
  <para>
   视图<literal>routine_table_usage</literal>用于标识函数或过程所使用的所有表。
   该信息目前不被<productname>PostgreSQL</productname>追踪。
  </para>
<!-- pgdoc-cn_end sig_en=b879803655e8fa51be53b21340a5f94d -->

  <table>
<!-- pgdoc-cn_start sig_en=f705b36314502d0c71034f1dc3d72639 sig_cn_org=None source=14.1 
   <title><literal>routine_table_usage</literal> Columns</title>
________________________________________________________-->
   <title><literal>routine_table_usage</literal> Columns</title>
<!-- pgdoc-cn_end sig_en=f705b36314502d0c71034f1dc3d72639 -->

   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=739a839874f2bf79f2e181b41be2fd92 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=739a839874f2bf79f2e181b41be2fd92 -->

<!-- pgdoc-cn_start sig_en=f69c524afe2317388c37b8ec9c284cb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f69c524afe2317388c37b8ec9c284cb4 -->

<!-- pgdoc-cn_start sig_en=50f51b6c55eb602db3cc8768dd9921c9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function.  See <xref linkend="infoschema-routines"/> for more information.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       函数的<quote>特定名称</quote>。  详请参见 <xref linkend="infoschema-routines"/>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=50f51b6c55eb602db3cc8768dd9921c9 -->

<!-- pgdoc-cn_start sig_en=273e9066d8792a2ae68cac53f2b2f98a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=273e9066d8792a2ae68cac53f2b2f98a -->

<!-- pgdoc-cn_start sig_en=8a81e81656c1a4232781ce794834ee40 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8a81e81656c1a4232781ce794834ee40 -->

<!-- pgdoc-cn_start sig_en=0f221f6d414fed978269efc3ab7fe117 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the function (might be duplicated in case of overloading)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数的名称（在重载的情况下可能会重复）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0f221f6d414fed978269efc3ab7fe117 -->

<!-- pgdoc-cn_start sig_en=3ccd7413f94528f8e1e1e5c489394e6a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that is used by the
       function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含由该函数所使用的表的数据库的名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=3ccd7413f94528f8e1e1e5c489394e6a -->

<!-- pgdoc-cn_start sig_en=6e5da023bc7d47791b70f70c92c07320 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that is used by the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数所使用的表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6e5da023bc7d47791b70f70c92c07320 -->

<!-- pgdoc-cn_start sig_en=8db43adc9e56285a03a190f06797bb95 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that is used by the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       由函数所使用的表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8db43adc9e56285a03a190f06797bb95 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-routines">
  <title><literal>routines</literal></title>

<!-- pgdoc-cn_start sig_en=de340833579343ca33ba72dd2b689814 sig_cn_org=None source=14.1 
  <para>
   The view <literal>routines</literal> contains all functions and procedures in the
   current database.  Only those functions and procedures are shown that the current
   user has access to (by way of being the owner or having some
   privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>routines</literal>包含当前数据库中所有的函数和过程。只有那些当前用户能够访问（作为拥有者或具有某些特权）的函数和过程才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=de340833579343ca33ba72dd2b689814 -->

  <table>
<!-- pgdoc-cn_start sig_en=d58003b3f224d9771379293697ab593b sig_cn_org=None source=14.1 
   <title><structname>routines</structname> Columns</title>
________________________________________________________-->
   <title><structname>routines</structname> 列</title>
<!-- pgdoc-cn_end sig_en=d58003b3f224d9771379293697ab593b -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=739a839874f2bf79f2e181b41be2fd92 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=739a839874f2bf79f2e181b41be2fd92 -->

<!-- pgdoc-cn_start sig_en=f69c524afe2317388c37b8ec9c284cb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f69c524afe2317388c37b8ec9c284cb4 -->

<!-- pgdoc-cn_start sig_en=73a15eafe9d175246af94ef0f076db35 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function.  This is a
       name that uniquely identifies the function in the schema, even
       if the real name of the function is overloaded.  The format of
       the specific name is not defined, it should only be used to
       compare it to other instances of specific routine names.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数的<quote>专用名</quote>。这是一个在模式中唯一标识该函数的名称，即使该函数真正的名称已经被重载。
       专用名的格式尚未被定义，它应当仅被用来与指定例程名称的其他实例进行比较。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=73a15eafe9d175246af94ef0f076db35 -->

<!-- pgdoc-cn_start sig_en=273e9066d8792a2ae68cac53f2b2f98a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=273e9066d8792a2ae68cac53f2b2f98a -->

<!-- pgdoc-cn_start sig_en=8a81e81656c1a4232781ce794834ee40 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8a81e81656c1a4232781ce794834ee40 -->

<!-- pgdoc-cn_start sig_en=0f221f6d414fed978269efc3ab7fe117 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the function (might be duplicated in case of overloading)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数的名称（在重载的情况下可能会重复）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0f221f6d414fed978269efc3ab7fe117 -->

<!-- pgdoc-cn_start sig_en=d9a6554d65fb0a3a54ebce8ecab853a2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_type</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>FUNCTION</literal> for a
       function, <literal>PROCEDURE</literal> for a procedure
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_type</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>FUNCTION</literal>表示是一个函数，<literal>PROCEDURE</literal>表示是一个过程
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d9a6554d65fb0a3a54ebce8ecab853a2 -->

<!-- pgdoc-cn_start sig_en=dc784706c50583a497c5076190091862 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>module_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>module_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=dc784706c50583a497c5076190091862 -->

<!-- pgdoc-cn_start sig_en=cb59d9cf6ae53b04c1fb3e7e12a48672 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>module_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>module_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=cb59d9cf6ae53b04c1fb3e7e12a48672 -->

<!-- pgdoc-cn_start sig_en=a4404da44bd463d36e0c245021afac0c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>module_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>module_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a4404da44bd463d36e0c245021afac0c -->

<!-- pgdoc-cn_start sig_en=c7de5f114ab94aaf148ea9f695017aa4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c7de5f114ab94aaf148ea9f695017aa4 -->

<!-- pgdoc-cn_start sig_en=465749501cc810543e633058f94e0189 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=465749501cc810543e633058f94e0189 -->

<!-- pgdoc-cn_start sig_en=b1e5f7cf6dc01095359873c2f2d7c511 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b1e5f7cf6dc01095359873c2f2d7c511 -->

<!-- pgdoc-cn_start sig_en=6d4981d952106121c059f01785b4508e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       Return data type of the function, if it is a built-in type, or
       <literal>ARRAY</literal> if it is some array (in that case, see
       the view <literal>element_types</literal>), else
       <literal>USER-DEFINED</literal> (in that case, the type is
       identified in <literal>type_udt_name</literal> and associated
       columns).  Null for a procedure.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       该函数的返回数据类型如果是一种内建类型，这里是该数据类型；
       如果是某种数组（此种情况见视图<literal>element_types</literal>），则为<literal>ARRAY</literal>；
       否则为<literal>USER-DEFINED</literal>（此种情况中，该类型被标识在<literal>type_udt_name</literal>和相关列中）。
       如果是过程则此项为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6d4981d952106121c059f01785b4508e -->

<!-- pgdoc-cn_start sig_en=7f7769780aa5ff506e35667605b5c5a7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7f7769780aa5ff506e35667605b5c5a7 -->

<!-- pgdoc-cn_start sig_en=99f392516552dc1b9f9303d6013005dc sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=99f392516552dc1b9f9303d6013005dc -->

<!-- pgdoc-cn_start sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 -->

<!-- pgdoc-cn_start sig_en=359de2c127ff4bf584099b3dbafa94c0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=359de2c127ff4bf584099b3dbafa94c0 -->

<!-- pgdoc-cn_start sig_en=5daa3e735df10fe5f7c15e2746e03745 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5daa3e735df10fe5f7c15e2746e03745 -->

<!-- pgdoc-cn_start sig_en=e4500ddfca1fa504707feafbafdffefc sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e4500ddfca1fa504707feafbafdffefc -->

<!-- pgdoc-cn_start sig_en=d336c6cd9f7034fc0868ab1bf0632095 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d336c6cd9f7034fc0868ab1bf0632095 -->

<!-- pgdoc-cn_start sig_en=b4435471d788400698d14dfce9be78b5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b4435471d788400698d14dfce9be78b5 -->

<!-- pgdoc-cn_start sig_en=9dbba4ab5b8978053312c5f984c6b5a3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9dbba4ab5b8978053312c5f984c6b5a3 -->

<!-- pgdoc-cn_start sig_en=be2b9d91404c3db78a7890a758263a8a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=be2b9d91404c3db78a7890a758263a8a -->

<!-- pgdoc-cn_start sig_en=5d2ad901652fff6b5095328234fc1faa sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5d2ad901652fff6b5095328234fc1faa -->

<!-- pgdoc-cn_start sig_en=bb0c43a95b2af12d5f5f5f92c87883cf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bb0c43a95b2af12d5f5f5f92c87883cf -->

<!-- pgdoc-cn_start sig_en=63e0992948f70b37422fbc70dde71735 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=63e0992948f70b37422fbc70dde71735 -->

<!-- pgdoc-cn_start sig_en=5fe75f7ef0d0f841471cfcefcc8983b9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, since this information is not applied to return data types in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是为空，因为这种信息不适用于<productname>PostgreSQL</productname>中的返回数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5fe75f7ef0d0f841471cfcefcc8983b9 -->

<!-- pgdoc-cn_start sig_en=99c7723077f371538bf85f37ab390703 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>type_udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the return data type of the function
       is defined in (always the current database).  Null for a procedure.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>type_udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数的返回数据类型所在的数据库名（总是当前数据库）。如果是过程则此项为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=99c7723077f371538bf85f37ab390703 -->

<!-- pgdoc-cn_start sig_en=b01e972621e7731d53a3b4c2ee67614d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>type_udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that the return data type of the function is
       defined in.  Null for a procedure.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>type_udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数的返回数据类型所在的模式名。如果是过程则此项为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b01e972621e7731d53a3b4c2ee67614d -->

<!-- pgdoc-cn_start sig_en=88514cc1cd74b11757beccb4e50b9799 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>type_udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the return data type of the function.  Null for a procedure.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>type_udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数的返回数据类型的名字。如果是过程则此项为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=88514cc1cd74b11757beccb4e50b9799 -->

<!-- pgdoc-cn_start sig_en=daac500380aced6577917d77130a7b3d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=daac500380aced6577917d77130a7b3d -->

<!-- pgdoc-cn_start sig_en=d78a2ca05035726a001dded35cbcbd0f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d78a2ca05035726a001dded35cbcbd0f -->

<!-- pgdoc-cn_start sig_en=c39393e41b9b3c96d06be5c5077cb108 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c39393e41b9b3c96d06be5c5077cb108 -->

<!-- pgdoc-cn_start sig_en=bb80dcd755af451face68c0645f42c4a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Always null, because arrays always have unlimited maximum cardinality in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       总是空，因为数组在<productname>PostgreSQL</productname>中总是有无限制的最大势
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bb80dcd755af451face68c0645f42c4a -->

<!-- pgdoc-cn_start sig_en=0ef635c8f4c9f896ac8fa42ccb73c920 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       An identifier of the data type descriptor of the return data
       type of this function, unique among the data type descriptors
       pertaining to the function.  This is mainly useful for joining
       with other instances of such identifiers.  (The specific format
       of the identifier is not defined and not guaranteed to remain
       the same in future versions.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该函数返回数据类型的数据类型描述符的一个标识符，在从属于该函数的数据类型标识符之中唯一。
       这主要用于与这类标识符的其他实例进行连接（该标识符的指定格式没有被定义并且不保证在未来的版本中保持相同）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0ef635c8f4c9f896ac8fa42ccb73c920 -->

<!-- pgdoc-cn_start sig_en=2a60499538adaf414e91119911c21cc7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_body</structfield> <type>character_data</type>
      </para>
      <para>
       If the function is an SQL function, then
       <literal>SQL</literal>, else <literal>EXTERNAL</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_body</structfield> <type>character_data</type>
      </para>
      <para>
       如果该函数是一个 SQL 函数，则为<literal>SQL</literal>，否则为<literal>EXTERNAL</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2a60499538adaf414e91119911c21cc7 -->

<!-- pgdoc-cn_start sig_en=cb990309791ea3fa6fa22b5526c39ff8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_definition</structfield> <type>character_data</type>
      </para>
      <para>
       The source text of the function (null if the function is not
       owned by a currently enabled role).  (According to the SQL
       standard, this column is only applicable if
       <literal>routine_body</literal> is <literal>SQL</literal>, but
       in <productname>PostgreSQL</productname> it will contain
       whatever source text was specified when the function was
       created.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>routine_definition</structfield> <type>character_data</type>
      </para>
      <para>
       该函数的源文本（如果该函数不属于一个当前已被启用的角色，则为空）。
       （根据 SQL 标准，只有<literal>routine_body</literal>为<literal>SQL</literal>时这一列才适用。
       但是在<productname>PostgreSQL</productname>中，它将会包含该函数被创建时所指定的任何源文本。）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=cb990309791ea3fa6fa22b5526c39ff8 -->

<!-- pgdoc-cn_start sig_en=bba649e62caa252e640c8ec9d833ff1a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>external_name</structfield> <type>character_data</type>
      </para>
      <para>
       If this function is a C function, then the external name (link
       symbol) of the function; else null.  (This works out to be the
       same value that is shown in
       <literal>routine_definition</literal>.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>external_name</structfield> <type>character_data</type>
      </para>
      <para>
       如果这个函数是一个 C 函数，则为该函数的外部名称（链接符号），否则为空（这会产生和显示在<literal>routine_definition</literal>中相同的值）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bba649e62caa252e640c8ec9d833ff1a -->

<!-- pgdoc-cn_start sig_en=cc10fb65dd766526a2dc1383feb2e140 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>external_language</structfield> <type>character_data</type>
      </para>
      <para>
       The language the function is written in
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>external_language</structfield> <type>character_data</type>
      </para>
      <para>
       该函数所用的语言
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=cc10fb65dd766526a2dc1383feb2e140 -->

<!-- pgdoc-cn_start sig_en=0308418f5a5b606b02e419ad517aa9bf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>parameter_style</structfield> <type>character_data</type>
      </para>
      <para>
       Always <literal>GENERAL</literal> (The SQL standard defines
       other parameter styles, which are not available in <productname>PostgreSQL</productname>.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>parameter_style</structfield> <type>character_data</type>
      </para>
      <para>
       总是<literal>GENERAL</literal>（SQL 标准定义了其他参数风格，但在<productname>PostgreSQL</productname>中不可用）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0308418f5a5b606b02e419ad517aa9bf -->

<!-- pgdoc-cn_start sig_en=600a52d61526cbd7c351d16a9a66dc1a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_deterministic</structfield> <type>yes_or_no</type>
      </para>
      <para>
       If the function is declared immutable (called deterministic in
       the SQL standard), then <literal>YES</literal>, else
       <literal>NO</literal>.  (You cannot query the other volatility
       levels available in <productname>PostgreSQL</productname> through the information schema.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_deterministic</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该函数被声明为不变（在 SQL 标准中被称为确定性的），则为<literal>YES</literal>，否则为<literal>NO</literal>
       （你不能通过该信息模式查询在<productname>PostgreSQL</productname>中可用的其他易变级别）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=600a52d61526cbd7c351d16a9a66dc1a -->

<!-- pgdoc-cn_start sig_en=eb643d99ef9d5c2cf0300c2d8a34114a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sql_data_access</structfield> <type>character_data</type>
      </para>
      <para>
       Always <literal>MODIFIES</literal>, meaning that the function
       possibly modifies SQL data.  This information is not useful for
       <productname>PostgreSQL</productname>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sql_data_access</structfield> <type>character_data</type>
      </para>
      <para>
       总是<literal>MODIFIES</literal>，表示该函数可能修改 SQL 数据。这种信息对<productname>PostgreSQL</productname>没有用处。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=eb643d99ef9d5c2cf0300c2d8a34114a -->

<!-- pgdoc-cn_start sig_en=3db736a41d1afb1041048744e432aa8c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_null_call</structfield> <type>yes_or_no</type>
      </para>
      <para>
       If the function automatically returns null if any of its
       arguments are null, then <literal>YES</literal>, else
       <literal>NO</literal>.  Null for a procedure.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_null_call</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该函数在任一参数为空时自动返回空值，则为<literal>YES</literal>，否则为<literal>NO</literal>。如果是过程则此项为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=3db736a41d1afb1041048744e432aa8c -->

<!-- pgdoc-cn_start sig_en=cec523058942131159ad7961340972a3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sql_path</structfield> <type>character_data</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sql_path</structfield> <type>character_data</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=cec523058942131159ad7961340972a3 -->

<!-- pgdoc-cn_start sig_en=8095c65eea66b251ad9edbe53778a40e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schema_level_routine</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Always <literal>YES</literal> (The opposite would be a method
       of a user-defined type, which is a feature not available in
       <productname>PostgreSQL</productname>.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schema_level_routine</structfield> <type>yes_or_no</type>
      </para>
      <para>
       总是<literal>YES</literal>（反例是一个用户定义类型的方法，这是在<productname>PostgreSQL</productname>不可用的一种特性）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8095c65eea66b251ad9edbe53778a40e -->

<!-- pgdoc-cn_start sig_en=eae913c079ea470078a51080b860125f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>max_dynamic_result_sets</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>max_dynamic_result_sets</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=eae913c079ea470078a51080b860125f -->

<!-- pgdoc-cn_start sig_en=3166865c2b8082fbdd07eb9016ceae30 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_user_defined_cast</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_user_defined_cast</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=3166865c2b8082fbdd07eb9016ceae30 -->

<!-- pgdoc-cn_start sig_en=f094a53c0e0de9cf6fa1eb07e83947bb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_implicitly_invocable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_implicitly_invocable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f094a53c0e0de9cf6fa1eb07e83947bb -->

<!-- pgdoc-cn_start sig_en=cd053f4faeb14d65d49d05aca9b4cf53 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>security_type</structfield> <type>character_data</type>
      </para>
      <para>
       If the function runs with the privileges of the current user,
       then <literal>INVOKER</literal>, if the function runs with the
       privileges of the user who defined it, then
       <literal>DEFINER</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>security_type</structfield> <type>character_data</type>
      </para>
      <para>
       如果该函数以当前用户的特权运行，则为<literal>INVOKER</literal>；如果该函数以定义它的用户的特权运行，则为<literal>DEFINER</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=cd053f4faeb14d65d49d05aca9b4cf53 -->

<!-- pgdoc-cn_start sig_en=88ffb1b7978b6977385d339d4b666bbe sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>to_sql_specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>to_sql_specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=88ffb1b7978b6977385d339d4b666bbe -->

<!-- pgdoc-cn_start sig_en=707817f293e5f7b0dab7010cf1fd1b02 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>to_sql_specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>to_sql_specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=707817f293e5f7b0dab7010cf1fd1b02 -->

<!-- pgdoc-cn_start sig_en=18d2b61f10d102bf42cd494915f92094 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>to_sql_specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>to_sql_specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=18d2b61f10d102bf42cd494915f92094 -->

<!-- pgdoc-cn_start sig_en=a2841d35120677fdbb51e397807fbdeb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>as_locator</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>as_locator</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a2841d35120677fdbb51e397807fbdeb -->

<!-- pgdoc-cn_start sig_en=a2eeec89191771e90d80b9515c303585 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>created</structfield> <type>time_stamp</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>created</structfield> <type>time_stamp</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a2eeec89191771e90d80b9515c303585 -->

<!-- pgdoc-cn_start sig_en=f7389d6114001f7427bd9b2b63021bd1 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>last_altered</structfield> <type>time_stamp</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>last_altered</structfield> <type>time_stamp</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f7389d6114001f7427bd9b2b63021bd1 -->

<!-- pgdoc-cn_start sig_en=31702cc832eb18b5d235cecfe4891a8f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>new_savepoint_level</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>new_savepoint_level</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=31702cc832eb18b5d235cecfe4891a8f -->

<!-- pgdoc-cn_start sig_en=d8b01310384f62b35d67adf6e175bf83 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_udt_dependent</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Currently always <literal>NO</literal>.  The alternative
       <literal>YES</literal> applies to a feature not available in
       <productname>PostgreSQL</productname>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_udt_dependent</structfield> <type>yes_or_no</type>
      </para>
      <para>
       当前总是<literal>NO</literal>。另一个选项<literal>YES</literal>应用于一个<productname>PostgreSQL</productname>中不可用的特性。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d8b01310384f62b35d67adf6e175bf83 -->

<!-- pgdoc-cn_start sig_en=7842a512bb04b58443944ef5708fe23a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_from_data_type</structfield> <type>character_data</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_from_data_type</structfield> <type>character_data</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7842a512bb04b58443944ef5708fe23a -->

<!-- pgdoc-cn_start sig_en=582bc51b0b3988e1d3fd70c58c3204b4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_as_locator</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_as_locator</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=582bc51b0b3988e1d3fd70c58c3204b4 -->

<!-- pgdoc-cn_start sig_en=4741b59879027d1332f68afcf1de650d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_char_max_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_char_max_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4741b59879027d1332f68afcf1de650d -->

<!-- pgdoc-cn_start sig_en=3ff599c2113da8a9ee4942730ce0594b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_char_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_char_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=3ff599c2113da8a9ee4942730ce0594b -->

<!-- pgdoc-cn_start sig_en=d94271be889d9ef3f93165de61581e68 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_char_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_char_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d94271be889d9ef3f93165de61581e68 -->

<!-- pgdoc-cn_start sig_en=ee2b5d8f9d4e4f160afe4731734e5aa5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_char_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_char_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ee2b5d8f9d4e4f160afe4731734e5aa5 -->

<!-- pgdoc-cn_start sig_en=fcbf2ef932269708d8c21fbd0d70fa64 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_char_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_char_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fcbf2ef932269708d8c21fbd0d70fa64 -->

<!-- pgdoc-cn_start sig_en=fa412ad8c7f560223306146bb5f5f227 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fa412ad8c7f560223306146bb5f5f227 -->

<!-- pgdoc-cn_start sig_en=62a05893f7c73a24f3fd86c41d72f315 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=62a05893f7c73a24f3fd86c41d72f315 -->

<!-- pgdoc-cn_start sig_en=aa4264b6fb3892e55472d04f5c01f330 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=aa4264b6fb3892e55472d04f5c01f330 -->

<!-- pgdoc-cn_start sig_en=b737d34a1325632b5d4d4c61c1d3e036 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b737d34a1325632b5d4d4c61c1d3e036 -->

<!-- pgdoc-cn_start sig_en=183e523a06cc3542d2183912aeb807ec sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=183e523a06cc3542d2183912aeb807ec -->

<!-- pgdoc-cn_start sig_en=51bd2a18b7029ba522aa9bb066938a4e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=51bd2a18b7029ba522aa9bb066938a4e -->

<!-- pgdoc-cn_start sig_en=4e37643ed08c04a0a462b61d99ca5416 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4e37643ed08c04a0a462b61d99ca5416 -->

<!-- pgdoc-cn_start sig_en=b5f5749fc37f2d69a00b559aee162fda sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b5f5749fc37f2d69a00b559aee162fda -->

<!-- pgdoc-cn_start sig_en=2d51ee39cf173f71aba267e56a5d2b69 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2d51ee39cf173f71aba267e56a5d2b69 -->

<!-- pgdoc-cn_start sig_en=0eb2e930bb6beb45ce05c880b2f7f1a4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_type_udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_type_udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0eb2e930bb6beb45ce05c880b2f7f1a4 -->

<!-- pgdoc-cn_start sig_en=368be974dd4f17ded44f42a912569101 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_type_udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_type_udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=368be974dd4f17ded44f42a912569101 -->

<!-- pgdoc-cn_start sig_en=1f22783232271a20c90050bd2fca0e98 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_type_udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_type_udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1f22783232271a20c90050bd2fca0e98 -->

<!-- pgdoc-cn_start sig_en=c31405efe3c949f4227f1990232b15a8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_scope_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c31405efe3c949f4227f1990232b15a8 -->

<!-- pgdoc-cn_start sig_en=c6e7097496cc6e171de5817b378402b8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_scope_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c6e7097496cc6e171de5817b378402b8 -->

<!-- pgdoc-cn_start sig_en=469c3ab5e5d60c428e403e50e1d1dc3b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_scope_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=469c3ab5e5d60c428e403e50e1d1dc3b -->

<!-- pgdoc-cn_start sig_en=0ab5962a9be6700da02a05730c72ca68 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_maximum_cardinality</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0ab5962a9be6700da02a05730c72ca68 -->

<!-- pgdoc-cn_start sig_en=101ba6ba6813f0fab547a6b98a9d0aff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>result_cast_dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=101ba6ba6813f0fab547a6b98a9d0aff -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-schemata">
  <title><literal>schemata</literal></title>

<!-- pgdoc-cn_start sig_en=d6ab7bdf49864ebe49c4edc3b5a14067 sig_cn_org=None source=14.1 
  <para>
   The view <literal>schemata</literal> contains all schemas in the current
   database that the current user has access to (by way of being the owner or
   having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>schemata</literal>包含当前数据库中被当前用户（作为属主或具有某些特权）可访问的所有模式。
  </para>
<!-- pgdoc-cn_end sig_en=d6ab7bdf49864ebe49c4edc3b5a14067 -->

  <table>
<!-- pgdoc-cn_start sig_en=64cea6247018b360f36c8162853f772a sig_cn_org=None source=14.1 
   <title><structname>schemata</structname> Columns</title>
________________________________________________________-->
   <title><structname>schemata</structname> 列</title>
<!-- pgdoc-cn_end sig_en=64cea6247018b360f36c8162853f772a -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=65e553586ae1f9843f03a4b3eb950328 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>catalog_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the schema is contained in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>catalog_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该模式所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=65e553586ae1f9843f03a4b3eb950328 -->

<!-- pgdoc-cn_start sig_en=ba635d29bcf6b333145cb7e2d9bc938f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schema_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schema_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ba635d29bcf6b333145cb7e2d9bc938f -->

<!-- pgdoc-cn_start sig_en=bcce40ecd80150a4b321e7794f2a960c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schema_owner</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the owner of the schema
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schema_owner</structfield> <type>sql_identifier</type>
      </para>
      <para>
       模式拥有者的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bcce40ecd80150a4b321e7794f2a960c -->

<!-- pgdoc-cn_start sig_en=908d6f02c27329da8027ffdc934582eb sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=908d6f02c27329da8027ffdc934582eb -->

<!-- pgdoc-cn_start sig_en=640c6e30716a92e9947e86fb799e820a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=640c6e30716a92e9947e86fb799e820a -->

<!-- pgdoc-cn_start sig_en=d908d9e4ef6d1f90f153afa8fe5b4ebe sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d908d9e4ef6d1f90f153afa8fe5b4ebe -->

<!-- pgdoc-cn_start sig_en=cec523058942131159ad7961340972a3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sql_path</structfield> <type>character_data</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sql_path</structfield> <type>character_data</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=cec523058942131159ad7961340972a3 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sequences">
  <title><literal>sequences</literal></title>

<!-- pgdoc-cn_start sig_en=2abf6bb19144c53c86d62abbbfcea1ca sig_cn_org=None source=14.1 
  <para>
   The view <literal>sequences</literal> contains all sequences
   defined in the current database.  Only those sequences are shown
   that the current user has access to (by way of being the owner or
   having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>sequences</literal>包含所有定义在当前数据库中的序列。只有那些当前用户能够访问（作为拥有者或具有某些特权）的序列才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=2abf6bb19144c53c86d62abbbfcea1ca -->

  <table>
<!-- pgdoc-cn_start sig_en=1c30dcd97169e41613afbd87cdeae186 sig_cn_org=None source=14.1 
   <title><structname>sequences</structname> Columns</title>
________________________________________________________-->
   <title><structname>sequences</structname> 列</title>
<!-- pgdoc-cn_end sig_en=1c30dcd97169e41613afbd87cdeae186 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=98899d23b65da6cd925ed774cb531f9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequence_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the sequence (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequence_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该序列的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=98899d23b65da6cd925ed774cb531f9d -->

<!-- pgdoc-cn_start sig_en=005f5eb43bb84400b91c421c6fa9c909 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequence_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the sequence
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequence_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该序列的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=005f5eb43bb84400b91c421c6fa9c909 -->

<!-- pgdoc-cn_start sig_en=ee732b2ef59eea3dc6cfa1064309026d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequence_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the sequence
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequence_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       序列的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ee732b2ef59eea3dc6cfa1064309026d -->

<!-- pgdoc-cn_start sig_en=aad961e2f280cc8643890ad76ae9606e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       The data type of the sequence.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       序列的数据类型
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=aad961e2f280cc8643890ad76ae9606e -->

<!-- pgdoc-cn_start sig_en=1e1149d80b47fd61b54afce329015bf7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       This column contains the (declared or implicit) precision of
       the sequence data type (see above).  The precision indicates
       the number of significant digits.  It can be expressed in
       decimal (base 10) or binary (base 2) terms, as specified in the
       column <literal>numeric_precision_radix</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       这列包含这个序列数据类型（见上文）的（声明的或隐式的）精度。精度指示了有效位数。
       它可以按照列<literal>numeric_precision_radix</literal>中指定的被表示为十进制（基于 10）或二进制（基于 2）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1e1149d80b47fd61b54afce329015bf7 -->

<!-- pgdoc-cn_start sig_en=242054fc3d8e138ba9e885b09080a335 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       This column indicates in which base the values in the columns
       <literal>numeric_precision</literal> and
       <literal>numeric_scale</literal> are expressed.  The value is
       either 2 or 10.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       这一列指示<literal>numeric_precision</literal>和<literal>numeric_scale</literal>列中的值是基于什么来表示。该值为 2 或 10。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=242054fc3d8e138ba9e885b09080a335 -->

<!-- pgdoc-cn_start sig_en=2a5997910b1a71bd68230be4af7023a4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       This column contains the (declared or implicit) scale of the
       sequence data type (see above).  The scale indicates the number
       of significant digits to the right of the decimal point.  It
       can be expressed in decimal (base 10) or binary (base 2) terms,
       as specified in the column
       <literal>numeric_precision_radix</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       这列包含这个序列数据类型（见上文）的（声明的或隐式的）比例。比例指示了有效位数。
       它可以按照列<literal>numeric_precision_radix</literal>中指定的被表示为十进制（基于 10）或二进制（基于 2）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2a5997910b1a71bd68230be4af7023a4 -->

<!-- pgdoc-cn_start sig_en=920bba9d28a08546bbc75ae8eb6921df sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>start_value</structfield> <type>character_data</type>
      </para>
      <para>
       The start value of the sequence
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>start_value</structfield> <type>character_data</type>
      </para>
      <para>
       该序列的开始值
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=920bba9d28a08546bbc75ae8eb6921df -->

<!-- pgdoc-cn_start sig_en=f60c8a0b3cbbb500f3d6a831c5e0db04 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>minimum_value</structfield> <type>character_data</type>
      </para>
      <para>
       The minimum value of the sequence
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>minimum_value</structfield> <type>character_data</type>
      </para>
      <para>
       该序列的最小值
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f60c8a0b3cbbb500f3d6a831c5e0db04 -->

<!-- pgdoc-cn_start sig_en=6d5543e51546f926b507e6ff0b1dc630 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_value</structfield> <type>character_data</type>
      </para>
      <para>
       The maximum value of the sequence
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maximum_value</structfield> <type>character_data</type>
      </para>
      <para>
       该序列的最大值
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6d5543e51546f926b507e6ff0b1dc630 -->

<!-- pgdoc-cn_start sig_en=d3d295af07e8b400f10cdf90e7564169 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>increment</structfield> <type>character_data</type>
      </para>
      <para>
       The increment of the sequence
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>increment</structfield> <type>character_data</type>
      </para>
      <para>
       该序列的增量
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d3d295af07e8b400f10cdf90e7564169 -->

<!-- pgdoc-cn_start sig_en=079b748dadeba20ef763d065b634b278 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>cycle_option</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the sequence cycles, else <literal>NO</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>cycle_option</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该序列会循环，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=079b748dadeba20ef763d065b634b278 -->
    </tbody>
   </tgroup>
  </table>

<!-- pgdoc-cn_start sig_en=cc529a25397b3c8d7e8a07ad68cc915a sig_cn_org=None source=14.1 
  <para>
   Note that in accordance with the SQL standard, the start, minimum,
   maximum, and increment values are returned as character strings.
  </para>
________________________________________________________-->
  <para>
   注意依照 SQL 标准，开始值、最小值、最大值和增量值被作为字符串返回。
  </para>
<!-- pgdoc-cn_end sig_en=cc529a25397b3c8d7e8a07ad68cc915a -->
 </sect1>

 <sect1 id="infoschema-sql-features">
  <title><literal>sql_features</literal></title>

<!-- pgdoc-cn_start sig_en=c64e05c45bb0533798ae799f08f47e3a sig_cn_org=None source=14.1 
  <para>
   The table <literal>sql_features</literal> contains information
   about which formal features defined in the SQL standard are
   supported by <productname>PostgreSQL</productname>.  This is the
   same information that is presented in <xref linkend="features"/>.
   There you can also find some additional background information.
  </para>
________________________________________________________-->
  <para>
   表<literal>sql_features</literal>包含的信息指示了哪些 SQL 标准中定义的正式特性被<productname>PostgreSQL</productname>所支持。这和<xref linkend="features"/>中的信息一样。这里你也能找到一些额外的背景信息。
  </para>
<!-- pgdoc-cn_end sig_en=c64e05c45bb0533798ae799f08f47e3a -->

  <table>
<!-- pgdoc-cn_start sig_en=df9b16fa70073c56f8f16bc168f0f299 sig_cn_org=None source=14.1 
   <title><structname>sql_features</structname> Columns</title>
________________________________________________________-->
   <title><structname>sql_features</structname> 列</title>
<!-- pgdoc-cn_end sig_en=df9b16fa70073c56f8f16bc168f0f299 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=0870eddf443b46e26bc1e6bbb74b5b86 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>feature_id</structfield> <type>character_data</type>
      </para>
      <para>
       Identifier string of the feature
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>feature_id</structfield> <type>character_data</type>
      </para>
      <para>
       特性的标识符字符串
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0870eddf443b46e26bc1e6bbb74b5b86 -->

<!-- pgdoc-cn_start sig_en=274fefce1a064941f6398e539d059ea2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>feature_name</structfield> <type>character_data</type>
      </para>
      <para>
       Descriptive name of the feature
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>feature_name</structfield> <type>character_data</type>
      </para>
      <para>
       特性的描述性名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=274fefce1a064941f6398e539d059ea2 -->

<!-- pgdoc-cn_start sig_en=b5f542b12ea86d244b039237f9d7b330 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sub_feature_id</structfield> <type>character_data</type>
      </para>
      <para>
       Identifier string of the subfeature, or a zero-length string if not a subfeature
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sub_feature_id</structfield> <type>character_data</type>
      </para>
      <para>
       该子特性的标识符字符串，或者如果不是一个子特性则为一个长度为零的字符串
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b5f542b12ea86d244b039237f9d7b330 -->

<!-- pgdoc-cn_start sig_en=822ffde613fa80861973408612d7ca1a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sub_feature_name</structfield> <type>character_data</type>
      </para>
      <para>
       Descriptive name of the subfeature, or a zero-length string if not a subfeature
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sub_feature_name</structfield> <type>character_data</type>
      </para>
      <para>
       该子特性的描述性名称，或者如果不是一个子特性则为一个长度为零的字符串
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=822ffde613fa80861973408612d7ca1a -->

<!-- pgdoc-cn_start sig_en=8e796fe82038dfdcd3abc3793233b855 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_supported</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the feature is fully supported by the
       current version of <productname>PostgreSQL</productname>, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_supported</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特性被当前版本的<productname>PostgreSQL</productname>完全支持，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8e796fe82038dfdcd3abc3793233b855 -->

<!-- pgdoc-cn_start sig_en=a4db9f8bd1b073c3e5670ee4cb8c35f6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_verified_by</structfield> <type>character_data</type>
      </para>
      <para>
       Always null, since the <productname>PostgreSQL</productname> development group does not
       perform formal testing of feature conformance
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_verified_by</structfield> <type>character_data</type>
      </para>
      <para>
       总是为空，因为<productname>PostgreSQL</productname>开发组没有对特性的一致性执行正式的测试
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a4db9f8bd1b073c3e5670ee4cb8c35f6 -->

<!-- pgdoc-cn_start sig_en=49cb67643892e67460d6f3a64a8190f8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>comments</structfield> <type>character_data</type>
      </para>
      <para>
       Possibly a comment about the supported status of the feature
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>comments</structfield> <type>character_data</type>
      </para>
      <para>
       可能会是关于该特性被支持状态的一段注释
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=49cb67643892e67460d6f3a64a8190f8 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sql-implementation-info">
  <title><literal>sql_implementation_info</literal></title>

<!-- pgdoc-cn_start sig_en=192393ac44ecb1898842cbb8a69b309f sig_cn_org=None source=14.1 
  <para>
   The table <literal>sql_implementation_info</literal> contains
   information about various aspects that are left
   implementation-defined by the SQL standard.  This information is
   primarily intended for use in the context of the ODBC interface;
   users of other interfaces will probably find this information to be
   of little use.  For this reason, the individual implementation
   information items are not described here; you will find them in the
   description of the ODBC interface.
  </para>
________________________________________________________-->
  <para>
   表<literal>sql_implementation_info</literal>包含的信息指示剩下的由 SQL 标准实现定义的多个方面。这类信息主要用来在 ODBC 接口的情境中使用；其它接口的用户可能将发现这类信息用处不大。由于这个原因，个体实现信息项没有在这里描述，你将会在 ODBC 接口的描述中找到它们。
  </para>
<!-- pgdoc-cn_end sig_en=192393ac44ecb1898842cbb8a69b309f -->

  <table>
<!-- pgdoc-cn_start sig_en=489949b75ffa738a62ea2a2c9b896a47 sig_cn_org=None source=14.1 
   <title><structname>sql_implementation_info</structname> Columns</title>
________________________________________________________-->
   <title><structname>sql_implementation_info</structname> 列</title>
<!-- pgdoc-cn_end sig_en=489949b75ffa738a62ea2a2c9b896a47 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=eb9d4ff02b6d107ca0cd6b8a66537838 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>implementation_info_id</structfield> <type>character_data</type>
      </para>
      <para>
       Identifier string of the implementation information item
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>implementation_info_id</structfield> <type>character_data</type>
      </para>
      <para>
       实现信息项的标识符字符串
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=eb9d4ff02b6d107ca0cd6b8a66537838 -->

<!-- pgdoc-cn_start sig_en=67a3a44fbe31faaa47816d61e036c12a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>implementation_info_name</structfield> <type>character_data</type>
      </para>
      <para>
       Descriptive name of the implementation information item
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>implementation_info_name</structfield> <type>character_data</type>
      </para>
      <para>
       实现信息项的描述性名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=67a3a44fbe31faaa47816d61e036c12a -->

<!-- pgdoc-cn_start sig_en=b94278555b3804ea7763484056be28d2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>integer_value</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Value of the implementation information item, or null if the
       value is contained in the column
       <literal>character_value</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>integer_value</structfield> <type>cardinal_number</type>
      </para>
      <para>
       该实现信息项的值，如果该值被包含在<literal>character_value</literal>列中则为空
       <literal>character_value</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b94278555b3804ea7763484056be28d2 -->

<!-- pgdoc-cn_start sig_en=1bf28a1caca3403671f611a2093387d0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_value</structfield> <type>character_data</type>
      </para>
      <para>
       Value of the implementation information item, or null if the
       value is contained in the column
       <literal>integer_value</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_value</structfield> <type>character_data</type>
      </para>
      <para>
       该实现信息项的值，如果该值被包含在<literal>integer_value</literal>列中则为空
       <literal>integer_value</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1bf28a1caca3403671f611a2093387d0 -->

<!-- pgdoc-cn_start sig_en=ded2d29d646dcec4285aa24fa2e1d839 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>comments</structfield> <type>character_data</type>
      </para>
      <para>
       Possibly a comment pertaining to the implementation information item
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>comments</structfield> <type>character_data</type>
      </para>
      <para>
       可能是从属于该实现信息项的一段注释
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ded2d29d646dcec4285aa24fa2e1d839 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sql-parts">
  <title><literal>sql_parts</literal></title>

<!-- pgdoc-cn_start sig_en=243fad7b453758c467ce1311c271cb3b sig_cn_org=None source=14.1 
  <para>
   The table <literal>sql_parts</literal> contains information about
   which of the several parts of the SQL standard are supported by
   <productname>PostgreSQL</productname>.
  </para>
________________________________________________________-->
  <para>
   表<literal>sql_parts</literal>包含的信息指示哪些定义在 SQL 标准中的部分被<productname>PostgreSQL</productname>支持。
  </para>
<!-- pgdoc-cn_end sig_en=243fad7b453758c467ce1311c271cb3b -->

  <table>
<!-- pgdoc-cn_start sig_en=34af156fbe60a875a63645f7e7e37049 sig_cn_org=None source=14.1 
   <title><structname>sql_parts</structname> Columns</title>
________________________________________________________-->
   <title><structname>sql_parts</structname> 列</title>
<!-- pgdoc-cn_end sig_en=34af156fbe60a875a63645f7e7e37049 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=4053af87fc160e34148925352df763e7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>feature_id</structfield> <type>character_data</type>
      </para>
      <para>
       An identifier string containing the number of the part
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>feature_id</structfield> <type>character_data</type>
      </para>
      <para>
       包含该部分编号的一个标识符字符串
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4053af87fc160e34148925352df763e7 -->

<!-- pgdoc-cn_start sig_en=fa8af57c956200b261d5bb70c14053dc sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>feature_name</structfield> <type>character_data</type>
      </para>
      <para>
       Descriptive name of the part
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>feature_name</structfield> <type>character_data</type>
      </para>
      <para>
       该部分的描述性名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fa8af57c956200b261d5bb70c14053dc -->

<!-- pgdoc-cn_start sig_en=99ee24c9f86938ad1758d390dccfdb26 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_supported</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the part is fully supported by the
       current version of <productname>PostgreSQL</productname>,
       <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_supported</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果当前版本的<productname>PostgreSQL</productname>完全支持该部分，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=99ee24c9f86938ad1758d390dccfdb26 -->

<!-- pgdoc-cn_start sig_en=a4db9f8bd1b073c3e5670ee4cb8c35f6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_verified_by</structfield> <type>character_data</type>
      </para>
      <para>
       Always null, since the <productname>PostgreSQL</productname> development group does not
       perform formal testing of feature conformance
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_verified_by</structfield> <type>character_data</type>
      </para>
      <para>
       总是为空，因为<productname>PostgreSQL</productname>开发组没有对特性的一致性执行正式的测试
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a4db9f8bd1b073c3e5670ee4cb8c35f6 -->

<!-- pgdoc-cn_start sig_en=a40ddbe7fe230d947e8cbb8b67134fbe sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>comments</structfield> <type>character_data</type>
      </para>
      <para>
       Possibly a comment about the supported status of the part
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>comments</structfield> <type>character_data</type>
      </para>
      <para>
       可能会是关于该部分被支持状态的一段注释
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a40ddbe7fe230d947e8cbb8b67134fbe -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-sql-sizing">
  <title><literal>sql_sizing</literal></title>

<!-- pgdoc-cn_start sig_en=59f0c2bae58c7718b1b631dffd015d47 sig_cn_org=None source=14.1 
  <para>
   The table <literal>sql_sizing</literal> contains information about
   various size limits and maximum values in
   <productname>PostgreSQL</productname>.  This information is
   primarily intended for use in the context of the ODBC interface;
   users of other interfaces will probably find this information to be
   of little use.  For this reason, the individual sizing items are
   not described here; you will find them in the description of the
   ODBC interface.
  </para>
________________________________________________________-->
  <para>
   表<literal>sql_sizing</literal>包含有关<productname>PostgreSQL</productname>中多种尺寸限制和最大值的信息。这类信息主要用来在 ODBC 接口的情境中使用；其它接口的用户可能将发现这类信息用处不大。由于这个原因，个体实现信息项没有在这里描述，你将会在 ODBC 接口的描述中找到它们。
  </para>
<!-- pgdoc-cn_end sig_en=59f0c2bae58c7718b1b631dffd015d47 -->

  <table>
<!-- pgdoc-cn_start sig_en=4d30431d17111b63427ac6e2ae30b764 sig_cn_org=None source=14.1 
   <title><structname>sql_sizing</structname> Columns</title>
________________________________________________________-->
   <title><structname>sql_sizing</structname> 列</title>
<!-- pgdoc-cn_end sig_en=4d30431d17111b63427ac6e2ae30b764 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=1020429bb914a6137c27086f3c82e9d4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sizing_id</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Identifier of the sizing item
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sizing_id</structfield> <type>cardinal_number</type>
      </para>
      <para>
       尺寸项的标识符
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1020429bb914a6137c27086f3c82e9d4 -->

<!-- pgdoc-cn_start sig_en=b6b725a1aae9fd074aa573c2d41bf600 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sizing_name</structfield> <type>character_data</type>
      </para>
      <para>
       Descriptive name of the sizing item
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sizing_name</structfield> <type>character_data</type>
      </para>
      <para>
       尺寸项的描述性名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b6b725a1aae9fd074aa573c2d41bf600 -->

<!-- pgdoc-cn_start sig_en=5d94ecc066c3829cbbdefeac38c4d8c2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>supported_value</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Value of the sizing item, or 0 if the size is unlimited or
       cannot be determined, or null if the features for which the
       sizing item is applicable are not supported
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>supported_value</structfield> <type>cardinal_number</type>
      </para>
      <para>
       尺寸项的值，如果尺寸是不受限制或不能确定的则为 0，如果尺寸项适用的特性不受支持则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5d94ecc066c3829cbbdefeac38c4d8c2 -->

<!-- pgdoc-cn_start sig_en=81d54c0156c53e100f2fb5c0e8c7d4ae sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>comments</structfield> <type>character_data</type>
      </para>
      <para>
       Possibly a comment pertaining to the sizing item
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>comments</structfield> <type>character_data</type>
      </para>
      <para>
       可能是从属于尺寸项的一段注释
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=81d54c0156c53e100f2fb5c0e8c7d4ae -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-table-constraints">
  <title><literal>table_constraints</literal></title>

<!-- pgdoc-cn_start sig_en=f4c455ae1e87cd8ae566997295493689 sig_cn_org=None source=14.1 
  <para>
   The view <literal>table_constraints</literal> contains all
   constraints belonging to tables that the current user owns or has
   some privilege other than <literal>SELECT</literal> on.
  </para>
________________________________________________________-->
  <para>
   视图<literal>table_constraints</literal>包含属于特定表的所有约束，这些表要满足的条件是：当前用户拥有表或者是当前用户在表上具有某种除<literal>SELECT</literal>之外的特权。
  </para>
<!-- pgdoc-cn_end sig_en=f4c455ae1e87cd8ae566997295493689 -->

  <table>
<!-- pgdoc-cn_start sig_en=67e35a2bd5d0f8c5ee042f65e77e5f17 sig_cn_org=None source=14.1 
   <title><structname>table_constraints</structname> Columns</title>
________________________________________________________-->
   <title><structname>table_constraints</structname> 列</title>
<!-- pgdoc-cn_end sig_en=67e35a2bd5d0f8c5ee042f65e77e5f17 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=b67d42fba8a9bc1aab73b4f6fcb1b4b7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the constraint (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该约束的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b67d42fba8a9bc1aab73b4f6fcb1b4b7 -->

<!-- pgdoc-cn_start sig_en=053e3c41481ba2ff26264788fdb8bfcd sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该约束的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=053e3c41481ba2ff26264788fdb8bfcd -->

<!-- pgdoc-cn_start sig_en=f19ff222ebf15251411dc8bf2ad9a521 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the constraint
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       约束的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f19ff222ebf15251411dc8bf2ad9a521 -->

<!-- pgdoc-cn_start sig_en=8b29761a97c41d6a24f623a9c93caba0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8b29761a97c41d6a24f623a9c93caba0 -->

<!-- pgdoc-cn_start sig_en=4e34e0508cd6b953de99406b1a9c88c3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4e34e0508cd6b953de99406b1a9c88c3 -->

<!-- pgdoc-cn_start sig_en=2170e2f48a321ca74d5f420a104984f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2170e2f48a321ca74d5f420a104984f9 -->

<!-- pgdoc-cn_start sig_en=722e0a0c445fb9755d55d071c9233829 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_type</structfield> <type>character_data</type>
      </para>
      <para>
       Type of the constraint: <literal>CHECK</literal>,
       <literal>FOREIGN KEY</literal>, <literal>PRIMARY KEY</literal>,
       or <literal>UNIQUE</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>constraint_type</structfield> <type>character_data</type>
      </para>
      <para>
       该约束的类型：<literal>CHECK</literal>、
       <literal>FOREIGN KEY</literal>、<literal>PRIMARY KEY</literal>或<literal>UNIQUE</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=722e0a0c445fb9755d55d071c9233829 -->

<!-- pgdoc-cn_start sig_en=c06b1dcf237079fd5fbcf137e20d8f62 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_deferrable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the constraint is deferrable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_deferrable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该约束是可延迟的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c06b1dcf237079fd5fbcf137e20d8f62 -->

<!-- pgdoc-cn_start sig_en=9b3b08b03772d3efd9ada27b338ddbc3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>initially_deferred</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the constraint is deferrable and initially deferred, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>initially_deferred</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该约束是可延迟的且初始就被延迟，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9b3b08b03772d3efd9ada27b338ddbc3 -->

<!-- pgdoc-cn_start sig_en=bb6245e78e5423d619f65051ba421b74 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>enforced</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in
       <productname>PostgreSQL</productname> (currently always
       <literal>YES</literal>)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>enforced</structfield> <type>yes_or_no</type>
      </para>
      <para>
       适用于一种<productname>PostgreSQL</productname>中不可用的特性（当前总是<literal>YES</literal>）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bb6245e78e5423d619f65051ba421b74 -->

<!-- pgdoc-cn_start sig_en=dcaa65f7d98196c62fca8f6cae8464ad sig_cn_org=6ac0c2c880d44eb782e1af077cd25e5c source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>nulls_distinct</structfield> <type>yes_or_no</type>
      </para>
      <para>
       If the constraint is a unique constraint, then <literal>YES</literal>
       if the constraint treats nulls as distinct or <literal>NO</literal> if
       it treats nulls as not distinct, otherwise null for other types of
       constraints.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>nulls_distinct</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果约束是唯一约束，则<literal>是</literal>表示约束将空值视为不同，<literal>否</literal>表示约束将空值视为相同，否则对于其他类型的约束为null。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=dcaa65f7d98196c62fca8f6cae8464ad -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-table-privileges">
  <title><literal>table_privileges</literal></title>

<!-- pgdoc-cn_start sig_en=1c0d51a8251bafdaae7eb8a3a14ba44c sig_cn_org=None source=14.1 
  <para>
   The view <literal>table_privileges</literal> identifies all
   privileges granted on tables or views to a currently enabled role
   or by a currently enabled role.  There is one row for each
   combination of table, grantor, and grantee.
  </para>
________________________________________________________-->
  <para>
   视图<literal>table_privileges</literal>标识在表或视图上所有被授予的特权，这些特权必须是被一个当前已被启用角色授出或者被授予给一个当前已被启用角色。对每一个表、授予者和被授予者的组合都有一行。
  </para>
<!-- pgdoc-cn_end sig_en=1c0d51a8251bafdaae7eb8a3a14ba44c -->

  <table>
<!-- pgdoc-cn_start sig_en=86a7838101a75a7aa6810a89ac5120b0 sig_cn_org=None source=14.1 
   <title><structname>table_privileges</structname> Columns</title>
________________________________________________________-->
   <title><structname>table_privileges</structname> 列</title>
<!-- pgdoc-cn_end sig_en=86a7838101a75a7aa6810a89ac5120b0 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ef93823b7a2949262fd771a7fc97ccb8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that granted the privilege
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ef93823b7a2949262fd771a7fc97ccb8 -->

<!-- pgdoc-cn_start sig_en=47eb41136204607ed172b8a312c8d9ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that the privilege was granted to
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47eb41136204607ed172b8a312c8d9ff -->

<!-- pgdoc-cn_start sig_en=8b29761a97c41d6a24f623a9c93caba0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8b29761a97c41d6a24f623a9c93caba0 -->

<!-- pgdoc-cn_start sig_en=4e34e0508cd6b953de99406b1a9c88c3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4e34e0508cd6b953de99406b1a9c88c3 -->

<!-- pgdoc-cn_start sig_en=2170e2f48a321ca74d5f420a104984f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2170e2f48a321ca74d5f420a104984f9 -->

<!-- pgdoc-cn_start sig_en=7582c3ec4aec4ff064c29a6580f56917 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       Type of the privilege: <literal>SELECT</literal>,
       <literal>INSERT</literal>, <literal>UPDATE</literal>,
       <literal>DELETE</literal>, <literal>TRUNCATE</literal>,
       <literal>REFERENCES</literal>, or <literal>TRIGGER</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       该特权的类型：<literal>SELECT</literal>、
       <literal>INSERT</literal>、<literal>UPDATE</literal>、
       <literal>DELETE</literal>、<literal>TRUNCATE</literal>、
       <literal>REFERENCES</literal>或<literal>TRIGGER</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7582c3ec4aec4ff064c29a6580f56917 -->

<!-- pgdoc-cn_start sig_en=8952048d243a6f039c69a84562efd845 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特权是可授予的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8952048d243a6f039c69a84562efd845 -->

<!-- pgdoc-cn_start sig_en=06f818627cd0a23e92971a46cab821a8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>with_hierarchy</structfield> <type>yes_or_no</type>
      </para>
      <para>
       In the SQL standard, <literal>WITH HIERARCHY OPTION</literal>
       is a separate (sub-)privilege allowing certain operations on
       table inheritance hierarchies.  In PostgreSQL, this is included
       in the <literal>SELECT</literal> privilege, so this column
       shows <literal>YES</literal> if the privilege
       is <literal>SELECT</literal>, else <literal>NO</literal>.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>with_hierarchy</structfield> <type>yes_or_no</type>
      </para>
      <para>
       在 SQL 标准中，<literal>WITH HIERARCHY OPTION</literal>是一个独立的（子）特权，它允许在表继承层级上的特定操作。
       在 PostgreSQL 中，这被包括在<literal>SELECT</literal>特权中，因此这一列在特权为<literal>SELECT</literal>时显示<literal>YES</literal>，其他时候显示<literal>NO</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=06f818627cd0a23e92971a46cab821a8 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-tables">
  <title><literal>tables</literal></title>

<!-- pgdoc-cn_start sig_en=0c1eba182e438b991ff0375a78b270cb sig_cn_org=None source=14.1 
  <para>
   The view <literal>tables</literal> contains all tables and views
   defined in the current database.  Only those tables and views are
   shown that the current user has access to (by way of being the
   owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>tables</literal>包含定义在当前数据库中的所有表和视图。只有那些当前用户能够访问（作为拥有者或具有某些特权）的表和视图才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=0c1eba182e438b991ff0375a78b270cb -->

  <table>
<!-- pgdoc-cn_start sig_en=9a2e5a7793da85829c657e7fdfc03f88 sig_cn_org=None source=14.1 
   <title><structname>tables</structname> Columns</title>
________________________________________________________-->
   <title><structname>tables</structname> 列</title>
<!-- pgdoc-cn_end sig_en=9a2e5a7793da85829c657e7fdfc03f88 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=8b29761a97c41d6a24f623a9c93caba0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8b29761a97c41d6a24f623a9c93caba0 -->

<!-- pgdoc-cn_start sig_en=4e34e0508cd6b953de99406b1a9c88c3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4e34e0508cd6b953de99406b1a9c88c3 -->

<!-- pgdoc-cn_start sig_en=2170e2f48a321ca74d5f420a104984f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2170e2f48a321ca74d5f420a104984f9 -->

<!-- pgdoc-cn_start sig_en=6a9df2c13327eec5a472a70a5c5b82a5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_type</structfield> <type>character_data</type>
      </para>
      <para>
       Type of the table: <literal>BASE TABLE</literal> for a
       persistent base table (the normal table type),
       <literal>VIEW</literal> for a view, <literal>FOREIGN</literal>
       for a foreign table, or
       <literal>LOCAL TEMPORARY</literal> for a temporary table
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_type</structfield> <type>character_data</type>
      </para>
      <para>
       该表的类型：<literal>BASE TABLE</literal>表示一个持久的基本表（常见表类型），<literal>VIEW</literal>表示一个视图，<literal>FOREIGN</literal>表示一个外部表，<literal>LOCAL TEMPORARY</literal>表示一个临时表
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6a9df2c13327eec5a472a70a5c5b82a5 -->

<!-- pgdoc-cn_start sig_en=e755ee37df0fb4242588e08f085d2975 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>self_referencing_column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>self_referencing_column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e755ee37df0fb4242588e08f085d2975 -->

<!-- pgdoc-cn_start sig_en=add3c8561a93aa07fd122d6c24b211d3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reference_generation</structfield> <type>character_data</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reference_generation</structfield> <type>character_data</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=add3c8561a93aa07fd122d6c24b211d3 -->

<!-- pgdoc-cn_start sig_en=f7b13e2189b31903461ba7092ec5f0c9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       If the table is a typed table, the name of the database that
       contains the underlying data type (always the current
       database), else null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       如果该表是一个有类型的表，则是包含其底层数据类型的数据库名称（总是当前数据库），否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f7b13e2189b31903461ba7092ec5f0c9 -->

<!-- pgdoc-cn_start sig_en=26e4f7d9d7a47cc67b6c72689c5434c5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       If the table is a typed table, the name of the schema that
       contains the underlying data type, else null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       如果该表是一个有类型的表，则是包含其底层数据类型的模式名，否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=26e4f7d9d7a47cc67b6c72689c5434c5 -->

<!-- pgdoc-cn_start sig_en=bd58425a998fbae9ceb7db76c733f2ad sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       If the table is a typed table, the name of the underlying data
       type, else null.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       如果该表是一个有类型的表，则是其底层数据类型的名称，否则为空。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bd58425a998fbae9ceb7db76c733f2ad -->

<!-- pgdoc-cn_start sig_en=d8bc26f5e42e0943a15eb695cc609fbe sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_insertable_into</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the table is insertable into,
       <literal>NO</literal> if not (Base tables are always insertable
       into, views not necessarily.)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_insertable_into</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该表能够被插入，则为<literal>YES</literal>，否则为<literal>NO</literal>（基本表总是能被插入，而视图则不一定）。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d8bc26f5e42e0943a15eb695cc609fbe -->

<!-- pgdoc-cn_start sig_en=7348c5dcf32b686e2fb5655a82311241 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_typed</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the table is a typed table, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_typed</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该表是一个有类型的表，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7348c5dcf32b686e2fb5655a82311241 -->

<!-- pgdoc-cn_start sig_en=5b03538658335329867621d20fddb74a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>commit_action</structfield> <type>character_data</type>
      </para>
      <para>
       Not yet implemented
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>commit_action</structfield> <type>character_data</type>
      </para>
      <para>
       还未被实现
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5b03538658335329867621d20fddb74a -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-transforms">
  <title><literal>transforms</literal></title>

<!-- pgdoc-cn_start sig_en=7e0bca5087650e8f7711d233c10ea840 sig_cn_org=None source=14.1 
  <para>
   The view <literal>transforms</literal> contains information about the
   transforms defined in the current database.  More precisely, it contains a
   row for each function contained in a transform (the <quote>from SQL</quote>
   or <quote>to SQL</quote> function).
  </para>
________________________________________________________-->
  <para>
   视图<literal>transforms</literal>包含定义在当前数据库中的转换的信息。更准确
   来说， 包含在转换中的每一个函数（<quote>FROM SQL</quote>或者
   <quote>TO SQL</quote>函数）在其中都有一行。
  </para>
<!-- pgdoc-cn_end sig_en=7e0bca5087650e8f7711d233c10ea840 -->

  <table>
<!-- pgdoc-cn_start sig_en=05f983baa7a67c14f4eb806830759769 sig_cn_org=None source=14.1 
   <title><structname>transforms</structname> Columns</title>
________________________________________________________-->
   <title><structname>transforms</structname> 列</title>
<!-- pgdoc-cn_end sig_en=05f983baa7a67c14f4eb806830759769 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=8ce78dde2437511ce7e2edd17cf3891d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the type the transform is for (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该转换所适用类型的数据库的名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8ce78dde2437511ce7e2edd17cf3891d -->

<!-- pgdoc-cn_start sig_en=fb23bf7c21513bb0d2dc42d8e8b00787 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the type the transform is for
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该转换所适用类型的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fb23bf7c21513bb0d2dc42d8e8b00787 -->

<!-- pgdoc-cn_start sig_en=c41c84dfba5417846610e3816d8102a6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the type the transform is for
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       该转换所适用类型的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c41c84dfba5417846610e3816d8102a6 -->

<!-- pgdoc-cn_start sig_en=739a839874f2bf79f2e181b41be2fd92 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=739a839874f2bf79f2e181b41be2fd92 -->

<!-- pgdoc-cn_start sig_en=f69c524afe2317388c37b8ec9c284cb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f69c524afe2317388c37b8ec9c284cb4 -->

<!-- pgdoc-cn_start sig_en=50f51b6c55eb602db3cc8768dd9921c9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function.  See <xref linkend="infoschema-routines"/> for more information.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       函数的<quote>特定名称</quote>。  详请参见 <xref linkend="infoschema-routines"/>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=50f51b6c55eb602db3cc8768dd9921c9 -->

<!-- pgdoc-cn_start sig_en=1380d178a21d55a65525f14c240f7859 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>group_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The SQL standard allows defining transforms in <quote>groups</quote>,
       and selecting a group at run time.  PostgreSQL does not support this.
       Instead, transforms are specific to a language.  As a compromise, this
       field contains the language the transform is for.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>group_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       SQL 标准允许在<quote>组</quote>中定义转换，并且在运行时选择一个
       组。PostgreSQL 不支持这种做法，转换是与一种语言相关的。作为一种折衷，
       这个域包含该转换所适用的语言。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1380d178a21d55a65525f14c240f7859 -->

<!-- pgdoc-cn_start sig_en=557b275cd9c6c325273fb9767adf5d39 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>transform_type</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>FROM SQL</literal> or <literal>TO SQL</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>transform_type</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>FROM SQL</literal>或者<literal>TO SQL</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=557b275cd9c6c325273fb9767adf5d39 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-triggered-update-columns">
  <title><literal>triggered_update_columns</literal></title>

<!-- pgdoc-cn_start sig_en=8a05275ffbc058f2028d21602b83502b sig_cn_org=None source=14.1 
  <para>
   For triggers in the current database that specify a column list
   (like <literal>UPDATE OF column1, column2</literal>), the
   view <literal>triggered_update_columns</literal> identifies these
   columns.  Triggers that do not specify a column list are not
   included in this view.  Only those columns are shown that the
   current user owns or has some privilege other than
   <literal>SELECT</literal> on.
  </para>
________________________________________________________-->
  <para>
   对于当前数据库中指定一个列列表（如<literal>UPDATE OF column1, column2</literal>）的触发器，视图<literal>triggered_update_columns</literal>标识这些列。没有指定一个列列表的触发器不被包括在这个视图中。只有那些当前用户拥有或具有某种除<literal>SELECT</literal>之外特权的列才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=8a05275ffbc058f2028d21602b83502b -->

  <table>
<!-- pgdoc-cn_start sig_en=484b1e6b2eae22e7f60daa6cf279092b sig_cn_org=None source=14.1 
   <title><structname>triggered_update_columns</structname> Columns</title>
________________________________________________________-->
   <title><structname>triggered_update_columns</structname> 列</title>
<!-- pgdoc-cn_end sig_en=484b1e6b2eae22e7f60daa6cf279092b -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=693df1cc7cf124dce43956869a0df6da sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the trigger (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该触发器的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=693df1cc7cf124dce43956869a0df6da -->

<!-- pgdoc-cn_start sig_en=5ea2e14d0a2770b01ec35b1b38b294f3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the trigger
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该触发器的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5ea2e14d0a2770b01ec35b1b38b294f3 -->

<!-- pgdoc-cn_start sig_en=ca8da77d7895ba9452838df3ca4fdd1e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the trigger
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       触发器的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ca8da77d7895ba9452838df3ca4fdd1e -->

<!-- pgdoc-cn_start sig_en=9f70e0170e02bb1888b37851cb463eba sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that the trigger
       is defined on (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含触发器所在的表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9f70e0170e02bb1888b37851cb463eba -->

<!-- pgdoc-cn_start sig_en=9054851d103851eee23b2ab7dcfcb7ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that the trigger is defined on
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含触发器所在的表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9054851d103851eee23b2ab7dcfcb7ff -->

<!-- pgdoc-cn_start sig_en=38ad2616b7fb4a9c539f6045db7dffbf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_table</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that the trigger is defined on
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_table</structfield> <type>sql_identifier</type>
      </para>
      <para>
       触发器所在的表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=38ad2616b7fb4a9c539f6045db7dffbf -->

<!-- pgdoc-cn_start sig_en=4c65f567d503c7ef32ddeb575e745a95 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_column</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column that the trigger is defined on
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_column</structfield> <type>sql_identifier</type>
      </para>
      <para>
       触发器所在的列的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4c65f567d503c7ef32ddeb575e745a95 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-triggers">
  <title><literal>triggers</literal></title>

<!-- pgdoc-cn_start sig_en=1443313ad689765b8de65515e309dbe4 sig_cn_org=None source=14.1 
  <para>
   The view <literal>triggers</literal> contains all triggers defined
   in the current database on tables and views that the current user owns
   or has some privilege other than <literal>SELECT</literal> on.
  </para>
________________________________________________________-->
  <para>
   视图<literal>triggers</literal>包含所有定义在当前数据库中表和视图上的触发器，并且只显示当前用户拥有的触发器或者是当前用户在其上具有某种除<literal>SELECT</literal>之外特权的触发器。
  </para>
<!-- pgdoc-cn_end sig_en=1443313ad689765b8de65515e309dbe4 -->

  <table>
<!-- pgdoc-cn_start sig_en=d967482cad7d65dae677a9123d21c634 sig_cn_org=None source=14.1 
   <title><structname>triggers</structname> Columns</title>
________________________________________________________-->
   <title><structname>triggers</structname> 列</title>
<!-- pgdoc-cn_end sig_en=d967482cad7d65dae677a9123d21c634 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=693df1cc7cf124dce43956869a0df6da sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the trigger (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该触发器的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=693df1cc7cf124dce43956869a0df6da -->

<!-- pgdoc-cn_start sig_en=5ea2e14d0a2770b01ec35b1b38b294f3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the trigger
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该触发器的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5ea2e14d0a2770b01ec35b1b38b294f3 -->

<!-- pgdoc-cn_start sig_en=ca8da77d7895ba9452838df3ca4fdd1e sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the trigger
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trigger_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       触发器的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ca8da77d7895ba9452838df3ca4fdd1e -->

<!-- pgdoc-cn_start sig_en=09d425925b47e2d06accb81d6d653690 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_manipulation</structfield> <type>character_data</type>
      </para>
      <para>
       Event that fires the trigger (<literal>INSERT</literal>,
       <literal>UPDATE</literal>, or <literal>DELETE</literal>)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_manipulation</structfield> <type>character_data</type>
      </para>
      <para>
       触发该触发器的事件（<literal>INSERT</literal>、<literal>UPDATE</literal>或<literal>DELETE</literal>）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=09d425925b47e2d06accb81d6d653690 -->

<!-- pgdoc-cn_start sig_en=9f70e0170e02bb1888b37851cb463eba sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that the trigger
       is defined on (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含触发器所在的表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9f70e0170e02bb1888b37851cb463eba -->

<!-- pgdoc-cn_start sig_en=9054851d103851eee23b2ab7dcfcb7ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that the trigger is defined on
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含触发器所在的表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9054851d103851eee23b2ab7dcfcb7ff -->

<!-- pgdoc-cn_start sig_en=38ad2616b7fb4a9c539f6045db7dffbf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_table</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that the trigger is defined on
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>event_object_table</structfield> <type>sql_identifier</type>
      </para>
      <para>
       触发器所在的表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=38ad2616b7fb4a9c539f6045db7dffbf -->

<!-- pgdoc-cn_start sig_en=5e3c42faf19b26ca058556015d3c6892 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_order</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Firing order among triggers on the same table having the same
       <literal>event_manipulation</literal>,
       <literal>action_timing</literal>, and
       <literal>action_orientation</literal>.  In
       <productname>PostgreSQL</productname>, triggers are fired in name
       order, so this column reflects that.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_order</structfield> <type>cardinal_number</type>
      </para>
      <para>
       同一个表上具有相同<literal>event_manipulation</literal>、<literal>action_timing</literal>和<literal>action_orientation</literal>的触发器之间的触发顺序。
       在<productname>PostgreSQL</productname>中，触发器按照名称顺序被触发，因此这一列会反映这种规则。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5e3c42faf19b26ca058556015d3c6892 -->

<!-- pgdoc-cn_start sig_en=7c0b6320acd20b622286515674877097 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_condition</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>WHEN</literal> condition of the trigger, null if none
       (also null if the table is not owned by a currently enabled
       role)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_condition</structfield> <type>character_data</type>
      </para>
      <para>
       触发器的<literal>WHEN</literal>条件，如果没有则为空（如果该表不被一个当前已启用角色拥有也是为空）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7c0b6320acd20b622286515674877097 -->

<!-- pgdoc-cn_start sig_en=ec0d55016564fb0451889c255377f402 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_statement</structfield> <type>character_data</type>
      </para>
      <para>
       Statement that is executed by the trigger (currently always
       <literal>EXECUTE FUNCTION
       <replaceable>function</replaceable>(...)</literal>)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_statement</structfield> <type>character_data</type>
      </para>
      <para>
       触发器执行的语句（当前总是 <literal>EXECUTE FUNCTION <replaceable>function</replaceable>(...)</literal>）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ec0d55016564fb0451889c255377f402 -->

<!-- pgdoc-cn_start sig_en=283d5be089e904304c4ce834f5533fd7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_orientation</structfield> <type>character_data</type>
      </para>
      <para>
       Identifies whether the trigger fires once for each processed
       row or once for each statement (<literal>ROW</literal> or
       <literal>STATEMENT</literal>)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_orientation</structfield> <type>character_data</type>
      </para>
      <para>
       标识触发器是对每个被处理的行触发一次还是为每个语句触发一次（<literal>ROW</literal>或<literal>STATEMENT</literal>）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=283d5be089e904304c4ce834f5533fd7 -->

<!-- pgdoc-cn_start sig_en=092933bcb29a3562d8a0643b1ae298b6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_timing</structfield> <type>character_data</type>
      </para>
      <para>
       Time at which the trigger fires (<literal>BEFORE</literal>,
       <literal>AFTER</literal>, or <literal>INSTEAD OF</literal>)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_timing</structfield> <type>character_data</type>
      </para>
      <para>
       触发器在什么时候触发（<literal>BEFORE</literal>、<literal>AFTER</literal>或<literal>INSTEAD OF</literal>）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=092933bcb29a3562d8a0643b1ae298b6 -->

<!-- pgdoc-cn_start sig_en=a343faf92675659817d3e748f8981ee0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_reference_old_table</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the <quote>old</quote> transition table, or null if none
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_reference_old_table</structfield> <type>sql_identifier</type>
      </para>
      <para>
       <quote>旧</quote>传递表的名称，如果没有则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a343faf92675659817d3e748f8981ee0 -->

<!-- pgdoc-cn_start sig_en=cc68b741a41e895f5b0baebdff22b2dd sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_reference_new_table</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the <quote>new</quote> transition table, or null if none
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_reference_new_table</structfield> <type>sql_identifier</type>
      </para>
      <para>
       <quote>新</quote>传递表的名称，如果没有则为空
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=cc68b741a41e895f5b0baebdff22b2dd -->

<!-- pgdoc-cn_start sig_en=2d8292649c68ade1dad12a610c45a7c7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_reference_old_row</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_reference_old_row</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2d8292649c68ade1dad12a610c45a7c7 -->

<!-- pgdoc-cn_start sig_en=51d076a4f72450a378bae8fbc9e371b0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_reference_new_row</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>action_reference_new_row</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=51d076a4f72450a378bae8fbc9e371b0 -->

<!-- pgdoc-cn_start sig_en=a2eeec89191771e90d80b9515c303585 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>created</structfield> <type>time_stamp</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>created</structfield> <type>time_stamp</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a2eeec89191771e90d80b9515c303585 -->
    </tbody>
   </tgroup>
  </table>

<!-- pgdoc-cn_start sig_en=368ce625e90ecb46137b1ec132f21c7a sig_cn_org=None source=14.1 
  <para>
   Triggers in <productname>PostgreSQL</productname> have two
   incompatibilities with the SQL standard that affect the
   representation in the information schema.  First, trigger names are
   local to each table in <productname>PostgreSQL</productname>, rather
   than being independent schema objects.  Therefore there can be duplicate
   trigger names defined in one schema, so long as they belong to
   different tables.  (<literal>trigger_catalog</literal> and
   <literal>trigger_schema</literal> are really the values pertaining
   to the table that the trigger is defined on.)  Second, triggers can
   be defined to fire on multiple events in
   <productname>PostgreSQL</productname> (e.g., <literal>ON INSERT OR
   UPDATE</literal>), whereas the SQL standard only allows one.  If a
   trigger is defined to fire on multiple events, it is represented as
   multiple rows in the information schema, one for each type of
   event.  As a consequence of these two issues, the primary key of
   the view <literal>triggers</literal> is really
   <literal>(trigger_catalog, trigger_schema, event_object_table,
   trigger_name, event_manipulation)</literal> instead of
   <literal>(trigger_catalog, trigger_schema, trigger_name)</literal>,
   which is what the SQL standard specifies.  Nonetheless, if you
   define your triggers in a manner that conforms with the SQL
   standard (trigger names unique in the schema and only one event
   type per trigger), this will not affect you.
  </para>
________________________________________________________-->
  <para>
   <productname>PostgreSQL</productname>中的触发器有两点与 SQL 标准不兼容，这会影响在该信息模式中的表示。第一，在<productname>PostgreSQL</productname>中触发器的名字是局限于每个表的，而不是独立于模式对象。因此可能在一个模式中会有重复的触发器名称，只要它们属于不同的表（<literal>trigger_catalog</literal>和<literal>trigger_schema</literal>才真正标识了触发器被定义在哪个表上）。第二，在<productname>PostgreSQL</productname>中触发器可以被定义为在多个事件上触发（例如<literal>ON INSERT OR
   UPDATE</literal>），而在 SQL 标准中只允许一个。如果一个触发器被定义为在多个事件上触发，它在信息模式中被表示为多行，每一行对应于一类事件。作为这两个问题的结果，视图<literal>triggers</literal>的主键实际上是<literal>(trigger_catalog, trigger_schema, event_object_table,
   trigger_name, event_manipulation)</literal>，而不是<literal>(trigger_catalog, trigger_schema, trigger_name)</literal>（这是 SQL 标准指定的）。尽管如此，如果你以符合 SQL 标准（在模式中触发器名称唯一并且每个触发器只能有一种事件类型）的方式定义你的触发器，这将不会影响你。
  </para>
<!-- pgdoc-cn_end sig_en=368ce625e90ecb46137b1ec132f21c7a -->

  <note>
<!-- pgdoc-cn_start sig_en=86b5e2db795278f0289b773700477fbd sig_cn_org=None source=14.1 
   <para>
    Prior to <productname>PostgreSQL</productname> 9.1, this view's columns
    <structfield>action_timing</structfield>,
    <structfield>action_reference_old_table</structfield>,
    <structfield>action_reference_new_table</structfield>,
    <structfield>action_reference_old_row</structfield>, and
    <structfield>action_reference_new_row</structfield>
    were named
    <structfield>condition_timing</structfield>,
    <structfield>condition_reference_old_table</structfield>,
    <structfield>condition_reference_new_table</structfield>,
    <structfield>condition_reference_old_row</structfield>, and
    <structfield>condition_reference_new_row</structfield>
    respectively.
    That was how they were named in the SQL:1999 standard.
    The new naming conforms to SQL:2003 and later.
   </para>
________________________________________________________-->
   <para>
    在<productname>PostgreSQL</productname> 9.1 之前，这个视图的列
    <structfield>action_timing</structfield>、
    <structfield>action_reference_old_table</structfield>、
    <structfield>action_reference_new_table</structfield>、
    <structfield>action_reference_old_row</structfield>和
    <structfield>action_reference_new_row</structfield>
    分别被命名为
    <structfield>condition_timing</structfield>、
    <structfield>condition_reference_old_table</structfield>、
    <structfield>condition_reference_new_table</structfield>、
    <structfield>condition_reference_old_row</structfield>和
    <structfield>condition_reference_new_row</structfield>。
    那也是它们在 SQL:1999 标准中的命名。新的命名遵循 SQL:2003 及其后的版本。
   </para>
<!-- pgdoc-cn_end sig_en=86b5e2db795278f0289b773700477fbd -->
  </note>
 </sect1>

 <sect1 id="infoschema-udt-privileges">
  <title><literal>udt_privileges</literal></title>

<!-- pgdoc-cn_start sig_en=c9cfa5bf95c6b7c997653194a348ce2d sig_cn_org=None source=14.1 
  <para>
   The view <literal>udt_privileges</literal> identifies
   <literal>USAGE</literal> privileges granted on user-defined types to a
   currently enabled role or by a currently enabled role.  There is one row for
   each combination of type, grantor, and grantee.  This view shows only
   composite types (see under <xref linkend="infoschema-user-defined-types"/>
   for why); see
   <xref linkend="infoschema-usage-privileges"/> for domain privileges.
  </para>
________________________________________________________-->
  <para>
   视图<literal>udt_privileges</literal>标识所有在用户定义类型上授予的<literal>USAGE</literal>特权，这些特权的授予者或者被授予者是一个当前已被启用的角色。
   对每一个类型、授予者和被授予者的组合都有一行。
   这个视图只显示组合类型（原因见下面的<xref linkend="infoschema-user-defined-types"/>）。
   域特权见<xref linkend="infoschema-usage-privileges"/>。
  </para>
<!-- pgdoc-cn_end sig_en=c9cfa5bf95c6b7c997653194a348ce2d -->

  <table>
<!-- pgdoc-cn_start sig_en=7ed66d03598c97097721658ce152e1c8 sig_cn_org=None source=14.1 
   <title><structname>udt_privileges</structname> Columns</title>
________________________________________________________-->
   <title><structname>udt_privileges</structname> 列</title>
<!-- pgdoc-cn_end sig_en=7ed66d03598c97097721658ce152e1c8 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ef93823b7a2949262fd771a7fc97ccb8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that granted the privilege
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ef93823b7a2949262fd771a7fc97ccb8 -->

<!-- pgdoc-cn_start sig_en=47eb41136204607ed172b8a312c8d9ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that the privilege was granted to
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47eb41136204607ed172b8a312c8d9ff -->

<!-- pgdoc-cn_start sig_en=05dffb613e0bf0e059952c2a0245e6f7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the type (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该类型的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=05dffb613e0bf0e059952c2a0245e6f7 -->

<!-- pgdoc-cn_start sig_en=ecc836fffd57069f8b28670bf2411e7d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该类型的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ecc836fffd57069f8b28670bf2411e7d -->

<!-- pgdoc-cn_start sig_en=8ef9318de0cfa50ee561c5b6228a9993 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>udt_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       类型的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8ef9318de0cfa50ee561c5b6228a9993 -->

<!-- pgdoc-cn_start sig_en=49aa0c87a37b3a847e7b625b6d293f4a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       Always <literal>TYPE USAGE</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       总是<literal>TYPE USAGE</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=49aa0c87a37b3a847e7b625b6d293f4a -->

<!-- pgdoc-cn_start sig_en=8952048d243a6f039c69a84562efd845 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特权是可授予的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8952048d243a6f039c69a84562efd845 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-usage-privileges">
  <title><literal>usage_privileges</literal></title>

<!-- pgdoc-cn_start sig_en=afcc754c4eb99cb3f9ae157e07ced781 sig_cn_org=None source=14.1 
  <para>
   The view <literal>usage_privileges</literal> identifies
   <literal>USAGE</literal> privileges granted on various kinds of
   objects to a currently enabled role or by a currently enabled role.
   In <productname>PostgreSQL</productname>, this currently applies to
   collations, domains, foreign-data wrappers, foreign servers, and sequences.  There is one
   row for each combination of object, grantor, and grantee.
  </para>
________________________________________________________-->
  <para>
   视图<literal>usage_privileges</literal>标识所有在多种对象上授予的<literal>USAGE</literal>特权，这些特权的授予者或者被授予者是一个当前已被启用的角色。在<productname>PostgreSQL</productname>中，这当前适用于排序规则、域、外部数据包装器、外部服务器和序列。对每一个对象、授予者和被授予者都有一行。
  </para>
<!-- pgdoc-cn_end sig_en=afcc754c4eb99cb3f9ae157e07ced781 -->

<!-- pgdoc-cn_start sig_en=69f17eea9b0b669c68c43402e9c37501 sig_cn_org=None source=14.1 
  <para>
   Since collations do not have real privileges
   in <productname>PostgreSQL</productname>, this view shows implicit
   non-grantable <literal>USAGE</literal> privileges granted by the
   owner to <literal>PUBLIC</literal> for all collations.  The other
   object types, however, show real privileges.
  </para>
________________________________________________________-->
  <para>
   由于在<productname>PostgreSQL</productname>中排序规则并没有真正的特权，这个视图对所有排序规则显示由拥有者授予给<literal>PUBLIC</literal>的隐式非可授予的<literal>USAGE</literal>特权。但是对其他对象类型则显示真实的特权。
  </para>
<!-- pgdoc-cn_end sig_en=69f17eea9b0b669c68c43402e9c37501 -->

<!-- pgdoc-cn_start sig_en=5b40ba7a0b395d6fd23bf1ddc66ff9cf sig_cn_org=None source=14.1 
  <para>
   In PostgreSQL, sequences also support <literal>SELECT</literal>
   and <literal>UPDATE</literal> privileges in addition to
   the <literal>USAGE</literal> privilege.  These are nonstandard and therefore
   not visible in the information schema.
  </para>
________________________________________________________-->
  <para>
   在 PostgreSQL 中，序列也支持除<literal>USAGE</literal>之外的<literal>SELECT</literal>和<literal>UPDATE</literal>特权。这些是非标准的并且因此在该信息模式中不可见。
  </para>
<!-- pgdoc-cn_end sig_en=5b40ba7a0b395d6fd23bf1ddc66ff9cf -->

  <table>
<!-- pgdoc-cn_start sig_en=3e4ee1c330162ab671c546e129e4cd32 sig_cn_org=None source=14.1 
   <title><structname>usage_privileges</structname> Columns</title>
________________________________________________________-->
   <title><structname>usage_privileges</structname> 列</title>
<!-- pgdoc-cn_end sig_en=3e4ee1c330162ab671c546e129e4cd32 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=ef93823b7a2949262fd771a7fc97ccb8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that granted the privilege
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>sql_identifier</type>
      </para>
      <para>
       授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ef93823b7a2949262fd771a7fc97ccb8 -->

<!-- pgdoc-cn_start sig_en=47eb41136204607ed172b8a312c8d9ff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the role that the privilege was granted to
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantee</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被授予该特权的角色名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=47eb41136204607ed172b8a312c8d9ff -->

<!-- pgdoc-cn_start sig_en=d8645d6d0f7afb20292c2f22dfa5fb55 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the object (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该对象的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d8645d6d0f7afb20292c2f22dfa5fb55 -->

<!-- pgdoc-cn_start sig_en=9275371f80634a11c30a6b4f9afee3f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the object, if applicable,
       else an empty string
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       如果适用，则为包含该对象的模式名称，否则为一个空字符串
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9275371f80634a11c30a6b4f9afee3f9 -->

<!-- pgdoc-cn_start sig_en=228c59ba81d65dab8c8b0b55213153ee sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the object
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       对象的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=228c59ba81d65dab8c8b0b55213153ee -->

<!-- pgdoc-cn_start sig_en=74a379cefbf80ec5b4bc7e75cd621bf8 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_type</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>COLLATION</literal> or <literal>DOMAIN</literal> or <literal>FOREIGN DATA WRAPPER</literal> or <literal>FOREIGN SERVER</literal> or <literal>SEQUENCE</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>object_type</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>COLLATION</literal>或<literal>DOMAIN</literal>或<literal>FOREIGN DATA WRAPPER</literal>或<literal>FOREIGN SERVER</literal>或<literal>SEQUENCE</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=74a379cefbf80ec5b4bc7e75cd621bf8 -->

<!-- pgdoc-cn_start sig_en=2a10339892549be8b9870137eaea177d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       Always <literal>USAGE</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privilege_type</structfield> <type>character_data</type>
      </para>
      <para>
       总是<literal>USAGE</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2a10339892549be8b9870137eaea177d -->

<!-- pgdoc-cn_start sig_en=8952048d243a6f039c69a84562efd845 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the privilege is grantable, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_grantable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该特权是可授予的，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8952048d243a6f039c69a84562efd845 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-user-defined-types">
  <title><literal>user_defined_types</literal></title>

<!-- pgdoc-cn_start sig_en=6d529d120859753feea2d7529ee50856 sig_cn_org=None source=14.1 
  <para>
   The view <literal>user_defined_types</literal> currently contains
   all composite types defined in the current database.
   Only those types are shown that the current user has access to (by way
   of being the owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>user_defined_types</literal>目前包含定义在当前数据库中的所有组合类型。只有那些当前用户能够访问（作为拥有者或具有某些特权）的类型才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=6d529d120859753feea2d7529ee50856 -->

<!-- pgdoc-cn_start sig_en=4d062bd9b7ba11f929d238247b872e45 sig_cn_org=None source=14.1 
  <para>
   SQL knows about two kinds of user-defined types: structured types
   (also known as composite types
   in <productname>PostgreSQL</productname>) and distinct types (not
   implemented in <productname>PostgreSQL</productname>).  To be
   future-proof, use the
   column <literal>user_defined_type_category</literal> to
   differentiate between these.  Other user-defined types such as base
   types and enums, which are <productname>PostgreSQL</productname>
   extensions, are not shown here.  For domains,
   see <xref linkend="infoschema-domains"/> instead.
  </para>
________________________________________________________-->
  <para>
   SQL 知道两种用户定义类型：结构类型（在<productname>PostgreSQL</productname>中也被称为组合类型）以及独特类型（在<productname>PostgreSQL</productname>没有实现）。要经得起未来的考验，请使用列<literal>user_defined_type_category</literal>来区分它们。其他用户定义类型如基类型和枚举（都是<productname>PostgreSQL</productname>的扩展）不会被显示在这里。对于域，请见<xref linkend="infoschema-domains"/>。
  </para>
<!-- pgdoc-cn_end sig_en=4d062bd9b7ba11f929d238247b872e45 -->

  <table>
<!-- pgdoc-cn_start sig_en=8d93c49ff236ed655e0193cf5e44ba56 sig_cn_org=None source=14.1 
   <title><structname>user_defined_types</structname> Columns</title>
________________________________________________________-->
   <title><structname>user_defined_types</structname> 列</title>
<!-- pgdoc-cn_end sig_en=8d93c49ff236ed655e0193cf5e44ba56 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=9a7719b375d8afb6f07e3fd6264c8a90 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the type (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该类型的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9a7719b375d8afb6f07e3fd6264c8a90 -->

<!-- pgdoc-cn_start sig_en=e86a8c164f154824ffb813671d08a742 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该类型的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e86a8c164f154824ffb813671d08a742 -->

<!-- pgdoc-cn_start sig_en=8af087f16e2b5db9ad6e2d64e1e9433a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the type
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       类型的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8af087f16e2b5db9ad6e2d64e1e9433a -->

<!-- pgdoc-cn_start sig_en=e8b1ab753141a6456a64f99cf95fdc4b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_category</structfield> <type>character_data</type>
      </para>
      <para>
       Currently always <literal>STRUCTURED</literal>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_defined_type_category</structfield> <type>character_data</type>
      </para>
      <para>
       当前总是<literal>STRUCTURED</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e8b1ab753141a6456a64f99cf95fdc4b -->

<!-- pgdoc-cn_start sig_en=02eef979ee8754b62194b4e4e210b375 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_instantiable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_instantiable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=02eef979ee8754b62194b4e4e210b375 -->

<!-- pgdoc-cn_start sig_en=7c64ec4557c018ca30bcc76d8c817282 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_final</structfield> <type>yes_or_no</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_final</structfield> <type>yes_or_no</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=7c64ec4557c018ca30bcc76d8c817282 -->

<!-- pgdoc-cn_start sig_en=faef624e7f9e107c0c0e18cf0eb5bf80 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordering_form</structfield> <type>character_data</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordering_form</structfield> <type>character_data</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=faef624e7f9e107c0c0e18cf0eb5bf80 -->

<!-- pgdoc-cn_start sig_en=286771690786e9fafd484644e6600892 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordering_category</structfield> <type>character_data</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordering_category</structfield> <type>character_data</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=286771690786e9fafd484644e6600892 -->

<!-- pgdoc-cn_start sig_en=f473d7fffd02a44f0008cdee6091a18f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordering_routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordering_routine_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f473d7fffd02a44f0008cdee6091a18f -->

<!-- pgdoc-cn_start sig_en=e6128354c6589b7d06e8bef5c2b80b46 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordering_routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordering_routine_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e6128354c6589b7d06e8bef5c2b80b46 -->

<!-- pgdoc-cn_start sig_en=569d8a50013217d84d82eea2e0874832 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordering_routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ordering_routine_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=569d8a50013217d84d82eea2e0874832 -->

<!-- pgdoc-cn_start sig_en=d283b1a765e0d32befc0f85973f5e44b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reference_type</structfield> <type>character_data</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reference_type</structfield> <type>character_data</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d283b1a765e0d32befc0f85973f5e44b -->

<!-- pgdoc-cn_start sig_en=fd4ce4a8199dc002ab5eadb2ce1c4b7f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>character_data</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fd4ce4a8199dc002ab5eadb2ce1c4b7f -->

<!-- pgdoc-cn_start sig_en=d1f0534eb900de4c1506f3ddbdf00b63 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_maximum_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d1f0534eb900de4c1506f3ddbdf00b63 -->

<!-- pgdoc-cn_start sig_en=634febb246c0936b5da419fc39f5735d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_octet_length</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=634febb246c0936b5da419fc39f5735d -->

<!-- pgdoc-cn_start sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d46f440cb4cbab2d7a0a0276a67fbd63 -->

<!-- pgdoc-cn_start sig_en=359de2c127ff4bf584099b3dbafa94c0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=359de2c127ff4bf584099b3dbafa94c0 -->

<!-- pgdoc-cn_start sig_en=5daa3e735df10fe5f7c15e2746e03745 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>character_set_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5daa3e735df10fe5f7c15e2746e03745 -->

<!-- pgdoc-cn_start sig_en=34490bdc339b9db776796ac35e3c1c64 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=34490bdc339b9db776796ac35e3c1c64 -->

<!-- pgdoc-cn_start sig_en=fe1833493b77da32ae1b57665fbdab37 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fe1833493b77da32ae1b57665fbdab37 -->

<!-- pgdoc-cn_start sig_en=2b796af875cc33817c4d3e6ea1d88e25 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collation_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2b796af875cc33817c4d3e6ea1d88e25 -->

<!-- pgdoc-cn_start sig_en=6510164c19202b30a38b29f8917ea340 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6510164c19202b30a38b29f8917ea340 -->

<!-- pgdoc-cn_start sig_en=f5b9bb6d781de90d2796c65ee55f556c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_precision_radix</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f5b9bb6d781de90d2796c65ee55f556c -->

<!-- pgdoc-cn_start sig_en=9bf83b86bc4a6f2a1d475199c36c86d3 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>numeric_scale</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9bf83b86bc4a6f2a1d475199c36c86d3 -->

<!-- pgdoc-cn_start sig_en=a0f58c8ed4d11ca901ea209e21296df6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datetime_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a0f58c8ed4d11ca901ea209e21296df6 -->

<!-- pgdoc-cn_start sig_en=285b2bde6f96ff3f28e8ce1a5c22dc6d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_type</structfield> <type>character_data</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=285b2bde6f96ff3f28e8ce1a5c22dc6d -->

<!-- pgdoc-cn_start sig_en=304c0ad25152f0a942a5786d57855a82 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>interval_precision</structfield> <type>cardinal_number</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=304c0ad25152f0a942a5786d57855a82 -->

<!-- pgdoc-cn_start sig_en=ab361844712846f6ee95725cccd0d593 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>source_dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>source_dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ab361844712846f6ee95725cccd0d593 -->

<!-- pgdoc-cn_start sig_en=40de03afe4d7619d840a5412f6e64b88 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ref_dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Applies to a feature not available in <productname>PostgreSQL</productname>
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ref_dtd_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       应用于一个<productname>PostgreSQL</productname>中不可用的特性
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=40de03afe4d7619d840a5412f6e64b88 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-user-mapping-options">
  <title><literal>user_mapping_options</literal></title>

<!-- pgdoc-cn_start sig_en=4215f1d0da394199bd4ef298ab4ce92f sig_cn_org=None source=14.1 
  <para>
   The view <literal>user_mapping_options</literal> contains all the
   options defined for user mappings in the current database.  Only
   those user mappings are shown where the current user has access to
   the corresponding foreign server (by way of being the owner or
   having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>user_mapping_options</literal>包含在当前数据库中为用户映射定义的所有选项。只有那些当前用户能够访问其相应外部服务器（作为拥有者或具有某些特权）的用户映射才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=4215f1d0da394199bd4ef298ab4ce92f -->

  <table>
<!-- pgdoc-cn_start sig_en=0235e52aa584990cc252881146b2b91e sig_cn_org=None source=14.1 
   <title><structname>user_mapping_options</structname> Columns</title>
________________________________________________________-->
   <title><structname>user_mapping_options</structname> 列</title>
<!-- pgdoc-cn_end sig_en=0235e52aa584990cc252881146b2b91e -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=af28122098d525c2f2c9024b5a195aff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>authorization_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the user being mapped,
       or <literal>PUBLIC</literal> if the mapping is public
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>authorization_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被映射的用户名称，如果映射是公共的则为<literal>PUBLIC</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=af28122098d525c2f2c9024b5a195aff -->

<!-- pgdoc-cn_start sig_en=91e8ff08d0375b7ed21c2d564cbd51f2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the foreign server used by this
       mapping is defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       这个映射所使用的外部服务器所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=91e8ff08d0375b7ed21c2d564cbd51f2 -->

<!-- pgdoc-cn_start sig_en=88e3f753ad164e7d6abac43dc7ea1caf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign server used by this mapping
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       这个映射所使用的外部服务器的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=88e3f753ad164e7d6abac43dc7ea1caf -->

<!-- pgdoc-cn_start sig_en=e9c46c3df966f1c748cec8414e5e6cf2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of an option
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       一个选项名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e9c46c3df966f1c748cec8414e5e6cf2 -->

<!-- pgdoc-cn_start sig_en=4595d142db9c45587b8cef214fb02921 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_value</structfield> <type>character_data</type>
      </para>
      <para>
       Value of the option.  This column will show as null
       unless the current user is the user being mapped, or the mapping
       is for <literal>PUBLIC</literal> and the current user is the
       server owner, or the current user is a superuser.  The intent is
       to protect password information stored as user mapping
       option.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>option_value</structfield> <type>character_data</type>
      </para>
      <para>
       选项的值。除非当前用户是被映射的用户或者映射是<literal>PUBLIC</literal>的并且当前用户是服务器拥有者或者超级用户，这一列将显示为空。
       这样做的目的是保护作为用户映射选项存储的口令信息。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4595d142db9c45587b8cef214fb02921 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-user-mappings">
  <title><literal>user_mappings</literal></title>

<!-- pgdoc-cn_start sig_en=3209b82526c4d3fdddbb6337616c6e06 sig_cn_org=None source=14.1 
  <para>
   The view <literal>user_mappings</literal> contains all user
   mappings defined in the current database.  Only those user mappings
   are shown where the current user has access to the corresponding
   foreign server (by way of being the owner or having some
   privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>user_mappings</literal>包含定义在当前数据库中的所有用户映射。只有当前用户能够访问其对应外部服务器（作为拥有者或具有某些特权）的用户映射才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=3209b82526c4d3fdddbb6337616c6e06 -->

  <table>
<!-- pgdoc-cn_start sig_en=cda7d75a2606222f85f5b74b9fb03a4b sig_cn_org=None source=14.1 
   <title><structname>user_mappings</structname> Columns</title>
________________________________________________________-->
   <title><structname>user_mappings</structname> 列</title>
<!-- pgdoc-cn_end sig_en=cda7d75a2606222f85f5b74b9fb03a4b -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=af28122098d525c2f2c9024b5a195aff sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>authorization_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the user being mapped,
       or <literal>PUBLIC</literal> if the mapping is public
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>authorization_identifier</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被映射的用户名称，如果映射是公共的则为<literal>PUBLIC</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=af28122098d525c2f2c9024b5a195aff -->

<!-- pgdoc-cn_start sig_en=91e8ff08d0375b7ed21c2d564cbd51f2 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that the foreign server used by this
       mapping is defined in (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       这个映射所使用的外部服务器所在的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=91e8ff08d0375b7ed21c2d564cbd51f2 -->

<!-- pgdoc-cn_start sig_en=88e3f753ad164e7d6abac43dc7ea1caf sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the foreign server used by this mapping
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>foreign_server_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       这个映射所使用的外部服务器的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=88e3f753ad164e7d6abac43dc7ea1caf -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-view-column-usage">
  <title><literal>view_column_usage</literal></title>

<!-- pgdoc-cn_start sig_en=e276e37d809400aa19c0ae4edcfe2910 sig_cn_org=None source=14.1 
  <para>
   The view <literal>view_column_usage</literal> identifies all
   columns that are used in the query expression of a view (the
   <command>SELECT</command> statement that defines the view).  A
   column is only included if the table that contains the column is
   owned by a currently enabled role.
  </para>
________________________________________________________-->
  <para>
   视图<literal>view_column_usage</literal>标识被使用在一个视图的查询表达式（定义该视图的<command>SELECT</command>语句）中的所有列。只有当包含一列的表被一个当前已被启用角色拥有时，该列才会被包括在这个视图中。
  </para>
<!-- pgdoc-cn_end sig_en=e276e37d809400aa19c0ae4edcfe2910 -->

  <note>
<!-- pgdoc-cn_start sig_en=9ac8345fb51a49ae63054283df613153 sig_cn_org=None source=14.1 
   <para>
    Columns of system tables are not included.  This should be fixed
    sometime.
   </para>
________________________________________________________-->
   <para>
    系统表列不被包括。在某个时候这应该会被修复。
   </para>
<!-- pgdoc-cn_end sig_en=9ac8345fb51a49ae63054283df613153 -->
  </note>

  <table>
<!-- pgdoc-cn_start sig_en=ed02dd1c50e0f6fdc7a9557351195f04 sig_cn_org=None source=14.1 
   <title><structname>view_column_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>view_column_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=ed02dd1c50e0f6fdc7a9557351195f04 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=8ae9a0351a018f9ce475aaf14aca55d7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the view (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该视图的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8ae9a0351a018f9ce475aaf14aca55d7 -->

<!-- pgdoc-cn_start sig_en=fd50109064d43192a4b4785c1373d88b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该视图的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fd50109064d43192a4b4785c1373d88b -->

<!-- pgdoc-cn_start sig_en=4396b1a8a740a667c8bd1930d7c7b960 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       视图的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4396b1a8a740a667c8bd1930d7c7b960 -->

<!-- pgdoc-cn_start sig_en=96d3195c24bafe328f470713e5f1335d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that contains the
       column that is used by the view (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被视图所使用的列所属表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=96d3195c24bafe328f470713e5f1335d -->

<!-- pgdoc-cn_start sig_en=2926a66daae392c00f5ad6896fa5a303 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that contains the
       column that is used by the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被视图所使用的列所属表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2926a66daae392c00f5ad6896fa5a303 -->

<!-- pgdoc-cn_start sig_en=a574f87c6cbc1562c03e05ab294eaf6a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that contains the column that is used by the
       view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被视图所使用的列所属表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a574f87c6cbc1562c03e05ab294eaf6a -->

<!-- pgdoc-cn_start sig_en=b332913546658ca16b673356a4d5c4e4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the column that is used by the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>column_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       被该视图所使用的列名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b332913546658ca16b673356a4d5c4e4 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-view-routine-usage">
  <title><literal>view_routine_usage</literal></title>

<!-- pgdoc-cn_start sig_en=9bbf018d33ea8f3b6fc1fbf1556ef9b6 sig_cn_org=None source=14.1 
  <para>
   The view <literal>view_routine_usage</literal> identifies all
   routines (functions and procedures) that are used in the query
   expression of a view (the <command>SELECT</command> statement that
   defines the view).  A routine is only included if that routine is
   owned by a currently enabled role.
  </para>
________________________________________________________-->
  <para>
   视图<literal>view_routine_usage</literal>标识被使用在一个视图的查询表达式（定义该视图的<command>SELECT</command>语句）中的所有例程（函数和过程）。只有被一个当前已被启用角色拥有的例程才会被包括在这个视图中。
  </para>
<!-- pgdoc-cn_end sig_en=9bbf018d33ea8f3b6fc1fbf1556ef9b6 -->

  <table>
<!-- pgdoc-cn_start sig_en=6950b503493de98f7bbb7c69858ec9b9 sig_cn_org=None source=14.1 
   <title><structname>view_routine_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>view_routine_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=6950b503493de98f7bbb7c69858ec9b9 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=e9e0023f39905845c8720add1fe2fb77 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the view (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该视图的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e9e0023f39905845c8720add1fe2fb77 -->

<!-- pgdoc-cn_start sig_en=083395d6bc572b04f6e096b4f4d9581a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该视图的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=083395d6bc572b04f6e096b4f4d9581a -->

<!-- pgdoc-cn_start sig_en=4324554accf6308f5ff681800053a89a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       视图的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4324554accf6308f5ff681800053a89a -->

<!-- pgdoc-cn_start sig_en=739a839874f2bf79f2e181b41be2fd92 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database containing the function (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该函数的数据库名称(总是当前数据库)
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=739a839874f2bf79f2e181b41be2fd92 -->

<!-- pgdoc-cn_start sig_en=f69c524afe2317388c37b8ec9c284cb4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema containing the function
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含函数的模式的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f69c524afe2317388c37b8ec9c284cb4 -->

<!-- pgdoc-cn_start sig_en=50f51b6c55eb602db3cc8768dd9921c9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       The <quote>specific name</quote> of the function.  See <xref linkend="infoschema-routines"/> for more information.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>specific_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       函数的<quote>特定名称</quote>。  详请参见 <xref linkend="infoschema-routines"/>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=50f51b6c55eb602db3cc8768dd9921c9 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-view-table-usage">
  <title><literal>view_table_usage</literal></title>

<!-- pgdoc-cn_start sig_en=70b238a92dd132c70dd056c911d24fdd sig_cn_org=None source=14.1 
  <para>
   The view <literal>view_table_usage</literal> identifies all tables
   that are used in the query expression of a view (the
   <command>SELECT</command> statement that defines the view).  A
   table is only included if that table is owned by a currently
   enabled role.
  </para>
________________________________________________________-->
  <para>
   视图<literal>view_table_usage</literal>标识被使用在一个视图的查询表达式（定义该视图的<command>SELECT</command>语句）中的所有表。只有被一个当前已被启用角色拥有的表才会被包括在这个视图中。
  </para>
<!-- pgdoc-cn_end sig_en=70b238a92dd132c70dd056c911d24fdd -->

  <note>
<!-- pgdoc-cn_start sig_en=2ef6c78a28d6d1dea64796f8056579e6 sig_cn_org=None source=14.1 
   <para>
    System tables are not included.  This should be fixed sometime.
   </para>
________________________________________________________-->
   <para>
    系统表没有被包括。这应当会在某个时候被修复。
   </para>
<!-- pgdoc-cn_end sig_en=2ef6c78a28d6d1dea64796f8056579e6 -->
  </note>

  <table>
<!-- pgdoc-cn_start sig_en=794eaf32f93a37fce645c881df5bceaf sig_cn_org=None source=14.1 
   <title><structname>view_table_usage</structname> Columns</title>
________________________________________________________-->
   <title><structname>view_table_usage</structname> 列</title>
<!-- pgdoc-cn_end sig_en=794eaf32f93a37fce645c881df5bceaf -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=8ae9a0351a018f9ce475aaf14aca55d7 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the view (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该视图的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8ae9a0351a018f9ce475aaf14aca55d7 -->

<!-- pgdoc-cn_start sig_en=fd50109064d43192a4b4785c1373d88b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该视图的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fd50109064d43192a4b4785c1373d88b -->

<!-- pgdoc-cn_start sig_en=4396b1a8a740a667c8bd1930d7c7b960 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       视图的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4396b1a8a740a667c8bd1930d7c7b960 -->

<!-- pgdoc-cn_start sig_en=4408f622e27ea28df02f958452792d33 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the table that is
       used by the view (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被该视图所使用的表的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4408f622e27ea28df02f958452792d33 -->

<!-- pgdoc-cn_start sig_en=ce234ac2856eaee00329c97e02a9bfb5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the table that is used by the
       view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被该视图所使用的表的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ce234ac2856eaee00329c97e02a9bfb5 -->

<!-- pgdoc-cn_start sig_en=b3867f6164c088e68364ac6e28902878 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the table that is used by the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含被该视图所使用的表的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b3867f6164c088e68364ac6e28902878 -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="infoschema-views">
  <title><literal>views</literal></title>

<!-- pgdoc-cn_start sig_en=ca6de67bf90ad9147dc3c1048bf3a324 sig_cn_org=None source=14.1 
  <para>
   The view <literal>views</literal> contains all views defined in the
   current database.  Only those views are shown that the current user
   has access to (by way of being the owner or having some privilege).
  </para>
________________________________________________________-->
  <para>
   视图<literal>views</literal>包含定义在当前数据库中的所有视图。只有当前用户能够访问（作为拥有者或具有某些特权）的视图才会被显示。
  </para>
<!-- pgdoc-cn_end sig_en=ca6de67bf90ad9147dc3c1048bf3a324 -->

  <table>
<!-- pgdoc-cn_start sig_en=856bd6e0db35edd07b7abf790718b114 sig_cn_org=None source=14.1 
   <title><structname>views</structname> Columns</title>
________________________________________________________-->
   <title><structname>views</structname> 列</title>
<!-- pgdoc-cn_end sig_en=856bd6e0db35edd07b7abf790718b114 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=8f4f55e842db1297baf6b90e09858c8a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the database that contains the view (always the current database)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_catalog</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该视图的数据库名称（总是当前数据库）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8f4f55e842db1297baf6b90e09858c8a -->

<!-- pgdoc-cn_start sig_en=c01f1c0e7c629db82499552bb4ad577a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the schema that contains the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_schema</structfield> <type>sql_identifier</type>
      </para>
      <para>
       包含该视图的模式名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c01f1c0e7c629db82499552bb4ad577a -->

<!-- pgdoc-cn_start sig_en=4324554accf6308f5ff681800053a89a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       Name of the view
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>table_name</structfield> <type>sql_identifier</type>
      </para>
      <para>
       视图的名称
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4324554accf6308f5ff681800053a89a -->

<!-- pgdoc-cn_start sig_en=b85e15e921a637d93125f5bfd1e7bc28 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_definition</structfield> <type>character_data</type>
      </para>
      <para>
       Query expression defining the view (null if the view is not
       owned by a currently enabled role)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>view_definition</structfield> <type>character_data</type>
      </para>
      <para>
       定义视图的查询表达式（如果该视图不被一个当前已被启用角色拥有则为空）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b85e15e921a637d93125f5bfd1e7bc28 -->

<!-- pgdoc-cn_start sig_en=38a37d24b90dbb9aaac4cd39ff39a7f0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>check_option</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>CASCADED</literal> or <literal>LOCAL</literal> if the view
       has a <literal>CHECK OPTION</literal> defined on it,
       <literal>NONE</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>check_option</structfield> <type>character_data</type>
      </para>
      <para>
       <literal>CASCADED</literal> 或 <literal>LOCAL</literal> 如果视图上有<literal>CHECK OPTION</literal> 定义,如果没有则为<literal>NONE</literal>。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=38a37d24b90dbb9aaac4cd39ff39a7f0 -->

<!-- pgdoc-cn_start sig_en=78729987c9f14e4a3c9cab71b11b54a4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_updatable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the view is updatable (allows
       <command>UPDATE</command> and <command>DELETE</command>),
       <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_updatable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该视图是可更新的（允许<command>UPDATE</command>和<command>DELETE</command>），则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=78729987c9f14e4a3c9cab71b11b54a4 -->

<!-- pgdoc-cn_start sig_en=d30629021e660dea86ae814ef183f212 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_insertable_into</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the view is insertable into (allows
       <command>INSERT</command>), <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_insertable_into</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该视图是可插入的（允许<command>INSERT</command>），则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d30629021e660dea86ae814ef183f212 -->

<!-- pgdoc-cn_start sig_en=0acc6155f0023e6aa61c8807f49a977c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_trigger_updatable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the view has an <literal>INSTEAD OF</literal>
       <command>UPDATE</command> trigger defined on it, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_trigger_updatable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该视图上有一个<literal>INSTEAD OF</literal>
       <command>UPDATE</command>触发器，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=0acc6155f0023e6aa61c8807f49a977c -->

<!-- pgdoc-cn_start sig_en=d4c2e7cbffdaca6968280b4ea7901e76 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_trigger_deletable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the view has an <literal>INSTEAD OF</literal>
       <command>DELETE</command> trigger defined on it, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_trigger_deletable</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该视图上有一个<literal>INSTEAD OF</literal>
       <command>DELETE</command>触发器，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=d4c2e7cbffdaca6968280b4ea7901e76 -->

<!-- pgdoc-cn_start sig_en=f5c0d42e64296c03873cc2d61b5f374c sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_trigger_insertable_into</structfield> <type>yes_or_no</type>
      </para>
      <para>
       <literal>YES</literal> if the view has an <literal>INSTEAD OF</literal>
       <command>INSERT</command> trigger defined on it, <literal>NO</literal> if not
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_trigger_insertable_into</structfield> <type>yes_or_no</type>
      </para>
      <para>
       如果该视图上有一个<literal>INSTEAD OF</literal>
       <command>INSERT</command>触发器，则为<literal>YES</literal>，否则为<literal>NO</literal>
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=f5c0d42e64296c03873cc2d61b5f374c -->
    </tbody>
   </tgroup>
  </table>
 </sect1>

</chapter>
