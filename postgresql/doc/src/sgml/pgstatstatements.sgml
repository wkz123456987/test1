<!-- doc/src/sgml/pgstatstatements.sgml -->

<sect1 id="pgstatstatements" xreflabel="pg_stat_statements">
<!-- pgdoc-cn_start sig_en=7b5bb1ab06aeb06c83caf9686e35a8ee sig_cn_org=None source=14.1 
 <title>pg_stat_statements</title>
________________________________________________________-->
 <title>pg_stat_statements</title>
<!-- pgdoc-cn_end sig_en=7b5bb1ab06aeb06c83caf9686e35a8ee -->

<!-- pgdoc-cn_start sig_en=7aad558766d07d3316c94abfb0f5b644 sig_cn_org=None source=14.1 
 <indexterm zone="pgstatstatements">
  <primary>pg_stat_statements</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="pgstatstatements">
  <primary>pg_stat_statements</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=7aad558766d07d3316c94abfb0f5b644 -->

<!-- pgdoc-cn_start sig_en=773e93ca90863d4f73b854acb9273590 sig_cn_org=None source=14.1 
 <para>
  The <filename>pg_stat_statements</filename> module provides a means for
  tracking planning and execution statistics of all SQL statements executed by
  a server.
 </para>
________________________________________________________-->
 <para>
  <filename>pg_stat_statements</filename>模块提供了一种跟踪服务器执行的所有 SQL 语句的计划和执行统计信息的方法。
 </para>
<!-- pgdoc-cn_end sig_en=773e93ca90863d4f73b854acb9273590 -->

<!-- pgdoc-cn_start sig_en=05dd244fba2bb9a4e68caf73e152a1c3 sig_cn_org=None source=14.1 
 <para>
  The module must be loaded by adding <literal>pg_stat_statements</literal> to
  <xref linkend="guc-shared-preload-libraries"/> in
  <filename>postgresql.conf</filename>, because it requires additional shared memory.
  This means that a server restart is needed to add or remove the module.
  In addition, query identifier calculation must be enabled in order for the
  module to be active, which is done automatically if <xref linkend="guc-compute-query-id"/>
  is set to <literal>auto</literal> or <literal>on</literal>, or any third-party
  module that calculates query identifiers is loaded.
 </para>
________________________________________________________-->
 <para>
  该模块必须通过在<filename>postgresql.conf</filename>的<xref linkend="guc-shared-preload-libraries"/>中增加<literal>pg_stat_statements</literal>来载入，因为它需要额外的共享内存。这意味着增加或移除该模块需要一次服务器重启。此外，必须启用查询ID计算器才能使模块处于active状态。如果<xref linkend="guc-compute-query-id"/>参数设置为<literal>auto</literal> 或者 <literal>on</literal>，或者如果加载了计算查询 id 的第三方模块， 则会自动完成此操作。
 </para>
<!-- pgdoc-cn_end sig_en=05dd244fba2bb9a4e68caf73e152a1c3 -->

<!-- pgdoc-cn_start sig_en=6b48db303bbeb76d81ea890545a116be sig_cn_org=None source=14.1 
 <para>
   When <filename>pg_stat_statements</filename> is active, it tracks
   statistics across all databases of the server.  To access and manipulate
   these statistics, the module provides views
   <structname>pg_stat_statements</structname> and
   <structname>pg_stat_statements_info</structname>,
   and the utility functions <function>pg_stat_statements_reset</function> and
   <function>pg_stat_statements</function>.  These are not available globally but
   can be enabled for a specific database with
   <command>CREATE EXTENSION pg_stat_statements</command>.
 </para>
________________________________________________________-->
 <para>
   当<filename>pg_stat_statements</filename>激活时，它会跟踪该服务器
   的所有数据库的统计信息。该模块提供了一个视图
   <structname>pg_stat_statements</structname>以及函数<function>pg_stat_statements_reset</function>
   和<function>pg_stat_statements</function>用于访问和操纵这些统计信息。这些视图
   和函数不是全局可用的，但是可以用<command>CREATE EXTENSION pg_stat_statements</command>
   为特定数据库启用它们。
 </para>
<!-- pgdoc-cn_end sig_en=6b48db303bbeb76d81ea890545a116be -->

 <sect2>
<!-- pgdoc-cn_start sig_en=59ca6bb0b6c3a016b9197868ccc6fc74 sig_cn_org=None source=14.1 
  <title>The <structname>pg_stat_statements</structname> View</title>
________________________________________________________-->
  <title><structname>pg_stat_statements</structname>视图</title>
<!-- pgdoc-cn_end sig_en=59ca6bb0b6c3a016b9197868ccc6fc74 -->

<!-- pgdoc-cn_start sig_en=32fdba6843b8422efc99e4e9076c8557 sig_cn_org=None source=14.1 
  <para>
   The statistics gathered by the module are made available via a
   view named <structname>pg_stat_statements</structname>.  This view
   contains one row for each distinct combination of database ID, user
   ID, query ID and whether it's a top-level statement or not (up to
   the maximum number of distinct statements that the module can track).
   The columns of the view are shown in
   <xref linkend="pgstatstatements-columns"/>.
  </para>
________________________________________________________-->
  <para>
   由该模块收集的统计信息可以通过一个名为
   <structname>pg_stat_statements</structname>的视图使用。这个视图的每一行都包含
   一个单独的数据库 ID、用户 ID 和查询 ID 以及它是否是顶级语句（最多到该模块可以追踪的可区分语句的数量）的组合。该视图的列如
   <xref linkend="pgstatstatements-columns"/>中所示。
  </para>
<!-- pgdoc-cn_end sig_en=32fdba6843b8422efc99e4e9076c8557 -->

  <table id="pgstatstatements-columns">
<!-- pgdoc-cn_start sig_en=c5d837ec49a3ad476f1d3afa9292ccc5 sig_cn_org=None source=14.1 
   <title><structname>pg_stat_statements</structname> Columns</title>
________________________________________________________-->
   <title><structname>pg_stat_statements</structname>列</title>
<!-- pgdoc-cn_end sig_en=c5d837ec49a3ad476f1d3afa9292ccc5 -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=2f8ea9eeb10f7705ed4d2d67ad546137 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>userid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       OID of user who executed the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>userid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       执行该语句的用户的 OID
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2f8ea9eeb10f7705ed4d2d67ad546137 -->

<!-- pgdoc-cn_start sig_en=81de4c5ef5d5570efc0ef87c4afbd361 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dbid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       OID of database in which the statement was executed
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dbid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       在其中执行该语句的数据库的 OID
      </para></entry>
      </row>
<!-- pgdoc-cn_end sig_en=81de4c5ef5d5570efc0ef87c4afbd361 -->

<!-- pgdoc-cn_start sig_en=603527f50d767fedbed2eac9e7561658 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>toplevel</structfield> <type>bool</type>
      </para>
      <para>
       True if the query was executed as a top-level statement
       (always true if <varname>pg_stat_statements.track</varname> is set to
       <literal>top</literal>)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
           <entry role="catalog_table_entry"><para role="column_definition">
            <structfield>toplevel</structfield> <type>bool</type>
           </para>
           <para>
            如果查询作为顶级 SQL 语句执行则为True（<varname>pg_stat_statements.track</varname>如果设置为<literal>top</literal>则始终为真）
           </para></entry>
       </row>
<!-- pgdoc-cn_end sig_en=603527f50d767fedbed2eac9e7561658 -->

<!-- pgdoc-cn_start sig_en=30df2aad3b95ba9ea9df25b9e3abba72 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>queryid</structfield> <type>bigint</type>
      </para>
      <para>
       Hash code to identify identical normalized queries.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>queryid</structfield> <type>bigint</type>
      </para>
      <para>
       用于识别相同规范化查询的哈希码。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=30df2aad3b95ba9ea9df25b9e3abba72 -->

<!-- pgdoc-cn_start sig_en=3347b28785c2bd47a5df435ec77b3d5a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>query</structfield> <type>text</type>
      </para>
      <para>
       Text of a representative statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>query</structfield> <type>text</type>
      </para>
      <para>
       语句的文本形式
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=3347b28785c2bd47a5df435ec77b3d5a -->

<!-- pgdoc-cn_start sig_en=c6b710d996c0547749ddca1aa81cab9f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>plans</structfield> <type>bigint</type>
      </para>
      <para>
       Number of times the statement was planned
       (if <varname>pg_stat_statements.track_planning</varname> is enabled,
       otherwise zero)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>plans</structfield> <type>bigint</type>
      </para>
      <para>
       计划语句的次数（如果启用了<varname>pg_stat_statements.track_planning</varname>，否则为零）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c6b710d996c0547749ddca1aa81cab9f -->

<!-- pgdoc-cn_start sig_en=8a4e0ca0f8b4a5d54e9245085d9393a1 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>total_plan_time</structfield> <type>double precision</type>
      </para>
      <para>
       Total time spent planning the statement, in milliseconds
       (if <varname>pg_stat_statements.track_planning</varname> is enabled,
       otherwise zero)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>total_plan_time</structfield> <type>double precision</type>
      </para>
      <para>
       计划语句所花费的总时间，以毫秒为单位（如果启用了<varname>pg_stat_statements.track_planning</varname>，否则为零）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8a4e0ca0f8b4a5d54e9245085d9393a1 -->

<!-- pgdoc-cn_start sig_en=b629b03b02e26f0cb011e82444851166 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>min_plan_time</structfield> <type>double precision</type>
      </para>
      <para>
       Minimum time spent planning the statement, in milliseconds
       (if <varname>pg_stat_statements.track_planning</varname> is enabled,
       otherwise zero)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>min_plan_time</structfield> <type>double precision</type>
      </para>
      <para>
       计划语句所花费的最短时间，以毫秒为单位（如果启用了<varname>pg_stat_statements.track_planning</varname>，否则为零）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b629b03b02e26f0cb011e82444851166 -->

<!-- pgdoc-cn_start sig_en=ca7dc261afca9af724d69293a9e9e603 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>max_plan_time</structfield> <type>double precision</type>
      </para>
      <para>
       Maximum time spent planning the statement, in milliseconds
       (if <varname>pg_stat_statements.track_planning</varname> is enabled,
       otherwise zero)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>max_plan_time</structfield> <type>double precision</type>
      </para>
      <para>
       计划语句所花费的最长时间，以毫秒为单位（如果启用了<varname>pg_stat_statements.track_planning</varname>，否则为零）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ca7dc261afca9af724d69293a9e9e603 -->

<!-- pgdoc-cn_start sig_en=5b2a335a5498546e5f5916f52aa7617a sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>mean_plan_time</structfield> <type>double precision</type>
      </para>
      <para>
       Mean time spent planning the statement, in milliseconds
       (if <varname>pg_stat_statements.track_planning</varname> is enabled,
       otherwise zero)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>mean_plan_time</structfield> <type>double precision</type>
      </para>
      <para>
       计划语句所花费的平均时间，以毫秒为单位（如果启用了<varname>pg_stat_statements.track_planning</varname>，否则为零）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=5b2a335a5498546e5f5916f52aa7617a -->

<!-- pgdoc-cn_start sig_en=1a54a397064d8c522bcb08d361d79c91 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stddev_plan_time</structfield> <type>double precision</type>
      </para>
      <para>
       Population standard deviation of time spent planning the statement,
       in milliseconds
       (if <varname>pg_stat_statements.track_planning</varname> is enabled,
       otherwise zero)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stddev_plan_time</structfield> <type>double precision</type>
      </para>
      <para>
       计划语句花费的时间的总体标准偏差，以毫秒为单位（如果启用了<varname>pg_stat_statements.track_planning</varname>，否则为零）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=1a54a397064d8c522bcb08d361d79c91 -->

<!-- pgdoc-cn_start sig_en=6654b6a3287e84f0de77b6d51a073f93 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>calls</structfield> <type>bigint</type>
      </para>
      <para>
       Number of times the statement was executed
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>calls</structfield> <type>bigint</type>
      </para>
      <para>
       语句被执行的次数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6654b6a3287e84f0de77b6d51a073f93 -->

<!-- pgdoc-cn_start sig_en=c05b3f258d913b369a76574a14bcc5ba sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>total_exec_time</structfield> <type>double precision</type>
      </para>
      <para>
       Total time spent executing the statement, in milliseconds
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>total_exec_time</structfield> <type>double precision</type>
      </para>
      <para>
       执行语句所花费的总时间，以毫秒为单位
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=c05b3f258d913b369a76574a14bcc5ba -->

<!-- pgdoc-cn_start sig_en=11ae74f4ca3ecd182495a0502905e760 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>min_exec_time</structfield> <type>double precision</type>
      </para>
      <para>
       Minimum time spent executing the statement, in milliseconds
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>min_exec_time</structfield> <type>double precision</type>
      </para>
      <para>
       执行语句所花费的最短时间，以毫秒为单位
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=11ae74f4ca3ecd182495a0502905e760 -->

<!-- pgdoc-cn_start sig_en=2327ca322f82beea9623efbb4725f53f sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>max_exec_time</structfield> <type>double precision</type>
      </para>
      <para>
       Maximum time spent executing the statement, in milliseconds
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>max_exec_time</structfield> <type>double precision</type>
      </para>
      <para>
       执行语句所花费的最长时间，以毫秒为单位
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2327ca322f82beea9623efbb4725f53f -->

<!-- pgdoc-cn_start sig_en=4842abaac84c811f8204e1350c456d15 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>mean_exec_time</structfield> <type>double precision</type>
      </para>
      <para>
       Mean time spent executing the statement, in milliseconds
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>mean_exec_time</structfield> <type>double precision</type>
      </para>
      <para>
       执行语句的平均时间，以毫秒为单位
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4842abaac84c811f8204e1350c456d15 -->

<!-- pgdoc-cn_start sig_en=27a9cf4e8cf085ef3bc6eb51ac1478ea sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stddev_exec_time</structfield> <type>double precision</type>
      </para>
      <para>
       Population standard deviation of time spent executing the statement, in milliseconds
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stddev_exec_time</structfield> <type>double precision</type>
      </para>
      <para>
       执行语句花费的时间的总体标准偏差，以毫秒为单位
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=27a9cf4e8cf085ef3bc6eb51ac1478ea -->

<!-- pgdoc-cn_start sig_en=3eb7dbdcceb02947c21e6e32e5e45186 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rows</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of rows retrieved or affected by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rows</structfield> <type>bigint</type>
      </para>
      <para>
       语句检索或影响的总行数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=3eb7dbdcceb02947c21e6e32e5e45186 -->

<!-- pgdoc-cn_start sig_en=a4387fff5d3db39a05d6d65f0016cde4 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>shared_blks_hit</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of shared block cache hits by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>shared_blks_hit</structfield> <type>bigint</type>
      </para>
      <para>
       语句的共享块缓存命中总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a4387fff5d3db39a05d6d65f0016cde4 -->

<!-- pgdoc-cn_start sig_en=b248cd7d4545ef17ec5921126b580979 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>shared_blks_read</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of shared blocks read by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>shared_blks_read</structfield> <type>bigint</type>
      </para>
      <para>
       语句读取的共享块总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b248cd7d4545ef17ec5921126b580979 -->

<!-- pgdoc-cn_start sig_en=4c97a738e5d56eabca4bc974ab0ff741 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>shared_blks_dirtied</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of shared blocks dirtied by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>shared_blks_dirtied</structfield> <type>bigint</type>
      </para>
      <para>
       被语句弄脏的共享块总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4c97a738e5d56eabca4bc974ab0ff741 -->

<!-- pgdoc-cn_start sig_en=09229e2ff4c47af574c8895c42222bf0 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>shared_blks_written</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of shared blocks written by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>shared_blks_written</structfield> <type>bigint</type>
      </para>
      <para>
       语句写入的共享块总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=09229e2ff4c47af574c8895c42222bf0 -->

<!-- pgdoc-cn_start sig_en=4cc567937e99a13da68d83536b7ab414 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>local_blks_hit</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of local block cache hits by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>local_blks_hit</structfield> <type>bigint</type>
      </para>
      <para>
       语句的本地块缓存命中总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=4cc567937e99a13da68d83536b7ab414 -->

<!-- pgdoc-cn_start sig_en=fd31e262d87e519e5fb09d1a6d724b8b sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>local_blks_read</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of local blocks read by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>local_blks_read</structfield> <type>bigint</type>
      </para>
      <para>
       语句读取的本地块总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=fd31e262d87e519e5fb09d1a6d724b8b -->

<!-- pgdoc-cn_start sig_en=bd1a45bfab300b0c94fe7fe0a10504b5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>local_blks_dirtied</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of local blocks dirtied by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>local_blks_dirtied</structfield> <type>bigint</type>
      </para>
      <para>
       被语句弄脏的本地块总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bd1a45bfab300b0c94fe7fe0a10504b5 -->

<!-- pgdoc-cn_start sig_en=71a956ce7c8dff37177a5693b8ad92f9 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>local_blks_written</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of local blocks written by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>local_blks_written</structfield> <type>bigint</type>
      </para>
      <para>
       语句写入的本地块总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=71a956ce7c8dff37177a5693b8ad92f9 -->

<!-- pgdoc-cn_start sig_en=6c5dca008816aa1c9019c61458b82837 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>temp_blks_read</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of temp blocks read by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>temp_blks_read</structfield> <type>bigint</type>
      </para>
      <para>
       语句读取的临时块总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6c5dca008816aa1c9019c61458b82837 -->

<!-- pgdoc-cn_start sig_en=31a865904a5c2320ddbdb1b350741da6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>temp_blks_written</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of temp blocks written by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>temp_blks_written</structfield> <type>bigint</type>
      </para>
      <para>
       语句写入的临时块总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=31a865904a5c2320ddbdb1b350741da6 -->

<!-- pgdoc-cn_start sig_en=2121b6c058fdeb35307dabad57498e00 sig_cn_org=b8e00dcc208ab69d768db78051e69380 source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>blk_read_time</structfield> <type>double precision</type>
      </para>
      <para>
       Total time the statement spent reading data file blocks, in milliseconds
       (if <xref linkend="guc-track-io-timing"/> is enabled, otherwise zero)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>blk_read_time</structfield> <type>double precision</type>
      </para>
      <para>
       总时间，语句读取数据文件块所花费的时间，以毫秒为单位
       （如果启用了<xref linkend="guc-track-io-timing"/>，否则为零）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2121b6c058fdeb35307dabad57498e00 -->

<!-- pgdoc-cn_start sig_en=50983dd405d067ea3e68d597cca1e45c sig_cn_org=f6b43af052d1601a77d6df3c63d8ce32 source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>blk_write_time</structfield> <type>double precision</type>
      </para>
      <para>
       Total time the statement spent writing data file blocks, in milliseconds
       (if <xref linkend="guc-track-io-timing"/> is enabled, otherwise zero)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>blk_write_time</structfield> <type>double precision</type>
      </para>
      <para>
       以毫秒为单位的语句写入数据文件块所花费的总时间
       （如果启用了<xref linkend="guc-track-io-timing"/>，否则为零）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=50983dd405d067ea3e68d597cca1e45c -->

<!-- pgdoc-cn_start sig_en=71e5920f186030af22ef316aebcbc418 sig_cn_org=88c8e67fed4c76910f20dd51d64d092a source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>temp_blk_read_time</structfield> <type>double precision</type>
      </para>
      <para>
       Total time the statement spent reading temporary file blocks, in
       milliseconds (if <xref linkend="guc-track-io-timing"/> is enabled,
       otherwise zero)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>temp_blk_read_time</structfield> <type>double precision</type>
      </para>
      <para>
       读取临时文件块的总时间，以毫秒为单位
       （如果启用了<xref linkend="guc-track-io-timing"/>，否则为零）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=71e5920f186030af22ef316aebcbc418 -->

<!-- pgdoc-cn_start sig_en=9731c44b86f77f587ffb5535561de34a sig_cn_org=3a6d862db5ec27a66adbc10827802dec source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>temp_blk_write_time</structfield> <type>double precision</type>
      </para>
      <para>
       Total time the statement spent writing temporary file blocks, in
       milliseconds (if <xref linkend="guc-track-io-timing"/> is enabled,
       otherwise zero)
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>temp_blk_write_time</structfield> <type>double precision</type>
      </para>
      <para>
       总时间，语句写入临时文件块所花费的时间，单位毫秒（如果启用了<xref linkend="guc-track-io-timing"/>，否则为零）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=9731c44b86f77f587ffb5535561de34a -->

<!-- pgdoc-cn_start sig_en=8125b615997af27d5f15c0b5b915a49d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>wal_records</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of WAL records generated by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>wal_records</structfield> <type>bigint</type>
      </para>
      <para>
       语句生成的 WAL 记录总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=8125b615997af27d5f15c0b5b915a49d -->

<!-- pgdoc-cn_start sig_en=ef9e9e955c8c8d0b51572e7f4982e3c5 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>wal_fpi</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of WAL full page images generated by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>wal_fpi</structfield> <type>bigint</type>
      </para>
      <para>
       语句生成的 WAL 整页图像总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=ef9e9e955c8c8d0b51572e7f4982e3c5 -->

<!-- pgdoc-cn_start sig_en=35038c8cb472e9d3be1385637a172548 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>wal_bytes</structfield> <type>numeric</type>
      </para>
      <para>
       Total amount of WAL generated by the statement in bytes
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>wal_bytes</structfield> <type>numeric</type>
      </para>
      <para>
       SQL 语句生成的 WAL 总量（以字节为单位）
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=35038c8cb472e9d3be1385637a172548 -->

<!-- pgdoc-cn_start sig_en=b05f752152ef76d2740342b826c72af9 sig_cn_org=690ef0ef09c887aadca3fac88727ab6c source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_functions</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of functions JIT-compiled by the statement
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_functions</structfield> <type>bigint</type>
      </para>
      <para>
       语句编译的函数总数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=b05f752152ef76d2740342b826c72af9 -->

<!-- pgdoc-cn_start sig_en=52691825a78df2395741dc538fe1eabf sig_cn_org=c5ed3c05cf9e46360c4d41d147c4f279 source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_generation_time</structfield> <type>double precision</type>
      </para>
      <para>
       Total time spent by the statement on generating JIT code, in milliseconds
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_generation_time</structfield> <type>double precision</type>
      </para>
      <para>
       语句生成JIT代码所花费的总时间，以毫秒为单位
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=52691825a78df2395741dc538fe1eabf -->

<!-- pgdoc-cn_start sig_en=028cc7e627a679bf94d8c356764024ac sig_cn_org=f0cafa985b5ffd4367d9ca8c3e15ba51 source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_inlining_count</structfield> <type>bigint</type>
      </para>
      <para>
       Number of times functions have been inlined
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_inlining_count</structfield> <type>bigint</type>
      </para>
      <para>
       函数已内联的次数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=028cc7e627a679bf94d8c356764024ac -->

<!-- pgdoc-cn_start sig_en=22b53981319bbcbc9d840f2d11c0fd8c sig_cn_org=7f9d469bac0f678d9dd0615f2da8b82b source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_inlining_time</structfield> <type>double precision</type>
      </para>
      <para>
       Total time spent by the statement on inlining functions, in milliseconds
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_inlining_time</structfield> <type>double precision</type>
      </para>
      <para>
       语句在内联函数上花费的总时间，单位为毫秒
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=22b53981319bbcbc9d840f2d11c0fd8c -->

<!-- pgdoc-cn_start sig_en=a0cd1aa8deb2ab7eaa288acf9c2a5d3c sig_cn_org=f03ef66ea28d33977e5996641c8dc691 source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_optimization_count</structfield> <type>bigint</type>
      </para>
      <para>
       Number of times the statement has been optimized
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_optimization_count</structfield> <type>bigint</type>
      </para>
      <para>
       语句已经优化的次数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=a0cd1aa8deb2ab7eaa288acf9c2a5d3c -->

<!-- pgdoc-cn_start sig_en=2b57d10791603f3b23e1b198d4fe7e5e sig_cn_org=1021a1ae5ca7c941757ff50e5744f96c source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_optimization_time</structfield> <type>double precision</type>
      </para>
      <para>
       Total time spent by the statement on optimizing, in milliseconds
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_optimization_time</structfield> <type>double precision</type>
      </para>
      <para>
       语句在优化过程中花费的总时间，单位为毫秒
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=2b57d10791603f3b23e1b198d4fe7e5e -->

<!-- pgdoc-cn_start sig_en=6bf4ba5da201a15000900de9c49ea554 sig_cn_org=b71abd56da15098d7526dd934ee29d02 source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_emission_count</structfield> <type>bigint</type>
      </para>
      <para>
       Number of times code has been emitted
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_emission_count</structfield> <type>bigint</type>
      </para>
      <para>
       代码已发出的次数
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=6bf4ba5da201a15000900de9c49ea554 -->

<!-- pgdoc-cn_start sig_en=bdf4ce089fa9bda0c7e53609aff92cd4 sig_cn_org=68e3867a2a3756ae821e7c71607cef33 source=15.7 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_emission_time</structfield> <type>double precision</type>
      </para>
      <para>
       Total time spent by the statement on emitting code, in milliseconds
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>jit_emission_time</structfield> <type>double precision</type>
      </para>
      <para>
       语句在生成代码时花费的总时间，单位为毫秒
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=bdf4ce089fa9bda0c7e53609aff92cd4 -->
    </tbody>
   </tgroup>
  </table>

<!-- pgdoc-cn_start sig_en=ee00e4a60447d20f3f1eb6b71c732241 sig_cn_org=9b181f1c9e6882acc932aeebc67e031b source=15.7 
  <para>
   For security reasons, only superusers and roles with privileges of the
   <literal>pg_read_all_stats</literal> role are allowed to see the SQL text and
   <structfield>queryid</structfield> of queries executed by other users.
   Other users can see the statistics, however, if the view has been installed
   in their database.
  </para>
________________________________________________________-->
  <para>
   出于安全原因，只有超级用户和具有<literal>pg_read_all_stats</literal>角色特权的角色才被允许查看其他用户执行的查询的SQL文本和<structfield>queryid</structfield>。
   其他用户可以查看统计信息，但是如果视图已经安装在他们的数据库中。
</para>
<!-- pgdoc-cn_end sig_en=ee00e4a60447d20f3f1eb6b71c732241 -->

<!-- pgdoc-cn_start sig_en=4364426a58cf1c80d24e1289f006f809 sig_cn_org=475b65bc34e5d981b9a4cb8bbf3d42dc source=15.7 
  <para>
   Plannable queries (that is, <command>SELECT</command>, <command>INSERT</command>,
   <command>UPDATE</command>, <command>DELETE</command>, and <command>MERGE</command>) are combined into a single
   <structname>pg_stat_statements</structname> entry whenever they have identical query
   structures according to an internal hash calculation.  Typically, two
   queries will be considered the same for this purpose if they are
   semantically equivalent except for the values of literal constants
   appearing in the query.  Utility commands (that is, all other commands)
   are compared strictly on the basis of their textual query strings, however.
  </para>
________________________________________________________-->
  <para>
   可计划的查询（即<command>SELECT</command>，<command>INSERT</command>，
   <command>UPDATE</command>，<command>DELETE</command>和<command>MERGE</command>）在内部哈希计算相同查询结构时被合并为单个
   <structname>pg_stat_statements</structname>条目。通常，如果两个查询在语义上等效，除了查询中出现的文字常量的值，它们将被视为相同。然而，对于实用程序命令（即所有其他命令），
   严格基于它们的文本查询字符串进行比较。
</para>
<!-- pgdoc-cn_end sig_en=4364426a58cf1c80d24e1289f006f809 -->

  <note>
<!-- pgdoc-cn_start sig_en=36b46adfa5a28d7f5d5630aeaa4018ed sig_cn_org=None source=14.1 
   <para>
    The following details about constant replacement and
    <structfield>queryid</structfield> only apply when <xref
    linkend="guc-compute-query-id"/> is enabled.  If you use an external
    module instead to compute <structfield>queryid</structfield>, you
    should refer to its documentation for details.
   </para>
________________________________________________________-->
   <para>
     以下有关常量替换和<structfield>queryid</structfield>的详细信息仅适用于<xref linkend="guc-compute-query-id"/>有效的情况。 <structfield>queryid</structfield>如果您使用外部模块来计算，您应该参考该外部模块的文档以获取详细信息。
     </para>
<!-- pgdoc-cn_end sig_en=36b46adfa5a28d7f5d5630aeaa4018ed -->
  </note>

<!-- pgdoc-cn_start sig_en=d932d04571faa9698c40495e6f39f00c sig_cn_org=None source=14.1 
  <para>
   When a constant's value has been ignored for purposes of matching the query
   to other queries, the constant is replaced by a parameter symbol, such
   as <literal>$1</literal>, in the <structname>pg_stat_statements</structname>
   display.
   The rest of the query text is that of the first query that had the
   particular <structfield>queryid</structfield> hash value associated with the
   <structname>pg_stat_statements</structname> entry.
  </para>
________________________________________________________-->
  <para>
   当为了把一个查询与其他查询匹配，常数值会被忽略，
   在<structname>pg_stat_statements</structname>显示中它会被一个参数符号，
   比如<literal>$1</literal>所替换。查询文本的剩余部分就是具有与该<structname>pg_stat_statements</structname>项相关的特定<structfield>queryid</structfield>哈希值的第一个查询的文本。
  </para>
<!-- pgdoc-cn_end sig_en=d932d04571faa9698c40495e6f39f00c -->

<!-- pgdoc-cn_start sig_en=5309626704e8ff78f2371d62178a97cd sig_cn_org=None source=14.1 
  <para>
   In some cases, queries with visibly different texts might get merged into a
   single <structname>pg_stat_statements</structname> entry.  Normally this will happen
   only for semantically equivalent queries, but there is a small chance of
   hash collisions causing unrelated queries to be merged into one entry.
   (This cannot happen for queries belonging to different users or databases,
   however.)
  </para>
________________________________________________________-->
  <para>
   在某些情况中，具有明显不同文本的查询可能会被融合到一个单一的<structname>pg_stat_statements</structname>项。通常这只会发生在语义等价的查询身上，但是也有很小的机会因为哈希碰撞的原因导致无关的查询被融合到一个项中（不过，对于属于不同用户或数据库的查询来说不会发生这种情况）。
  </para>
<!-- pgdoc-cn_end sig_en=5309626704e8ff78f2371d62178a97cd -->

<!-- pgdoc-cn_start sig_en=8c4c46f8bec530bf252c058cd9c88c71 sig_cn_org=None source=14.1 
  <para>
   Since the <structfield>queryid</structfield> hash value is computed on the
   post-parse-analysis representation of the queries, the opposite is
   also possible: queries with identical texts might appear as
   separate entries, if they have different meanings as a result of
   factors such as different <varname>search_path</varname> settings.
  </para>
________________________________________________________-->
  <para>
   由于<structfield>queryid</structfield>哈希值是根据查询被解析和分析后的表达计算的，对立的情况也可能存在：如果具有相同文本的查询由于参数（如不同的<varname>search_path</varname>设置）的原因而具有不同的含义，它们就可能作为不同的项存在。
  </para>
<!-- pgdoc-cn_end sig_en=8c4c46f8bec530bf252c058cd9c88c71 -->

<!-- pgdoc-cn_start sig_en=6c483ae7dd44aaf7c233ca51e5b632f4 sig_cn_org=None source=14.1 
  <para>
   Consumers of <structname>pg_stat_statements</structname> may wish to use
   <structfield>queryid</structfield> (perhaps in combination with
   <structfield>dbid</structfield> and <structfield>userid</structfield>) as a more stable
   and reliable identifier for each entry than its query text.
   However, it is important to understand that there are only limited
   guarantees around the stability of the <structfield>queryid</structfield> hash
   value.  Since the identifier is derived from the
   post-parse-analysis tree, its value is a function of, among other
   things, the internal object identifiers appearing in this representation.
   This has some counterintuitive implications.  For example,
   <filename>pg_stat_statements</filename> will consider two apparently-identical
   queries to be distinct, if they reference a table that was dropped
   and recreated between the executions of the two queries.
   The hashing process is also sensitive to differences in
   machine architecture and other facets of the platform.
   Furthermore, it is not safe to assume that <structfield>queryid</structfield>
   will be stable across major versions of <productname>PostgreSQL</productname>.
  </para>
________________________________________________________-->
  <para>
   <structname>pg_stat_statements</structname>的使用者可能希望使用
   <structfield>queryid</structfield>（也许会与<structfield>dbid</structfield>和<structfield>userid</structfield>组合）作为一个项比查询文本更稳定和可靠的标识符。但是，有一点很重要的是，对于<structfield>queryid</structfield>哈希值稳定性只有有限的保障。因为该标识符是从解析分析后的树得来的，它的值是以这种形式出现的内部对象标识符的函数。这有一些违背直觉的含义。例如，如果有两个查询引用了同一个表，但是该表在两次查询之间被删除并且重建，显然这两个查询是完全一致的，但是<filename>pg_stat_statements</filename>将把它们认为是不同的。哈希处理也对机器架构以及平台的其他方面的差别很敏感。更进一步，认为<productname>PostgreSQL</productname>的不同主版本之间<structfield>queryid</structfield>将会保持稳定是不安全的。
  </para>
<!-- pgdoc-cn_end sig_en=6c483ae7dd44aaf7c233ca51e5b632f4 -->

<!-- pgdoc-cn_start sig_en=3dcf74c6569b238a3b50ec4727f2c502 sig_cn_org=d3ed98749106f5096b755e221ff39765 source=15.7 
  <para>
   Two servers participating in replication based on physical WAL replay can
   be expected to have identical <structfield>queryid</structfield> values for
   the same query.  However, logical replication schemes do not promise to
   keep replicas identical in all relevant details, so
   <structfield>queryid</structfield> will not be a useful identifier for
   accumulating costs across a set of logical replicas.
   If in doubt, direct testing is recommended.
  </para>
________________________________________________________-->
  <para>
   基于物理WAL重放参与复制的两个服务器可以预期在相同查询中具有相同的<structfield>queryid</structfield>值。
   然而，逻辑复制方案并不承诺保持副本在所有相关细节上完全相同，因此<structfield>queryid</structfield>将不是
   用于在一组逻辑副本中累积成本的有用标识符。如果有疑问，建议进行直接测试。
</para>
<!-- pgdoc-cn_end sig_en=3dcf74c6569b238a3b50ec4727f2c502 -->

<!-- pgdoc-cn_start sig_en=5ce35f7c19fe65214cce88c898ad07d9 sig_cn_org=0e1a4fef18db6aa282a7347c0897e8a8 source=15.7 
  <para>
   Generally, it can be assumed that <structfield>queryid</structfield> values
   are stable between minor version releases of <productname>PostgreSQL</productname>,
   providing that instances are running on the same machine architecture and
   the catalog metadata details match.  Compatibility will only be broken
   between minor versions as a last resort.
  </para>
________________________________________________________-->
  <para>
   通常可以假定<structfield>queryid</structfield>值在<productname>PostgreSQL</productname>的
   小版本发布之间是稳定的，前提是实例在相同的机器架构上运行，并且目录元数据细节匹配。
   兼容性只会在最后一种情况下在小版本之间被破坏。
</para>
<!-- pgdoc-cn_end sig_en=5ce35f7c19fe65214cce88c898ad07d9 -->

<!-- pgdoc-cn_start sig_en=e0df9a3b21f2698a5d8db74be06e2e0a sig_cn_org=None source=14.1 
  <para>
   The parameter symbols used to replace constants in
   representative query texts start from the next number after the
   highest <literal>$</literal><replaceable>n</replaceable> parameter in the original query
   text, or <literal>$1</literal> if there was none.  It's worth noting that in
   some cases there may be hidden parameter symbols that affect this
   numbering.  For example, <application>PL/pgSQL</application> uses hidden parameter
   symbols to insert values of function local variables into queries, so that
   a <application>PL/pgSQL</application> statement like <literal>SELECT i + 1 INTO j</literal>
   would have representative text like <literal>SELECT i + $2</literal>.
  </para>
________________________________________________________-->
  <para>
   代表性查询文本中用于替换常量的参数符号从原始查询文本中最高的
   <literal>$</literal><replaceable>n</replaceable>参数之后的下一个数字开始，
   如果没有则为<literal>$1</literal>。值得注意的是，在某些情况下，
   可能存在影响编号的隐藏参数符号。例如，<application>PL/pgSQL</application>
   使用隐藏参数符号将函数局部变量的值插入到查询中，以便像
   <literal>SELECT i + 1 INTO j</literal>的<application>PL/pgSQL</application>
   语句将具有像<literal>SELECT i + $2</literal>这样的代表性文本。
  </para>
<!-- pgdoc-cn_end sig_en=e0df9a3b21f2698a5d8db74be06e2e0a -->

<!-- pgdoc-cn_start sig_en=3650abe36ae9eb5e3e77bec5406024df sig_cn_org=None source=14.1 
  <para>
   The representative query texts are kept in an external disk file, and do
   not consume shared memory.  Therefore, even very lengthy query texts can
   be stored successfully.  However, if many long query texts are
   accumulated, the external file might grow unmanageably large.  As a
   recovery method if that happens, <filename>pg_stat_statements</filename> may
   choose to discard the query texts, whereupon all existing entries in
   the <structname>pg_stat_statements</structname> view will show
   null <structfield>query</structfield> fields, though the statistics associated with
   each <structfield>queryid</structfield> are preserved.  If this happens, consider
   reducing <varname>pg_stat_statements.max</varname> to prevent
   recurrences.
  </para>
________________________________________________________-->
  <para>
   有代表性的查询文本被保存在一个外部磁盘文件中，并且不会消耗共享内存。
   因此，即便是很长的查询文本也能被成功的存储下来。不过，如果累积了很多
   长的查询文本，该外部文件也会增长到很大。作为一种恢复方法，如果这样的
   情况发生，<filename>pg_stat_statements</filename>可能会选择丢弃这些查询文本，
   于是<structname>pg_stat_statements</structname>视图中的所有现有项将会显示空的
   <structfield>query</structfield>域，不过与每个<structfield>queryid</structfield>相关联的
   统计信息会被保留下来。如果发生这种情况，可以考虑减小
   <varname>pg_stat_statements.max</varname>来防止复发。
  </para>
<!-- pgdoc-cn_end sig_en=3650abe36ae9eb5e3e77bec5406024df -->

<!-- pgdoc-cn_start sig_en=9a4e69a8ac7f13a1dea6673631ca2919 sig_cn_org=None source=14.1 
  <para>
   <structfield>plans</structfield> and <structfield>calls</structfield> aren't
   always expected to match because planning and execution statistics are
   updated at their respective end phase, and only for successful operations.
   For example, if a statement is successfully planned but fails during
   the execution phase, only its planning statistics will be updated.
   If planning is skipped because a cached plan is used, only its execution
   statistics will be updated.
  </para>
________________________________________________________-->
  <para>
   <structfield>plans</structfield>和<structfield>calls</structfield>并不总是匹配的，
   因为计划和执行统计信息在它们各自的结束阶段更新，并且仅适用于成功的操作。
   例如，如果一条语句计划成功但在执行阶段失败，则只会更新其计划统计信息。
   如果因为使用了缓存计划而跳过计划，则只会更新其执行统计信息。
  </para>
<!-- pgdoc-cn_end sig_en=9a4e69a8ac7f13a1dea6673631ca2919 -->
 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=0a70cbd9976208d1de6773331db192f8 sig_cn_org=None source=14.1 
  <title>The <structname>pg_stat_statements_info</structname> View</title>
________________________________________________________-->
  <title>The <structname>pg_stat_statements_info</structname> View</title>
<!-- pgdoc-cn_end sig_en=0a70cbd9976208d1de6773331db192f8 -->

<!-- pgdoc-cn_start sig_en=796ff3734b7182f42db9308155e60988 sig_cn_org=None source=14.1 
  <indexterm>
   <primary>pg_stat_statements_info</primary>
  </indexterm>
________________________________________________________-->
  <indexterm>
   <primary>pg_stat_statements_info</primary>
  </indexterm>
<!-- pgdoc-cn_end sig_en=796ff3734b7182f42db9308155e60988 -->

<!-- pgdoc-cn_start sig_en=22037aa3f0b19481651e0da6f595c4f1 sig_cn_org=None source=14.1 
  <para>
   The statistics of the <filename>pg_stat_statements</filename> module
   itself are tracked and made available via a view named
   <structname>pg_stat_statements_info</structname>.  This view contains
   only a single row.  The columns of the view are shown in
   <xref linkend="pgstatstatementsinfo-columns"/>.
  </para>
________________________________________________________-->
  <para>
   通过视图<structname>pg_stat_statements_info</structname>来生成和记录<filename>pg_stat_statements</filename> 本身模块的统计信息。这个视图只有一行数据，视图列显示在 <xref linkend="pgstatstatementsinfo-columns"/>中。
  </para>
<!-- pgdoc-cn_end sig_en=22037aa3f0b19481651e0da6f595c4f1 -->

  <table id="pgstatstatementsinfo-columns">
<!-- pgdoc-cn_start sig_en=03ad943bce044ad1f8a6190f9961925e sig_cn_org=None source=14.1 
   <title><structname>pg_stat_statements_info</structname> Columns</title>
________________________________________________________-->
   <title><structname>pg_stat_statements_info</structname> Columns</title>
<!-- pgdoc-cn_end sig_en=03ad943bce044ad1f8a6190f9961925e -->
   <tgroup cols="1">
    <thead>
<!-- pgdoc-cn_start sig_en=19eb14a155d7416c3b9cad7829c11a9d sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       列类型
      </para>
      <para>
       描述
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=19eb14a155d7416c3b9cad7829c11a9d -->
    </thead>

    <tbody>
<!-- pgdoc-cn_start sig_en=df8bc4baf1a3e1a3e7fd3ba0345b8de6 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dealloc</structfield> <type>bigint</type>
      </para>
      <para>
       Total number of times <structname>pg_stat_statements</structname>
       entries about the least-executed statements were deallocated
       because more distinct statements than
       <varname>pg_stat_statements.max</varname> were observed
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dealloc</structfield> <type>bigint</type>
      </para>
      <para>
       由于观察到比<varname>pg_stat_statements.max</varname>更多的不同语句，关于最少执行语句的<structname>pg_stat_statements</structname>条目被删除的总次数。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=df8bc4baf1a3e1a3e7fd3ba0345b8de6 -->
<!-- pgdoc-cn_start sig_en=e5c0b01fca11a414adeb14ba524ddd89 sig_cn_org=None source=14.1 
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stats_reset</structfield> <type>timestamp with time zone</type>
      </para>
      <para>
       Time at which all statistics in the
       <structname>pg_stat_statements</structname> view were last reset.
      </para></entry>
     </row>
________________________________________________________-->
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stats_reset</structfield> <type>timestamp with time zone</type>
      </para>
      <para>
       <structname>pg_stat_statements</structname>上次重置视图的所有统计信息的时间。
      </para></entry>
     </row>
<!-- pgdoc-cn_end sig_en=e5c0b01fca11a414adeb14ba524ddd89 -->

    </tbody>
   </tgroup>
  </table>
 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=a75e46b58752dd4a3c18092d0816bc01 sig_cn_org=None source=14.1 
  <title>Functions</title>
________________________________________________________-->
  <title>函数</title>
<!-- pgdoc-cn_end sig_en=a75e46b58752dd4a3c18092d0816bc01 -->

  <variablelist>
   <varlistentry>
<!-- pgdoc-cn_start sig_en=ec5b9f8f998883db7554e07b7bda187d sig_cn_org=None source=14.1 
    <term>
     <function>pg_stat_statements_reset(userid Oid, dbid Oid, queryid bigint) returns void</function>
     <indexterm>
      <primary>pg_stat_statements_reset</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>pg_stat_statements_reset(userid Oid, dbid Oid, queryid bigint) returns void</function>
     <indexterm>
      <primary>pg_stat_statements_reset</primary>
     </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=ec5b9f8f998883db7554e07b7bda187d -->

    <listitem>
<!-- pgdoc-cn_start sig_en=590a1340481ee0b081ce93124547b8d4 sig_cn_org=None source=14.1 
     <para>
      <function>pg_stat_statements_reset</function> discards statistics
      gathered so far by <filename>pg_stat_statements</filename> corresponding
      to the specified <structfield>userid</structfield>, <structfield>dbid</structfield>
      and <structfield>queryid</structfield>.  If any of the parameters are not
      specified, the default value <literal>0</literal>(invalid) is used for
      each of them and the statistics that match with other parameters will be
      reset.  If no parameter is specified or all the specified parameters are
      <literal>0</literal>(invalid), it will discard all statistics.
      If all statistics in the <filename>pg_stat_statements</filename>
      view are discarded, it will also reset the statistics in the
      <structname>pg_stat_statements_info</structname> view.
      By default, this function can only be executed by superusers.
      Access may be granted to others using <command>GRANT</command>.
     </para>
________________________________________________________-->
     <para>
      <function>pg_stat_statements_reset</function>丢弃到目前为止与指定的<structfield>userid</structfield>，
      <structfield>dbid</structfield>和<structfield>queryid</structfield>相对应的<filename>pg_stat_statements</filename>收集的统计信息。 
      如果有任何参数未被指定，那么将对这些参数使用默认值<literal>0</literal>（无效），并且将重置与其他参数匹配的统计信息。
      如果未指定任何参数，或者所有指定的参数均为<literal>0</literal>（无效），则它将丢弃所有统计信息。如果<filename>pg_stat_statements</filename>视图的所有统计信息都被丢弃，则<structname>pg_stat_statements_info</structname>视图的统计信息也将被重置。
      默认情况下，此功能只能由超级用户执行。可以使用<command>GRANT</command>授予其他人访问权限。
     </para>
<!-- pgdoc-cn_end sig_en=590a1340481ee0b081ce93124547b8d4 -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=b32b87ce664c308cbdc77e71bb6c2621 sig_cn_org=None source=14.1 
    <term>
     <function>pg_stat_statements(showtext boolean) returns setof record</function>
     <indexterm>
      <primary>pg_stat_statements</primary>
      <secondary>function</secondary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>pg_stat_statements(showtext boolean) returns setof record</function>
     <indexterm>
      <primary>pg_stat_statements</primary>
      <secondary>function</secondary>
     </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=b32b87ce664c308cbdc77e71bb6c2621 -->

    <listitem>
<!-- pgdoc-cn_start sig_en=ff028c64cd09c336a6b55ef95f3a2d84 sig_cn_org=None source=14.1 
     <para>
      The <structname>pg_stat_statements</structname> view is defined in
      terms of a function also named <function>pg_stat_statements</function>.
      It is possible for clients to call
      the <function>pg_stat_statements</function> function directly, and by
      specifying <literal>showtext := false</literal> have query text be
      omitted (that is, the <literal>OUT</literal> argument that corresponds
      to the view's <structfield>query</structfield> column will return nulls).  This
      feature is intended to support external tools that might wish to avoid
      the overhead of repeatedly retrieving query texts of indeterminate
      length.  Such tools can instead cache the first query text observed
      for each entry themselves, since that is
      all <filename>pg_stat_statements</filename> itself does, and then retrieve
      query texts only as needed.  Since the server stores query texts in a
      file, this approach may reduce physical I/O for repeated examination
      of the <structname>pg_stat_statements</structname> data.
     </para>
________________________________________________________-->
     <para>
      <structname>pg_stat_statements</structname>视图按照一个也叫
      <function>pg_stat_statements</function>的函数来定义。客户端可以直接调用
      <function>pg_stat_statements</function>函数，并且通过指定
      <literal>showtext := false</literal>来忽略查询文本（即，对应于视图的
      <structfield>query</structfield>列的<literal>OUT</literal>参数将返回空值）。
      这个特性是为了支持不想重复接收长度不定的查询文本的外部工具而设计的。
      这类工具可以转而自行缓存第一个观察到的查询文本，因为这就是
      <filename>pg_stat_statements</filename>自己所做的全部工作，并且只在需要的
      时候检索查询文本。因为服务器会把查询文本存储在一个文件中，这种方法可
      以降低重复检查<structname>pg_stat_statements</structname>数据的
      物理 I/O。
     </para>
<!-- pgdoc-cn_end sig_en=ff028c64cd09c336a6b55ef95f3a2d84 -->
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=9125daac1844cde69a678e3c3c9c9bcf sig_cn_org=None source=14.1 
  <title>Configuration Parameters</title>
________________________________________________________-->
  <title>配置参数</title>
<!-- pgdoc-cn_end sig_en=9125daac1844cde69a678e3c3c9c9bcf -->

  <variablelist>
   <varlistentry>
<!-- pgdoc-cn_start sig_en=fc53db1db9dab2a4337c2f4e04970481 sig_cn_org=21a267358c33cebdb1baaf04021283aa source=15.7 
    <term>
     <varname>pg_stat_statements.max</varname> (<type>integer</type>)
     <indexterm>
      <primary><varname>pg_stat_statements.max</varname> configuration parameter</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <varname>pg_stat_statements.max</varname> (<type>integer</type>)
     <indexterm>
      <primary><varname>pg_stat_statements.max</varname> 配置参数</primary>
     </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=fc53db1db9dab2a4337c2f4e04970481 -->

    <listitem>
<!-- pgdoc-cn_start sig_en=548bc30b12f811c87c79d681908e157f sig_cn_org=None source=14.1 
     <para>
      <varname>pg_stat_statements.max</varname> is the maximum number of
      statements tracked by the module (i.e., the maximum number of rows
      in the <structname>pg_stat_statements</structname> view).  If more distinct
      statements than that are observed, information about the least-executed
      statements is discarded.  The number of times such information was
      discarded can be seen in the
      <structname>pg_stat_statements_info</structname> view.
      The default value is 5000.
      This parameter can only be set at server start.
     </para>
________________________________________________________-->
     <para>
      <varname>pg_stat_statements.max</varname>是由该模块跟踪的语句的最大数目（即<structname>pg_stat_statements</structname>视图中行的最大数量）。如果观测到的可区分的语句超过这个数量，最少被执行的语句的信息将会被丢弃。可以在<structname>pg_stat_statements_info</structname>视图中看到此类信息被丢弃的次数。默认值为 5000。这个参数只能在服务器启动时设置。
     </para>
<!-- pgdoc-cn_end sig_en=548bc30b12f811c87c79d681908e157f -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=934d75dbba8bdf47b997f31979119dec sig_cn_org=ce380449ab2ec87029ecd9f6c14208ed source=15.7 
    <term>
     <varname>pg_stat_statements.track</varname> (<type>enum</type>)
     <indexterm>
      <primary><varname>pg_stat_statements.track</varname> configuration parameter</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <varname>pg_stat_statements.track</varname> (<type>enum</type>)
     <indexterm>
      <primary><varname>pg_stat_statements.track</varname> 配置参数</primary>
     </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=934d75dbba8bdf47b997f31979119dec -->

    <listitem>
<!-- pgdoc-cn_start sig_en=15d7755aabe23e93516d718927b2d709 sig_cn_org=None source=14.1 
     <para>
      <varname>pg_stat_statements.track</varname> controls which statements
      are counted by the module.
      Specify <literal>top</literal> to track top-level statements (those issued
      directly by clients), <literal>all</literal> to also track nested statements
      (such as statements invoked within functions), or <literal>none</literal> to
      disable statement statistics collection.
      The default value is <literal>top</literal>.
      Only superusers can change this setting.
     </para>
________________________________________________________-->
     <para>
      <varname>pg_stat_statements.track</varname>控制哪些语句会被该模块计数。指定<literal>top</literal>可以跟踪顶层语句（那些直接由客户端发出的语句），指定<literal>all</literal>还可以跟踪嵌套的语句（例如在函数中调用的语句），指定<literal>none</literal>可以禁用语句统计信息收集。默认值是<literal>top</literal>。
      只有超级用户能够改变这个设置。
     </para>
<!-- pgdoc-cn_end sig_en=15d7755aabe23e93516d718927b2d709 -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=2c6bf8747b9ad1ddc261e6aaf1ff9615 sig_cn_org=25975c3240124dacd58daaa554ab7876 source=15.7 
    <term>
     <varname>pg_stat_statements.track_utility</varname> (<type>boolean</type>)
     <indexterm>
      <primary><varname>pg_stat_statements.track_utility</varname> configuration parameter</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <varname>pg_stat_statements.track_utility</varname> (<type>boolean</type>)
     <indexterm>
      <primary><varname>pg_stat_statements.track_utility</varname>配置参数</primary>
     </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=2c6bf8747b9ad1ddc261e6aaf1ff9615 -->

    <listitem>
<!-- pgdoc-cn_start sig_en=2d1e04bdcefc703c9eb3d5ec7ea7b5f3 sig_cn_org=efdcf2500c8516351ac53103f7bf8683 source=15.7 
     <para>
      <varname>pg_stat_statements.track_utility</varname> controls whether
      utility commands are tracked by the module.  Utility commands are
      all those other than <command>SELECT</command>, <command>INSERT</command>,
      <command>UPDATE</command>, <command>DELETE</command>, and <command>MERGE</command>.
      The default value is <literal>on</literal>.
      Only superusers can change this setting.
     </para>
________________________________________________________-->
     <para>
      <varname>pg_stat_statements.track_utility</varname>控制模块是否跟踪实用命令。
      实用命令是除了<command>SELECT</command>、<command>INSERT</command>、
      <command>UPDATE</command>、<command>DELETE</command>和<command>MERGE</command>之外的所有命令。
      默认值为<literal>on</literal>。
      只有超级用户可以更改此设置。
     </para>
<!-- pgdoc-cn_end sig_en=2d1e04bdcefc703c9eb3d5ec7ea7b5f3 -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=b3d568bbbc32f1ac28823bb2c10ca319 sig_cn_org=602cabdbd1e46aba10130cd90354c760 source=15.7 
    <term>
     <varname>pg_stat_statements.track_planning</varname> (<type>boolean</type>)
     <indexterm>
      <primary><varname>pg_stat_statements.track_planning</varname> configuration parameter</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <varname>pg_stat_statements.track_planning</varname> (<type>boolean</type>)
     <indexterm>
      <primary><varname>pg_stat_statements.track_planning</varname>配置参数</primary>
     </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=b3d568bbbc32f1ac28823bb2c10ca319 -->

    <listitem>
<!-- pgdoc-cn_start sig_en=b5d3acccab15e82147319b9b6b3f0f4e sig_cn_org=None source=14.1 
     <para>
      <varname>pg_stat_statements.track_planning</varname> controls whether
      planning operations and duration are tracked by the module.
      Enabling this parameter may incur a noticeable performance penalty,
      especially when statements with identical query structure are executed
      by many concurrent connections which compete to update a small number of
      <structname>pg_stat_statements</structname> entries.
      The default value is <literal>off</literal>.
      Only superusers can change this setting.
     </para>
________________________________________________________-->
     <para>
      <varname>pg_stat_statements.track_planning</varname>控制模块是否跟踪计划操作和持续时间。
      启用此参数可能会导致明显的性能损失，尤其是当具有相同查询结构的 SQL 语句由许多竞争更新少数<structname>pg_stat_statements</structname>条目的并发连接执行时。
      默认值为<literal>off</literal>。只有超级用户才能更改此设置。
     </para>
<!-- pgdoc-cn_end sig_en=b5d3acccab15e82147319b9b6b3f0f4e -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=2d38451e74eb9513d1c9f07d8d951810 sig_cn_org=ddec2a2e0443d41a509ebb550590c0be source=15.7 
    <term>
     <varname>pg_stat_statements.save</varname> (<type>boolean</type>)
     <indexterm>
      <primary><varname>pg_stat_statements.save</varname> configuration parameter</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <varname>pg_stat_statements.save</varname> (<type>boolean</type>)
     <indexterm>
      <primary><varname>pg_stat_statements.save</varname> 配置参数</primary>
     </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=2d38451e74eb9513d1c9f07d8d951810 -->

    <listitem>
<!-- pgdoc-cn_start sig_en=a1ed55f440cbf6fcbe6b0da2728165d4 sig_cn_org=None source=14.1 
     <para>
      <varname>pg_stat_statements.save</varname> specifies whether to
      save statement statistics across server shutdowns.
      If it is <literal>off</literal> then statistics are not saved at
      shutdown nor reloaded at server start.
      The default value is <literal>on</literal>.
      This parameter can only be set in the <filename>postgresql.conf</filename>
      file or on the server command line.
     </para>
________________________________________________________-->
     <para>
      <varname>pg_stat_statements.save</varname>指定是否在服务器关闭之后还保存语句统计信息。如果被设置为<literal>off</literal>，那么关闭后不保存统计信息并且在服务器启动时也不会重新载入统计信息。默认值为<literal>on</literal>。这个参数只能在<filename>postgresql.conf</filename>文件中或者在服务器命令行上设置。
     </para>
<!-- pgdoc-cn_end sig_en=a1ed55f440cbf6fcbe6b0da2728165d4 -->
    </listitem>
   </varlistentry>
  </variablelist>

<!-- pgdoc-cn_start sig_en=bdd69c103786025383659b3682a57af9 sig_cn_org=None source=14.1 
  <para>
   The module requires additional shared memory proportional to
   <varname>pg_stat_statements.max</varname>.  Note that this
   memory is consumed whenever the module is loaded, even if
   <varname>pg_stat_statements.track</varname> is set to <literal>none</literal>.
  </para>
________________________________________________________-->
  <para>
   该模块要求与<varname>pg_stat_statements.max</varname>成比例的额外共享内存。注意只要该模块被载入就会消耗这么多的内存，即便<varname>pg_stat_statements.track</varname>被设置为<literal>none</literal>。
  </para>
<!-- pgdoc-cn_end sig_en=bdd69c103786025383659b3682a57af9 -->

<!-- pgdoc-cn_start sig_en=5aeb8e679a9775293ef3c7728428d33b sig_cn_org=None source=14.1 
  <para>
   These parameters must be set in <filename>postgresql.conf</filename>.
   Typical usage might be:

<programlisting>
# postgresql.conf
shared_preload_libraries = 'pg_stat_statements'

compute_query_id = on
pg_stat_statements.max = 10000
pg_stat_statements.track = all
</programlisting>
  </para>
________________________________________________________-->
  <para>
   这些参数必须在<filename>postgresql.conf</filename>中设置。典型的用法可能是：

<programlisting>
# postgresql.conf
shared_preload_libraries = 'pg_stat_statements'

compute_query_id = on
pg_stat_statements.max = 10000
pg_stat_statements.track = all
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=5aeb8e679a9775293ef3c7728428d33b -->
 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=3678a6ffbeda182a49381bb6889742a1 sig_cn_org=None source=14.1 
  <title>Sample Output</title>
________________________________________________________-->
  <title>示例输出</title>
<!-- pgdoc-cn_end sig_en=3678a6ffbeda182a49381bb6889742a1 -->

<!-- pgdoc-cn_start sig_en=1d7786b4494c42f2b288a4473f205957 sig_cn_org=1d7786b4494c42f2b288a4473f205957 source=15.7 
<screen>
bench=# SELECT pg_stat_statements_reset();

$ pgbench -i bench
$ pgbench -c10 -t300 bench

bench=# \x
bench=# SELECT query, calls, total_exec_time, rows, 100.0 * shared_blks_hit /
               nullif(shared_blks_hit + shared_blks_read, 0) AS hit_percent
          FROM pg_stat_statements ORDER BY total_exec_time DESC LIMIT 5;
-[ RECORD 1 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
query           | UPDATE pgbench_branches SET bbalance = bbalance + $1 WHERE bid = $2
calls           | 3000
total_exec_time | 25565.855387
rows            | 3000
hit_percent     | 100.0000000000000000
-[ RECORD 2 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
query           | UPDATE pgbench_tellers SET tbalance = tbalance + $1 WHERE tid = $2
calls           | 3000
total_exec_time | 20756.669379
rows            | 3000
hit_percent     | 100.0000000000000000
-[ RECORD 3 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
query           | copy pgbench_accounts from stdin
calls           | 1
total_exec_time | 291.865911
rows            | 100000
hit_percent     | 100.0000000000000000
-[ RECORD 4 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
query           | UPDATE pgbench_accounts SET abalance = abalance + $1 WHERE aid = $2
calls           | 3000
total_exec_time | 271.232977
rows            | 3000
hit_percent     | 98.8454011741682975
-[ RECORD 5 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
query           | alter table pgbench_accounts add primary key (aid)
calls           | 1
total_exec_time | 160.588563
rows            | 0
hit_percent     | 100.0000000000000000


bench=# SELECT pg_stat_statements_reset(0,0,s.queryid) FROM pg_stat_statements AS s
            WHERE s.query = 'UPDATE pgbench_branches SET bbalance = bbalance + $1 WHERE bid = $2';

bench=# SELECT query, calls, total_exec_time, rows, 100.0 * shared_blks_hit /
               nullif(shared_blks_hit + shared_blks_read, 0) AS hit_percent
          FROM pg_stat_statements ORDER BY total_exec_time DESC LIMIT 5;
-[ RECORD 1 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
query           | UPDATE pgbench_tellers SET tbalance = tbalance + $1 WHERE tid = $2
calls           | 3000
total_exec_time | 20756.669379
rows            | 3000
hit_percent     | 100.0000000000000000
-[ RECORD 2 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
query           | copy pgbench_accounts from stdin
calls           | 1
total_exec_time | 291.865911
rows            | 100000
hit_percent     | 100.0000000000000000
-[ RECORD 3 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
query           | UPDATE pgbench_accounts SET abalance = abalance + $1 WHERE aid = $2
calls           | 3000
total_exec_time | 271.232977
rows            | 3000
hit_percent     | 98.8454011741682975
-[ RECORD 4 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
query           | alter table pgbench_accounts add primary key (aid)
calls           | 1
total_exec_time | 160.588563
rows            | 0
hit_percent     | 100.0000000000000000
-[ RECORD 5 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
query           | vacuum analyze pgbench_accounts
calls           | 1
total_exec_time | 136.448116
rows            | 0
hit_percent     | 99.9201915403032721

bench=# SELECT pg_stat_statements_reset(0,0,0);

bench=# SELECT query, calls, total_exec_time, rows, 100.0 * shared_blks_hit /
               nullif(shared_blks_hit + shared_blks_read, 0) AS hit_percent
          FROM pg_stat_statements ORDER BY total_exec_time DESC LIMIT 5;
-[ RECORD 1 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-
query           | SELECT pg_stat_statements_reset(0,0,0)
calls           | 1
total_exec_time | 0.189497
rows            | 1
hit_percent     |
-[ RECORD 2 ]-&minus;-+-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;&zwsp;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-
query           | SELECT query, calls, total_exec_time, rows, $1 * shared_blks_hit /          +
                |                nullif(shared_blks_hit + shared_blks_read, $2) AS hit_percent+
                |           FROM pg_stat_statements ORDER BY total_exec_time DESC LIMIT $3
calls           | 0
total_exec_time | 0
rows            | 0
hit_percent     |

</screen>
________________________________________________________-->
<screen>
bench=# SELECT pg_stat_statements_reset();

$ pgbench -i bench
$ pgbench -c10 -t300 bench

bench=# \x
bench=# SELECT query, calls, total_exec_time, rows, 100.0 * shared_blks_hit /
               nullif(shared_blks_hit + shared_blks_read, 0) AS hit_percent
          FROM pg_stat_statements ORDER BY total_exec_time DESC LIMIT 5;
-[ RECORD 1 ]---+--------------------------------------------------&zwsp;------------------
query           | UPDATE pgbench_branches SET bbalance = bbalance + $1 WHERE bid = $2
calls           | 3000
total_exec_time | 25565.855387
rows            | 3000
hit_percent     | 100.0000000000000000
-[ RECORD 2 ]---+--------------------------------------------------&zwsp;------------------
query           | UPDATE pgbench_tellers SET tbalance = tbalance + $1 WHERE tid = $2
calls           | 3000
total_exec_time | 20756.669379
rows            | 3000
hit_percent     | 100.0000000000000000
-[ RECORD 3 ]---+--------------------------------------------------&zwsp;------------------
query           | copy pgbench_accounts from stdin
calls           | 1
total_exec_time | 291.865911
rows            | 100000
hit_percent     | 100.0000000000000000
-[ RECORD 4 ]---+--------------------------------------------------&zwsp;------------------
query           | UPDATE pgbench_accounts SET abalance = abalance + $1 WHERE aid = $2
calls           | 3000
total_exec_time | 271.232977
rows            | 3000
hit_percent     | 98.8454011741682975
-[ RECORD 5 ]---+--------------------------------------------------&zwsp;------------------
query           | alter table pgbench_accounts add primary key (aid)
calls           | 1
total_exec_time | 160.588563
rows            | 0
hit_percent     | 100.0000000000000000


bench=# SELECT pg_stat_statements_reset(0,0,s.queryid) FROM pg_stat_statements AS s
            WHERE s.query = 'UPDATE pgbench_branches SET bbalance = bbalance + $1 WHERE bid = $2';

bench=# SELECT query, calls, total_exec_time, rows, 100.0 * shared_blks_hit /
               nullif(shared_blks_hit + shared_blks_read, 0) AS hit_percent
          FROM pg_stat_statements ORDER BY total_exec_time DESC LIMIT 5;
-[ RECORD 1 ]---+--------------------------------------------------&zwsp;------------------
query           | UPDATE pgbench_tellers SET tbalance = tbalance + $1 WHERE tid = $2
calls           | 3000
total_exec_time | 20756.669379
rows            | 3000
hit_percent     | 100.0000000000000000
-[ RECORD 2 ]---+--------------------------------------------------&zwsp;------------------
query           | copy pgbench_accounts from stdin
calls           | 1
total_exec_time | 291.865911
rows            | 100000
hit_percent     | 100.0000000000000000
-[ RECORD 3 ]---+--------------------------------------------------&zwsp;------------------
query           | UPDATE pgbench_accounts SET abalance = abalance + $1 WHERE aid = $2
calls           | 3000
total_exec_time | 271.232977
rows            | 3000
hit_percent     | 98.8454011741682975
-[ RECORD 4 ]---+--------------------------------------------------&zwsp;------------------
query           | alter table pgbench_accounts add primary key (aid)
calls           | 1
total_exec_time | 160.588563
rows            | 0
hit_percent     | 100.0000000000000000
-[ RECORD 5 ]---+--------------------------------------------------&zwsp;------------------
query           | vacuum analyze pgbench_accounts
calls           | 1
total_exec_time | 136.448116
rows            | 0
hit_percent     | 99.9201915403032721

bench=# SELECT pg_stat_statements_reset(0,0,0);

bench=# SELECT query, calls, total_exec_time, rows, 100.0 * shared_blks_hit /
               nullif(shared_blks_hit + shared_blks_read, 0) AS hit_percent
          FROM pg_stat_statements ORDER BY total_exec_time DESC LIMIT 5;
-[ RECORD 1 ]---+--------------------------------------------------&zwsp;---------------------------
query           | SELECT pg_stat_statements_reset(0,0,0)
calls           | 1
total_exec_time | 0.189497
rows            | 1
hit_percent     |
-[ RECORD 2 ]---+--------------------------------------------------&zwsp;---------------------------
query           | SELECT query, calls, total_exec_time, rows, $1 * shared_blks_hit /          +
                |                nullif(shared_blks_hit + shared_blks_read, $2) AS hit_percent+
                |           FROM pg_stat_statements ORDER BY total_exec_time DESC LIMIT $3
calls           | 0
total_exec_time | 0
rows            | 0
hit_percent     |

</screen>
<!-- pgdoc-cn_end sig_en=1d7786b4494c42f2b288a4473f205957 -->
 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=c9d18a21a6b8c7d5325e8feeb56b7420 sig_cn_org=None source=14.1 
  <title>Authors</title>
________________________________________________________-->
  <title>作者</title>
<!-- pgdoc-cn_end sig_en=c9d18a21a6b8c7d5325e8feeb56b7420 -->

<!-- pgdoc-cn_start sig_en=0b005b42b981b0ba9a9cb3c632b7dd85 sig_cn_org=None source=14.1 
  <para>
   Takahiro Itagaki <email>itagaki.takahiro@oss.ntt.co.jp</email>.
   Query normalization added by Peter Geoghegan <email>peter@2ndquadrant.com</email>.
  </para>
________________________________________________________-->
  <para>
   Takahiro Itagaki <email>itagaki.takahiro@oss.ntt.co.jp</email>。Peter Geoghegan <email>peter@2ndquadrant.com</email>为它加入了查询正规化的功能。
  </para>
<!-- pgdoc-cn_end sig_en=0b005b42b981b0ba9a9cb3c632b7dd85 -->
 </sect2>

</sect1>
