<!--
doc/src/sgml/ref/savepoint.sgml
PostgreSQL documentation
-->

<refentry id="sql-savepoint">
<!-- pgdoc-cn_start sig_en=57718ca1a4c7c57499e387d44aa4d225 sig_cn_org=None source=14.1 
 <indexterm zone="sql-savepoint">
  <primary>SAVEPOINT</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-savepoint">
  <primary>SAVEPOINT</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=57718ca1a4c7c57499e387d44aa4d225 -->

<!-- pgdoc-cn_start sig_en=c8ffe06887b82df03b96ded0460bae12 sig_cn_org=None source=14.1 
 <indexterm zone="sql-savepoint">
  <primary>savepoints</primary>
  <secondary>defining</secondary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-savepoint">
  <primary>savepoints</primary>
  <secondary>defining</secondary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=c8ffe06887b82df03b96ded0460bae12 -->

 <refmeta>
  <refentrytitle>SAVEPOINT</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=58045856e45a6d56a26898cbd7520046 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>SAVEPOINT</refname>
  <refpurpose>define a new savepoint within the current transaction</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>SAVEPOINT</refname>
  <refpurpose>在当前事务中定义一个新的保存点</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=58045856e45a6d56a26898cbd7520046 -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=9ef43e3c1ccc57e7069523026ba3c300 sig_cn_org=None source=14.1 
<synopsis>
SAVEPOINT <replaceable>savepoint_name</replaceable>
</synopsis>
________________________________________________________-->
<synopsis>
SAVEPOINT <replaceable>savepoint_name</replaceable>
</synopsis>
<!-- pgdoc-cn_end sig_en=9ef43e3c1ccc57e7069523026ba3c300 -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=306aadac4c6ea75e1a911a0d55587580 sig_cn_org=None source=14.1 
  <para>
   <command>SAVEPOINT</command> establishes a new savepoint within
   the current transaction.
  </para>
________________________________________________________-->
  <para>
   <command>SAVEPOINT</command>在当前事务中建立一个新保存点。
  </para>
<!-- pgdoc-cn_end sig_en=306aadac4c6ea75e1a911a0d55587580 -->

<!-- pgdoc-cn_start sig_en=1dec435c6df27b936895e4342d4ba2a4 sig_cn_org=None source=14.1 
  <para>
   A savepoint is a special mark inside a transaction that allows all commands
   that are executed after it was established to be rolled back, restoring
   the transaction state to what it was at the time of the savepoint.
  </para>
________________________________________________________-->
  <para>
   保存点是事务内的一种特殊标记，它允许所有在它被建立之后执行的命令被
   回滚，把该事务的状态恢复到它处于保存点时的样子。
  </para>
<!-- pgdoc-cn_end sig_en=1dec435c6df27b936895e4342d4ba2a4 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
    <term><replaceable>savepoint_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=97468e231b7db37344e8db3ce6e23e2a sig_cn_org=209daa67b9da196a57e5de9fe4e2ac84 source=15.7 
     <para>
      The name to give to the new savepoint.  If savepoints with the
      same name already exist, they will be inaccessible until newer
      identically-named savepoints are released.
     </para>
________________________________________________________-->
     <para>
      要给新保存点的名称。如果已经存在具有相同名称的保存点，那么它们将无法访问，直到释放了更新的同名保存点。
     </para>
<!-- pgdoc-cn_end sig_en=97468e231b7db37344e8db3ce6e23e2a -->
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=b70dde5fd326c42d1a910c655ea331ea sig_cn_org=None source=14.1 
  <para>
   Use <link linkend="sql-rollback-to"><command>ROLLBACK TO</command></link> to
   rollback to a savepoint.  Use <link linkend="sql-release-savepoint"><command>RELEASE SAVEPOINT</command></link>
   to destroy a savepoint, keeping
   the effects of commands executed after it was established.
  </para>
________________________________________________________-->
  <para>
   使用<link linkend="sql-rollback-to"><command>ROLLBACK TO</command></link>回滚到一个保存点。
   使用<link linkend="sql-release-savepoint"><command>RELEASE SAVEPOINT</command></link>销毁一个保存点，
   但保持在它被建立之后执行的命令的效果。
  </para>
<!-- pgdoc-cn_end sig_en=b70dde5fd326c42d1a910c655ea331ea -->

<!-- pgdoc-cn_start sig_en=3c8eeb3287c0b1c24dbc775b821d214c sig_cn_org=None source=14.1 
  <para>
   Savepoints can only be established when inside a transaction block.
   There can be multiple savepoints defined within a transaction.
  </para>
________________________________________________________-->
  <para>
   保存点只能在一个事务块内建立。可以在一个事务内定义多个保存点。
  </para>
<!-- pgdoc-cn_end sig_en=3c8eeb3287c0b1c24dbc775b821d214c -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=82072377f22e43d983b1f5bade7f4dc7 sig_cn_org=None source=14.1 
  <para>
   To establish a savepoint and later undo the effects of all commands executed
   after it was established:
<programlisting>
BEGIN;
    INSERT INTO table1 VALUES (1);
    SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (2);
    ROLLBACK TO SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (3);
COMMIT;
</programlisting>
   The above transaction will insert the values 1 and 3, but not 2.
  </para>
________________________________________________________-->
  <para>
   要建立一个保存点并且后来撤销在它建立之后执行的所有命令的效果：
<programlisting>
BEGIN;
    INSERT INTO table1 VALUES (1);
    SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (2);
    ROLLBACK TO SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (3);
COMMIT;
</programlisting>
   上面的事务将插入值 1 和 3，但不会插入 2。
  </para>
<!-- pgdoc-cn_end sig_en=82072377f22e43d983b1f5bade7f4dc7 -->

<!-- pgdoc-cn_start sig_en=1c453e432cddaedcefde49a7b96c1516 sig_cn_org=None source=14.1 
  <para>
   To establish and later destroy a savepoint:
<programlisting>
BEGIN;
    INSERT INTO table1 VALUES (3);
    SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (4);
    RELEASE SAVEPOINT my_savepoint;
COMMIT;
</programlisting>
   The above transaction will insert both 3 and 4.
  </para>
________________________________________________________-->
  <para>
   要建立并且稍后销毁一个保存点：
<programlisting>
BEGIN;
    INSERT INTO table1 VALUES (3);
    SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (4);
    RELEASE SAVEPOINT my_savepoint;
COMMIT;
</programlisting>
   上面的事务将插入 3 和 4。
  </para>
<!-- pgdoc-cn_end sig_en=1c453e432cddaedcefde49a7b96c1516 -->

<!-- pgdoc-cn_start sig_en=b3d474df5716338c49e579d66208efae sig_cn_org=158ace92cce3c96fb64db61768c25d58 source=15.7 
  <para>
  To use a single savepoint name:
<programlisting>
BEGIN;
    INSERT INTO table1 VALUES (1);
    SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (2);
    SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (3);

    -&minus; rollback to the second savepoint
    ROLLBACK TO SAVEPOINT my_savepoint;
    SELECT * FROM table1;               -&minus; shows rows 1 and 2

    -&minus; release the second savepoint
    RELEASE SAVEPOINT my_savepoint;

    -&minus; rollback to the first savepoint
    ROLLBACK TO SAVEPOINT my_savepoint;
    SELECT * FROM table1;               -&minus; shows only row 1
COMMIT;
</programlisting>
  The above transaction shows row 3 being rolled back first, then row 2.
  </para>
________________________________________________________-->
  <para>
  要使用单个保存点名称：
<programlisting>
BEGIN;
    INSERT INTO table1 VALUES (1);
    SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (2);
    SAVEPOINT my_savepoint;
    INSERT INTO table1 VALUES (3);

    -- 回滚到第二个保存点
    ROLLBACK TO SAVEPOINT my_savepoint;
    SELECT * FROM table1;               -- 显示行1和2

    -- 释放第二个保存点
    RELEASE SAVEPOINT my_savepoint;

    -- 回滚到第一个保存点
    ROLLBACK TO SAVEPOINT my_savepoint;
    SELECT * FROM table1;               -- 仅显示行1
COMMIT;
</programlisting>
  上述事务首先回滚第3行，然后回滚第2行。
  </para>
<!-- pgdoc-cn_end sig_en=b3d474df5716338c49e579d66208efae -->

 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=ae1d2a9f7e4e0638e1118de6e8e71807 sig_cn_org=None source=14.1 
  <para>
   SQL requires a savepoint to be destroyed automatically when another
   savepoint with the same name is established.  In
   <productname>PostgreSQL</productname>, the old savepoint is kept, though only the more
   recent one will be used when rolling back or releasing.  (Releasing the
   newer savepoint with <command>RELEASE SAVEPOINT</command> will cause the older one
   to again become accessible to <command>ROLLBACK TO SAVEPOINT</command> and
   <command>RELEASE SAVEPOINT</command>.) Otherwise, <command>SAVEPOINT</command> is
   fully SQL conforming.
  </para>
________________________________________________________-->
  <para>
   当建立另一个同名保存点时，SQL 要求之前的那个保存点自动被销毁。在
   <productname>PostgreSQL</productname>中，旧的保存点会被保留，不过在进行
   回滚或释放时只能使用最近的那一个（用
   <command>RELEASE SAVEPOINT</command>释放较新的保存点将会
   导致较旧的保存点再次变得可以被
   <command>ROLLBACK TO SAVEPOINT</command>和
   <command>RELEASE SAVEPOINT</command>访问）。在其他方面， 
   <command>SAVEPOINT</command>完全符合 SQL。
  </para>
<!-- pgdoc-cn_end sig_en=ae1d2a9f7e4e0638e1118de6e8e71807 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-begin"/></member>
   <member><xref linkend="sql-commit"/></member>
   <member><xref linkend="sql-release-savepoint"/></member>
   <member><xref linkend="sql-rollback"/></member>
   <member><xref linkend="sql-rollback-to"/></member>
  </simplelist>
 </refsect1>
</refentry>
