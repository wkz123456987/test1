<!--
doc/src/sgml/ref/prepare_transaction.sgml
PostgreSQL documentation
-->

<refentry id="sql-prepare-transaction">
<!-- pgdoc-cn_start sig_en=462628254bc31ffdf974b9c879f6fa42 sig_cn_org=None source=14.1 
 <indexterm zone="sql-prepare-transaction">
  <primary>PREPARE TRANSACTION</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-prepare-transaction">
  <primary>PREPARE TRANSACTION</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=462628254bc31ffdf974b9c879f6fa42 -->

 <refmeta>
  <refentrytitle>PREPARE TRANSACTION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=9eab0ba6ed2da5d5b4a1e45a91a10e08 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>PREPARE TRANSACTION</refname>
  <refpurpose>prepare the current transaction for two-phase commit</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>PREPARE TRANSACTION</refname>
  <refpurpose>为两阶段提交准备当前事务</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=9eab0ba6ed2da5d5b4a1e45a91a10e08 -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=78f8ab939a7b1e5b942d7280fb91fc3f sig_cn_org=None source=14.1 
<synopsis>
PREPARE TRANSACTION <replaceable class="parameter">transaction_id</replaceable>
</synopsis>
________________________________________________________-->
<synopsis>
PREPARE TRANSACTION <replaceable class="parameter">transaction_id</replaceable>
</synopsis>
<!-- pgdoc-cn_end sig_en=78f8ab939a7b1e5b942d7280fb91fc3f -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=7ffe1ed2be688632527922a09fd837a4 sig_cn_org=None source=14.1 
  <para>
   <command>PREPARE TRANSACTION</command> prepares the current transaction
   for two-phase commit. After this command, the transaction is no longer
   associated with the current session; instead, its state is fully stored on
   disk, and there is a very high probability that it can be committed
   successfully, even if a database crash occurs before the commit is
   requested.
  </para>
________________________________________________________-->
  <para>
   <command>PREPARE TRANSACTION</command>为两阶段提交准备
   当前事务。在这个命令之后，该事务不再与当前会话关联。相反，它的状态
   被完全存储在磁盘上，并且有很高的可能性它会被提交成功（即便在请求提
   交前发生数据库崩溃）。
  </para>
<!-- pgdoc-cn_end sig_en=7ffe1ed2be688632527922a09fd837a4 -->

<!-- pgdoc-cn_start sig_en=bec8aa64a05d40ab342f9c32dac41ae3 sig_cn_org=None source=14.1 
  <para>
   Once prepared, a transaction can later be committed or rolled back
   with <link linkend="sql-commit-prepared"><command>COMMIT PREPARED</command></link>
   or <link linkend="sql-rollback-prepared"><command>ROLLBACK PREPARED</command></link>,
   respectively.  Those commands can be issued from any session, not
   only the one that executed the original transaction.
  </para>
________________________________________________________-->
  <para>
   一旦被准备好，事务稍后就可以分别用<link linkend="sql-commit-prepared"><command>COMMIT PREPARED</command></link>或者<link linkend="sql-rollback-prepared"><command>ROLLBACK PREPARED</command></link>提交或者回滚。
   可以从任何会话而不仅仅是执行原始事务的会话中发出这些命令。
  </para>
<!-- pgdoc-cn_end sig_en=bec8aa64a05d40ab342f9c32dac41ae3 -->

<!-- pgdoc-cn_start sig_en=aa09f9d99a72dd9c49db0c478d8ee7ec sig_cn_org=None source=14.1 
  <para>
   From the point of view of the issuing session, <command>PREPARE
   TRANSACTION</command> is not unlike a <command>ROLLBACK</command> command:
   after executing it, there is no active current transaction, and the
   effects of the prepared transaction are no longer visible.  (The effects
   will become visible again if the transaction is committed.)
  </para>
________________________________________________________-->
  <para>
   从发出命令的会话的角度来看，<command>PREPARE
   TRANSACTION</command>不像<command>ROLLBACK</command>命令：
   在执行它之后，就没有活跃的当前事务，并且该预备事务的效果也不再可见（
   如果该事务被提交，效果将重新变得可见）。
  </para>
<!-- pgdoc-cn_end sig_en=aa09f9d99a72dd9c49db0c478d8ee7ec -->

<!-- pgdoc-cn_start sig_en=19885353baab674ac01cced2792584fc sig_cn_org=None source=14.1 
  <para>
   If the <command>PREPARE TRANSACTION</command> command fails for any
   reason, it becomes a <command>ROLLBACK</command>: the current transaction
   is canceled.
  </para>
________________________________________________________-->
  <para>
   如果由于任何原因<command>PREPARE TRANSACTION</command>
   命令失败，它会变成一个<command>ROLLBACK</command>：当前事务会被取消。
  </para>
<!-- pgdoc-cn_end sig_en=19885353baab674ac01cced2792584fc -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">transaction_id</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=545f079df642b1083787b3d4fddfee3e sig_cn_org=None source=14.1 
     <para>
      An arbitrary identifier that later identifies this transaction for
      <command>COMMIT PREPARED</command> or <command>ROLLBACK PREPARED</command>.
      The identifier must be written as a string literal, and must be
      less than 200 bytes long.  It must not be the same as the identifier
      used for any currently prepared transaction.
     </para>
________________________________________________________-->
     <para>
      一个任意的事务标识符，
      <command>COMMIT PREPARED</command>或者<command>ROLLBACK PREPARED</command>
      以后将用这个标识符来标识这个事务。该标识符必须写成一个字符串，
      并且长度必须小于 200 字节。它也不能与任何当前已经准备好的事务的标识符相同。
     </para>
<!-- pgdoc-cn_end sig_en=545f079df642b1083787b3d4fddfee3e -->
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=bd2d0257b216c1ff4a680fd9e8adc4f7 sig_cn_org=None source=14.1 
  <para>
   <command>PREPARE TRANSACTION</command> is not intended for use in applications
   or interactive sessions. Its purpose is to allow an external
   transaction manager to perform atomic global transactions across multiple
   databases or other transactional resources. Unless you're writing a
   transaction manager, you probably shouldn't be using <command>PREPARE
   TRANSACTION</command>.
  </para>
________________________________________________________-->
  <para>
   <command>PREPARE TRANSACTION</command>并不是设计为在应用或者交互式
   会话中使用。它的目的是允许一个外部事务管理器在多个数据库或者其他事务性
   来源之间执行原子的全局事务。除非你在编写一个事务管理器，否则你可能不会
   用到<command>PREPARE TRANSACTION</command>。
  </para>
<!-- pgdoc-cn_end sig_en=bd2d0257b216c1ff4a680fd9e8adc4f7 -->

<!-- pgdoc-cn_start sig_en=86acd29f4486fdad89d63a47386d4cf5 sig_cn_org=None source=14.1 
  <para>
   This command must be used inside a transaction block. Use <link
   linkend="sql-begin"><command>BEGIN</command></link> to start one.
  </para>
________________________________________________________-->
  <para>
   这个命令必须在一个事务块中使用。事务块用<link linkend="sql-begin"><command>BEGIN</command></link>开始。
  </para>
<!-- pgdoc-cn_end sig_en=86acd29f4486fdad89d63a47386d4cf5 -->

<!-- pgdoc-cn_start sig_en=8046effb7acf56f6bb17032106248d23 sig_cn_org=None source=14.1 
  <para>
   It is not currently allowed to <command>PREPARE</command> a transaction that
   has executed any operations involving temporary tables or the session's
   temporary namespace, created any cursors <literal>WITH HOLD</literal>, or
   executed <command>LISTEN</command>, <command>UNLISTEN</command>, or
   <command>NOTIFY</command>.
   Those features are too tightly
   tied to the current session to be useful in a transaction to be prepared.
  </para>
________________________________________________________-->
  <para>
   当前在已经执行过任何涉及到临时表或者会话的临时命名空间、创建带
   <literal>WITH HOLD</literal>的游标或者执行
   <command>LISTEN</command>、<command>UNLISTEN</command>或<command>NOTIFY</command>的
   事务中，不允许<command>PREPARE</command>该事务。这些特性与当前会话
   绑定得太过紧密，所以对一个要被准备的事务来说没有什么用处。
  </para>
<!-- pgdoc-cn_end sig_en=8046effb7acf56f6bb17032106248d23 -->

<!-- pgdoc-cn_start sig_en=f785f8522b85dbdd68dd51bfd2201d20 sig_cn_org=None source=14.1 
  <para>
   If the transaction modified any run-time parameters with <command>SET</command>
   (without the <literal>LOCAL</literal> option),
   those effects persist after <command>PREPARE TRANSACTION</command>, and will not
   be affected by any later <command>COMMIT PREPARED</command> or
   <command>ROLLBACK PREPARED</command>.  Thus, in this one respect
   <command>PREPARE TRANSACTION</command> acts more like <command>COMMIT</command> than
   <command>ROLLBACK</command>.
  </para>
________________________________________________________-->
  <para>
   如果用<command>SET</command>（不带<literal>LOCAL</literal>选项）修改过事务的
   任何运行时参数，这些效果会持续到
   <command>PREPARE TRANSACTION</command>之后，并且将不会被后续的任何
   <command>COMMIT PREPARED</command>或
   <command>ROLLBACK PREPARED</command>所影响。因此，在这一
   方面<command>PREPARE TRANSACTION</command>的行为更像
   <command>COMMIT</command>而不是<command>ROLLBACK</command>。
  </para>
<!-- pgdoc-cn_end sig_en=f785f8522b85dbdd68dd51bfd2201d20 -->

<!-- pgdoc-cn_start sig_en=4f50a544565e6b4ab7163c0a8641226c sig_cn_org=None source=14.1 
  <para>
   All currently available prepared transactions are listed in the
   <link linkend="view-pg-prepared-xacts"><structname>pg_prepared_xacts</structname></link>
   system view.
  </para>
________________________________________________________-->
  <para>
   所有当前可用的准备好事务被列在<link linkend="view-pg-prepared-xacts"><structname>pg_prepared_xacts</structname></link>系统视图中。
  </para>
<!-- pgdoc-cn_end sig_en=4f50a544565e6b4ab7163c0a8641226c -->

  <caution>
<!-- pgdoc-cn_start sig_en=3faaae9cc686d6b7ddca47e911bb4f59 sig_cn_org=None source=14.1 
   <para>
    It is unwise to leave transactions in the prepared state for a long time.
    This will interfere with the ability of <command>VACUUM</command> to reclaim
    storage, and in extreme cases could cause the database to shut down
    to prevent transaction ID wraparound (see <xref
    linkend="vacuum-for-wraparound"/>).  Keep in mind also that the transaction
    continues to hold whatever locks it held.  The intended usage of the
    feature is that a prepared transaction will normally be committed or
    rolled back as soon as an external transaction manager has verified that
    other databases are also prepared to commit.
   </para>
________________________________________________________-->
   <para>
    让一个事务处于准备好状态太久是不明智的。这将会干扰
    <command>VACUUM</command>回收存储的能力，并且在极限情况下可能导致
    数据库关闭以阻止事务 ID 回卷（见<xref
     linkend="vacuum-for-wraparound"/>）。还要记住，该事务会继续持有
     它已经持有的锁。该特性的设计用法是，只要一个外部事务管理器已经验证
     其他数据库也准备好了要提交，一个准备好的事务将被正常地提交或者回滚。
   </para>
<!-- pgdoc-cn_end sig_en=3faaae9cc686d6b7ddca47e911bb4f59 -->

<!-- pgdoc-cn_start sig_en=e4d075cf200803bf3da058e225396dda sig_cn_org=None source=14.1 
   <para>
    If you have not set up an external transaction manager to track prepared
    transactions and ensure they get closed out promptly, it is best to keep
    the prepared-transaction feature disabled by setting
    <xref linkend="guc-max-prepared-transactions"/> to zero.  This will
    prevent accidental creation of prepared transactions that might then
    be forgotten and eventually cause problems.
   </para>
________________________________________________________-->
   <para>
    如果没有建立一个外部事务管理器来跟踪准备好的事务并且确保它们被迅速地
    结束，最好禁用准备好事务特性（设置
    <xref linkend="guc-max-prepared-transactions"/>为零）。这将防止意外
    地创建准备好事务，不然该事务有可能被忘记并且最终导致问题。
   </para>
<!-- pgdoc-cn_end sig_en=e4d075cf200803bf3da058e225396dda -->
  </caution>
 </refsect1>

 <refsect1 id="sql-prepare-transaction-examples">
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>例子</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->
<!-- pgdoc-cn_start sig_en=6e2fe25229757f52a1427fa1bbe9dabe sig_cn_org=None source=14.1 
  <para>
   Prepare the current transaction for two-phase commit, using
   <literal>foobar</literal> as the transaction identifier:

<programlisting>
PREPARE TRANSACTION 'foobar';
</programlisting></para>
________________________________________________________-->
  <para>
   为两阶段提交准备当前事务，使用<literal>foobar</literal>作为事务标识符：

<programlisting>
PREPARE TRANSACTION 'foobar';
</programlisting></para>
<!-- pgdoc-cn_end sig_en=6e2fe25229757f52a1427fa1bbe9dabe -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=b7c232669c09667b26552f1493523653 sig_cn_org=None source=14.1 
  <para>
   <command>PREPARE TRANSACTION</command> is a
   <productname>PostgreSQL</productname> extension.  It is intended for use by
   external transaction management systems, some of which are covered by
   standards (such as X/Open XA), but the SQL side of those systems is not
   standardized.
  </para>
________________________________________________________-->
  <para>
   <command>PREPARE TRANSACTION</command>是一种
   <productname>PostgreSQL</productname>扩展。其意图是用于
   外部事务管理系统，其中有些已经被标准涵盖（例如 X/Open XA），
   但是那些系统的 SQL 方面未被标准化。
  </para>
<!-- pgdoc-cn_end sig_en=b7c232669c09667b26552f1493523653 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-commit-prepared"/></member>
   <member><xref linkend="sql-rollback-prepared"/></member>
  </simplelist>
 </refsect1>

</refentry>
