<!--
doc/src/sgml/ref/create_rule.sgml
PostgreSQL documentation
-->

<refentry id="sql-createrule">
<!-- pgdoc-cn_start sig_en=57b3bde0dc9c4d4d9926136752cac8c6 sig_cn_org=None source=14.1 
 <indexterm zone="sql-createrule">
  <primary>CREATE RULE</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-createrule">
  <primary>CREATE RULE</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=57b3bde0dc9c4d4d9926136752cac8c6 -->

 <refmeta>
  <refentrytitle>CREATE RULE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=1bb260669d280523ca84825b95362973 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>CREATE RULE</refname>
  <refpurpose>define a new rewrite rule</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>CREATE RULE</refname>
  <refpurpose>定义一条新的重写规则</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=1bb260669d280523ca84825b95362973 -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=9814f2d6724d8d49104016a4e278c143 sig_cn_org=None source=14.1 
<synopsis>
CREATE [ OR REPLACE ] RULE <replaceable class="parameter">name</replaceable> AS ON <replaceable class="parameter">event</replaceable>
    TO <replaceable class="parameter">table_name</replaceable> [ WHERE <replaceable class="parameter">condition</replaceable> ]
    DO [ ALSO | INSTEAD ] { NOTHING | <replaceable class="parameter">command</replaceable> | ( <replaceable class="parameter">command</replaceable> ; <replaceable class="parameter">command</replaceable> ... ) }

<phrase>where <replaceable class="parameter">event</replaceable> can be one of:</phrase>

    SELECT | INSERT | UPDATE | DELETE
</synopsis>
________________________________________________________-->
<synopsis>
CREATE [ OR REPLACE ] RULE <replaceable class="parameter">name</replaceable> AS ON <replaceable class="parameter">event</replaceable>
    TO <replaceable class="parameter">table_name</replaceable> [ WHERE <replaceable class="parameter">condition</replaceable> ]
    DO [ ALSO | INSTEAD ] { NOTHING | <replaceable class="parameter">command</replaceable> | ( <replaceable class="parameter">command</replaceable> ; <replaceable class="parameter">command</replaceable> ... ) }

<phrase>其中 <replaceable class="parameter">event</replaceable> 可以是以下之一：</phrase>

    SELECT | INSERT | UPDATE | DELETE
</synopsis>
<!-- pgdoc-cn_end sig_en=9814f2d6724d8d49104016a4e278c143 -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=13a892ad96fc60aa43232c14c23ffed4 sig_cn_org=None source=14.1 
  <para>
   <command>CREATE RULE</command> defines a new rule applying to a specified
   table or view.
   <command>CREATE OR REPLACE RULE</command> will either create a
   new rule, or replace an existing rule of the same name for the same
   table.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE RULE</command>定义一条应用于指定表或视图的
   新规则。<command>CREATE OR REPLACE RULE</command>将创建一条
   新规则或者替换同一个表上具有同一名称的现有规则。
  </para>
<!-- pgdoc-cn_end sig_en=13a892ad96fc60aa43232c14c23ffed4 -->

<!-- pgdoc-cn_start sig_en=b22f911194eeca01297bd1e7aa3bd8f9 sig_cn_org=None source=14.1 
  <para>
   The <productname>PostgreSQL</productname> rule system allows one to
   define an alternative action to be performed on insertions, updates,
   or deletions in database tables.  Roughly speaking, a rule causes
   additional commands to be executed when a given command on a given
   table is executed.  Alternatively, an <literal>INSTEAD</literal>
   rule can replace a given command by another, or cause a command
   not to be executed at all.  Rules are used to implement SQL
   views as well.  It is important to realize that a rule is really
   a command transformation mechanism, or command macro.  The
   transformation happens before the execution of the command starts.
   If you actually want an operation that fires independently for each
   physical row, you probably want to use a trigger, not a rule.
   More information about the rules system is in <xref linkend="rules"/>.
  </para>
________________________________________________________-->
  <para>
   <productname>PostgreSQL</productname>规则系统允许我们定义
   针对数据库表中插入、更新或者删除动作上的替代动作。大约来说，当在
   一个给定表上执行给定命令时，一条规则会导致执行额外的命令。或者，
   <literal>INSTEAD</literal>规则可以用另一个命令替换给定的命令，或
   者导致一个命令根本不被执行。规则也被用来实现 SQL 视图。规则实际上
   是一种命令转换机制或者命令宏。这种转换会在命令的执行开始之前进行。
   如果你实际上想要为每一个物理行独立地触发一个操作，你可能更需要一个
   触发器而不是规则。更多有关规则系统的信息请见<xref linkend="rules"/>。
  </para>
<!-- pgdoc-cn_end sig_en=b22f911194eeca01297bd1e7aa3bd8f9 -->

<!-- pgdoc-cn_start sig_en=72dd7cc9dcd455514b5d0a253c7c8782 sig_cn_org=5b0bf82160f29482675723f7577ca9e0 source=15.7 
  <para>
   Presently, <literal>ON SELECT</literal> rules can only be attached
   to views.  (Attaching one to a table converts the table into a view.)
   Such a rule must be named <literal>"_RETURN"</literal>,
   must be an unconditional <literal>INSTEAD</literal> rule, and must have
   an action that consists of a single <command>SELECT</command> command.
   This command defines the visible contents of the view.  (The view
   itself is basically a dummy table with no storage.)  It's best to
   regard such a rule as an implementation detail.  While a view can be
   redefined via <literal>CREATE OR REPLACE RULE "_RETURN" AS
   ...</literal>, it's better style to use <literal>CREATE OR REPLACE
   VIEW</literal>.
  </para>
________________________________________________________-->
  <para>
   目前，<literal>ON SELECT</literal>规则只能附加到视图上。
   （将其附加到表会将表转换为视图。）
   这样的规则必须命名为<literal>"_RETURN"</literal>，
   必须是无条件的<literal>INSTEAD</literal>规则，并且必须有
   一个由单个<command>SELECT</command>命令组成的动作。
   此命令定义了视图的可见内容。（视图本身基本上是一个没有存储的虚拟表。）
   最好将这样的规则视为实现细节。
   虽然可以通过<literal>CREATE OR REPLACE RULE "_RETURN" AS
   ...</literal>重新定义视图，但最好使用<literal>CREATE OR REPLACE
   VIEW</literal>的风格。
  </para>
<!-- pgdoc-cn_end sig_en=72dd7cc9dcd455514b5d0a253c7c8782 -->

<!-- pgdoc-cn_start sig_en=673b71cdd8237e9f777c7c5dbbac29f1 sig_cn_org=None source=14.1 
  <para>
   You can create the illusion of an updatable view by defining
   <literal>ON INSERT</literal>, <literal>ON UPDATE</literal>, and
   <literal>ON DELETE</literal> rules (or any subset of those that's
   sufficient for your purposes) to replace update actions on the view
   with appropriate updates on other tables.  If you want to support
   <command>INSERT RETURNING</command> and so on, then be sure to put a suitable
   <literal>RETURNING</literal> clause into each of these rules.
  </para>
________________________________________________________-->
  <para>
   可以通过定义<literal>ON INSERT</literal>、<literal>ON UPDATE</literal>
   以及<literal>ON DELETE</literal>规则（或者这些规则的任意子集）来创建
   可更新的视图，这些规则可以把视图上的更新动作替换为其他表上适当的更新
   动作。如果想要支持<command>INSERT RETURNING</command>等等，那么一定要
   在每一个这类规则中放上一个合适的<literal>RETURNING</literal>子句。
  </para>
<!-- pgdoc-cn_end sig_en=673b71cdd8237e9f777c7c5dbbac29f1 -->

<!-- pgdoc-cn_start sig_en=2b702fa83c00e555908d15ef2f3501e6 sig_cn_org=None source=14.1 
  <para>
   There is a catch if you try to use conditional rules for complex view
   updates: there <emphasis>must</emphasis> be an unconditional
   <literal>INSTEAD</literal> rule for each action you wish to allow
   on the view.  If the rule is conditional, or is not
   <literal>INSTEAD</literal>, then the system will still reject
   attempts to perform the update action, because it thinks it might
   end up trying to perform the action on the dummy table of the view
   in some cases.  If you want to handle all the useful cases in
   conditional rules, add an unconditional <literal>DO
   INSTEAD NOTHING</literal> rule to ensure that the system
   understands it will never be called on to update the dummy table.
   Then make the conditional rules non-<literal>INSTEAD</literal>; in
   the cases where they are applied, they add to the default
   <literal>INSTEAD NOTHING</literal> action.  (This method does not
   currently work to support <literal>RETURNING</literal> queries, however.)
  </para>
________________________________________________________-->
  <para>
   如果你尝试为复杂视图更新使用有条件的规则，有一点是很重要的：对于
   你希望在该视图上允许的每一个动作，<emphasis>必须</emphasis>有一条
   <literal>INSTEAD</literal>规则。如果该规则是有条件的，或者不是
   <literal>INSTEAD</literal>，那么系统仍将拒绝尝试执行该更新动作，
   因为它会认为在某些情况下它应该停止尝试在该视图的傀儡表上执行动作。
   如果你想处理有条件规则中的所有有用的情况，可以增加一条无条件的
   <literal>DO INSTEAD NOTHING</literal>规则来确保系统理解它将
   永远不会被调用来更新傀儡表。然后让有条件规则变成
   非-<literal>INSTEAD</literal>。在它们适用的情况下，它们会加到
   默认的<literal>INSTEAD NOTHING</literal>动作（不过，当前这种方法不
   支持<literal>RETURNING</literal>查询）。
  </para>
<!-- pgdoc-cn_end sig_en=2b702fa83c00e555908d15ef2f3501e6 -->

  <note>
<!-- pgdoc-cn_start sig_en=ab36f1628f0d3243c4135c3f858975be sig_cn_org=None source=14.1 
   <para>
    A view that is simple enough to be automatically updatable (see <xref
    linkend="sql-createview"/>) does not require a user-created rule in
    order to be updatable.  While you can create an explicit rule anyway,
    the automatic update transformation will generally outperform an
    explicit rule.
   </para>
________________________________________________________-->
   <para>
    足够简单的视图自动就是可更新的（见<xref
    linkend="sql-createview"/>），它们不需要依靠用户创建的规则来变成可
    更新的。不过还是可以创建一条显式规则，自动更新转换通常比显式规则效
    率高。
   </para>
<!-- pgdoc-cn_end sig_en=ab36f1628f0d3243c4135c3f858975be -->

<!-- pgdoc-cn_start sig_en=804c23ff22c81e2456aa6fe5b358250d sig_cn_org=None source=14.1 
   <para>
    Another alternative worth considering is to use <literal>INSTEAD OF</literal>
    triggers (see <xref linkend="sql-createtrigger"/>) in place of rules.
   </para>
________________________________________________________-->
   <para>
    另一种值得考虑的办法是使用<literal>INSTEAD OF</literal>触发器（见
    <xref linkend="sql-createtrigger"/>）代替规则。
   </para>
<!-- pgdoc-cn_end sig_en=804c23ff22c81e2456aa6fe5b358250d -->
  </note>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=63767878870d6c487cf26120099a68aa sig_cn_org=None source=14.1 
     <para>
      The name of a rule to create.  This must be distinct from the
      name of any other rule for the same table.  Multiple rules on
      the same table and same event type are applied in alphabetical
      name order.
     </para>
________________________________________________________-->
     <para>
      要创建的规则的名称。它必须与同一个表上任何其他规则的名称相区分。
      同一个表上同一种事件类型的多条规则会按照其名称的字符顺序被应用。
     </para>
<!-- pgdoc-cn_end sig_en=63767878870d6c487cf26120099a68aa -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">event</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=15d873a89bc0d6f24e37befe4b2bd127 sig_cn_org=None source=14.1 
     <para>
      The event is one of <literal>SELECT</literal>,
      <literal>INSERT</literal>, <literal>UPDATE</literal>, or
      <literal>DELETE</literal>.  Note that an
      <command>INSERT</command> containing an <literal>ON
      CONFLICT</literal> clause cannot be used on tables that have
      either <literal>INSERT</literal> or <literal>UPDATE</literal>
      rules.  Consider using an updatable view instead.
     </para>
________________________________________________________-->
     <para>
      事件是<literal>SELECT</literal>、
      <literal>INSERT</literal>、<literal>UPDATE</literal>或者
      <literal>DELETE</literal>之一。 注意包含<literal>ON
      CONFLICT</literal>子句的<command>INSERT</command>
      不能被用在具有<literal>INSERT</literal>或者
      <literal>UPDATE</literal>规则的表上。那种情况下请考虑使用
      可更新的视图。
     </para>
<!-- pgdoc-cn_end sig_en=15d873a89bc0d6f24e37befe4b2bd127 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">table_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=7321e1b0d3282722b61500ec58811407 sig_cn_org=None source=14.1 
     <para>
      The name (optionally schema-qualified) of the table or view the
      rule applies to.
     </para>
________________________________________________________-->
     <para>
      规则适用的表或者视图的名称（可以是模式限定的）。
     </para>
<!-- pgdoc-cn_end sig_en=7321e1b0d3282722b61500ec58811407 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">condition</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=98c7e3a420dc16a5b54cce6610147560 sig_cn_org=None source=14.1 
     <para>
      Any <acronym>SQL</acronym> conditional expression (returning
      <type>boolean</type>).  The condition expression cannot refer
      to any tables except <literal>NEW</literal> and <literal>OLD</literal>, and
      cannot contain aggregate functions.
     </para>
________________________________________________________-->
     <para>
      任意的<acronym>SQL</acronym>条件表达式（返回
      <type>boolean</type>）。该条件表达式不能引用除<literal>NEW</literal>以及
      <literal>OLD</literal>之外的任何表，并且不能包含聚集函数。
     </para>
<!-- pgdoc-cn_end sig_en=98c7e3a420dc16a5b54cce6610147560 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>INSTEAD</option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=60be5a39f16cdf537fa6b89c10078f5c sig_cn_org=None source=14.1 
     <para><literal>INSTEAD</literal> indicates that the commands should be
      executed <emphasis>instead of</emphasis> the original command.
     </para>
________________________________________________________-->
     <para><literal>INSTEAD</literal>指示该命令应该<emphasis>取代</emphasis>
     原始命令被执行。
     </para>
<!-- pgdoc-cn_end sig_en=60be5a39f16cdf537fa6b89c10078f5c -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>ALSO</option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=6d11aceb09a0da4bf2d556f331b77986 sig_cn_org=None source=14.1 
     <para><literal>ALSO</literal> indicates that the commands should be
      executed <emphasis>in addition to</emphasis> the original
      command.
     </para>
________________________________________________________-->
     <para><literal>ALSO</literal>指示应该在原始命令
     <emphasis>之外</emphasis>执行这些命令。
     </para>
<!-- pgdoc-cn_end sig_en=6d11aceb09a0da4bf2d556f331b77986 -->

<!-- pgdoc-cn_start sig_en=aecdd0234d21bcd755149362e0efc60e sig_cn_org=None source=14.1 
     <para>
      If neither <literal>ALSO</literal> nor
      <literal>INSTEAD</literal> is specified, <literal>ALSO</literal>
      is the default.
     </para>
________________________________________________________-->
     <para>
      如果<literal>ALSO</literal>和<literal>INSTEAD</literal>都没有被指定，
      默认是<literal>ALSO</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=aecdd0234d21bcd755149362e0efc60e -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">command</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=73033abaffcc0c3b44b2a072b9ec64ad sig_cn_org=None source=14.1 
     <para>
      The command or commands that make up the rule action.  Valid
      commands are <command>SELECT</command>,
      <command>INSERT</command>, <command>UPDATE</command>,
      <command>DELETE</command>, or <command>NOTIFY</command>.
     </para>
________________________________________________________-->
     <para>
      组成规则动作的命令。可用的命令有<command>SELECT</command>、
      <command>INSERT</command>、<command>UPDATE</command>、
      <command>DELETE</command>或者<command>NOTIFY</command>。
     </para>
<!-- pgdoc-cn_end sig_en=73033abaffcc0c3b44b2a072b9ec64ad -->
    </listitem>
   </varlistentry>
  </variablelist>

<!-- pgdoc-cn_start sig_en=ebd0a8f0c03b746051227111548cedbb sig_cn_org=None source=14.1 
  <para>
   Within <replaceable class="parameter">condition</replaceable> and
   <replaceable class="parameter">command</replaceable>, the special
   table names <literal>NEW</literal> and <literal>OLD</literal> can
   be used to refer to values in the referenced table.
   <literal>NEW</literal> is valid in <literal>ON INSERT</literal> and
   <literal>ON UPDATE</literal> rules to refer to the new row being
   inserted or updated.  <literal>OLD</literal> is valid in
   <literal>ON UPDATE</literal> and <literal>ON DELETE</literal> rules
   to refer to the existing row being updated or deleted.
  </para>
________________________________________________________-->
  <para>
   在<replaceable class="parameter">condition</replaceable>和
   <replaceable class="parameter">command</replaceable>中，名为
   <literal>NEW</literal>和<literal>OLD</literal>的表可以被用来引用被
   引用表中的值。在<literal>ON INSERT</literal>和
   <literal>ON UPDATE</literal>规则中，<literal>NEW</literal>被用来
   引用被插入或者更新的新行。在<literal>ON UPDATE</literal>和
   <literal>ON DELETE</literal>规则中，<literal>OLD</literal>被用来引
   用被更新或者删除的现有行。
  </para>
<!-- pgdoc-cn_end sig_en=ebd0a8f0c03b746051227111548cedbb -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=455ae4b6736c6f2638e36690e7d0b9d8 sig_cn_org=None source=14.1 
  <para>
   You must be the owner of a table to create or change rules for it.
  </para>
________________________________________________________-->
  <para>
   要在表上创建或者修改规则，必须是表的拥有者。
  </para>
<!-- pgdoc-cn_end sig_en=455ae4b6736c6f2638e36690e7d0b9d8 -->

<!-- pgdoc-cn_start sig_en=25d7832450f855cd1f831719dd616414 sig_cn_org=None source=14.1 
  <para>
   In a rule for <literal>INSERT</literal>, <literal>UPDATE</literal>, or
   <literal>DELETE</literal> on a view, you can add a <literal>RETURNING</literal>
   clause that emits the view's columns.  This clause will be used to compute
   the outputs if the rule is triggered by an <command>INSERT RETURNING</command>,
   <command>UPDATE RETURNING</command>, or <command>DELETE RETURNING</command> command
   respectively.  When the rule is triggered by a command without
   <literal>RETURNING</literal>, the rule's <literal>RETURNING</literal> clause will be
   ignored.  The current implementation allows only unconditional
   <literal>INSTEAD</literal> rules to contain <literal>RETURNING</literal>; furthermore
   there can be at most one <literal>RETURNING</literal> clause among all the rules
   for the same event.  (This ensures that there is only one candidate
   <literal>RETURNING</literal> clause to be used to compute the results.)
   <literal>RETURNING</literal> queries on the view will be rejected if
   there is no <literal>RETURNING</literal> clause in any available rule.
  </para>
________________________________________________________-->
  <para>
   在一条用于视图上<literal>INSERT</literal>、<literal>UPDATE</literal>
   或者<literal>DELETE</literal>的规则中， 可以增加一个<literal>RETURNING</literal>
   子句来发出视图的列。如果该规则被一个<command>INSERT RETURNING</command>、
   <command>UPDATE RETURNING</command>或者
   <command>DELETE RETURNING</command>命令触发，这个子句将被用来计算输出。
   当规则被一个没有<literal>RETURNING</literal>的命令触发时，该规则的
   <literal>RETURNING</literal>子句将被忽略。当前的实现只允许无条件
   <literal>INSTEAD</literal>规则包含<literal>RETURNING</literal>。此外，用于同一事件
   的所有规则中至多只能有一个<literal>RETURNING</literal>子句（这确保了只有一个
   候选<literal>RETURNING</literal>子句被用来计算结果）。如果在任何可用规则中都
   没有<literal>RETURNING</literal>子句，视图上的<literal>RETURNING</literal>查询将
   被拒绝。
  </para>
<!-- pgdoc-cn_end sig_en=25d7832450f855cd1f831719dd616414 -->

<!-- pgdoc-cn_start sig_en=d8acdf7cdf5a9b5e1d19444b32003fcf sig_cn_org=None source=14.1 
  <para>
   It is very important to take care to avoid circular rules.  For
   example, though each of the following two rule definitions are
   accepted by <productname>PostgreSQL</productname>, the
   <command>SELECT</command> command would cause
   <productname>PostgreSQL</productname> to report an error because
   of recursive expansion of a rule:

<programlisting>
CREATE RULE "_RETURN" AS
    ON SELECT TO t1
    DO INSTEAD
        SELECT * FROM t2;

CREATE RULE "_RETURN" AS
    ON SELECT TO t2
    DO INSTEAD
        SELECT * FROM t1;

SELECT * FROM t1;
</programlisting>
  </para>
________________________________________________________-->
  <para>
   避免循环规则非常重要。例如，尽管下面的两条规则定义都被
   <productname>PostgreSQL</productname>所接受，
   <command>SELECT</command>命令将导致
   <productname>PostgreSQL</productname>报告一个错误，因为会产生一条
   规则的递归扩展：

<programlisting>
CREATE RULE "_RETURN" AS
    ON SELECT TO t1
    DO INSTEAD
        SELECT * FROM t2;

CREATE RULE "_RETURN" AS
    ON SELECT TO t2
    DO INSTEAD
        SELECT * FROM t1;

SELECT * FROM t1;
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=d8acdf7cdf5a9b5e1d19444b32003fcf -->

<!-- pgdoc-cn_start sig_en=3cfcc23cd5ce2448cb73a9c1f8b6f69c sig_cn_org=None source=14.1 
  <para>
   Presently, if a rule action contains a <command>NOTIFY</command>
   command, the <command>NOTIFY</command> command will be executed
   unconditionally, that is, the <command>NOTIFY</command> will be
   issued even if there are not any rows that the rule should apply
   to.  For example, in:
<programlisting>
CREATE RULE notify_me AS ON UPDATE TO mytable DO ALSO NOTIFY mytable;

UPDATE mytable SET name = 'foo' WHERE id = 42;
</programlisting>
   one <command>NOTIFY</command> event will be sent during the
   <command>UPDATE</command>, whether or not there are any rows that
   match the condition <literal>id = 42</literal>.  This is an
   implementation restriction that might be fixed in future releases.
  </para>
________________________________________________________-->
  <para>
   当前，如果一个规则动作包含一个<command>NOTIFY</command>命令，
   该<command>NOTIFY</command>命令将被无条件执行，也就是说，即使
   该规则不被应用到任何行上，也会发出<command>NOTIFY</command>。
   例如，在
<programlisting>
CREATE RULE notify_me AS ON UPDATE TO mytable DO ALSO NOTIFY mytable;

UPDATE mytable SET name = 'foo' WHERE id = 42;
</programlisting>
   中，<command>UPDATE</command>期间将发出一个
   <command>NOTIFY</command>事件，不管是否有行匹配条件
   <literal>id = 42</literal>。这是一种实现限制，它可能会在未来的发行中被修复。
  </para>
<!-- pgdoc-cn_end sig_en=3cfcc23cd5ce2448cb73a9c1f8b6f69c -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=1280b3542de1cbad189d0338ab137070 sig_cn_org=None source=14.1 
  <para>
   <command>CREATE RULE</command> is a
   <productname>PostgreSQL</productname> language extension, as is the
   entire query rewrite system.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE RULE</command>是一种
   <productname>PostgreSQL</productname>语言扩展，
   整个查询重写系统也是这样。
  </para>
<!-- pgdoc-cn_end sig_en=1280b3542de1cbad189d0338ab137070 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-alterrule"/></member>
   <member><xref linkend="sql-droprule"/></member>
  </simplelist>
 </refsect1>

</refentry>
