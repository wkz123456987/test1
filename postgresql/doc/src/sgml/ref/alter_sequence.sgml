<!--
doc/src/sgml/ref/alter_sequence.sgml
PostgreSQL documentation
-->

<refentry id="sql-altersequence">
<!-- pgdoc-cn_start sig_en=48e68c007210ca5ccc850facb626ecd5 sig_cn_org=None source=14.1 
 <indexterm zone="sql-altersequence">
  <primary>ALTER SEQUENCE</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-altersequence">
  <primary>ALTER SEQUENCE</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=48e68c007210ca5ccc850facb626ecd5 -->

 <refmeta>
  <refentrytitle>ALTER SEQUENCE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=e68d91af04d6a271c3ff1dddcdb223f8 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>ALTER SEQUENCE</refname>
  <refpurpose>
   change the definition of a sequence generator
  </refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>ALTER SEQUENCE</refname>
  <refpurpose>
   更改一个序列发生器的定义
  </refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=e68d91af04d6a271c3ff1dddcdb223f8 -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=9b4afacf2243350a4e9b556ee8208073 sig_cn_org=9b4afacf2243350a4e9b556ee8208073 source=15.7 
<synopsis>
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable>
    [ AS <replaceable class="parameter">data_type</replaceable> ]
    [ INCREMENT [ BY ] <replaceable class="parameter">increment</replaceable> ]
    [ MINVALUE <replaceable class="parameter">minvalue</replaceable> | NO MINVALUE ] [ MAXVALUE <replaceable class="parameter">maxvalue</replaceable> | NO MAXVALUE ]
    [ START [ WITH ] <replaceable class="parameter">start</replaceable> ]
    [ RESTART [ [ WITH ] <replaceable class="parameter">restart</replaceable> ] ]
    [ CACHE <replaceable class="parameter">cache</replaceable> ] [ [ NO ] CYCLE ]
    [ OWNED BY { <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable> | NONE } ]
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> SET { LOGGED | UNLOGGED }
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> OWNER TO { <replaceable class="parameter">new_owner</replaceable> | CURRENT_ROLE | CURRENT_USER | SESSION_USER }
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> SET SCHEMA <replaceable class="parameter">new_schema</replaceable>
</synopsis>
________________________________________________________-->
<synopsis>
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable>
    [ AS <replaceable class="parameter">data_type</replaceable> ]
    [ INCREMENT [ BY ] <replaceable class="parameter">increment</replaceable> ]
    [ MINVALUE <replaceable class="parameter">minvalue</replaceable> | NO MINVALUE ] [ MAXVALUE <replaceable class="parameter">maxvalue</replaceable> | NO MAXVALUE ]
    [ START [ WITH ] <replaceable class="parameter">start</replaceable> ]
    [ RESTART [ [ WITH ] <replaceable class="parameter">restart</replaceable> ] ]
    [ CACHE <replaceable class="parameter">cache</replaceable> ] [ [ NO ] CYCLE ]
    [ OWNED BY { <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable> | NONE } ]
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> SET { LOGGED | UNLOGGED }
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> OWNER TO { <replaceable class="parameter">new_owner</replaceable> | CURRENT_ROLE | CURRENT_USER | SESSION_USER }
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER SEQUENCE [ IF EXISTS ] <replaceable class="parameter">name</replaceable> SET SCHEMA <replaceable class="parameter">new_schema</replaceable>
</synopsis>
<!-- pgdoc-cn_end sig_en=9b4afacf2243350a4e9b556ee8208073 -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=eb151694d44edf777c3ef48f8e39d419 sig_cn_org=None source=14.1 
  <para>
   <command>ALTER SEQUENCE</command> changes the parameters of an existing
   sequence generator.  Any parameters not specifically set in the
   <command>ALTER SEQUENCE</command> command retain their prior settings.
  </para>
________________________________________________________-->
  <para>
   <command>ALTER SEQUENCE</command>更改一个现有序列发生器的参数。
   任何没有在<command>ALTER SEQUENCE</command>命令中明确设置的参数
   保持它们之前的设置。
  </para>
<!-- pgdoc-cn_end sig_en=eb151694d44edf777c3ef48f8e39d419 -->

<!-- pgdoc-cn_start sig_en=0be30e4903d9a1877bd722e2e3a7efcb sig_cn_org=None source=14.1 
  <para>
   You must own the sequence to use <command>ALTER SEQUENCE</command>.
   To change a sequence's schema, you must also have <literal>CREATE</literal>
   privilege on the new schema.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the sequence's schema.  (These restrictions enforce that altering the owner
   doesn't do anything you couldn't do by dropping and recreating the sequence.
   However, a superuser can alter ownership of any sequence anyway.)
  </para>
________________________________________________________-->
  <para>
   要使用<command>ALTER SEQUENCE</command>，你必须拥有该序列。要更改一个序列
   的模式，你还必须拥有新模式上的<literal>CREATE</literal>特权。要更改拥有者，你还必须
   是新拥有角色的一个直接或者间接成员，并且该角色必须具有该域的模式上的
   <literal>CREATE</literal>特权（这些限制强制修改拥有者不能做一些通过删除和重
   建该序列做不到的事情。不过，一个超级用户怎么都能更改任何序列的所有权。）。
  </para>
<!-- pgdoc-cn_end sig_en=0be30e4903d9a1877bd722e2e3a7efcb -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=1e35f8988ee688203f05b6f0d1dfdfae sig_cn_org=e4523435ab98d847c5299b93f951c513 source=15.7 
       <para>
        The name (optionally schema-qualified) of a sequence to be altered.
       </para>
________________________________________________________-->
       <para>
        要更改的序列的名称（可选地包含模式限定符）。
       </para>
<!-- pgdoc-cn_end sig_en=1e35f8988ee688203f05b6f0d1dfdfae -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>IF EXISTS</literal></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=481f48204f8ee4ee4293b6f9e6caa5da sig_cn_org=111fde7d18276e2f00e03490105d196b source=15.7 
       <para>
        Do not throw an error if the sequence does not exist. A notice is issued
        in this case.
       </para>
________________________________________________________-->
       <para>
        如果序列不存在，则不会抛出错误。在这种情况下会发出通知。
       </para>
<!-- pgdoc-cn_end sig_en=481f48204f8ee4ee4293b6f9e6caa5da -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">data_type</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=1af9f65e1ee341c216eaabc69ff1e0ae sig_cn_org=965b7e407f25af47988327e5e925bcd4 source=15.7 
       <para>
        The optional
        clause <literal>AS <replaceable class="parameter">data_type</replaceable></literal>
        changes the data type of the sequence.  Valid types are
        <literal>smallint</literal>, <literal>integer</literal>,
        and <literal>bigint</literal>.
       </para>
________________________________________________________-->
       <para>
        可选的子句<literal>AS <replaceable class="parameter">data_type</replaceable></literal>
        改变了序列的数据类型。有效的类型包括
        <literal>smallint</literal>，<literal>integer</literal>，
        和<literal>bigint</literal>。
       </para>
<!-- pgdoc-cn_end sig_en=1af9f65e1ee341c216eaabc69ff1e0ae -->

<!-- pgdoc-cn_start sig_en=648f96e5618e4fb0bd32e75c9223bfb5 sig_cn_org=7143686a516aa4dac28b02c2e33fa47b source=15.7 
       <para>
        Changing the data type automatically changes the minimum and maximum
        values of the sequence if and only if the previous minimum and maximum
        values were the minimum or maximum value of the old data type (in
        other words, if the sequence had been created using <literal>NO
        MINVALUE</literal> or <literal>NO MAXVALUE</literal>, implicitly or
        explicitly).  Otherwise, the minimum and maximum values are preserved,
        unless new values are given as part of the same command.  If the
        minimum and maximum values do not fit into the new data type, an error
        will be generated.
       </para>
________________________________________________________-->
       <para>
        更改数据类型会自动更改序列的最小和最大值，前提是先前的最小和最大值是旧数据类型的最小值或最大值（换句话说，如果序列是使用<literal>NO MINVALUE</literal>或<literal>NO MAXVALUE</literal>隐式或显式创建的）。否则，最小和最大值将被保留，除非在同一命令的一部分中给出新值。如果最小和最大值不适合新数据类型，将生成错误。
       </para>
<!-- pgdoc-cn_end sig_en=648f96e5618e4fb0bd32e75c9223bfb5 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">increment</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=62999bbfbcbe5c1ac9f6a83338dc0c11 sig_cn_org=7f021a044f32449d779cf522fc0628ce source=15.7 
       <para>
        The clause <literal>INCREMENT BY <replaceable
        class="parameter">increment</replaceable></literal> is
        optional. A positive value will make an ascending sequence, a
        negative one a descending sequence.  If unspecified, the old
        increment value will be maintained.
       </para>
________________________________________________________-->
       <para>
        The clause <literal>INCREMENT BY <replaceable
        class="parameter">increment</replaceable></literal>是可选的。一个正值将创建一个升序序列，一个负值将创建一个降序序列。如果未指定，旧的增量值将被保留。
       </para>
<!-- pgdoc-cn_end sig_en=62999bbfbcbe5c1ac9f6a83338dc0c11 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">minvalue</replaceable></term>
      <term><literal>NO MINVALUE</literal></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=68c2a620d491479183ed7199d9caae5d sig_cn_org=c4d474f5bc0eca6cc8d6f66b1e3d8ef4 source=15.7 
       <para>
        The optional clause <literal>MINVALUE <replaceable
        class="parameter">minvalue</replaceable></literal> determines
        the minimum value a sequence can generate. If <literal>NO
        MINVALUE</literal> is specified, the defaults of 1 and
        the minimum value of the data type for ascending and descending sequences,
        respectively, will be used.  If neither option is specified,
        the current minimum value will be maintained.
       </para>
________________________________________________________-->
       <para>
        可选子句<literal>MINVALUE <replaceable
        class="parameter">minvalue</replaceable></literal>确定序列可以生成的最小值。
        如果指定了<literal>NO MINVALUE</literal>，则将分别使用升序和降序序列的默认值1和数据类型的最小值。
        如果没有指定任何选项，则将保持当前最小值。
       </para>
<!-- pgdoc-cn_end sig_en=68c2a620d491479183ed7199d9caae5d -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">maxvalue</replaceable></term>
      <term><literal>NO MAXVALUE</literal></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=be8509002c88bc9ccdcf732bbdedda1b sig_cn_org=a2fc835738d93f2bb662683bb5eaa4be source=15.7 
       <para>
        The optional clause <literal>MAXVALUE <replaceable
        class="parameter">maxvalue</replaceable></literal> determines
        the maximum value for the sequence. If <literal>NO
        MAXVALUE</literal> is specified, the defaults of
        the maximum value of the data type and -1 for ascending and descending
        sequences, respectively, will be used.  If neither option is
        specified, the current maximum value will be maintained.
       </para>
________________________________________________________-->
       <para>
        可选子句<literal>MAXVALUE <replaceable
        class="parameter">maxvalue</replaceable></literal>确定序列的最大值。
        如果指定了<literal>NO MAXVALUE</literal>，则将分别使用数据类型的最大值和升序和降序序列的默认值 -1。
        如果没有指定任何选项，则将保持当前最大值。
       </para>
<!-- pgdoc-cn_end sig_en=be8509002c88bc9ccdcf732bbdedda1b -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">start</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=27dd6d0fbaab72ae0871905d71501efd sig_cn_org=9c3bd2ef6550f45514ddf4e2250ebfb7 source=15.7 
       <para>
        The optional clause <literal>START WITH <replaceable
        class="parameter">start</replaceable></literal> changes the
        recorded start value of the sequence.  This has no effect on the
        <emphasis>current</emphasis> sequence value; it simply sets the value
        that future <command>ALTER SEQUENCE RESTART</command> commands will use.
       </para>
________________________________________________________-->
       <para>
        可选子句<literal>START WITH <replaceable
        class="parameter">start</replaceable></literal>会改变序列的记录起始值。
        这不会影响<emphasis>当前</emphasis>序列值；它只是设置未来<command>ALTER SEQUENCE RESTART</command>命令将使用的值。
       </para>
<!-- pgdoc-cn_end sig_en=27dd6d0fbaab72ae0871905d71501efd -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">restart</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=dd0fb8bb9fdbc03e005200f44c99b64b sig_cn_org=14acdbcd185424a29f05a7ca521eea37 source=15.7 
       <para>
        The optional clause <literal>RESTART [ WITH <replaceable
        class="parameter">restart</replaceable> ]</literal> changes the
        current value of the sequence.  This is similar to calling the
        <function>setval</function> function with <literal>is_called</literal> =
        <literal>false</literal>: the specified value will be returned by the
        <emphasis>next</emphasis> call of <function>nextval</function>.
        Writing <literal>RESTART</literal> with no <replaceable
        class="parameter">restart</replaceable> value is equivalent to supplying
        the start value that was recorded by <command>CREATE SEQUENCE</command>
        or last set by <command>ALTER SEQUENCE START WITH</command>.
       </para>
________________________________________________________-->
       <para>
        可选子句<literal>RESTART [ WITH <replaceable class="parameter">restart</replaceable> ]</literal>会改变序列的当前值。
        这类似于使用<function>setval</function>函数并将<literal>is_called</literal> = <literal>false</literal>：
        指定的值将在<function>nextval</function>的<emphasis>下一个</emphasis>调用中返回。
        使用没有<replaceable class="parameter">restart</replaceable>值的<literal>RESTART</literal>等同于提供由<command>CREATE SEQUENCE</command>记录的起始值
        或由<command>ALTER SEQUENCE START WITH</command>上次设置的值。
</para>
<!-- pgdoc-cn_end sig_en=dd0fb8bb9fdbc03e005200f44c99b64b -->

<!-- pgdoc-cn_start sig_en=e49c4971ade1c9c682c1814ff7c99d2a sig_cn_org=dcfdcf1c022fc5f67bf5e3757e7aaa9d source=15.7 
       <para>
        In contrast to a <function>setval</function> call,
        a <literal>RESTART</literal> operation on a sequence is transactional
        and blocks concurrent transactions from obtaining numbers from the
        same sequence. If that's not the desired mode of
        operation, <function>setval</function> should be used.
       </para>
________________________________________________________-->
       <para>
        与<function>setval</function>调用相比，对序列执行<literal>RESTART</literal>操作是事务性的，
        并且会阻止并发事务从同一序列获取数字。如果这不是期望的操作模式，
        应该使用<function>setval</function>。
       </para>
<!-- pgdoc-cn_end sig_en=e49c4971ade1c9c682c1814ff7c99d2a -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">cache</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=24c024328a99449ae20d3c5920ee7a0e sig_cn_org=517cb6dfaa175cfcc466aa04ba2f1e55 source=15.7 
       <para>
        The clause <literal>CACHE <replaceable
        class="parameter">cache</replaceable></literal> enables
        sequence numbers to be preallocated and stored in memory for
        faster access. The minimum value is 1 (only one value can be
        generated at a time, i.e., no cache).  If unspecified, the old
        cache value will be maintained.
       </para>
________________________________________________________-->
       <para>
        该子句<literal>CACHE <replaceable
        class="parameter">cache</replaceable></literal>允许预先分配序列号并存储在内存中以加快访问速度。最小值为1（一次只能生成一个值，即无缓存）。
		如果未指定，则将保留旧的缓存值。
       </para>
<!-- pgdoc-cn_end sig_en=24c024328a99449ae20d3c5920ee7a0e -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CYCLE</literal></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=bb5e1c48fbb0bff7016c1cc4c9d5c00c sig_cn_org=38da64a990f05a0a551e66c94d742ec4 source=15.7 
       <para>
        The optional <literal>CYCLE</literal> key word can be used to enable
        the sequence to wrap around when the
        <replaceable class="parameter">maxvalue</replaceable> or
        <replaceable class="parameter">minvalue</replaceable> has been
        reached by
        an ascending or descending sequence respectively. If the limit is
        reached, the next number generated will be the
        <replaceable class="parameter">minvalue</replaceable> or
        <replaceable class="parameter">maxvalue</replaceable>,
        respectively.
       </para>
________________________________________________________-->
       <para>
        可选的<literal>CYCLE</literal>关键字可用于在<replaceable class="parameter">maxvalue</replaceable>或<replaceable class="parameter">minvalue</replaceable>被升序或降序序列达到时使序列环绕。如果达到限制，生成的下一个数字将分别是<replaceable class="parameter">minvalue</replaceable>或<replaceable class="parameter">maxvalue</replaceable>。
       </para>
<!-- pgdoc-cn_end sig_en=bb5e1c48fbb0bff7016c1cc4c9d5c00c -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>NO CYCLE</literal></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=f0d21b015887ab41ea0513348f4aa70e sig_cn_org=185f9f78903481bbf673ee306bd991e5 source=15.7 
       <para>
        If the optional <literal>NO CYCLE</literal> key word is
        specified, any calls to <function>nextval</function> after the
        sequence has reached its maximum value will return an error.
        If neither <literal>CYCLE</literal> or <literal>NO
        CYCLE</literal> are specified, the old cycle behavior will be
        maintained.
       </para>
________________________________________________________-->
       <para>
        如果指定了可选的<literal>NO CYCLE</literal>关键字，则在序列达到最大值后调用<function>nextval</function>将返回错误。
        如果既没有指定<literal>CYCLE</literal>也没有指定<literal>NO CYCLE</literal>，则将保持旧的循环行为。
       </para>
<!-- pgdoc-cn_end sig_en=f0d21b015887ab41ea0513348f4aa70e -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>SET { LOGGED | UNLOGGED }</literal></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=1e092f343fabc9bc96b17e97f7da00bd sig_cn_org=1b22571eb85b63596a021bde95b46c5e source=15.7 
       <para>
        This form changes the sequence from unlogged to logged or vice-versa
        (see <xref linkend="sql-createsequence"/>).  It cannot be applied to a
        temporary sequence.
       </para>
________________________________________________________-->
       <para>
        这个表单将序列从未记录更改为已记录，反之亦然（参见<xref linkend="sql-createsequence"/>）。
        不能应用于临时序列。
       </para>
<!-- pgdoc-cn_end sig_en=1e092f343fabc9bc96b17e97f7da00bd -->
      </listitem>
     </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=a8968bf9278852cce24900c4af6d932a sig_cn_org=None source=14.1 
    <term><literal>OWNED BY</literal> <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable></term>
________________________________________________________-->
    <term><literal>OWNED BY</literal> <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable></term>
<!-- pgdoc-cn_end sig_en=a8968bf9278852cce24900c4af6d932a -->
    <term><literal>OWNED BY NONE</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=e7255745a7db1a8fe574ca0bba623f34 sig_cn_org=128fa6a1d31295a53b76156587a7489e source=15.7 
     <para>
      The <literal>OWNED BY</literal> option causes the sequence to be
      associated with a specific table column, such that if that column
      (or its whole table) is dropped, the sequence will be automatically
      dropped as well.  If specified, this association replaces any
      previously specified association for the sequence.  The specified
      table must have the same owner and be in the same schema as the
      sequence.
      Specifying <literal>OWNED BY NONE</literal> removes any existing
      association, making the sequence <quote>free-standing</quote>.
     </para>
________________________________________________________-->
     <para>
      <literal>OWNED BY</literal>选项会导致序列与特定表列相关联，如果该列（或整个表）被删除，序列也将被自动删除。
      如果指定了此关联，它将替换序列的任何先前指定的关联。指定的表必须与序列具有相同的所有者并且在相同的模式中。
      指定<literal>OWNED BY NONE</literal>会移除任何现有关联，使序列成为<quote>独立的</quote>。
</para>
<!-- pgdoc-cn_end sig_en=e7255745a7db1a8fe574ca0bba623f34 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_owner</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=5effc71f8f9335543c96e735af13cb62 sig_cn_org=aae4806b1c63027accfe8f03f6a1eada source=15.7 
     <para>
      The user name of the new owner of the sequence.
     </para>
________________________________________________________-->
     <para>
      新所有者的用户名。
     </para>
<!-- pgdoc-cn_end sig_en=5effc71f8f9335543c96e735af13cb62 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=0d2584639404246430ba202e19841f35 sig_cn_org=b54897d152e7546ae75d6338227dbe47 source=15.7 
     <para>
      The new name for the sequence.
     </para>
________________________________________________________-->
     <para>
      序列的新名称。
     </para>
<!-- pgdoc-cn_end sig_en=0d2584639404246430ba202e19841f35 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">new_schema</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=0693058c17cac96d7efce183b0d40a03 sig_cn_org=d89456177c9c7c3f8f360d9b05a58134 source=15.7 
     <para>
      The new schema for the sequence.
     </para>
________________________________________________________-->
     <para>
      序列的新模式。
     </para>
<!-- pgdoc-cn_end sig_en=0693058c17cac96d7efce183b0d40a03 -->
    </listitem>
   </varlistentry>

    </variablelist>
   </para>
  </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=a1d6b9bda13eb5fbe2155afefd286121 sig_cn_org=None source=14.1 
  <para>
   <command>ALTER SEQUENCE</command> will not immediately affect
   <function>nextval</function> results in backends,
   other than the current one, that have preallocated (cached) sequence
   values. They will use up all cached values prior to noticing the changed
   sequence generation parameters.  The current backend will be affected
   immediately.
  </para>
________________________________________________________-->
  <para>
   <command>ALTER SEQUENCE</command>将不会立即影响除当前后端外
   其他后端中的<function>nextval</function>结果，因为它们有预分配（缓存）的序列
   值。在注意到序列生成参数被更改之前它们将用尽所有缓存的值。当前后端将被
   立刻影响。
  </para>
<!-- pgdoc-cn_end sig_en=a1d6b9bda13eb5fbe2155afefd286121 -->

<!-- pgdoc-cn_start sig_en=79d54d1ba14bd1526cd04d5fb526a977 sig_cn_org=None source=14.1 
  <para>
   <command>ALTER SEQUENCE</command> does not affect the <function>currval</function>
   status for the sequence.  (Before <productname>PostgreSQL</productname>
   8.3, it sometimes did.)
  </para>
________________________________________________________-->
  <para>
   <command>ALTER SEQUENCE</command>不会影响该序列的
   <function>currval</function>状态（在
   <productname>PostgreSQL</productname> 8.3 之前有时会影响）。
  </para>
<!-- pgdoc-cn_end sig_en=79d54d1ba14bd1526cd04d5fb526a977 -->

<!-- pgdoc-cn_start sig_en=a8876ccb9ca462340e836132712f0126 sig_cn_org=None source=14.1 
  <para>
   <command>ALTER SEQUENCE</command> blocks
   concurrent <function>nextval</function>, <function>currval</function>,
   <function>lastval</function>, and <command>setval</command> calls.
  </para>
________________________________________________________-->
  <para>
   <command>ALTER SEQUENCE</command>阻塞并发<function>nextval</function>、
   <function>currval</function>、<function>lastval</function>和
   <command>setval</command>调用。
  </para>
<!-- pgdoc-cn_end sig_en=a8876ccb9ca462340e836132712f0126 -->

<!-- pgdoc-cn_start sig_en=804ed2b9ff3c4252f519ce5c74595d05 sig_cn_org=None source=14.1 
  <para>
   For historical reasons, <command>ALTER TABLE</command> can be used with
   sequences too; but the only variants of <command>ALTER TABLE</command>
   that are allowed with sequences are equivalent to the forms shown above.
  </para>
________________________________________________________-->
  <para>
   由于历史原因，<command>ALTER TABLE</command>也可以被用于序列，
   但是只有等效于上述形式的<command>ALTER TABLE</command>变体才被
   允许用于序列。
  </para>
<!-- pgdoc-cn_end sig_en=804ed2b9ff3c4252f519ce5c74595d05 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=63bb2094b288e0df7fc01cc954d33123 sig_cn_org=None source=14.1 
  <para>
   Restart a sequence called <literal>serial</literal>, at 105:
<programlisting>
ALTER SEQUENCE serial RESTART WITH 105;
</programlisting></para>
________________________________________________________-->
  <para>
   在 105 重启一个被称为<literal>serial</literal>的序列：
<programlisting>
ALTER SEQUENCE serial RESTART WITH 105;
</programlisting></para>
<!-- pgdoc-cn_end sig_en=63bb2094b288e0df7fc01cc954d33123 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=3a3e3d0318958b64628ea0c1f32a5913 sig_cn_org=None source=14.1 
  <para>
   <command>ALTER SEQUENCE</command> conforms to the <acronym>SQL</acronym>
   standard, except for the <literal>AS</literal>, <literal>START WITH</literal>,
   <literal>OWNED BY</literal>, <literal>OWNER TO</literal>, <literal>RENAME TO</literal>, and
   <literal>SET SCHEMA</literal> clauses, which are
   <productname>PostgreSQL</productname> extensions.
  </para>
________________________________________________________-->
  <para>
   <command>ALTER SEQUENCE</command>符合<acronym>SQL</acronym>
   标准，不过<literal>AS</literal>、<literal>START WITH</literal>、
   <literal>OWNED BY</literal>、<literal>OWNER TO</literal>、<literal>RENAME TO</literal>
   以及<literal>SET SCHEMA</literal>子句是
   <productname>PostgreSQL</productname>扩展。
  </para>
<!-- pgdoc-cn_end sig_en=3a3e3d0318958b64628ea0c1f32a5913 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-createsequence"/></member>
   <member><xref linkend="sql-dropsequence"/></member>
  </simplelist>
 </refsect1>

</refentry>
