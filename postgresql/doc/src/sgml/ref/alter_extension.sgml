<!--
doc/src/sgml/ref/alter_extension.sgml
PostgreSQL documentation
-->

<refentry id="sql-alterextension">
<!-- pgdoc-cn_start sig_en=a71ace9e26169519cabe41a6593b05a5 sig_cn_org=None source=14.1 
 <indexterm zone="sql-alterextension">
  <primary>ALTER EXTENSION</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-alterextension">
  <primary>ALTER EXTENSION</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=a71ace9e26169519cabe41a6593b05a5 -->

 <refmeta>
  <refentrytitle>ALTER EXTENSION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=c2dcae45ef49e47d26e72c3d2b0e69b9 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>ALTER EXTENSION</refname>
  <refpurpose>
   change the definition of an extension
  </refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>ALTER EXTENSION</refname>
  <refpurpose>
   更改一个扩展的定义
  </refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=c2dcae45ef49e47d26e72c3d2b0e69b9 -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=a9760075788fbe80361acbce5a77892a sig_cn_org=None source=14.1 
<synopsis>
ALTER EXTENSION <replaceable class="parameter">name</replaceable> UPDATE [ TO <replaceable class="parameter">new_version</replaceable> ]
ALTER EXTENSION <replaceable class="parameter">name</replaceable> SET SCHEMA <replaceable class="parameter">new_schema</replaceable>
ALTER EXTENSION <replaceable class="parameter">name</replaceable> ADD <replaceable class="parameter">member_object</replaceable>
ALTER EXTENSION <replaceable class="parameter">name</replaceable> DROP <replaceable class="parameter">member_object</replaceable>

<phrase>where <replaceable class="parameter">member_object</replaceable> is:</phrase>

  ACCESS METHOD <replaceable class="parameter">object_name</replaceable> |
  AGGREGATE <replaceable class="parameter">aggregate_name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) |
  CAST (<replaceable>source_type</replaceable> AS <replaceable>target_type</replaceable>) |
  COLLATION <replaceable class="parameter">object_name</replaceable> |
  CONVERSION <replaceable class="parameter">object_name</replaceable> |
  DOMAIN <replaceable class="parameter">object_name</replaceable> |
  EVENT TRIGGER <replaceable class="parameter">object_name</replaceable> |
  FOREIGN DATA WRAPPER <replaceable class="parameter">object_name</replaceable> |
  FOREIGN TABLE <replaceable class="parameter">object_name</replaceable> |
  FUNCTION <replaceable class="parameter">function_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  MATERIALIZED VIEW <replaceable class="parameter">object_name</replaceable> |
  OPERATOR <replaceable class="parameter">operator_name</replaceable> (<replaceable class="parameter">left_type</replaceable>, <replaceable class="parameter">right_type</replaceable>) |
  OPERATOR CLASS <replaceable class="parameter">object_name</replaceable> USING <replaceable class="parameter">index_method</replaceable> |
  OPERATOR FAMILY <replaceable class="parameter">object_name</replaceable> USING <replaceable class="parameter">index_method</replaceable> |
  [ PROCEDURAL ] LANGUAGE <replaceable class="parameter">object_name</replaceable> |
  PROCEDURE <replaceable class="parameter">procedure_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  ROUTINE <replaceable class="parameter">routine_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  SCHEMA <replaceable class="parameter">object_name</replaceable> |
  SEQUENCE <replaceable class="parameter">object_name</replaceable> |
  SERVER <replaceable class="parameter">object_name</replaceable> |
  TABLE <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH CONFIGURATION <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH DICTIONARY <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH PARSER <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH TEMPLATE <replaceable class="parameter">object_name</replaceable> |
  TRANSFORM FOR <replaceable>type_name</replaceable> LANGUAGE <replaceable>lang_name</replaceable> |
  TYPE <replaceable class="parameter">object_name</replaceable> |
  VIEW <replaceable class="parameter">object_name</replaceable>

<phrase>and <replaceable>aggregate_signature</replaceable> is:</phrase>

* |
[ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] |
[ [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] ] ORDER BY [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ]
</synopsis>
________________________________________________________-->
<synopsis>
ALTER EXTENSION <replaceable class="parameter">name</replaceable> UPDATE [ TO <replaceable class="parameter">new_version</replaceable> ]
ALTER EXTENSION <replaceable class="parameter">name</replaceable> SET SCHEMA <replaceable class="parameter">new_schema</replaceable>
ALTER EXTENSION <replaceable class="parameter">name</replaceable> ADD <replaceable class="parameter">member_object</replaceable>
ALTER EXTENSION <replaceable class="parameter">name</replaceable> DROP <replaceable class="parameter">member_object</replaceable>

<phrase>其中 <replaceable class="parameter">member_object</replaceable> 是：</phrase>

  ACCESS METHOD <replaceable class="parameter">object_name</replaceable> |
  AGGREGATE <replaceable class="parameter">aggregate_name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) |
  CAST (<replaceable>source_type</replaceable> AS <replaceable>target_type</replaceable>) |
  COLLATION <replaceable class="parameter">object_name</replaceable> |
  CONVERSION <replaceable class="parameter">object_name</replaceable> |
  DOMAIN <replaceable class="parameter">object_name</replaceable> |
  EVENT TRIGGER <replaceable class="parameter">object_name</replaceable> |
  FOREIGN DATA WRAPPER <replaceable class="parameter">object_name</replaceable> |
  FOREIGN TABLE <replaceable class="parameter">object_name</replaceable> |
  FUNCTION <replaceable class="parameter">function_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  MATERIALIZED VIEW <replaceable class="parameter">object_name</replaceable> |
  OPERATOR <replaceable class="parameter">operator_name</replaceable> (<replaceable class="parameter">left_type</replaceable>, <replaceable class="parameter">right_type</replaceable>) |
  OPERATOR CLASS <replaceable class="parameter">object_name</replaceable> USING <replaceable class="parameter">index_method</replaceable> |
  OPERATOR FAMILY <replaceable class="parameter">object_name</replaceable> USING <replaceable class="parameter">index_method</replaceable> |
  [ PROCEDURAL ] LANGUAGE <replaceable class="parameter">object_name</replaceable> |
  PROCEDURE <replaceable class="parameter">procedure_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  ROUTINE <replaceable class="parameter">routine_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  SCHEMA <replaceable class="parameter">object_name</replaceable> |
  SEQUENCE <replaceable class="parameter">object_name</replaceable> |
  SERVER <replaceable class="parameter">object_name</replaceable> |
  TABLE <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH CONFIGURATION <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH DICTIONARY <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH PARSER <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH TEMPLATE <replaceable class="parameter">object_name</replaceable> |
  TRANSFORM FOR <replaceable>type_name</replaceable> LANGUAGE <replaceable>lang_name</replaceable> |
  TYPE <replaceable class="parameter">object_name</replaceable> |
  VIEW <replaceable class="parameter">object_name</replaceable>

<phrase>并且 <replaceable>aggregate_signature</replaceable> 是：</phrase>

* |
[ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] |
[ [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] ] ORDER BY [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ]
</synopsis>
<!-- pgdoc-cn_end sig_en=a9760075788fbe80361acbce5a77892a -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=f7a54c5899df6adf3700639e05e5702d sig_cn_org=None source=14.1 
  <para>
   <command>ALTER EXTENSION</command> changes the definition of an installed
   extension.  There are several subforms:

   <variablelist>
   <varlistentry>
    <term><literal>UPDATE</literal></term>
    <listitem>
     <para>
      This form updates the extension to a newer version.  The extension
      must supply a suitable update script (or series of scripts) that can
      modify the currently-installed version into the requested version.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      This form moves the extension's objects into another schema. The
      extension has to be <firstterm>relocatable</firstterm> for this command to
      succeed.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD <replaceable class="parameter">member_object</replaceable></literal></term>
    <listitem>
     <para>
      This form adds an existing object to the extension.  This is mainly
      useful in extension update scripts.  The object will subsequently
      be treated as a member of the extension; notably, it can only be
      dropped by dropping the extension.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP <replaceable class="parameter">member_object</replaceable></literal></term>
    <listitem>
     <para>
      This form removes a member object from the extension.  This is mainly
      useful in extension update scripts.  The object is not dropped, only
      disassociated from the extension.
     </para>
    </listitem>
   </varlistentry>
   </variablelist>

   See <xref linkend="extend-extensions"/> for more information about these
   operations.
  </para>
________________________________________________________-->
  <para>
   <command>ALTER EXTENSION</command>更改一个已安装扩展的定义。
   有几种子形式：

   <variablelist>
   <varlistentry>
    <term><literal>UPDATE</literal></term>
    <listitem>
     <para>
      这种形式把该扩展更新到一个新版本。该扩展必须提供一个适当的更新
      脚本（或者一系列脚本）来把当前已安装的版本修改成所要求的版本。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
      这种形式把该扩展的对象移动到另一个模式中。要使这个命令成功，该扩展
      必须是<firstterm>可重定位的</firstterm>。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD <replaceable class="parameter">member_object</replaceable></literal></term>
    <listitem>
     <para>
      这种形式把一个现有的对象加入到该扩展中。这主要对扩展更新脚本有用。
      该对象后续将被当作该扩展的一个成员。尤其是该对象只有通过删除扩展
      才能删除。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP <replaceable class="parameter">member_object</replaceable></literal></term>
    <listitem>
     <para>
      这种形式从该扩展移除一个成员对象。这主要对扩展更新脚本有用。只有
      撤销该对象与其扩展之间的关联后才能删除该对象。
     </para>
    </listitem>
   </varlistentry>
   </variablelist>

   关于这些操作详见<xref linkend="extend-extensions"/>。
  </para>
<!-- pgdoc-cn_end sig_en=f7a54c5899df6adf3700639e05e5702d -->

<!-- pgdoc-cn_start sig_en=059d88b7fd0be8a4828daf494d5dee77 sig_cn_org=None source=14.1 
  <para>
   You must own the extension to use <command>ALTER EXTENSION</command>.
   The <literal>ADD</literal>/<literal>DROP</literal> forms require ownership of the
   added/dropped object as well.
  </para>
________________________________________________________-->
  <para>
   要使用<command>ALTER EXTENSION</command>，你必须拥有该扩展。
   <literal>ADD</literal>/<literal>DROP</literal>形式还要求被增加/删除对象的所有权。
  </para>
<!-- pgdoc-cn_end sig_en=059d88b7fd0be8a4828daf494d5dee77 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

<!-- pgdoc-cn_start sig_en=bbdb765e008bcd7a1f209e4c76b5cc7e sig_cn_org=None source=14.1 
  <para>
   <variablelist>
    <varlistentry>
     <term><replaceable class="parameter">name</replaceable></term>
     <listitem>
      <para>
       The name of an installed extension.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">new_version</replaceable></term>
     <listitem>
      <para>
       The desired new version of the extension.  This can be written as
       either an identifier or a string literal.  If not specified,
       <command>ALTER EXTENSION UPDATE</command> attempts to update to whatever is
       shown as the default version in the extension's control file.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">new_schema</replaceable></term>
     <listitem>
      <para>
       The new schema for the extension.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">object_name</replaceable></term>
     <term><replaceable class="parameter">aggregate_name</replaceable></term>
     <term><replaceable class="parameter">function_name</replaceable></term>
     <term><replaceable class="parameter">operator_name</replaceable></term>
     <term><replaceable class="parameter">procedure_name</replaceable></term>
     <term><replaceable class="parameter">routine_name</replaceable></term>
     <listitem>
      <para>
       The name of an object to be added to or removed from the extension.
       Names of tables,
       aggregates, domains, foreign tables, functions, operators,
       operator classes, operator families, procedures, routines, sequences, text search objects,
       types, and views can be schema-qualified.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>source_type</replaceable></term>
     <listitem>
      <para>
       The name of the source data type of the cast.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>target_type</replaceable></term>
     <listitem>
      <para>
       The name of the target data type of the cast.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">argmode</replaceable></term>

     <listitem>
      <para>
       The mode of a function, procedure, or aggregate
       argument: <literal>IN</literal>, <literal>OUT</literal>,
       <literal>INOUT</literal>, or <literal>VARIADIC</literal>.
       If omitted, the default is <literal>IN</literal>.
       Note that <command>ALTER EXTENSION</command> does not actually pay
       any attention to <literal>OUT</literal> arguments, since only the input
       arguments are needed to determine the function's identity.
       So it is sufficient to list the <literal>IN</literal>, <literal>INOUT</literal>,
       and <literal>VARIADIC</literal> arguments.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">argname</replaceable></term>

     <listitem>
      <para>
       The name of a function, procedure, or aggregate argument.
       Note that <command>ALTER EXTENSION</command> does not actually pay
       any attention to argument names, since only the argument data
       types are needed to determine the function's identity.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">argtype</replaceable></term>

     <listitem>
      <para>
       The data type of a function, procedure, or aggregate argument.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">left_type</replaceable></term>
     <term><replaceable class="parameter">right_type</replaceable></term>
     <listitem>
      <para>
       The data type(s) of the operator's arguments (optionally
       schema-qualified).  Write <literal>NONE</literal> for the missing argument
       of a prefix operator.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>PROCEDURAL</literal></term>

     <listitem>
      <para>
       This is a noise word.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>type_name</replaceable></term>

     <listitem>
      <para>
       The name of the data type of the transform.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>lang_name</replaceable></term>

     <listitem>
      <para>
       The name of the language of the transform.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
________________________________________________________-->
  <para>
   <variablelist>
    <varlistentry>
     <term><replaceable class="parameter">name</replaceable></term>
     <listitem>
      <para>
       一个已安装扩展的名称。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">new_version</replaceable></term>
     <listitem>
      <para>
       想要得到的该扩展的新版本。这可以写成一个标识符或者一个字符串。如果没有指定，
       <command>ALTER EXTENSION UPDATE</command>会尝试更新到该扩展的控制文件中的
       默认版本。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">new_schema</replaceable></term>
     <listitem>
      <para>
       该扩展的新模式。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">object_name</replaceable></term>
     <term><replaceable class="parameter">aggregate_name</replaceable></term>
     <term><replaceable class="parameter">function_name</replaceable></term>
     <term><replaceable class="parameter">operator_name</replaceable></term>
     <term><replaceable class="parameter">procedure_name</replaceable></term>
     <term><replaceable class="parameter">routine_name</replaceable></term>
     <listitem>
      <para>
       要从该扩展增加或者移除的对象的名称。表、聚集、域、外部表、函数、
       操作符、操作符类、操作符族、过程、例程、序列、文本搜索对象、类型和视图的名称
       可以被模式限定。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>source_type</replaceable></term>
     <listitem>
      <para>
       该转换的源数据类型的名称。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>target_type</replaceable></term>
     <listitem>
      <para>
       该转换的目标数据类型的名称。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">argmode</replaceable></term>

     <listitem>
      <para>
       一个函数、过程或者聚集参数的模式：<literal>IN</literal>、<literal>OUT</literal>、
       <literal>INOUT</literal>或者<literal>VARIADIC</literal>。如果被忽略，默认值是
       <literal>IN</literal>。注意，<command>ALTER EXTENSION</command>
       并不真正关心<literal>OUT</literal>参数，因为决定该函数的身份时只需要输入
       参数。因此列出<literal>IN</literal>、<literal>INOUT</literal>和
       <literal>VARIADIC</literal>参数足矣。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">argname</replaceable></term>

     <listitem>
      <para>
       一个函数、过程或者聚集参数的名称。注意，
       <command>ALTER EXTENSION</command>并不真正关心参数名称，因为
       决定该函数的身份时只需要参数的数据类型。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">argtype</replaceable></term>

     <listitem>
      <para>
       一个函数、过程或者或聚集参数的数据类型。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable class="parameter">left_type</replaceable></term>
     <term><replaceable class="parameter">right_type</replaceable></term>
     <listitem>
      <para>
       该操作符参数的数据类型（可以用模式限定）。对一个前缀操作符的缺失的
       参数可以写<literal>NONE</literal>。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>PROCEDURAL</literal></term>

     <listitem>
      <para>
       这是一个噪声词。
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><replaceable>type_name</replaceable></term>

     <listitem>
      <para>
       该转换的数据类型的名称。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>lang_name</replaceable></term>

     <listitem>
      <para>
       该转换的语言的名称。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
<!-- pgdoc-cn_end sig_en=bbdb765e008bcd7a1f209e4c76b5cc7e -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=8dfc66cff2188ee61314016f67b41eab sig_cn_org=None source=14.1 
  <para>
   To update the <literal>hstore</literal> extension to version 2.0:
<programlisting>
ALTER EXTENSION hstore UPDATE TO '2.0';
</programlisting>
  </para>
________________________________________________________-->
  <para>
   把<literal>hstore</literal>扩展更新到版本 2.0：
<programlisting>
ALTER EXTENSION hstore UPDATE TO '2.0';
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=8dfc66cff2188ee61314016f67b41eab -->

<!-- pgdoc-cn_start sig_en=b37f91038651b64adf897553f8c1a7ec sig_cn_org=None source=14.1 
  <para>
   To change the schema of the <literal>hstore</literal> extension
   to <literal>utils</literal>:
<programlisting>
ALTER EXTENSION hstore SET SCHEMA utils;
</programlisting>
  </para>
________________________________________________________-->
  <para>
   把<literal>hstore</literal>扩展的模式更改到<literal>utils</literal>：
<programlisting>
ALTER EXTENSION hstore SET SCHEMA utils;
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=b37f91038651b64adf897553f8c1a7ec -->

<!-- pgdoc-cn_start sig_en=25a23dc557bd025e9099ef7b5e567015 sig_cn_org=None source=14.1 
  <para>
   To add an existing function to the <literal>hstore</literal> extension:
<programlisting>
ALTER EXTENSION hstore ADD FUNCTION populate_record(anyelement, hstore);
</programlisting></para>
________________________________________________________-->
  <para>
   要向<literal>hstore</literal>扩展增加一个现有函数：
<programlisting>
ALTER EXTENSION hstore ADD FUNCTION populate_record(anyelement, hstore);
</programlisting></para>
<!-- pgdoc-cn_end sig_en=25a23dc557bd025e9099ef7b5e567015 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=63720a251f84e7dfc576c92480d4608f sig_cn_org=None source=14.1 
  <para>
   <command>ALTER EXTENSION</command> is a <productname>PostgreSQL</productname>
   extension.
  </para>
________________________________________________________-->
  <para>
   <command>ALTER EXTENSION</command>是一个<productname>PostgreSQL</productname>
   扩展。
  </para>
<!-- pgdoc-cn_end sig_en=63720a251f84e7dfc576c92480d4608f -->
 </refsect1>

 <refsect1 id="sql-alterextension-see-also">
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-createextension"/></member>
   <member><xref linkend="sql-dropextension"/></member>
  </simplelist>
 </refsect1>
</refentry>
