<!--
doc/src/sgml/ref/pg_resetwal.sgml
PostgreSQL documentation
-->

<refentry id="app-pgresetwal">
<!-- pgdoc-cn_start sig_en=68c7ed319b5377483656f500263ca145 sig_cn_org=None source=14.1 
 <indexterm zone="app-pgresetwal">
  <primary>pg_resetwal</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="app-pgresetwal">
  <primary>pg_resetwal</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=68c7ed319b5377483656f500263ca145 -->

 <refmeta>
  <refentrytitle><application>pg_resetwal</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=13c86bceb8277db6b2c98b01614a635a sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>pg_resetwal</refname>
  <refpurpose>reset the write-ahead log and other control information of a <productname>PostgreSQL</productname> database cluster</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>pg_resetwal</refname>
  <refpurpose>重置一个<productname>PostgreSQL</productname>数据库集簇的预写式日志以及其他控制信息</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=13c86bceb8277db6b2c98b01614a635a -->

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_resetwal</command>
   <group choice="opt">
    <arg choice="plain"><option>-f</option></arg>
    <arg choice="plain"><option>--force</option></arg>
   </group>
   <group choice="opt">
    <arg choice="plain"><option>-n</option></arg>
    <arg choice="plain"><option>--dry-run</option></arg>
   </group>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <group choice="plain">
    <group choice="opt">
     <arg choice="plain"><option>-D</option></arg>
     <arg choice="plain"><option>--pgdata</option></arg>
    </group>
    <replaceable class="parameter">datadir</replaceable>
   </group>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1 id="r1-app-pgresetwal-1">
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->
<!-- pgdoc-cn_start sig_en=727842ea38066ecaa1caee195f683c96 sig_cn_org=None source=14.1 
  <para>
   <command>pg_resetwal</command> clears the write-ahead log (WAL) and
   optionally resets some other control information stored in the
   <filename>pg_control</filename> file.  This function is sometimes needed
   if these files have become corrupted.  It should be used only as a
   last resort, when the server will not start due to such corruption.
  </para>
________________________________________________________-->
  <para>
   <command>pg_resetwal</command>会清除预写式日志（WAL）并且有选择地重置存储在<filename>pg_control</filename>文件中的一些其他控制信息。如果这些文件已经被损坏，某些时候就需要这个功能。当服务器由于这样的损坏而无法启动时，这只应该被用作最后的手段。
  </para>
<!-- pgdoc-cn_end sig_en=727842ea38066ecaa1caee195f683c96 -->

<!-- pgdoc-cn_start sig_en=f41fe88cfe81f9b359c3deccfe0b95f8 sig_cn_org=160088e2e0393ffef349182b617077e1 source=15.7 
  <para>
   After running this command, it should be possible to start the server,
   but bear in mind that the database might contain inconsistent data due to
   partially-committed transactions.  You should immediately dump your data,
   run <command>initdb</command>, and restore.  After restore, check for
   inconsistencies and repair as needed.
  </para>
________________________________________________________-->
  <para>
   运行此命令后，应该可以启动服务器，但请记住，由于部分提交的事务，
   数据库可能包含不一致的数据。您应立即转储数据，运行<command>initdb</command>，
   然后恢复。恢复后，检查不一致之处并根据需要修复。
</para>
<!-- pgdoc-cn_end sig_en=f41fe88cfe81f9b359c3deccfe0b95f8 -->

<!-- pgdoc-cn_start sig_en=d24ea631aefbccb442bed9177ac20671 sig_cn_org=None source=14.1 
  <para>
   This utility can only be run by the user who installed the server, because
   it requires read/write access to the data directory.
   For safety reasons, you must specify the data directory on the command line.
   <command>pg_resetwal</command> does not use the environment variable
   <envar>PGDATA</envar>.
  </para>
________________________________________________________-->
  <para>
   这个工具只能被安装服务器的用户运行，因为它要求对数据目录的读写访问。出于安全原因，你必须在命令行中指定数据目录。<command>pg_resetwal</command>不使用环境变量<envar>PGDATA</envar>。
  </para>
<!-- pgdoc-cn_end sig_en=d24ea631aefbccb442bed9177ac20671 -->

<!-- pgdoc-cn_start sig_en=3ac86dcc1890fcf3fcbd6906d094ed40 sig_cn_org=57c87764fb47d40d430fb8a0d4b19b34 source=15.7 
  <para>
   If <command>pg_resetwal</command> complains that it cannot determine
   valid data for <filename>pg_control</filename>, you can force it to proceed anyway
   by specifying the <option>-f</option> (force) option.  In this case plausible
   values will be substituted for the missing data.  Most of the fields can be
   expected to match, but manual assistance might be needed for the next OID,
   next transaction ID and epoch, next multitransaction ID and offset, and
   WAL starting location fields. These fields can be set using the options
   discussed below. If you are not able to determine correct values for all
   these fields, <option>-f</option> can still be used, but
   the recovered database must be treated with even more suspicion than
   usual: an immediate dump and restore is imperative.  <emphasis>Do not</emphasis>
   execute any data-modifying operations in the database before you dump,
   as any such action is likely to make the corruption worse.
  </para>
________________________________________________________-->
  <para>
   如果<command>pg_resetwal</command>报告无法确定<filename>pg_control</filename>的有效数据，
   您可以通过指定<option>-f</option>（强制）选项来强制执行。在这种情况下，可能会为缺失的数据
   替换合理的值。大多数字段可以预期匹配，但可能需要手动协助来设置下一个OID、下一个事务ID和时代、
   下一个多事务ID和偏移以及WAL起始位置字段。可以使用下面讨论的选项来设置这些字段。如果您无法
   确定所有这些字段的正确值，仍然可以使用<option>-f</option>，但是必须对恢复的数据库更加怀疑：
   立即进行转储和恢复是必要的。<emphasis>在转储之前</emphasis>不要在数据库中执行任何修改数据的操作，
   因为任何此类操作可能会使损坏变得更糟。
</para>
<!-- pgdoc-cn_end sig_en=3ac86dcc1890fcf3fcbd6906d094ed40 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=ee3f399228d18d2103d5b7f4e0aeeba8 sig_cn_org=None source=14.1 
  <title>Options</title>
________________________________________________________-->
  <title>选项</title>
<!-- pgdoc-cn_end sig_en=ee3f399228d18d2103d5b7f4e0aeeba8 -->

  <variablelist>
   <varlistentry>
    <term><option>-f</option></term>
    <term><option>--force</option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=4ac52c746d1daf9819944aab4646c612 sig_cn_org=None source=14.1 
     <para>
      Force <command>pg_resetwal</command> to proceed even if it cannot determine
      valid data for <filename>pg_control</filename>, as explained above.
     </para>
________________________________________________________-->
     <para>
      即使<command>pg_resetwal</command>无法从<filename>pg_control</filename>中确定有效的数据（如前面所解释的），也强迫<command>pg_resetwal</command>继续运行。
     </para>
<!-- pgdoc-cn_end sig_en=4ac52c746d1daf9819944aab4646c612 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-n</option></term>
    <term><option>--dry-run</option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=e54f05b1ee9555da2889108748aa3228 sig_cn_org=None source=14.1 
     <para>
      The <option>-n</option>/<option>-&minus;dry-run</option> option instructs
      <command>pg_resetwal</command> to print the values reconstructed from
      <filename>pg_control</filename> and values about to be changed, and then exit
      without modifying anything. This is mainly a debugging tool, but can be
      useful as a sanity check before allowing <command>pg_resetwal</command>
      to proceed for real.
     </para>
________________________________________________________-->
     <para>
      <option>-n</option>/<option>--dry-run</option>选项指示<command>pg_resetwal</command>打印从<filename>pg_control</filename>重构出来的值以及要被改变的值，然后不修改任何东西退出。这主要是一个调试工具，但是可以用来在允许<command>pg_resetwal</command>真正执行下去之前进行完整性检查。
     </para>
<!-- pgdoc-cn_end sig_en=e54f05b1ee9555da2889108748aa3228 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-V</option></term>
    <term><option>--version</option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=83561d6cf397fb1e85ad19f8d6259689 sig_cn_org=None source=14.1 
<para>Display version information, then exit.</para>
________________________________________________________-->
<para>显示版本信息然后退出。</para>
<!-- pgdoc-cn_end sig_en=83561d6cf397fb1e85ad19f8d6259689 -->
</listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-?</option></term>
    <term><option>--help</option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=f66b0bc0a72d88c0f81d6e8f2ce7e4bf sig_cn_org=None source=14.1 
<para>Show help, then exit.</para>
________________________________________________________-->
<para>显示帮助然后退出。</para>
<!-- pgdoc-cn_end sig_en=f66b0bc0a72d88c0f81d6e8f2ce7e4bf -->
</listitem>
   </varlistentry>
  </variablelist>

<!-- pgdoc-cn_start sig_en=701750fd2d7ea5a453e53e15edd1d7c8 sig_cn_org=None source=14.1 
  <para>
   The following options are only needed when
   <command>pg_resetwal</command> is unable to determine appropriate values
   by reading <filename>pg_control</filename>.  Safe values can be determined as
   described below.  For values that take numeric arguments, hexadecimal
   values can be specified by using the prefix <literal>0x</literal>.
  </para>
________________________________________________________-->
  <para>
   只有当<command>pg_resetwal</command>无法通过读取<filename>pg_control</filename>确定合适的值时，才需要下列选项。安全值可以按下文所述来确定。对于接收数字参数的值，可以使用前缀<literal>0x</literal>指定 16 进制值。
  </para>
<!-- pgdoc-cn_end sig_en=701750fd2d7ea5a453e53e15edd1d7c8 -->

  <variablelist>
   <varlistentry>
    <term><option>-c <replaceable class="parameter">xid</replaceable>,<replaceable class="parameter">xid</replaceable></option></term>
    <term><option>--commit-timestamp-ids=<replaceable class="parameter">xid</replaceable>,<replaceable class="parameter">xid</replaceable></option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=d8d6d60725d2c1a1749bfeaa5b62c894 sig_cn_org=None source=14.1 
     <para>
      Manually set the oldest and newest transaction IDs for which the commit
      time can be retrieved.
     </para>
________________________________________________________-->
     <para>
      手工设置提交时间可以检索到的最老的和最新的事务 ID。
     </para>
<!-- pgdoc-cn_end sig_en=d8d6d60725d2c1a1749bfeaa5b62c894 -->

<!-- pgdoc-cn_start sig_en=2d04960910f4a873f297c1a629728636 sig_cn_org=None source=14.1 
     <para>
      A safe value for the oldest transaction ID for which the commit time can
      be retrieved (first part) can be determined by looking
      for the numerically smallest file name in the directory
      <filename>pg_commit_ts</filename> under the data directory.  Conversely, a safe
      value for the newest transaction ID for which the commit time can be
      retrieved (second part) can be determined by looking for the numerically
      greatest file name in the same directory.  The file names are in
      hexadecimal.
     </para>
________________________________________________________-->
     <para>
      能检索到提交时间的最老事务 ID 的安全值（第一部分）可以通过在数据目录下<filename>pg_commit_ts</filename>目录中数字上最小的文件名来决定。反过来，能检索到提交时间的最新事务 ID 的安全值（第二部分）可以通过同一个目录中数字上最大的文件名来决定。文件名都是十六进制的。
     </para>
<!-- pgdoc-cn_end sig_en=2d04960910f4a873f297c1a629728636 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-e <replaceable class="parameter">xid_epoch</replaceable></option></term>
    <term><option>--epoch=<replaceable class="parameter">xid_epoch</replaceable></option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=d2a98347107cf18372a37d7fa7a3362d sig_cn_org=None source=14.1 
     <para>
      Manually set the next transaction ID's epoch.
     </para>
________________________________________________________-->
     <para>
      手工设置下一个事务 ID 的 epoch。
     </para>
<!-- pgdoc-cn_end sig_en=d2a98347107cf18372a37d7fa7a3362d -->

<!-- pgdoc-cn_start sig_en=bdcc3bb4c6e411e73ebf0d00b6668af8 sig_cn_org=None source=14.1 
     <para>
      The transaction ID epoch is not actually stored anywhere in the database
      except in the field that is set by <command>pg_resetwal</command>,
      so any value will work so far as the database itself is concerned.
      You might need to adjust this value to ensure that replication
      systems such as <application>Slony-I</application> and
      <application>Skytools</application> work correctly &mdash;
      if so, an appropriate value should be obtainable from the state of
      the downstream replicated database.
     </para>
________________________________________________________-->
     <para>
      事务 ID 的 epoch 实际上并没有存储在数据库中的任何地方，除了被<command>pg_resetwal</command>设置在这个域中，所以只要关心的是数据库本身，任何值都可以用。你可能需要调整这个值来确保诸如<application>Slony-I</application>和<application>Skytools</application>之类的复制系统正确地工作 &mdash; 如果确实需要调整，应该可以从下游的复制数据库的状态中获得一个合适的值。
     </para>
<!-- pgdoc-cn_end sig_en=bdcc3bb4c6e411e73ebf0d00b6668af8 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-l <replaceable class="parameter">walfile</replaceable></option></term>
    <term><option>--next-wal-file=<replaceable class="parameter">walfile</replaceable></option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=a5991beb6ff645467402148efafde892 sig_cn_org=None source=14.1 
     <para>
      Manually set the WAL starting location by specifying the name of the
      next WAL segment file.
     </para>
________________________________________________________-->
     <para>
      通过指定下一个WAL段文件名称来手工设置WAL开始位置。
     </para>
<!-- pgdoc-cn_end sig_en=a5991beb6ff645467402148efafde892 -->

<!-- pgdoc-cn_start sig_en=7310f57367d1b5a46f68ea854c232497 sig_cn_org=None source=14.1 
     <para>
      The name of next WAL segment file should be
      larger than any WAL segment file name currently existing in
      the directory <filename>pg_wal</filename> under the data directory.
      These names are also in hexadecimal and have three parts.  The first
      part is the <quote>timeline ID</quote> and should usually be kept the same.
      For example, if <filename>00000001000000320000004A</filename> is the
      largest entry in <filename>pg_wal</filename>, use <literal>-l 00000001000000320000004B</literal> or higher.
     </para>
________________________________________________________-->
     <para>
      下一个WAL段文件的名称应该比当前存在于数据目录下<filename>pg_wal</filename>目录中的任意 WAL 段文件名更大。这些名称也是十六进制的并且有三个部分。第一部分是<quote>时间线 ID</quote>并且通常应该被保持相同。例如，如果<filename>00000001000000320000004A</filename>是<filename>pg_wal</filename>中最大的项，则使用<literal>-l 00000001000000320000004B</literal>或更高的值。
     </para>
<!-- pgdoc-cn_end sig_en=7310f57367d1b5a46f68ea854c232497 -->

<!-- pgdoc-cn_start sig_en=e8473f34336ed41622fdd42d6b23fa01 sig_cn_org=None source=14.1 
     <para>
      Note that when using nondefault WAL segment sizes, the numbers in the WAL
      file names are different from the LSNs that are reported by system
      functions and system views.  This option takes a WAL file name, not an
      LSN.
     </para>
________________________________________________________-->
     <para>
      注意在使用非默认WAL段尺寸时，WAL文件名中的数字与系统函数和系统视图报告的LSN不同。这个选项要的是WAL文件名而不是LSN。
     </para>
<!-- pgdoc-cn_end sig_en=e8473f34336ed41622fdd42d6b23fa01 -->

     <note>
<!-- pgdoc-cn_start sig_en=d730dde18e4ba3621d29625b439dc8c9 sig_cn_org=None source=14.1 
      <para>
       <command>pg_resetwal</command> itself looks at the files in
       <filename>pg_wal</filename> and chooses a default <option>-l</option> setting
       beyond the last existing file name.  Therefore, manual adjustment of
       <option>-l</option> should only be needed if you are aware of WAL segment
       files that are not currently present in <filename>pg_wal</filename>, such as
       entries in an offline archive; or if the contents of
       <filename>pg_wal</filename> have been lost entirely.
      </para>
________________________________________________________-->
      <para>
       <command>pg_resetwal</command>本身查看<filename>pg_wal</filename>中的文件并选择一个超出最新现存文件名的默认<option>-l</option>设置。因此，只有当你知道 WAL 段文件当前不在<filename>pg_wal</filename>中时，或者当<filename>pg_wal</filename>的内容完全丢失时，才需要对<option>-l</option>的手工调整，例如一个离线归档中的项。
      </para>
<!-- pgdoc-cn_end sig_en=d730dde18e4ba3621d29625b439dc8c9 -->
     </note>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-m <replaceable class="parameter">mxid</replaceable>,<replaceable class="parameter">mxid</replaceable></option></term>
    <term><option>--multixact-ids=<replaceable class="parameter">mxid</replaceable>,<replaceable class="parameter">mxid</replaceable></option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=65ee8f022a78b989681558554279d765 sig_cn_org=None source=14.1 
     <para>
      Manually set the next and oldest multitransaction ID.
     </para>
________________________________________________________-->
     <para>
      手工设置下一个和最老的多事务 ID。
     </para>
<!-- pgdoc-cn_end sig_en=65ee8f022a78b989681558554279d765 -->

<!-- pgdoc-cn_start sig_en=867d798b595ef470ee300ca009f4dc76 sig_cn_org=None source=14.1 
     <para>
      A safe value for the next multitransaction ID (first part) can be
      determined by looking for the numerically largest file name in the
      directory <filename>pg_multixact/offsets</filename> under the data directory,
      adding one, and then multiplying by 65536 (0x10000).  Conversely, a safe
      value for the oldest multitransaction ID (second part of
      <option>-m</option>) can be determined by looking for the numerically smallest
      file name in the same directory and multiplying by 65536.  The file
      names are in hexadecimal, so the easiest way to do this is to specify
      the option value in hexadecimal and append four zeroes.
     </para>
________________________________________________________-->
     <para>
      确定下一个多事务 ID（第一部分）的安全值的方法：在数据目录下的<filename>pg_multixact/offsets</filename>目录中查找最大的数字文件名，然后在它的基础上加一并且乘以 65536 (0x10000)。反过来，确定最老的多事务 ID（<option>-m</option>的第二部分）的方法：在同一个目录中查找最小的数字文件名并且乘以 65536。文件名是十六进制的数字，因此实现上述方法最简单的方式是以十六进制指定选项值并且追加四个零。
     </para>
<!-- pgdoc-cn_end sig_en=867d798b595ef470ee300ca009f4dc76 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-o <replaceable class="parameter">oid</replaceable></option></term>
    <term><option>--next-oid=<replaceable class="parameter">oid</replaceable></option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=63ff52a5870f910ae558cfe29b536a8e sig_cn_org=None source=14.1 
     <para>
      Manually set the next OID.
     </para>
________________________________________________________-->
     <para>
      手工设置下一个 OID。
     </para>
<!-- pgdoc-cn_end sig_en=63ff52a5870f910ae558cfe29b536a8e -->

<!-- pgdoc-cn_start sig_en=60316a2edcdfe6179ce987da711c414a sig_cn_org=None source=14.1 
     <para>
      There is no comparably easy way to determine a next OID that's beyond
      the largest one in the database, but fortunately it is not critical to
      get the next-OID setting right.
     </para>
________________________________________________________-->
     <para>
      没有相对容易的方法来决定超过数据库中最大 OID 的下一个 OID。但幸运的是正确地得到下一个 OID 设置并不是决定性的。
     </para>
<!-- pgdoc-cn_end sig_en=60316a2edcdfe6179ce987da711c414a -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-O <replaceable class="parameter">mxoff</replaceable></option></term>
    <term><option>--multixact-offset=<replaceable class="parameter">mxoff</replaceable></option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=2f6e1ccb1ea9ae3c662eee564c986f31 sig_cn_org=None source=14.1 
     <para>
      Manually set the next multitransaction offset.
     </para>
________________________________________________________-->
     <para>
      手工设置下一个多事务偏移量。
     </para>
<!-- pgdoc-cn_end sig_en=2f6e1ccb1ea9ae3c662eee564c986f31 -->

<!-- pgdoc-cn_start sig_en=8d8a5b9172e2709fb2ffc8d4b498b621 sig_cn_org=None source=14.1 
     <para>
      A safe value can be determined by looking for the numerically largest
      file name in the directory <filename>pg_multixact/members</filename> under the
      data directory, adding one, and then multiplying by 52352 (0xCC80).
      The file names are in hexadecimal.  There is no simple recipe such as
      the ones for other options of appending zeroes.
     </para>
________________________________________________________-->
     <para>
      确定安全值的方法：查找数据目录下<filename>pg_multixact/members</filename>目录中最大的数字文件名，然后在它的基础上加一并且乘以 52352 (0xCC80)。文件名是十六进制数字。没有像其他选项那样追加零的简单方法。
     </para>
<!-- pgdoc-cn_end sig_en=8d8a5b9172e2709fb2ffc8d4b498b621 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>--wal-segsize=<replaceable class="parameter">wal_segment_size</replaceable></option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=6906a753b6b5c47eab3484799987a108 sig_cn_org=None source=14.1 
     <para>
      Set the new WAL segment size, in megabytes.  The value must be set to a
      power of 2 between 1 and 1024 (megabytes).  See the same option of <xref
      linkend="app-initdb"/> for more information.
     </para>
________________________________________________________-->
     <para>
      设置新的WAL段尺寸，以兆字节为单位。这个值必须被设为2的1次幂和1024次幂（兆字节）之间。更多信息请参考<xref linkend="app-initdb"/>的相同选项。
     </para>
<!-- pgdoc-cn_end sig_en=6906a753b6b5c47eab3484799987a108 -->

     <note>
<!-- pgdoc-cn_start sig_en=7da06c52181c545bf9bc5c2a2ff0c4f3 sig_cn_org=None source=14.1 
      <para>
       While <command>pg_resetwal</command> will set the WAL starting address
       beyond the latest existing WAL segment file, some segment size changes
       can cause previous WAL file names to be reused.  It is recommended to
       use <option>-l</option> together with this option to manually set the
       WAL starting address if WAL file name overlap will cause problems with
       your archiving strategy.
      </para>
________________________________________________________-->
      <para>
       虽然<command>pg_resetwal</command>将把WAL起始地址设置成超过最新的现有WAL段文件，但一些段尺寸的改变可能导致之前的WAL文件名被重用。如果WAL文件名重叠会导致归档策略出现问题，推荐把<option>-l</option>和这个选项一起使用来手动设置WAL起始地址。
      </para>
<!-- pgdoc-cn_end sig_en=7da06c52181c545bf9bc5c2a2ff0c4f3 -->
     </note>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-u <replaceable class="parameter">xid</replaceable></option></term>
    <term><option>--oldest-transaction-id=<replaceable class="parameter">xid</replaceable></option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=d04d88c661dded153f2194110f3d3fc9 sig_cn_org=None source=14.1 
     <para>
      Manually set the oldest unfrozen transaction ID.
     </para>
________________________________________________________-->
     <para>
      手工设置最老的未冻结事务ID。
     </para>
<!-- pgdoc-cn_end sig_en=d04d88c661dded153f2194110f3d3fc9 -->

<!-- pgdoc-cn_start sig_en=c2f7ea342a9102da0ba5bcdc07cb3335 sig_cn_org=None source=14.1 
     <para>
      A safe value can be determined by looking for the numerically smallest
      file name in the directory <filename>pg_xact</filename> under the data directory
      and then multiplying by 1048576 (0x100000).  Note that the file names are in
      hexadecimal.  It is usually easiest to specify the option value in
      hexadecimal too. For example, if <filename>0007</filename> is the smallest entry
      in <filename>pg_xact</filename>, <literal>-u 0x700000</literal> will work (five
      trailing zeroes provide the proper multiplier).
     </para>
________________________________________________________-->
     <para>
      一个安全值，可以通过在数据目录下的<filename>pg_xact</filename>目录中查找数字最小的文件名然后乘以1048576 (0x100000)的方式来确定。
      注意该文件名是十六进制的。
      以十六进制来指定选项值通常也是最简单的。
      例如,如果<filename>0007</filename>是<filename>pg_xact</filename>中最小的记录，<literal>-u 0x700000</literal>将有效(五个后补零提供适当的乘数)。
     </para>
<!-- pgdoc-cn_end sig_en=c2f7ea342a9102da0ba5bcdc07cb3335 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><option>-x <replaceable class="parameter">xid</replaceable></option></term>
    <term><option>--next-transaction-id=<replaceable class="parameter">xid</replaceable></option></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=5263a141d5ecab8f4ea2fa467db11621 sig_cn_org=None source=14.1 
     <para>
      Manually set the next transaction ID.
     </para>
________________________________________________________-->
     <para>
      手工设置下一个事务 ID。
     </para>
<!-- pgdoc-cn_end sig_en=5263a141d5ecab8f4ea2fa467db11621 -->

<!-- pgdoc-cn_start sig_en=3f00959b7c7d313713229036a34258ae sig_cn_org=None source=14.1 
     <para>
      A safe value can be determined by looking for the numerically largest
      file name in the directory <filename>pg_xact</filename> under the data directory,
      adding one,
      and then multiplying by 1048576 (0x100000).  Note that the file names are in
      hexadecimal.  It is usually easiest to specify the option value in
      hexadecimal too. For example, if <filename>0011</filename> is the largest entry
      in <filename>pg_xact</filename>, <literal>-x 0x1200000</literal> will work (five
      trailing zeroes provide the proper multiplier).
     </para>
________________________________________________________-->
     <para>
      确定安全值的方法：在数据目录下的<filename>pg_xact</filename>目录中查找最大的数字文件名，然后在它的基础上加一并且乘以 1048576 (0x100000)。注意文件名是十六进制的数字。通常以十六进制的形式指定该选项值也是最容易的。例如，如果<filename>0011</filename>是<filename>pg_xact</filename>中的最大项，<literal>-x 0x1200000</literal>就可以（五个尾部的零就表示了前面说的乘数）。
     </para>
<!-- pgdoc-cn_end sig_en=3f00959b7c7d313713229036a34258ae -->
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=3b1cdb4e9f7c411322dc1c76ca7f31f3 sig_cn_org=None source=14.1 
  <title>Environment</title>
________________________________________________________-->
  <title>Environment</title>
<!-- pgdoc-cn_end sig_en=3b1cdb4e9f7c411322dc1c76ca7f31f3 -->

  <variablelist>
   <varlistentry>
    <term><envar>PG_COLOR</envar></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=39edaf7f74e555fd049f4cbfdb1bb1dd sig_cn_org=None source=14.1 
     <para>
      Specifies whether to use color in diagnostic messages. Possible values
      are <literal>always</literal>, <literal>auto</literal> and
      <literal>never</literal>.
     </para>
________________________________________________________-->
     <para>
      规定在诊断消息中是否使用颜色。可能的值为<literal>always</literal>、 <literal>auto</literal>、<literal>never</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=39edaf7f74e555fd049f4cbfdb1bb1dd -->
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=a0b089b62e9674348ee4e5d51438d2ad sig_cn_org=None source=14.1 
  <para>
   This command must not be used when the server is
   running.  <command>pg_resetwal</command> will refuse to start up if
   it finds a server lock file in the data directory.  If the
   server crashed then a lock file might have been left
   behind; in that case you can remove the lock file to allow
   <command>pg_resetwal</command> to run.  But before you do
   so, make doubly certain that there is no server process still alive.
  </para>
________________________________________________________-->
  <para>
   这个命令不能在服务器正在运行时被使用。如果在数据目录中发现一个服务器锁文件，<command>pg_resetwal</command>将拒绝启动。如果服务器崩溃那么一个锁文件可能会被留下，在那种情况下你能移除该锁文件来让<command>pg_resetwal</command>运行。但是在你那样做之前，再次确认没有服务器进程仍然存活。
  </para>
<!-- pgdoc-cn_end sig_en=a0b089b62e9674348ee4e5d51438d2ad -->

<!-- pgdoc-cn_start sig_en=3cd35552f8bf1b8907f1fe97a8e8c159 sig_cn_org=None source=14.1 
  <para>
   <command>pg_resetwal</command> works only with servers of the same
   major version.
  </para>
________________________________________________________-->
  <para>
   <command>pg_resetwal</command>仅能在具有相同主版本的服务器上使用。
  </para>
<!-- pgdoc-cn_end sig_en=3cd35552f8bf1b8907f1fe97a8e8c159 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="app-pgcontroldata"/></member>
  </simplelist>
 </refsect1>
</refentry>
