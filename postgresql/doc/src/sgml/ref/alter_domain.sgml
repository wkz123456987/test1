<!--
doc/src/sgml/ref/alter_domain.sgml
PostgreSQL documentation
-->

<refentry id="sql-alterdomain">
<!-- pgdoc-cn_start sig_en=4170f88a023a466c664e5745f9763433 sig_cn_org=None source=14.1 
 <indexterm zone="sql-alterdomain">
  <primary>ALTER DOMAIN</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-alterdomain">
  <primary>ALTER DOMAIN</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=4170f88a023a466c664e5745f9763433 -->

 <refmeta>
  <refentrytitle>ALTER DOMAIN</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=21510be973258db5ac1eea37b396693c sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>ALTER DOMAIN</refname>
  <refpurpose>
   change the definition of a domain
  </refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>ALTER DOMAIN</refname>
  <refpurpose>
   更改一个域的定义
  </refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=21510be973258db5ac1eea37b396693c -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=2fac996426ca49341520369095567fa6 sig_cn_org=None source=14.1 
<synopsis>
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    { SET DEFAULT <replaceable class="parameter">expression</replaceable> | DROP DEFAULT }
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    { SET | DROP } NOT NULL
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    ADD <replaceable class="parameter">domain_constraint</replaceable> [ NOT VALID ]
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    DROP CONSTRAINT [ IF EXISTS ] <replaceable class="parameter">constraint_name</replaceable> [ RESTRICT | CASCADE ]
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
     RENAME CONSTRAINT <replaceable class="parameter">constraint_name</replaceable> TO <replaceable class="parameter">new_constraint_name</replaceable>
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    VALIDATE CONSTRAINT <replaceable class="parameter">constraint_name</replaceable>
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    OWNER TO { <replaceable class="parameter">new_owner</replaceable> | CURRENT_ROLE | CURRENT_USER | SESSION_USER }
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    SET SCHEMA <replaceable class="parameter">new_schema</replaceable>
</synopsis>
________________________________________________________-->
<synopsis>
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    { SET DEFAULT <replaceable class="parameter">expression</replaceable> | DROP DEFAULT }
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    { SET | DROP } NOT NULL
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    ADD <replaceable class="parameter">domain_constraint</replaceable> [ NOT VALID ]
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    DROP CONSTRAINT [ IF EXISTS ] <replaceable class="parameter">constraint_name</replaceable> [ RESTRICT | CASCADE ]
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
     RENAME CONSTRAINT <replaceable class="parameter">constraint_name</replaceable> TO <replaceable class="parameter">new_constraint_name</replaceable>
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    VALIDATE CONSTRAINT <replaceable class="parameter">constraint_name</replaceable>
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    OWNER TO { <replaceable class="parameter">new_owner</replaceable> | CURRENT_ROLE | CURRENT_USER | SESSION_USER }
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER DOMAIN <replaceable class="parameter">name</replaceable>
    SET SCHEMA <replaceable class="parameter">new_schema</replaceable>
</synopsis>
<!-- pgdoc-cn_end sig_en=2fac996426ca49341520369095567fa6 -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=f51640d3bac48bd42b8b6c86e9c33343 sig_cn_org=None source=14.1 
  <para>
   <command>ALTER DOMAIN</command> changes the definition of an existing domain.
   There are several sub-forms:
  </para>
________________________________________________________-->
  <para>
   <command>ALTER DOMAIN</command>更改一个现有域的定义。有几种形式：
  </para>
<!-- pgdoc-cn_end sig_en=f51640d3bac48bd42b8b6c86e9c33343 -->

  <variablelist>
   <varlistentry>
<!-- pgdoc-cn_start sig_en=2805240a1252f5bf0050e9ec1f5fd194 sig_cn_org=None source=14.1 
    <term><literal>SET</literal>/<literal>DROP DEFAULT</literal></term>
________________________________________________________-->
    <term><literal>SET</literal>/<literal>DROP DEFAULT</literal></term>
<!-- pgdoc-cn_end sig_en=2805240a1252f5bf0050e9ec1f5fd194 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=ec1dc808a5b14a45e99c3af1c32828ee sig_cn_org=None source=14.1 
     <para>
      These forms set or remove the default value for a domain. Note
      that defaults only apply to subsequent <command>INSERT</command>
      commands; they do not affect rows already in a table using the domain.
     </para>
________________________________________________________-->
     <para>
      这些形式设置或者移除一个域的默认值。注意默认值只会应用到后续的
      <command>INSERT</command>命令，它们不影响使用该域的已经
      存在于表中的行。
     </para>
<!-- pgdoc-cn_end sig_en=ec1dc808a5b14a45e99c3af1c32828ee -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=261a5ecb236012ad56f18c26df6603c6 sig_cn_org=None source=14.1 
    <term><literal>SET</literal>/<literal>DROP NOT NULL</literal></term>
________________________________________________________-->
    <term><literal>SET</literal>/<literal>DROP NOT NULL</literal></term>
<!-- pgdoc-cn_end sig_en=261a5ecb236012ad56f18c26df6603c6 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=637fb00136491e8dbefce99d94ecf6a3 sig_cn_org=None source=14.1 
     <para>
      These forms change whether a domain is marked to allow NULL
      values or to reject NULL values.  You can only <literal>SET NOT NULL</literal>
      when the columns using the domain contain no null values.
     </para>
________________________________________________________-->
     <para>
      这些形式更改一个域是被标记为允许 NULL 值还是拒绝 NULL 值。只有当使用该
      域的列不包含空值时才能<literal>SET NOT NULL</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=637fb00136491e8dbefce99d94ecf6a3 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD <replaceable class="parameter">domain_constraint</replaceable> [ NOT VALID ]</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=d6f3b48ff091a8ff1ba2ade992c2d6b3 sig_cn_org=None source=14.1 
     <para>
      This form adds a new constraint to a domain using the same syntax as
      <link linkend="sql-createdomain"><command>CREATE DOMAIN</command></link>.
      When a new constraint is added to a domain, all columns using that
      domain will be checked against the newly added constraint.  These
      checks can be suppressed by adding the new constraint using the
      <literal>NOT VALID</literal> option; the constraint can later be made
      valid using <command>ALTER DOMAIN ... VALIDATE CONSTRAINT</command>.
      Newly inserted or updated rows are always checked against all
      constraints, even those marked <literal>NOT VALID</literal>.
      <literal>NOT VALID</literal> is only accepted for <literal>CHECK</literal> constraints.
     </para>
________________________________________________________-->
     <para>
      这种形式使用和<link linkend="sql-createdomain"><command>CREATE DOMAIN</command></link>相同的语法为一个
      域增加一个新的约束。当一个新的约束被增加到一个域时，所有使用该域的列
      都会被根据新加的约束进行检查。可以通过增加使用
      <literal>NOT VALID</literal>选项的新约束来抑制这类检查，而该约束则可
      以在以后使用
      <command>ALTER DOMAIN ... VALIDATE CONSTRAINT</command>
      变为可用。新插入和更新的行总是会被根据所有约束进行检查（包括被标记为
      <literal>NOT VALID</literal>的约束）。只有<literal>CHECK</literal>约束接受
      <literal>NOT VALID</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=d6f3b48ff091a8ff1ba2ade992c2d6b3 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP CONSTRAINT [ IF EXISTS ]</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=5c8e4ac40242af1b60ecff69f3af24f6 sig_cn_org=None source=14.1 
     <para>
      This form drops constraints on a domain.
      If <literal>IF EXISTS</literal> is specified and the constraint
      does not exist, no error is thrown. In this case a notice is issued instead.
     </para>
________________________________________________________-->
     <para>
      这种形式删除一个域上的约束。如果指定了<literal>IF EXISTS</literal>并且
      约束不存在，不会抛出错误。在这种情况下会转而发出一个提示。
     </para>
<!-- pgdoc-cn_end sig_en=5c8e4ac40242af1b60ecff69f3af24f6 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME CONSTRAINT</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=af95bea8ae4153f45550ed10e16eba84 sig_cn_org=None source=14.1 
     <para>
      This form changes the name of a constraint on a domain.
     </para>
________________________________________________________-->
     <para>
      这种形式更改一个域上的一个约束的名称。
     </para>
<!-- pgdoc-cn_end sig_en=af95bea8ae4153f45550ed10e16eba84 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VALIDATE CONSTRAINT</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=2c58181c81c270b54a19990602d7cf48 sig_cn_org=None source=14.1 
     <para>
      This form validates a constraint previously added as
      <literal>NOT VALID</literal>, that is, it verifies that all values in
      table columns of the domain type satisfy the specified constraint.
     </para>
________________________________________________________-->
     <para>
      这种形式验证一个之前作为<literal>NOT VALID</literal>增加的约束，也就是说
      它验证该域类型的表列中所有值满足指定的约束。
     </para>
<!-- pgdoc-cn_end sig_en=2c58181c81c270b54a19990602d7cf48 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=ddd43d08e5bc084521869528837d0b72 sig_cn_org=None source=14.1 
     <para>
      This form changes the owner of the domain to the specified user.
     </para>
________________________________________________________-->
     <para>
      这种形式更改域的拥有者为指定用户。
     </para>
<!-- pgdoc-cn_end sig_en=ddd43d08e5bc084521869528837d0b72 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=526bbf6f87130bb033c2e92bc2978a74 sig_cn_org=None source=14.1 
     <para>
      This form changes the name of the domain.
     </para>
________________________________________________________-->
     <para>
      这种形式更改域的名称。
     </para>
<!-- pgdoc-cn_end sig_en=526bbf6f87130bb033c2e92bc2978a74 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=3d1705356760f70b672f68b6c69f52c2 sig_cn_org=None source=14.1 
     <para>
      This form changes the schema of the domain.  Any constraints
      associated with the domain are moved into the new schema as well.
     </para>
________________________________________________________-->
     <para>
      这种形式更改域的模式。任何与该域关联的约束也被会移动到新的模式中。
     </para>
<!-- pgdoc-cn_end sig_en=3d1705356760f70b672f68b6c69f52c2 -->
    </listitem>
   </varlistentry>
  </variablelist>

<!-- pgdoc-cn_start sig_en=4d005319854c0b038e847754c80e0d4c sig_cn_org=None source=14.1 
  <para>
   You must own the domain to use <command>ALTER DOMAIN</command>.
   To change the schema of a domain, you must also have
   <literal>CREATE</literal> privilege on the new schema.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the domain's schema.  (These restrictions enforce that altering the owner
   doesn't do anything you couldn't do by dropping and recreating the domain.
   However, a superuser can alter ownership of any domain anyway.)
  </para>
________________________________________________________-->
  <para>
   要使用<command>ALTER DOMAIN</command>，你必须拥有该域。要更改一个域的模式，
   你还必须具有新模式上的<literal>CREATE</literal>特权。要更改拥有者，你还必须
   是新拥有角色的一个直接或者间接成员，并且该角色必须具有该域的模式上的
   <literal>CREATE</literal>特权（这些限制强制修改拥有者不能做一些通过删除和重
   建域做不到的事情。不过，一个超级用户怎么都能更改任何域的所有权。）。
  </para>
<!-- pgdoc-cn_end sig_en=4d005319854c0b038e847754c80e0d4c -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

<!-- pgdoc-cn_start sig_en=56a9033a4a15628b3ceca03469b3e346 sig_cn_org=None source=14.1 
   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
       <para>
        The name (possibly schema-qualified) of an existing domain to
        alter.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">domain_constraint</replaceable></term>
      <listitem>
       <para>
        New domain constraint for the domain.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">constraint_name</replaceable></term>
      <listitem>
       <para>
        Name of an existing constraint to drop or rename.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>NOT VALID</literal></term>
      <listitem>
       <para>
        Do not verify existing stored data for constraint validity.
       </para>
      </listitem>
     </varlistentry>


     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
        Automatically drop objects that depend on the constraint,
        and in turn all objects that depend on those objects
        (see <xref linkend="ddl-depend"/>).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>RESTRICT</literal></term>
      <listitem>
       <para>
        Refuse to drop the constraint if there are any dependent
        objects. This is the default behavior.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_name</replaceable></term>
      <listitem>
       <para>
        The new name for the domain.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_constraint_name</replaceable></term>
      <listitem>
       <para>
        The new name for the constraint.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_owner</replaceable></term>
      <listitem>
       <para>
        The user name of the new owner of the domain.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_schema</replaceable></term>
      <listitem>
       <para>
        The new schema for the domain.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
________________________________________________________-->
   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
       <para>
        要修改的一个现有域的名称（可能是模式限定的）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">domain_constraint</replaceable></term>
      <listitem>
       <para>
        用于该域的新域约束。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">constraint_name</replaceable></term>
      <listitem>
       <para>
        要删除或重命名的一个现有约束的名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>NOT VALID</literal></term>
      <listitem>
       <para>
        不为约束的合法性验证现有的存储数据。
       </para>
      </listitem>
     </varlistentry>


     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
        自动删除依赖于该约束的对象，并且接着删除依赖于那些对象的
        所有对象（见<xref linkend="ddl-depend"/>）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>RESTRICT</literal></term>
      <listitem>
       <para>
        如果有任何依赖对象则拒绝删除该约束。这是默认行为。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_name</replaceable></term>
      <listitem>
       <para>
        域的新名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_constraint_name</replaceable></term>
      <listitem>
       <para>
        约束的新名称。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_owner</replaceable></term>
      <listitem>
       <para>
        域的新拥有者的用户名。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_schema</replaceable></term>
      <listitem>
       <para>
        域的新模式。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>
<!-- pgdoc-cn_end sig_en=56a9033a4a15628b3ceca03469b3e346 -->
  </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=4d210d22924a268c0dd0e513fe941575 sig_cn_org=None source=14.1 
  <para>
   Although <command>ALTER DOMAIN ADD CONSTRAINT</command> attempts to verify
   that existing stored data satisfies the new constraint, this check is not
   bulletproof, because the command cannot <quote>see</quote> table rows that
   are newly inserted or updated and not yet committed.  If there is a hazard
   that concurrent operations might insert bad data, the way to proceed is to
   add the constraint using the <literal>NOT VALID</literal> option, commit
   that command, wait until all transactions started before that commit have
   finished, and then issue <command>ALTER DOMAIN VALIDATE
   CONSTRAINT</command> to search for data violating the constraint.  This
   method is reliable because once the constraint is committed, all new
   transactions are guaranteed to enforce it against new values of the domain
   type.
  </para>
________________________________________________________-->
  <para>
   尽管<command>ALTER DOMAIN ADD CONSTRAINT</command>尝试验证现有存储的数据是否满足新约束，但此检查不是万无一失的，因为命令无法<quote>see</quote>新插入或更新但尚未提交的表行。 
   如果存在并发操作可能插入坏数据的危险，则处理方法是使用<literal>NOT VALID</literal>选项添加约束，提交该命令，等到所有事务在提交完成之前启动，然后发出<command>ALTER DOMAIN VALIDATE CONSTRAINT</command>以搜索违反约束的数据。
   此方法是可靠的，因为一旦提交约束，所有新事务都保证针对域类型的新值强制执行约束。
  </para>
<!-- pgdoc-cn_end sig_en=4d210d22924a268c0dd0e513fe941575 -->

<!-- pgdoc-cn_start sig_en=76aa89a7f84f720d9cc69ffa0b026eb0 sig_cn_org=None source=14.1 
  <para>
   Currently, <command>ALTER DOMAIN ADD CONSTRAINT</command>, <command>ALTER
   DOMAIN VALIDATE CONSTRAINT</command>, and <command>ALTER DOMAIN SET NOT
   NULL</command> will fail if the named domain or any derived domain is used
   within a container-type column (a composite, array, or range column) in
   any table in the database.  They should eventually be improved to be able
   to verify the new constraint for such nested values.
  </para>
________________________________________________________-->
  <para>
   当前，如果域或者任何衍生域被数据库中的任意表的一个容器类型
   列（组合、数组、范围类型的列）使用，<command>ALTER DOMAIN ADD CONSTRAINT</command>、<command>ALTER
   DOMAIN VALIDATE CONSTRAINT</command>和
   <command>ALTER DOMAIN SET NOT NULL</command>将会失败。这些命令最终将
   会被改进成能够对这类嵌套值进行约束验证。
  </para>
<!-- pgdoc-cn_end sig_en=76aa89a7f84f720d9cc69ffa0b026eb0 -->

 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=97e80d3ce5a5f42e716fa8ca6ac4860e sig_cn_org=None source=14.1 
  <para>
   To add a <literal>NOT NULL</literal> constraint to a domain:
<programlisting>
ALTER DOMAIN zipcode SET NOT NULL;
</programlisting>
   To remove a <literal>NOT NULL</literal> constraint from a domain:
<programlisting>
ALTER DOMAIN zipcode DROP NOT NULL;
</programlisting>
  </para>
________________________________________________________-->
  <para>
   要把一个<literal>NOT NULL</literal>约束加到一个域：
<programlisting>
ALTER DOMAIN zipcode SET NOT NULL;
</programlisting>
   要从一个域中移除一个<literal>NOT NULL</literal>约束：
<programlisting>
ALTER DOMAIN zipcode DROP NOT NULL;
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=97e80d3ce5a5f42e716fa8ca6ac4860e -->

<!-- pgdoc-cn_start sig_en=c799f81557532279d7cf65918ed3c33a sig_cn_org=None source=14.1 
  <para>
   To add a check constraint to a domain:
<programlisting>
ALTER DOMAIN zipcode ADD CONSTRAINT zipchk CHECK (char_length(VALUE) = 5);
</programlisting>
  </para>
________________________________________________________-->
  <para>
   要把一个检查约束增加到一个域：
<programlisting>
ALTER DOMAIN zipcode ADD CONSTRAINT zipchk CHECK (char_length(VALUE) = 5);
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=c799f81557532279d7cf65918ed3c33a -->

<!-- pgdoc-cn_start sig_en=eeb067ed3f3b588966ec01122eba14f5 sig_cn_org=None source=14.1 
  <para>
   To remove a check constraint from a domain:
<programlisting>
ALTER DOMAIN zipcode DROP CONSTRAINT zipchk;
</programlisting>
  </para>
________________________________________________________-->
  <para>
   要从一个域移除一个检查约束：
<programlisting>
ALTER DOMAIN zipcode DROP CONSTRAINT zipchk;
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=eeb067ed3f3b588966ec01122eba14f5 -->

<!-- pgdoc-cn_start sig_en=915f05ce037d6a8190a85b2528f5f08a sig_cn_org=None source=14.1 
  <para>
   To rename a check constraint on a domain:
<programlisting>
ALTER DOMAIN zipcode RENAME CONSTRAINT zipchk TO zip_check;
</programlisting>
  </para>
________________________________________________________-->
  <para>
   要重命名一个域上的一个检查约束：
<programlisting>
ALTER DOMAIN zipcode RENAME CONSTRAINT zipchk TO zip_check;
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=915f05ce037d6a8190a85b2528f5f08a -->

<!-- pgdoc-cn_start sig_en=d40c83784f9b5fd7763d7b7e0b108bec sig_cn_org=None source=14.1 
  <para>
   To move the domain into a different schema:
<programlisting>
ALTER DOMAIN zipcode SET SCHEMA customers;
</programlisting></para>
________________________________________________________-->
  <para>
   要把域移动到一个不同的模式：
<programlisting>
ALTER DOMAIN zipcode SET SCHEMA customers;
</programlisting></para>
<!-- pgdoc-cn_end sig_en=d40c83784f9b5fd7763d7b7e0b108bec -->
 </refsect1>

 <refsect1 id="sql-alterdomain-compatibility">
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=45ecc5e939b0f5cb1b9db7a6d85f721e sig_cn_org=None source=14.1 
  <para>
   <command>ALTER DOMAIN</command> conforms to the <acronym>SQL</acronym>
   standard, except for the <literal>OWNER</literal>, <literal>RENAME</literal>, <literal>SET SCHEMA</literal>, and
   <literal>VALIDATE CONSTRAINT</literal> variants, which are
   <productname>PostgreSQL</productname> extensions.  The <literal>NOT VALID</literal>
   clause of the <literal>ADD CONSTRAINT</literal> variant is also a
   <productname>PostgreSQL</productname> extension.
  </para>
________________________________________________________-->
  <para>
   <command>ALTER DOMAIN</command> conforms to the <acronym>SQL</acronym>
   standard, except for the 
   除<literal>OWNER</literal>、<literal>RENAME</literal>、<literal>SET SCHEMA</literal>
   以及<literal>VALIDATE CONSTRAINT</literal>变体之外（它们是
   <productname>PostgreSQL</productname>的扩展），
   <command>ALTER DOMAIN</command>符合<acronym>SQL</acronym>标准。
   <literal>ADD CONSTRAINT</literal>变体的<literal>NOT VALID</literal>子句也是一个
   <productname>PostgreSQL</productname>扩展。
  </para>
<!-- pgdoc-cn_end sig_en=45ecc5e939b0f5cb1b9db7a6d85f721e -->
 </refsect1>

 <refsect1 id="sql-alterdomain-see-also">
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-createdomain"/></member>
   <member><xref linkend="sql-dropdomain"/></member>
  </simplelist>
 </refsect1>

</refentry>
