<!--
doc/src/sgml/ref/begin.sgml
PostgreSQL documentation
-->

<refentry id="sql-begin">
<!-- pgdoc-cn_start sig_en=26c5b83ec3be61150bfcf2eb27cd91c2 sig_cn_org=None source=14.1 
 <indexterm zone="sql-begin">
  <primary>BEGIN</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-begin">
  <primary>BEGIN</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=26c5b83ec3be61150bfcf2eb27cd91c2 -->

 <refmeta>
  <refentrytitle>BEGIN</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=944e5242ee208c438bfcc1594d1b57e8 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>BEGIN</refname>
  <refpurpose>start a transaction block</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>BEGIN</refname>
  <refpurpose>开始一个事务块</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=944e5242ee208c438bfcc1594d1b57e8 -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=4a5e36904899b85e1a0152b9e08ce3b7 sig_cn_org=None source=14.1 
<synopsis>
BEGIN [ WORK | TRANSACTION ] [ <replaceable class="parameter">transaction_mode</replaceable> [, ...] ]

<phrase>where <replaceable class="parameter">transaction_mode</replaceable> is one of:</phrase>

    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }
    READ WRITE | READ ONLY
    [ NOT ] DEFERRABLE
</synopsis>
________________________________________________________-->
<synopsis>
BEGIN [ WORK | TRANSACTION ] [ <replaceable class="parameter">transaction_mode</replaceable> [, ...] ]

<phrase>其中 <replaceable class="parameter">transaction_mode</replaceable> 是以下之一：</phrase>

    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }
    READ WRITE | READ ONLY
    [ NOT ] DEFERRABLE
</synopsis>
<!-- pgdoc-cn_end sig_en=4a5e36904899b85e1a0152b9e08ce3b7 -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=1a26d42b0f3af2f717597a31a3fe6c2c sig_cn_org=None source=14.1 
  <para>
   <command>BEGIN</command> initiates a transaction block, that is,
   all statements after a <command>BEGIN</command> command will be
   executed in a single transaction until an explicit <link
   linkend="sql-commit"><command>COMMIT</command></link> or <link
   linkend="sql-rollback"><command>ROLLBACK</command></link> is given.
   By default (without <command>BEGIN</command>),
   <productname>PostgreSQL</productname> executes
   transactions in <quote>autocommit</quote> mode, that is, each
   statement is executed in its own transaction and a commit is
   implicitly performed at the end of the statement (if execution was
   successful, otherwise a rollback is done).
  </para>
________________________________________________________-->
  <para>
   <command>BEGIN</command>开始一个事务块，也就是说所有
   <command>BEGIN</command>命令之后的所有语句将被在一个
   事务中执行，直到给出一个显式的<link linkend="sql-commit"><command>COMMIT</command></link>
   或者<link linkend="sql-rollback"><command>ROLLBACK</command></link>。
   默认情况下（没有<command>BEGIN</command>），
   <productname>PostgreSQL</productname>在
   <quote>自动提交</quote>模式中执行事务，也就是说每个语句都
   在自己的事务中执行并且在语句结束时隐式地执行一次提交（如果执
   行成功，否则会完成一次回滚）。
  </para>
<!-- pgdoc-cn_end sig_en=1a26d42b0f3af2f717597a31a3fe6c2c -->

<!-- pgdoc-cn_start sig_en=f0af8ec71750db0d09d1cc233fa6b2d7 sig_cn_org=None source=14.1 
  <para>
   Statements are executed more quickly in a transaction block, because
   transaction start/commit requires significant CPU and disk
   activity. Execution of multiple statements inside a transaction is
   also useful to ensure consistency when making several related changes:
   other sessions will be unable to see the intermediate states
   wherein not all the related updates have been done.
  </para>
________________________________________________________-->
  <para>
   在一个事务块内的语句会执行得更快，因为事务的开始/提交也要求可观
   的 CPU 和磁盘活动。在进行多个相关更改时，在一个事务内执行多个语
   句也有助于保证一致性：在所有相关更新还没有完成之前，其他会话将不
   能看到中间状态。
  </para>
<!-- pgdoc-cn_end sig_en=f0af8ec71750db0d09d1cc233fa6b2d7 -->

<!-- pgdoc-cn_start sig_en=c54309db860b5c37b7ce60fe4a96552a sig_cn_org=None source=14.1 
  <para>
   If the isolation level, read/write mode, or deferrable mode is specified, the new
   transaction has those characteristics, as if
   <link linkend="sql-set-transaction"><command>SET TRANSACTION</command></link>
   was executed.
  </para>
________________________________________________________-->
  <para>
   如果指定了隔离级别、读/写模式或者延迟模式，新事务也会有那些特性，
   就像执行了<link linkend="sql-set-transaction"><command>SET TRANSACTION</command></link>一样。
  </para>
<!-- pgdoc-cn_end sig_en=c54309db860b5c37b7ce60fe4a96552a -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
    <term><literal>WORK</literal></term>
    <term><literal>TRANSACTION</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=f0bdd953b27bc778bb62c8fa36716d92 sig_cn_org=None source=14.1 
     <para>
      Optional key words. They have no effect.
     </para>
________________________________________________________-->
     <para>
      可选的关键词。它们没有效果。
     </para>
<!-- pgdoc-cn_end sig_en=f0bdd953b27bc778bb62c8fa36716d92 -->
    </listitem>
   </varlistentry>
  </variablelist>

<!-- pgdoc-cn_start sig_en=e8c54bff526c14990b26f6d3475e5fad sig_cn_org=None source=14.1 
  <para>
   Refer to <xref linkend="sql-set-transaction"/> for information on the meaning
   of the other parameters to this statement.
  </para>
________________________________________________________-->
  <para>
   这个语句其他参数的含义请参考
   <xref linkend="sql-set-transaction"/>。
  </para>
<!-- pgdoc-cn_end sig_en=e8c54bff526c14990b26f6d3475e5fad -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=7dd346f1fdd4f5bedd1aec9e6a2cbf1f sig_cn_org=None source=14.1 
  <para>
   <link linkend="sql-start-transaction"><command>START TRANSACTION</command></link> has the same functionality
   as <command>BEGIN</command>.
  </para>
________________________________________________________-->
  <para>
   <link linkend="sql-start-transaction"><command>START TRANSACTION</command></link>具有和<command>BEGIN</command>
   相同的功能。
  </para>
<!-- pgdoc-cn_end sig_en=7dd346f1fdd4f5bedd1aec9e6a2cbf1f -->

<!-- pgdoc-cn_start sig_en=6f7504f5a078569273ec7aad79b9a066 sig_cn_org=None source=14.1 
  <para>
   Use <link linkend="sql-commit"><command>COMMIT</command></link> or
   <link linkend="sql-rollback"><command>ROLLBACK</command></link>
   to terminate a transaction block.
  </para>
________________________________________________________-->
  <para>
   使用<link linkend="sql-commit"><command>COMMIT</command></link>或者
   <link linkend="sql-rollback"><command>ROLLBACK</command></link>来终止一个事务块。
  </para>
<!-- pgdoc-cn_end sig_en=6f7504f5a078569273ec7aad79b9a066 -->

<!-- pgdoc-cn_start sig_en=0337a7278c36c98a9973072e4a67192c sig_cn_org=None source=14.1 
  <para>
   Issuing <command>BEGIN</command> when already inside a transaction block will
   provoke a warning message.  The state of the transaction is not affected.
   To nest transactions within a transaction block, use savepoints
   (see <xref linkend="sql-savepoint"/>).
  </para>
________________________________________________________-->
  <para>
   在已经在一个事务块中时发出<command>BEGIN</command>将惹出一个警告
   消息。事务状态不会被影响。要在一个事务块中嵌套事务，可以使用保
   存点（见<xref linkend="sql-savepoint"/>）。
  </para>
<!-- pgdoc-cn_end sig_en=0337a7278c36c98a9973072e4a67192c -->

<!-- pgdoc-cn_start sig_en=b368bf62967cbcaaa93b0b54131b43f1 sig_cn_org=None source=14.1 
  <para>
   For reasons of backwards compatibility, the commas between successive
   <replaceable class="parameter">transaction_modes</replaceable> can be
   omitted.
  </para>
________________________________________________________-->
  <para>
   由于向后兼容的原因，连续的
   <replaceable class="parameter">transaction_modes</replaceable>
   之间的逗号可以被省略。
  </para>
<!-- pgdoc-cn_end sig_en=b368bf62967cbcaaa93b0b54131b43f1 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=a2460cc83bfe8086b2c66840c97dad2a sig_cn_org=None source=14.1 
  <para>
   To begin a transaction block:

<programlisting>
BEGIN;
</programlisting></para>
________________________________________________________-->
  <para>
   开始一个事务块：

<programlisting>
BEGIN;
</programlisting></para>
<!-- pgdoc-cn_end sig_en=a2460cc83bfe8086b2c66840c97dad2a -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=db6d0dd0afe3c5a975584f9eb9d3f456 sig_cn_org=None source=14.1 
  <para>
   <command>BEGIN</command> is a <productname>PostgreSQL</productname>
   language extension.  It is equivalent to the SQL-standard command
   <link linkend="sql-start-transaction"><command>START TRANSACTION</command></link>, whose reference page
   contains additional compatibility information.
  </para>
________________________________________________________-->
  <para>
   <command>BEGIN</command>是一种
   <productname>PostgreSQL</productname>语言扩展。它等效于
   SQL 标准的命令<link linkend="sql-start-transaction"><command>START TRANSACTION</command></link>，它的参考页
   包含额外的兼容性信息。
  </para>
<!-- pgdoc-cn_end sig_en=db6d0dd0afe3c5a975584f9eb9d3f456 -->

<!-- pgdoc-cn_start sig_en=24001b237df82f31e2e68f3e44a79681 sig_cn_org=None source=14.1 
  <para>
   The <literal>DEFERRABLE</literal>
   <replaceable class="parameter">transaction_mode</replaceable>
   is a <productname>PostgreSQL</productname> language extension.
  </para>
________________________________________________________-->
  <para>
   <literal>DEFERRABLE</literal>
   <replaceable class="parameter">transaction_mode</replaceable>
   是一种<productname>PostgreSQL</productname>语言扩展。
  </para>
<!-- pgdoc-cn_end sig_en=24001b237df82f31e2e68f3e44a79681 -->

<!-- pgdoc-cn_start sig_en=80dd9997457ccb831a7a952bba7e81a7 sig_cn_org=None source=14.1 
  <para>
   Incidentally, the <literal>BEGIN</literal> key word is used for a
   different purpose in embedded SQL. You are advised to be careful
   about the transaction semantics when porting database applications.
  </para>
________________________________________________________-->
  <para>
   附带地，<literal>BEGIN</literal>关键词被用于嵌入式 SQL 中的一种
   不同目的。在移植数据库应用时，我们建议小心对待事务语义。
  </para>
<!-- pgdoc-cn_end sig_en=80dd9997457ccb831a7a952bba7e81a7 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-commit"/></member>
   <member><xref linkend="sql-rollback"/></member>
   <member><xref linkend="sql-start-transaction"/></member>
   <member><xref linkend="sql-savepoint"/></member>
  </simplelist>
 </refsect1>
</refentry>
