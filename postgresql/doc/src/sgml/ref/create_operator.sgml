<!--
doc/src/sgml/ref/create_operator.sgml
PostgreSQL documentation
-->

<refentry id="sql-createoperator">
<!-- pgdoc-cn_start sig_en=f8cc69214a7b9a66a8b5699417bd82bd sig_cn_org=None source=14.1 
 <indexterm zone="sql-createoperator">
  <primary>CREATE OPERATOR</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-createoperator">
  <primary>CREATE OPERATOR</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=f8cc69214a7b9a66a8b5699417bd82bd -->

 <refmeta>
  <refentrytitle>CREATE OPERATOR</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=43f1c93518c9dfc2d1a0f6ffe2dc4d5f sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>CREATE OPERATOR</refname>
  <refpurpose>define a new operator</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>CREATE OPERATOR</refname>
  <refpurpose>定义一个新的操作符</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=43f1c93518c9dfc2d1a0f6ffe2dc4d5f -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=36a3b6bd239dfbb3e99e5c001cc197ce sig_cn_org=None source=14.1 
<synopsis>
CREATE OPERATOR <replaceable>name</replaceable> (
    {FUNCTION|PROCEDURE} = <replaceable class="parameter">function_name</replaceable>
    [, LEFTARG = <replaceable class="parameter">left_type</replaceable> ] [, RIGHTARG = <replaceable class="parameter">right_type</replaceable> ]
    [, COMMUTATOR = <replaceable class="parameter">com_op</replaceable> ] [, NEGATOR = <replaceable class="parameter">neg_op</replaceable> ]
    [, RESTRICT = <replaceable class="parameter">res_proc</replaceable> ] [, JOIN = <replaceable class="parameter">join_proc</replaceable> ]
    [, HASHES ] [, MERGES ]
)
</synopsis>
________________________________________________________-->
<synopsis>
CREATE OPERATOR <replaceable>name</replaceable> (
    {FUNCTION|PROCEDURE} = <replaceable class="parameter">function_name</replaceable>
    [, LEFTARG = <replaceable class="parameter">left_type</replaceable> ] [, RIGHTARG = <replaceable class="parameter">right_type</replaceable> ]
    [, COMMUTATOR = <replaceable class="parameter">com_op</replaceable> ] [, NEGATOR = <replaceable class="parameter">neg_op</replaceable> ]
    [, RESTRICT = <replaceable class="parameter">res_proc</replaceable> ] [, JOIN = <replaceable class="parameter">join_proc</replaceable> ]
    [, HASHES ] [, MERGES ]
)
</synopsis>
<!-- pgdoc-cn_end sig_en=36a3b6bd239dfbb3e99e5c001cc197ce -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=707eff214ebdf2e623aaff16772233b0 sig_cn_org=None source=14.1 
  <para>
   <command>CREATE OPERATOR</command> defines a new operator,
   <replaceable class="parameter">name</replaceable>.  The user who
   defines an operator becomes its owner.  If a schema name is given
   then the operator is created in the specified schema.  Otherwise it
   is created in the current schema.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE OPERATOR</command>定义一个新的操作符
   <replaceable class="parameter">name</replaceable>。定义操作符
   的用户会成为该操作符的拥有者。如果给出一个模式名，该操作符将被创建
   在指定的模式中。否则它会被创建在当前模式中。
  </para>
<!-- pgdoc-cn_end sig_en=707eff214ebdf2e623aaff16772233b0 -->

<!-- pgdoc-cn_start sig_en=c3ff03fde7e55e47c280d97a2d17bea3 sig_cn_org=9c7327f488898f2186fe725b022a4049 source=15.7 
  <para>
   The operator name is a sequence of up to <symbol>NAMEDATALEN</symbol>-1
   (63 by default) characters from the following list:
<literallayout>
+ - * / &lt; &gt; = ~ ! @ # % ^ &amp; | ` ?
</literallayout>

   There are a few restrictions on your choice of name:
   <itemizedlist>
    <listitem>
     <para>
     <literal>-&minus;</literal> and <literal>/*</literal> cannot appear anywhere in an operator name,
     since they will be taken as the start of a comment.
     </para>
    </listitem>
    <listitem>
     <para>
     A multicharacter operator name cannot end in <literal>+</literal> or
     <literal>-</literal>,
     unless the name also contains at least one of these characters:
<literallayout>
~ ! @ # % ^ &amp; | ` ?
</literallayout>
     For example, <literal>@-</literal> is an allowed operator name,
     but <literal>*-</literal> is not.
     This restriction allows <productname>PostgreSQL</productname> to
     parse SQL-compliant commands without requiring spaces between tokens.
     </para>
    </listitem>
    <listitem>
     <para>
     The symbol <literal>=&gt;</literal> is reserved by the SQL grammar,
     so it cannot be used as an operator name.
     </para>
    </listitem>
   </itemizedlist>
  </para>
________________________________________________________-->
  <para>
   操作符名称是以下列表中最多<symbol>NAMEDATALEN</symbol>-1（默认为63）个字符的序列：
<literallayout>
+ - * / &lt; &gt; = ~ ! @ # % ^ &amp; | ` ?
</literallayout>

   对名称的选择有一些限制：
   <itemizedlist>
    <listitem>
     <para>
     <literal>--</literal>和<literal>/*</literal>不能出现在操作符名称的任何位置，
     因为它们将被视为注释的开始。
     </para>
    </listitem>
    <listitem>
     <para>
     多字符操作符名称不能以<literal>+</literal>或<literal>-</literal>结尾，
     除非名称还包含至少一个这些字符：
<literallayout>
~ ! @ # % ^ &amp; | ` ?
</literallayout>
     例如，<literal>@-</literal>是一个允许的操作符名称，
     但<literal>*-</literal>不是。
     这个限制允许<productname>PostgreSQL</productname>解析符合SQL标准的命令，而不需要在标记之间添加空格。
     </para>
    </listitem>
    <listitem>
     <para>
     符号<literal>=&gt;</literal>被SQL语法保留，因此不能用作操作符名称。
     </para>
    </listitem>
   </itemizedlist>
  </para>
<!-- pgdoc-cn_end sig_en=c3ff03fde7e55e47c280d97a2d17bea3 -->

<!-- pgdoc-cn_start sig_en=a2c45e9930f27e056050affaa4b426da sig_cn_org=None source=14.1 
  <para>
   The operator <literal>!=</literal> is mapped to
   <literal>&lt;&gt;</literal> on input, so these two names are always
   equivalent.
  </para>
________________________________________________________-->
  <para>
   在输入时<literal>!=</literal>会被映射为<literal>&lt;&gt;</literal>，
   因此这两个名字总是等效的。
  </para>
<!-- pgdoc-cn_end sig_en=a2c45e9930f27e056050affaa4b426da -->

<!-- pgdoc-cn_start sig_en=82a096f6267e54ea40a26c5547a47fd6 sig_cn_org=None source=14.1 
  <para>
   For binary operators, both <literal>LEFTARG</literal> and
   <literal>RIGHTARG</literal> must be defined.  For prefix operators only
   <literal>RIGHTARG</literal> should be defined.
   The <replaceable class="parameter">function_name</replaceable>
   function must have been previously defined using <command>CREATE
   FUNCTION</command> and must be defined to accept the correct number
   of arguments (either one or two) of the indicated types.
  </para>
________________________________________________________-->
  <para>
   对于二元运算符，必须同时定义<literal>LEFTARG</literal>和<literal>RIGHTARG</literal>。
   对于前缀运算符，仅应定义<literal>RIGHTARG</literal>。
   <replaceable class="parameter">function_name</replaceable>函数
   必须在之前已经用<command>CREATE FUNCTION</command>定义好，
   并且必须被定义为接受正确数量的指定类型的参数。
  </para>
<!-- pgdoc-cn_end sig_en=82a096f6267e54ea40a26c5547a47fd6 -->

<!-- pgdoc-cn_start sig_en=7ea86fbecb2b3af46b22e76eb4b97194 sig_cn_org=None source=14.1 
  <para>
   In the syntax of <literal>CREATE OPERATOR</literal>, the keywords
   <literal>FUNCTION</literal> and <literal>PROCEDURE</literal> are
   equivalent, but the referenced function must in any case be a function, not
   a procedure.  The use of the keyword <literal>PROCEDURE</literal> here is
   historical and deprecated.
  </para>
________________________________________________________-->
  <para>
   在<literal>CREATE OPERATOR</literal>的语法中，关键词<literal>FUNCTION</literal>和<literal>PROCEDURE</literal>是等效的，但不管哪种情况下被引用的函数都必须是一个函数而不是过程。这里对关键词<literal>PROCEDURE</literal>的是用是有历史原因的，现在已经被废弃。
  </para>
<!-- pgdoc-cn_end sig_en=7ea86fbecb2b3af46b22e76eb4b97194 -->

<!-- pgdoc-cn_start sig_en=e40716d44f51cdf8edb45ce5ab32f9bc sig_cn_org=None source=14.1 
  <para>
   The other clauses specify optional operator optimization clauses.
   Their meaning is detailed in <xref linkend="xoper-optimization"/>.
  </para>
________________________________________________________-->
  <para>
   其他子句指定可选的操作符优化子句。它们的含义在
   <xref linkend="xoper-optimization"/>中有详细描述。
  </para>
<!-- pgdoc-cn_end sig_en=e40716d44f51cdf8edb45ce5ab32f9bc -->

<!-- pgdoc-cn_start sig_en=e4aa7d621c73f05dfbf2f7495830f174 sig_cn_org=None source=14.1 
  <para>
   To be able to create an operator, you must have <literal>USAGE</literal>
   privilege on the argument types and the return type, as well
   as <literal>EXECUTE</literal> privilege on the underlying function.  If a
   commutator or negator operator is specified, you must own these operators.
  </para>
________________________________________________________-->
  <para>
   要创建一个操作符，必须具有参数类型和返回类型上的<literal>USAGE</literal>
   特权，以及底层函数上的<literal>EXECUTE</literal>特权。如果指定了一个
   交换子或者求反器操作符，必须拥有这些操作符。
  </para>
<!-- pgdoc-cn_end sig_en=e4aa7d621c73f05dfbf2f7495830f174 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=6b1083a211e1ef16f972f146e09aa50c sig_cn_org=None source=14.1 
       <para>
        The name of the operator to be defined. See above for allowable
        characters.  The name can be schema-qualified, for example
        <literal>CREATE OPERATOR myschema.+ (...)</literal>.  If not, then
        the operator is created in the current schema.  Two operators
        in the same schema can have the same name if they operate on
        different data types.  This is called
        <firstterm>overloading</firstterm>.
       </para>
________________________________________________________-->
       <para>
        要定义的操作符的名称。允许使用的字符请见上文。名称可以被模式
        限定，例如<literal>CREATE OPERATOR myschema.+ (...)</literal>。如果
        没有被模式限定，该操作符将被创建在当前模式中。如果两个同一模式
        中的操作符在不同的数据类型上操作，它们可以具有相同的名称。这
        被称为<firstterm>重载</firstterm>。
       </para>
<!-- pgdoc-cn_end sig_en=6b1083a211e1ef16f972f146e09aa50c -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">function_name</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=59add13631d6573680246fbe6d490a70 sig_cn_org=None source=14.1 
       <para>
        The function used to implement this operator.
       </para>
________________________________________________________-->
       <para>
        用来实现这个操作符的函数。
       </para>
<!-- pgdoc-cn_end sig_en=59add13631d6573680246fbe6d490a70 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">left_type</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=ba1e0e359acc258aad73ef346801f23e sig_cn_org=None source=14.1 
       <para>
        The data type of the operator's left operand, if any.
        This option would be omitted for a prefix operator.
       </para>
________________________________________________________-->
       <para>
        这个操作符的左操作数（如果有）的数据类型。忽略这个选项
        可以表示一个前缀操作符。
       </para>
<!-- pgdoc-cn_end sig_en=ba1e0e359acc258aad73ef346801f23e -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">right_type</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=427fa68bfd7c80c09805f3ee7daf3e66 sig_cn_org=None source=14.1 
       <para>
        The data type of the operator's right operand.
       </para>
________________________________________________________-->
       <para>
        这个操作符的右操作数（如果有）的数据类型。
       </para>
<!-- pgdoc-cn_end sig_en=427fa68bfd7c80c09805f3ee7daf3e66 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">com_op</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=3016fb890659bf26162a6ab6003c12ac sig_cn_org=None source=14.1 
       <para>
        The commutator of this operator.
       </para>
________________________________________________________-->
       <para>
        这个操作符的交换子。
       </para>
<!-- pgdoc-cn_end sig_en=3016fb890659bf26162a6ab6003c12ac -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">neg_op</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=eb5734948709c8b429220dae07381bae sig_cn_org=None source=14.1 
       <para>
        The negator of this operator.
       </para>
________________________________________________________-->
       <para>
        这个操作符的求反器。
       </para>
<!-- pgdoc-cn_end sig_en=eb5734948709c8b429220dae07381bae -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">res_proc</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=8148aa85b97f38c4fb394888fc2bf05c sig_cn_org=None source=14.1 
       <para>
        The restriction selectivity estimator function for this operator.
       </para>
________________________________________________________-->
       <para>
        用于这个操作符的限制选择度估计函数。
       </para>
<!-- pgdoc-cn_end sig_en=8148aa85b97f38c4fb394888fc2bf05c -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">join_proc</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=37349bff7b80b0c98af6754ef7144c4c sig_cn_org=None source=14.1 
       <para>
        The join selectivity estimator function for this operator.
       </para>
________________________________________________________-->
       <para>
        用于这个操作符的连接选择度估算函数。
       </para>
<!-- pgdoc-cn_end sig_en=37349bff7b80b0c98af6754ef7144c4c -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>HASHES</literal></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=0218c5a28bd2f1f682808d5e3ce50aa9 sig_cn_org=None source=14.1 
       <para>
       Indicates this operator can support a hash join.
       </para>
________________________________________________________-->
       <para>
       表示这个操作符可以支持哈希连接。
       </para>
<!-- pgdoc-cn_end sig_en=0218c5a28bd2f1f682808d5e3ce50aa9 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>MERGES</literal></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=528e23e0a3ad165e60cf8a2c1479a978 sig_cn_org=None source=14.1 
       <para>
       Indicates this operator can support a merge join.
       </para>
________________________________________________________-->
       <para>
       表示这个操作符可以支持归并连接。
       </para>
<!-- pgdoc-cn_end sig_en=528e23e0a3ad165e60cf8a2c1479a978 -->
      </listitem>
     </varlistentry>
    </variablelist>

<!-- pgdoc-cn_start sig_en=353e2cb8ac9eb6c59f391354cce73040 sig_cn_org=None source=14.1 
  <para>
   To give a schema-qualified operator name in <replaceable
   class="parameter">com_op</replaceable> or the other optional
   arguments, use the <literal>OPERATOR()</literal> syntax, for example:
<programlisting>
COMMUTATOR = OPERATOR(myschema.===) ,
</programlisting></para>
________________________________________________________-->
  <para>
   要在<replaceable
   class="parameter">com_op</replaceable>
   或者其他可选参数中给出一个模式限定的操作符名称，
   请使用<literal>OPERATOR()</literal>语法，例如：
<programlisting>
COMMUTATOR = OPERATOR(myschema.===) ,
</programlisting></para>
<!-- pgdoc-cn_end sig_en=353e2cb8ac9eb6c59f391354cce73040 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=8bb8e1d8536041b521875a1e7f31fb30 sig_cn_org=None source=14.1 
  <para>
   Refer to <xref linkend="xoper"/> for further information.
  </para>
________________________________________________________-->
  <para>
   进一步的信息可参考<xref linkend="xoper"/>。
  </para>
<!-- pgdoc-cn_end sig_en=8bb8e1d8536041b521875a1e7f31fb30 -->

<!-- pgdoc-cn_start sig_en=d81066d52307414785dced57de6a78d8 sig_cn_org=None source=14.1 
  <para>
   It is not possible to specify an operator's lexical precedence in
   <command>CREATE OPERATOR</command>, because the parser's precedence behavior
   is hard-wired.  See <xref linkend="sql-precedence"/> for precedence details.
  </para>
________________________________________________________-->
  <para>
   无法在<command>CREATE OPERATOR</command>中指定一个操作符的
   词法优先级，因为解析器的优先级行为是硬写在代码中的。详见
   <xref linkend="sql-precedence"/>。
  </para>
<!-- pgdoc-cn_end sig_en=d81066d52307414785dced57de6a78d8 -->

<!-- pgdoc-cn_start sig_en=e0783d271301d9d0fd2b6a306e8d1be8 sig_cn_org=None source=14.1 
  <para>
   The obsolete options <literal>SORT1</literal>, <literal>SORT2</literal>,
   <literal>LTCMP</literal>, and <literal>GTCMP</literal> were formerly used to
   specify the names of sort operators associated with a merge-joinable
   operator.  This is no longer necessary, since information about
   associated operators is found by looking at B-tree operator families
   instead.  If one of these options is given, it is ignored except
   for implicitly setting <literal>MERGES</literal> true.
  </para>
________________________________________________________-->
  <para>
   废弃的选项<literal>SORT1</literal>、<literal>SORT2</literal>、
   <literal>LTCMP</literal>以及<literal>GTCMP</literal>以前被用来指定与支持
   归并连接的操作符相关的排序操作符的名称。现在不再需要它们了，因为
   相关操作符的信息可以在 B-树的操作符族中找到。如果给出了这些选项
   之一，它会被忽略（除非是为了隐式设置<literal>MERGES</literal>为真）。
  </para>
<!-- pgdoc-cn_end sig_en=e0783d271301d9d0fd2b6a306e8d1be8 -->

<!-- pgdoc-cn_start sig_en=a41544b57465823794dcf1e5e8ecd843 sig_cn_org=None source=14.1 
  <para>
   Use <link linkend="sql-dropoperator"><command>DROP OPERATOR</command></link> to delete user-defined operators
   from a database.  Use <link linkend="sql-alteroperator"><command>ALTER OPERATOR</command></link> to modify operators in a
   database.
  </para>
________________________________________________________-->
  <para>
   使用<link linkend="sql-dropoperator"><command>DROP OPERATOR</command></link>从数据库中删除用户定义的操作符。
   使用<link linkend="sql-alteroperator"><command>ALTER OPERATOR</command></link>修改数据库中的操作符。
  </para>
<!-- pgdoc-cn_end sig_en=a41544b57465823794dcf1e5e8ecd843 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=20078cff56931c5bab5a3c009046d1c9 sig_cn_org=None source=14.1 
  <para>
   The following command defines a new operator, area-equality, for
   the data type <type>box</type>:
<programlisting>
CREATE OPERATOR === (
    LEFTARG = box,
    RIGHTARG = box,
    FUNCTION = area_equal_function,
    COMMUTATOR = ===,
    NEGATOR = !==,
    RESTRICT = area_restriction_function,
    JOIN = area_join_function,
    HASHES, MERGES
);
</programlisting></para>
________________________________________________________-->
  <para>
   下面的命令为数据类型<type>box</type>定义了一种新的操作符--面积相等：
<programlisting>
CREATE OPERATOR === (
    LEFTARG = box,
    RIGHTARG = box,
    FUNCTION = area_equal_function,
    COMMUTATOR = ===,
    NEGATOR = !==,
    RESTRICT = area_restriction_function,
    JOIN = area_join_function,
    HASHES, MERGES
);
</programlisting></para>
<!-- pgdoc-cn_end sig_en=20078cff56931c5bab5a3c009046d1c9 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=1a84fbd39523514c9af73d0de783b4e0 sig_cn_org=None source=14.1 
  <para>
   <command>CREATE OPERATOR</command> is a
   <productname>PostgreSQL</productname> extension.  There are no
   provisions for user-defined operators in the SQL standard.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE OPERATOR</command>是一种
   <productname>PostgreSQL</productname>扩展。在 SQL 
   标准中没有用户定义操作符的规定。
  </para>
<!-- pgdoc-cn_end sig_en=1a84fbd39523514c9af73d0de783b4e0 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-alteroperator"/></member>
   <member><xref linkend="sql-createopclass"/></member>
   <member><xref linkend="sql-dropoperator"/></member>
  </simplelist>
 </refsect1>
</refentry>
