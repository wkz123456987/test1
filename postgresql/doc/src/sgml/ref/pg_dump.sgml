<!--
doc/src/sgml/ref/pg_dump.sgml
PostgreSQL documentation
-->

<refentry id="app-pgdump">
<!-- pgdoc-cn_start sig_en=7535625877e668dd4c6e53a040ce36c1 sig_cn_org=None source=14.1 
 <indexterm zone="app-pgdump">
  <primary>pg_dump</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="app-pgdump">
  <primary>pg_dump</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=7535625877e668dd4c6e53a040ce36c1 -->

 <refmeta>
  <refentrytitle><application>pg_dump</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=5e523dd5afd98adcb5b6ab588e7181b3 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>pg_dump</refname>

  <refpurpose>
   extract a <productname>PostgreSQL</productname> database into a script file or other archive file
  </refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>pg_dump</refname>

  <refpurpose>
   把<productname>PostgreSQL</productname>PostgreSQL数据库的数据抽取为一个脚本文件或其他归档文件
  </refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=5e523dd5afd98adcb5b6ab588e7181b3 -->

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_dump</command>
   <arg rep="repeat"><replaceable>connection-option</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="opt"><replaceable>dbname</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>


 <refsect1 id="pg-dump-description">
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=80afd935a8eee6526b9b3542c9ed45ba sig_cn_org=None source=14.1 
  <para>
   <application>pg_dump</application> is a utility for backing up a
   <productname>PostgreSQL</productname> database. It makes consistent
   backups even if the database is being used concurrently.
   <application>pg_dump</application> does not block other users
   accessing the database (readers or writers).
  </para>
________________________________________________________-->
  <para>
   <application>pg_dump</application>是用于备份一种<productname>PostgreSQL</productname>数据库的工具。即使数据库正在被并发使用，它也能创建一致的备份。<application>pg_dump</application>不阻塞其他用户访问数据库（读取或写入）。
  </para>
<!-- pgdoc-cn_end sig_en=80afd935a8eee6526b9b3542c9ed45ba -->

<!-- pgdoc-cn_start sig_en=1e1451fabc85c145ce19bac54e46e24c sig_cn_org=None source=14.1 
  <para>
   <application>pg_dump</application> only dumps a single database.
   To back up an entire cluster, or to back up global objects that are
   common to all databases in a cluster (such as roles and tablespaces),
   use <xref linkend="app-pg-dumpall"/>.
  </para>
________________________________________________________-->
  <para>
   <application>pg_dump</application>只转储单个数据库。要备份一个集簇或者集簇中
   对于所有数据库公共的全局对象（例如角色和表空间），应使用
   <xref linkend="app-pg-dumpall"/>。
  </para>
<!-- pgdoc-cn_end sig_en=1e1451fabc85c145ce19bac54e46e24c -->

<!-- pgdoc-cn_start sig_en=7baf07f4d4845d6e34d785f06c7d94ea sig_cn_org=None source=14.1 
  <para>
   Dumps can be output in script or archive file formats. Script
   dumps are plain-text files containing the SQL commands required
   to reconstruct the database to the state it was in at the time it was
   saved. To restore from such a script, feed it to <xref
   linkend="app-psql"/>. Script files
   can be used to reconstruct the database even on other machines and
   other architectures; with some modifications, even on other SQL
   database products.
  </para>
________________________________________________________-->
  <para>
   转储可以被输出到脚本或归档文件格式。脚本转储是包含 SQL 命令的纯文本文件，它们可以用来重构数据库到它被转储时的状态。要从这样一个脚本恢复，将它喂给<xref linkend="app-psql"/>。脚本文件甚至可以被用来在其他机器和其他架构上重构数据库。在经过一些修改后，甚至可以在其他 SQL 数据库产品上重构数据库。
  </para>
<!-- pgdoc-cn_end sig_en=7baf07f4d4845d6e34d785f06c7d94ea -->

<!-- pgdoc-cn_start sig_en=7ee10156f11159f8a05cf4daa2630abe sig_cn_org=None source=14.1 
  <para>
   The alternative archive file formats must be used with
   <xref linkend="app-pgrestore"/> to rebuild the database.  They
   allow <application>pg_restore</application> to be selective about
   what is restored, or even to reorder the items prior to being
   restored.
   The archive file formats are designed to be portable across
   architectures.
  </para>
________________________________________________________-->
  <para>
   另一种可选的归档文件格式必须与<xref linkend="app-pgrestore"/>配合使用来重建数据库。它们允许<application>pg_restore</application>能选择恢复什么，或者甚至在恢复之前对条目重排序。归档文件格式被设计为在架构之间可移植。
  </para>
<!-- pgdoc-cn_end sig_en=7ee10156f11159f8a05cf4daa2630abe -->

<!-- pgdoc-cn_start sig_en=6fb9c9cdd484dbf38f156d8ca94fe57d sig_cn_org=None source=14.1 
  <para>
   When used with one of the archive file formats and combined with
   <application>pg_restore</application>,
   <application>pg_dump</application> provides a flexible archival and
   transfer mechanism. <application>pg_dump</application> can be used to
   backup an entire database, then <application>pg_restore</application>
   can be used to examine the archive and/or select which parts of the
   database are to be restored. The most flexible output file formats are
   the <quote>custom</quote> format (<option>-Fc</option>) and the
   <quote>directory</quote> format (<option>-Fd</option>). They allow
   for selection and reordering of all archived items, support parallel
   restoration, and are compressed by default. The <quote>directory</quote>
   format is the only format that supports parallel dumps.
  </para>
________________________________________________________-->
  <para>
   当使用归档文件格式并与<application>pg_restore</application>组合时，<application>pg_dump</application>提供了一种灵活的归档和传输机制。<application>pg_dump</application>可以被用来备份整个数据库，然后<application>pg_restore</application>可以被用来检查归档并/或选择数据库的哪些部分要被恢复。最灵活的输出文件格式是<quote>自定义</quote>格式（<option>-Fc</option>）和<quote>目录</quote>格式（<option>-Fd</option>）。它们允许选择和重排序所有已归档项、支持并行恢复并且默认是压缩的。<quote>目录</quote>格式是唯一一种支持并行转储的格式。
  </para>
<!-- pgdoc-cn_end sig_en=6fb9c9cdd484dbf38f156d8ca94fe57d -->

<!-- pgdoc-cn_start sig_en=b4f546d0fed0df27555e5ec1bd2e986f sig_cn_org=None source=14.1 
  <para>
   While running <application>pg_dump</application>, one should examine the
   output for any warnings (printed on standard error), especially in
   light of the limitations listed below.
  </para>
________________________________________________________-->
  <para>
   当运行<application>pg_dump</application>时，我们应该检查输出中有没有任何警告（打印在标准错误上），特别是考虑到下面列出的限制。
  </para>
<!-- pgdoc-cn_end sig_en=b4f546d0fed0df27555e5ec1bd2e986f -->

 </refsect1>

 <refsect1 id="pg-dump-options">
<!-- pgdoc-cn_start sig_en=ee3f399228d18d2103d5b7f4e0aeeba8 sig_cn_org=None source=14.1 
  <title>Options</title>
________________________________________________________-->
  <title>选项</title>
<!-- pgdoc-cn_end sig_en=ee3f399228d18d2103d5b7f4e0aeeba8 -->

<!-- pgdoc-cn_start sig_en=b46725c8268fecd7070d13fc0751bb72 sig_cn_org=a3cfbcf31ecdf110f6f217e2663f90b3 source=15.7 
  <para>
    The following command-line options control the content and
    format of the output.

    <variablelist>
     <varlistentry>
________________________________________________________-->
  <para>
    以下命令行选项控制输出的内容和格式。

    <variablelist>
     <varlistentry>
<!-- pgdoc-cn_end sig_en=b46725c8268fecd7070d13fc0751bb72 -->
      <term><replaceable class="parameter">dbname</replaceable></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=756056c1bd695bfee3f1c45c5cc491d4 sig_cn_org=63dae661e3721b56f10736cd95370c5a source=15.7 
       <para>
        Specifies the name of the database to be dumped.  If this is
        not specified, the environment variable
        <envar>PGDATABASE</envar> is used.  If that is not set, the
        user name specified for the connection is used.
       </para>
________________________________________________________-->
       <para>
        指定要转储的数据库名称。如果未指定，则使用环境变量<envar>PGDATABASE</envar>。
        如果未设置该变量，则使用连接指定的用户名。
       </para>
<!-- pgdoc-cn_end sig_en=756056c1bd695bfee3f1c45c5cc491d4 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-a</option></term>
      <term><option>--data-only</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=59d45f8ab91bb6bbc65b68a200a10095 sig_cn_org=97db5f9371ef6aedd3c7ee55f3b8cb25 source=15.7 
       <para>
        Dump only the data, not the schema (data definitions).
        Table data, large objects, and sequence values are dumped.
       </para>
________________________________________________________-->
       <para>
        仅转储数据，而不是模式（数据定义）。
        转储表数据、大对象和序列值。
       </para>
<!-- pgdoc-cn_end sig_en=59d45f8ab91bb6bbc65b68a200a10095 -->

<!-- pgdoc-cn_start sig_en=8ee96cd6763c514b06061648663c8a90 sig_cn_org=9e840e3c01f0e552348ade77dad5cda2 source=15.7 
       <para>
        This option is similar to, but for historical reasons not identical
        to, specifying <option>-&minus;section=data</option>.
       </para>
________________________________________________________-->
       <para>
        这个选项与指定 <option>-−section=data</option> 类似，但由于历史原因并不完全相同。
       </para>
<!-- pgdoc-cn_end sig_en=8ee96cd6763c514b06061648663c8a90 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-b</option></term>
      <term><option>--blobs</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=d1d2caf1dc904d183fcd88f757f7e576 sig_cn_org=e6a10a8653d54c9340b59b39e993baed source=15.7 
       <para>
        Include large objects in the dump.  This is the default behavior
        except when <option>-&minus;schema</option>, <option>-&minus;table</option>, or
        <option>-&minus;schema-only</option> is specified.  The <option>-b</option>
        switch is therefore only useful to add large objects to dumps
        where a specific schema or table has been requested.  Note that
        blobs are considered data and therefore will be included when
        <option>-&minus;data-only</option> is used, but not
        when <option>-&minus;schema-only</option> is.
       </para>
________________________________________________________-->
       <para>
        在转储中包含大对象。这是默认行为，除非指定了<option>--schema</option>、<option>--table</option>或
        <option>--schema-only</option>。因此，<option>-b</option>开关仅在请求特定模式或表的转储中添加大对象时才有用。
        请注意，blob被视为数据，因此在使用<option>--data-only</option>时会被包括，但在使用<option>--schema-only</option>时不会被包括。
       </para>
<!-- pgdoc-cn_end sig_en=d1d2caf1dc904d183fcd88f757f7e576 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-B</option></term>
      <term><option>--no-blobs</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=bedba0faa9c5db415319d0dacd2ce470 sig_cn_org=27fa80d359abff8fe82b19d4ff54382f source=15.7 
       <para>
        Exclude large objects in the dump.
       </para>
________________________________________________________-->
       <para>
        在转储中排除大对象。
       </para>
<!-- pgdoc-cn_end sig_en=bedba0faa9c5db415319d0dacd2ce470 -->

<!-- pgdoc-cn_start sig_en=fa3c72eb159e2cabbb42538ec864c2da sig_cn_org=ff2f61b84fc1ca762105efbbe57b8ea6 source=15.7 
       <para>
        When both <option>-b</option> and <option>-B</option> are given, the behavior
        is to output large objects, when data is being dumped, see the
        <option>-b</option> documentation.
       </para>
________________________________________________________-->
       <para>
        当同时给出<option>-b</option>和<option>-B</option>时，行为是在转储数据时输出大对象，
        请参阅<option>-b</option>文档。
       </para>
<!-- pgdoc-cn_end sig_en=fa3c72eb159e2cabbb42538ec864c2da -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-c</option></term>
      <term><option>--clean</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=9a643ca545b5943ac402386b5f795b2b sig_cn_org=504a905948797b61e35b111b423343f3 source=15.7 
       <para>
        Output commands to <command>DROP</command> all the dumped
        database objects prior to outputting the commands for creating them.
        This option is useful when the restore is to overwrite an existing
        database.  If any of the objects do not exist in the destination
        database, ignorable error messages will be reported during
        restore, unless <option>-&minus;if-exists</option> is also specified.
       </para>
________________________________________________________-->
       <para>
        输出命令以 <command>DROP</command> 所有转储的数据库对象，然后再输出创建这些对象的命令。这个选项在恢复时需要覆盖现有数据库时非常有用。如果目标数据库中没有某些对象，恢复过程中会报告可忽略的错误消息，除非同时指定了 <option>-−if-exists</option>。
       </para>
<!-- pgdoc-cn_end sig_en=9a643ca545b5943ac402386b5f795b2b -->

<!-- pgdoc-cn_start sig_en=10252c40732e700bcd7c42e8cae7cb96 sig_cn_org=4cbf5275ef5a31dedb6f8d3ca8412304 source=15.7 
       <para>
        This option is ignored when emitting an archive (non-text) output
        file.  For the archive formats, you can specify the option when you
        call <command>pg_restore</command>.
       </para>
________________________________________________________-->
       <para>
        当生成一个归档（非文本）输出文件时，此选项将被忽略。对于归档格式，您可以在调用<command>pg_restore</command>时指定该选项。
       </para>
<!-- pgdoc-cn_end sig_en=10252c40732e700bcd7c42e8cae7cb96 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-C</option></term>
      <term><option>--create</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=cacce7a086c2845ff8f031b8fbb8d9d9 sig_cn_org=07c3456ed48701f17ae81d08bdaa7dcb source=15.7 
       <para>
        Begin the output with a command to create the
        database itself and reconnect to the created database.  (With a
        script of this form, it doesn't matter which database in the
        destination installation you connect to before running the script.)
        If <option>-&minus;clean</option> is also specified, the script drops and
        recreates the target database before reconnecting to it.
       </para>
________________________________________________________-->
       <para>
        首先输出一个创建数据库的命令，并重新连接到创建的数据库。（使用这种形式的脚本，运行之前连接到目标安装中的哪个数据库并不重要。）如果同时指定了 <option>-&minus;clean</option>，脚本将在重新连接之前删除并重新创建目标数据库。
       </para>
<!-- pgdoc-cn_end sig_en=cacce7a086c2845ff8f031b8fbb8d9d9 -->

<!-- pgdoc-cn_start sig_en=30df00b1260b890b63bbef10b96f367a sig_cn_org=81f6989ad744d20102e47087734a30d7 source=15.7 
       <para>
        With <option>-&minus;create</option>, the output also includes the
        database's comment if any, and any configuration variable settings
        that are specific to this database, that is,
        any <command>ALTER DATABASE ... SET ...</command>
        and <command>ALTER ROLE ... IN DATABASE ... SET ...</command>
        commands that mention this database.
        Access privileges for the database itself are also dumped,
        unless <option>-&minus;no-acl</option> is specified.
       </para>
________________________________________________________-->
       <para>
        使用<option>--create</option>选项，输出还包括数据库的注释（如果有的话），
        以及特定于该数据库的任何配置变量设置，也就是说，
        提及该数据库的任何<command>ALTER DATABASE ... SET ...</command>
        和<command>ALTER ROLE ... IN DATABASE ... SET ...</command>命令。
        除非指定了<option>--no-acl</option>，否则还会转储数据库本身的访问权限。
       </para>
<!-- pgdoc-cn_end sig_en=30df00b1260b890b63bbef10b96f367a -->

<!-- pgdoc-cn_start sig_en=10252c40732e700bcd7c42e8cae7cb96 sig_cn_org=4cbf5275ef5a31dedb6f8d3ca8412304 source=15.7 
       <para>
        This option is ignored when emitting an archive (non-text) output
        file.  For the archive formats, you can specify the option when you
        call <command>pg_restore</command>.
       </para>
________________________________________________________-->
       <para>
        当生成一个归档（非文本）输出文件时，此选项将被忽略。对于归档格式，您可以在调用<command>pg_restore</command>时指定该选项。
       </para>
<!-- pgdoc-cn_end sig_en=10252c40732e700bcd7c42e8cae7cb96 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-e <replaceable class="parameter">pattern</replaceable></option></term>
      <term><option>--extension=<replaceable class="parameter">pattern</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=35d9053ea5dc58daea6cdeb2c0463a15 sig_cn_org=39aca5f1a95b5684dbe0c554a5e59c6d source=15.7 
       <para>
        Dump only extensions matching <replaceable
        class="parameter">pattern</replaceable>.  When this option is not
        specified, all non-system extensions in the target database will be
        dumped.  Multiple extensions can be selected by writing multiple
        <option>-e</option> switches.  The <replaceable
        class="parameter">pattern</replaceable> parameter is interpreted as a
        pattern according to the same rules used by
        <application>psql</application>'s <literal>\d</literal> commands (see
        <xref linkend="app-psql-patterns"/>), so multiple extensions can also
        be selected by writing wildcard characters in the pattern.  When using
        wildcards, be careful to quote the pattern if needed to prevent the
        shell from expanding the wildcards.
       </para>
________________________________________________________-->
       <para>
        仅转储与<replaceable class="parameter">pattern</replaceable>匹配的扩展。
        当未指定此选项时，将转储目标数据库中的所有非系统扩展。
        可以通过编写多个<option>-e</option>参数来选择多个扩展。
        <application>psql</application>的<literal>\d</literal>命令使用相同规则解释<replaceable class="parameter">pattern</replaceable>参数
        （请参阅<xref linkend="app-psql-patterns"/>），
        因此也可以通过在模式中使用通配符来选择多个扩展。
        使用通配符时，要小心引用模式，以防止shell扩展通配符。
       </para>
<!-- pgdoc-cn_end sig_en=35d9053ea5dc58daea6cdeb2c0463a15 -->

<!-- pgdoc-cn_start sig_en=23a1837ac722db68741b8666ef06aa6c sig_cn_org=c4b1bf578bcbd34e7253c599e7110ac6 source=15.7 
       <para>
        Any configuration relation registered by
        <function>pg_extension_config_dump</function> is included in the
        dump if its extension is specified by <option>-&minus;extension</option>.
       </para>
________________________________________________________-->
       <para>
        任何由<function>pg_extension_config_dump</function>注册的配置关系，
        如果其扩展被<option>--extension</option>指定，则包含在dump中。
       </para>
<!-- pgdoc-cn_end sig_en=23a1837ac722db68741b8666ef06aa6c -->

       <note>
<!-- pgdoc-cn_start sig_en=aab767f1de319eaa58a6955944847a37 sig_cn_org=5a6c79455c8ea9f12cb584a30ad379d8 source=15.7 
        <para>
         When <option>-e</option> is specified,
         <application>pg_dump</application> makes no attempt to dump any other
         database objects that the selected extension(s) might depend upon.
         Therefore, there is no guarantee that the results of a
         specific-extension dump can be successfully restored by themselves
         into a clean database.
        </para>
________________________________________________________-->
        <para>
         当指定<option>-e</option>选项时，
         <application>pg_dump</application>不会尝试转储所选扩展可能依赖的任何其他数据库对象。
         因此，不能保证特定扩展的转储结果可以成功地单独恢复到一个干净的数据库中。
        </para>
<!-- pgdoc-cn_end sig_en=aab767f1de319eaa58a6955944847a37 -->
       </note>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-E <replaceable class="parameter">encoding</replaceable></option></term>
      <term><option>--encoding=<replaceable class="parameter">encoding</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=2c6df90bbb41e13ad47ac6c4fd564e54 sig_cn_org=bef4854dba26fdbcc28cb5e2498550cf source=15.7 
       <para>
        Create the dump in the specified character set encoding. By default,
        the dump is created in the database encoding.  (Another way to get the
        same result is to set the <envar>PGCLIENTENCODING</envar> environment
        variable to the desired dump encoding.)  The supported encodings are
        described in <xref linkend="multibyte-charset-supported"/>.
       </para>
________________________________________________________-->
       <para>
        在指定的字符集编码中创建转储。默认情况下，转储将以数据库编码创建。
        （获得相同结果的另一种方法是将<envar>PGCLIENTENCODING</envar>环境变量设置为所需的转储编码。）
        支持的编码在<xref linkend="multibyte-charset-supported"/>中描述。
       </para>
<!-- pgdoc-cn_end sig_en=2c6df90bbb41e13ad47ac6c4fd564e54 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-f <replaceable class="parameter">file</replaceable></option></term>
      <term><option>--file=<replaceable class="parameter">file</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=73b5273f22db52306ea063b21d931c97 sig_cn_org=46786076e3f37ef5f14531db8637a7ac source=15.7 
       <para>
        Send output to the specified file. This parameter can be omitted for
        file based output formats, in which case the standard output is used.
        It must be given for the directory output format however, where it
        specifies the target directory instead of a file. In this case the
        directory is created by <command>pg_dump</command> and must not exist
        before.
       </para>
________________________________________________________-->
       <para>
        将输出发送到指定的文件。对于基于文件的输出格式，可以省略此参数，此时使用标准输出。
        但是，在目录输出格式中，必须提供此参数，指定目标目录而不是文件。在这种情况下，目录由<command>pg_dump</command>创建，且在此之前不得存在。
       </para>
<!-- pgdoc-cn_end sig_en=73b5273f22db52306ea063b21d931c97 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-F <replaceable class="parameter">format</replaceable></option></term>
      <term><option>--format=<replaceable class="parameter">format</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=74e5cefd7d570dd4f41694c544efcb78 sig_cn_org=a51e9f6ec64257eecc598d153ccadfd6 source=15.7 
       <para>
        Selects the format of the output.
        <replaceable>format</replaceable> can be one of the following:

       <variablelist>
        <varlistentry>
         <term><literal>p</literal></term>
         <term><literal>plain</literal></term>
         <listitem>
          <para>
           Output a plain-text <acronym>SQL</acronym> script file (the default).
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>c</literal></term>
         <term><literal>custom</literal></term>
         <listitem>
          <para>
           Output a custom-format archive suitable for input into
           <application>pg_restore</application>.
           Together with the directory output format, this is the most flexible
           output format in that it allows manual selection and reordering of
           archived items during restore. This format is also compressed by
           default.
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>d</literal></term>
         <term><literal>directory</literal></term>
         <listitem>
          <para>
           Output a directory-format archive suitable for input into
           <application>pg_restore</application>. This will create a directory
           with one file for each table and blob being dumped, plus a
           so-called Table of Contents file describing the dumped objects in a
           machine-readable format that <application>pg_restore</application>
           can read. A directory format archive can be manipulated with
           standard Unix tools; for example, files in an uncompressed archive
           can be compressed with the <application>gzip</application> tool.
           This format is compressed by default and also supports parallel
           dumps.
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>t</literal></term>
         <term><literal>tar</literal></term>
         <listitem>
          <para>
           Output a <command>tar</command>-format archive suitable for input
           into <application>pg_restore</application>. The tar format is
           compatible with the directory format: extracting a tar-format
           archive produces a valid directory-format archive.
           However, the tar format does not support compression. Also, when
           using tar format the relative order of table data items cannot be
           changed during restore.
          </para>
         </listitem>
        </varlistentry>
       </variablelist></para>
________________________________________________________-->
       <para>
        选择输出的格式。
        <replaceable>format</replaceable>可以是以下之一：

       <variablelist>
        <varlistentry>
         <term><literal>p</literal></term>
         <term><literal>plain</literal></term>
         <listitem>
          <para>
           输出一个纯文本的<acronym>SQL</acronym>脚本文件（默认）。
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>c</literal></term>
         <term><literal>custom</literal></term>
         <listitem>
          <para>
           输出一个适用于<application>pg_restore</application>输入的自定义格式归档。
           与目录输出格式一起，这是最灵活的输出格式，允许在恢复期间手动选择和重新排序存档项。
           此格式默认也进行了压缩。
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>d</literal></term>
         <term><literal>directory</literal></term>
         <listitem>
          <para>
           输出一个适用于<application>pg_restore</application>输入的目录格式归档。
           这将创建一个目录，其中包含每个被转储的表和 blob 的一个文件，以及一个所谓的目录文件，描述了以机器可读格式的被转储对象，<application>pg_restore</application>可以读取。
           目录格式归档可以使用标准的Unix工具进行操作；例如，未压缩归档中的文件可以使用<application>gzip</application>工具进行压缩。
           此格式默认也进行了压缩，并支持并行转储。
          </para>
         </listitem>
        </varlistentry>

        <varlistentry>
         <term><literal>t</literal></term>
         <term><literal>tar</literal></term>
         <listitem>
          <para>
           输出一个适用于<application>pg_restore</application>输入的<command>tar</command>格式归档。
           tar格式与目录格式兼容：提取tar格式归档会产生一个有效的目录格式归档。
           但是，tar格式不支持压缩。此外，在使用tar格式时，表数据项的相对顺序在恢复期间无法更改。
          </para>
         </listitem>
        </varlistentry>
       </variablelist></para>
<!-- pgdoc-cn_end sig_en=74e5cefd7d570dd4f41694c544efcb78 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-j <replaceable class="parameter">njobs</replaceable></option></term>
      <term><option>--jobs=<replaceable class="parameter">njobs</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=cfc3a942ef42eef8721aacc3fddb3102 sig_cn_org=9a40fd004d55a3bac3fde981deb5ac48 source=15.7 
       <para>
        Run the dump in parallel by dumping <replaceable class="parameter">njobs</replaceable>
        tables simultaneously. This option may reduce the time needed to perform the dump but it also
        increases the load on the database server. You can only use this option with the
        directory output format because this is the only output format where multiple processes
        can write their data at the same time.
       </para>
________________________________________________________-->
       <para>
        并行运行转储操作，同时转储<replaceable class="parameter">njobs</replaceable>个表。这个选项可能会减少执行转储所需的时间，但也会增加数据库服务器的负载。您只能在目录输出格式下使用此选项，因为这是唯一一个多个进程可以同时写入数据的输出格式。
       </para>
<!-- pgdoc-cn_end sig_en=cfc3a942ef42eef8721aacc3fddb3102 -->
<!-- pgdoc-cn_start sig_en=188c29b7329eaa7c986f58fdb64aeb1e sig_cn_org=d7745075dfe86f466b39a0fa4f096b5a source=15.7 
       <para><application>pg_dump</application> will open <replaceable class="parameter">njobs</replaceable>
        + 1 connections to the database, so make sure your <xref linkend="guc-max-connections"/>
        setting is high enough to accommodate all connections.
       </para>
________________________________________________________-->
       <para><application>pg_dump</application>将打开<replaceable class="parameter">njobs</replaceable>
        + 1个连接到数据库，因此请确保您的<xref linkend="guc-max-connections"/>
        设置足够高，以容纳所有连接。</para>
<!-- pgdoc-cn_end sig_en=188c29b7329eaa7c986f58fdb64aeb1e -->
<!-- pgdoc-cn_start sig_en=96f860102e1be218680b55934c2dd663 sig_cn_org=d472bd24f412512efc1a348589974af2 source=15.7 
       <para>
        Requesting exclusive locks on database objects while running a parallel dump could
        cause the dump to fail. The reason is that the <application>pg_dump</application> leader process
        requests shared locks (<link linkend="locking-tables">ACCESS SHARE</link>) on the
        objects that the worker processes are going to dump later in order to
        make sure that nobody deletes them and makes them go away while the dump is running.
        If another client then requests an exclusive lock on a table, that lock will not be
        granted but will be queued waiting for the shared lock of the leader process to be
        released. Consequently any other access to the table will not be granted either and
        will queue after the exclusive lock request. This includes the worker process trying
        to dump the table. Without any precautions this would be a classic deadlock situation.
        To detect this conflict, the <application>pg_dump</application> worker process requests another
        shared lock using the <literal>NOWAIT</literal> option. If the worker process is not granted
        this shared lock, somebody else must have requested an exclusive lock in the meantime
        and there is no way to continue with the dump, so <application>pg_dump</application> has no choice
        but to abort the dump.
       </para>
________________________________________________________-->
       <para>
        在运行并行转储时请求对数据库对象的排他锁可能导致转储失败。原因是<application>pg_dump</application>领导进程
        请求对稍后工作进程将要转储的对象的共享锁(<link linkend="locking-tables">ACCESS SHARE</link>)，
        以确保在转储运行时没有人删除它们并使其消失。
        如果另一个客户端请求对表的排他锁，该锁将不会被授予，而是排队等待领导进程的共享锁被释放。
        因此，对表的任何其他访问也不会被授予，并且将在排队等待排他锁请求之后进行。这包括尝试转储表的工作进程。
        没有任何预防措施，这将是一个典型的死锁情况。
        为了检测这种冲突，<application>pg_dump</application>工作进程使用<literal>NOWAIT</literal>选项请求另一个
        共享锁。如果工作进程未被授予此共享锁，则意味着在此期间其他人必须请求了排他锁，
        并且没有办法继续转储，因此<application>pg_dump</application>别无选择，只能中止转储。
       </para>
<!-- pgdoc-cn_end sig_en=96f860102e1be218680b55934c2dd663 -->
<!-- pgdoc-cn_start sig_en=a750f5b092692cc51aaba49749fe0f6e sig_cn_org=3c1cc47b0475f1805ce73566bc65591a source=15.7 
       <para>
        To perform a parallel dump, the database server needs to support
        synchronized snapshots, a feature that was introduced in
        <productname>PostgreSQL</productname> 9.2 for primary servers and 10
        for standbys. With this feature, database clients can ensure they see
        the same data set even though they use different connections.
        <command>pg_dump -j</command> uses multiple database connections; it
        connects to the database once with the leader process and once again
        for each worker job. Without the synchronized snapshot feature, the
        different worker jobs wouldn't be guaranteed to see the same data in
        each connection, which could lead to an inconsistent backup.
       </para>
________________________________________________________-->
       <para>
        要执行并行转储，数据库服务器需要支持同步快照，这是在<productname>PostgreSQL</productname> 9.2中为主服务器引入的功能，
        并在10中为备用服务器引入。有了这个功能，数据库客户端可以确保他们看到相同的数据集，即使他们使用不同的连接。
        <command>pg_dump -j</command>使用多个数据库连接；它一次与领导进程连接到数据库，然后为每个工作任务再次连接一次。
        没有同步快照功能，不同的工作任务在每个连接中看到的数据可能不一致，这可能导致不一致的备份。
       </para>
<!-- pgdoc-cn_end sig_en=a750f5b092692cc51aaba49749fe0f6e -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n <replaceable class="parameter">pattern</replaceable></option></term>
      <term><option>--schema=<replaceable class="parameter">pattern</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=ed21ae6cbbadcf9ff43cdf333e2bf232 sig_cn_org=e8c8be801dbda59356195f5b43623cf9 source=15.7 
       <para>
        Dump only schemas matching <replaceable
        class="parameter">pattern</replaceable>; this selects both the
        schema itself, and all its contained objects.  When this option is
        not specified, all non-system schemas in the target database will be
        dumped.  Multiple schemas can be
        selected by writing multiple <option>-n</option> switches.  The
        <replaceable class="parameter">pattern</replaceable> parameter is
        interpreted as a pattern according to the same rules used by
        <application>psql</application>'s <literal>\d</literal> commands
        (see <xref linkend="app-psql-patterns"/> below),
        so multiple schemas can also be selected by writing wildcard characters
        in the pattern.  When using wildcards, be careful to quote the pattern
        if needed to prevent the shell from expanding the wildcards;  see
        <xref linkend="pg-dump-examples"/> below.
       </para>
________________________________________________________-->
       <para>
        仅转储与<replaceable class="parameter">模式</replaceable>匹配的模式；这将选择模式本身以及其所有包含的对象。
        当未指定此选项时，将转储目标数据库中的所有非系统模式。可以通过编写多个<option>-n</option>开关来选择多个模式。
        <replaceable class="parameter">模式</replaceable>参数被解释为与<application>psql</application>的<literal>\d</literal>命令
        （请参见下面的<xref linkend="app-psql-patterns"/>）使用的相同规则的模式，因此也可以通过在模式中写入通配符字符来选择多个模式。
        使用通配符时，请注意根据需要引用模式以防止shell扩展通配符；请参见下面的<xref linkend="pg-dump-examples"/>。
       </para>
<!-- pgdoc-cn_end sig_en=ed21ae6cbbadcf9ff43cdf333e2bf232 -->

       <note>
<!-- pgdoc-cn_start sig_en=447fcf701bba127f5d022c59e03443cd sig_cn_org=80a1db131b626ebc2af13b71338481ab source=15.7 
        <para>
         When <option>-n</option> is specified, <application>pg_dump</application>
         makes no attempt to dump any other database objects that the selected
         schema(s) might depend upon. Therefore, there is no guarantee
         that the results of a specific-schema dump can be successfully
         restored by themselves into a clean database.
        </para>
________________________________________________________-->
        <para>
         当指定<option>-n</option>选项时，<application>pg_dump</application>
         不会尝试转储所选模式(s)可能依赖的任何其他数据库对象。因此，不能保证
         特定模式转储的结果能够成功地单独恢复到一个干净的数据库中。
        </para>
<!-- pgdoc-cn_end sig_en=447fcf701bba127f5d022c59e03443cd -->
       </note>

       <note>
<!-- pgdoc-cn_start sig_en=8a76c02d94708be746a8da56036d57d1 sig_cn_org=36f7fe8df7b192f4d5c0444cb438f06a source=15.7 
        <para>
         Non-schema objects such as blobs are not dumped when <option>-n</option> is
         specified.  You can add blobs back to the dump with the
         <option>-&minus;blobs</option> switch.
        </para>
________________________________________________________-->
        <para>
         非模式对象（如 blobs）在指定 <option>-n</option> 时不会被转储。您可以使用
         <option>--blobs</option> 开关将 blobs 添加回转储文件中。
        </para>
<!-- pgdoc-cn_end sig_en=8a76c02d94708be746a8da56036d57d1 -->
       </note>

      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-N <replaceable class="parameter">pattern</replaceable></option></term>
      <term><option>--exclude-schema=<replaceable class="parameter">pattern</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=5e763d835192c7eec2346e2052159f90 sig_cn_org=54c099d1781e72139cc237a30498aead source=15.7 
       <para>
        Do not dump any schemas matching <replaceable
        class="parameter">pattern</replaceable>.  The pattern is
        interpreted according to the same rules as for <option>-n</option>.
        <option>-N</option> can be given more than once to exclude schemas
        matching any of several patterns.
       </para>
________________________________________________________-->
       <para>
       不转储与 <replaceable class="parameter">pattern</replaceable> 匹配的任何模式。该模式的解释规则与 <option>-n</option> 相同。<option>-N</option> 可以多次使用，以排除与多个模式匹配的模式。
       </para>
<!-- pgdoc-cn_end sig_en=5e763d835192c7eec2346e2052159f90 -->

<!-- pgdoc-cn_start sig_en=b1502c551d14bc52a865af7ba271e379 sig_cn_org=0e790cec6c2b548e7f2d70dd0328e58e source=15.7 
       <para>
        When both <option>-n</option> and <option>-N</option> are given, the behavior
        is to dump just the schemas that match at least one <option>-n</option>
        switch but no <option>-N</option> switches.  If <option>-N</option> appears
        without <option>-n</option>, then schemas matching <option>-N</option> are
        excluded from what is otherwise a normal dump.
       </para>
________________________________________________________-->
       <para>
        当同时给出<option>-n</option>和<option>-N</option>选项时，行为是仅转储至少匹配一个
		<option>-n</option>选项但不匹配<option>-N</option>选项的模式。
        如果<option>-N</option>出现而没有<option>-n</option>，那么与<option>-N</option>
		匹配的模式将被排除在否则是正常转储的内容之外。
       </para>
<!-- pgdoc-cn_end sig_en=b1502c551d14bc52a865af7ba271e379 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-O</option></term>
      <term><option>--no-owner</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=b692ea03930ce4bc5a0c4ff01bdcea87 sig_cn_org=c7c2540109ec98314865dd31aa436651 source=15.7 
       <para>
        Do not output commands to set
        ownership of objects to match the original database.
        By default, <application>pg_dump</application> issues
        <command>ALTER OWNER</command> or
        <command>SET SESSION AUTHORIZATION</command>
        statements to set ownership of created database objects.
        These statements
        will fail when the script is run unless it is started by a superuser
        (or the same user that owns all of the objects in the script).
        To make a script that can be restored by any user, but will give
        that user ownership of all the objects, specify <option>-O</option>.
       </para>
________________________________________________________-->
       <para>
        不输出设置对象所有权以匹配原始数据库的命令。默认情况下，<application>pg_dump</application> 会发出 <command>ALTER OWNER</command> 或 <command>SET SESSION AUTHORIZATION</command> 语句来设置创建的数据库对象的所有权。这些语句在脚本运行时会失败，除非是由超级用户（或拥有脚本中所有对象的相同用户）启动。要创建一个可以被任何用户恢复的脚本，并将所有对象的所有权授予该用户，可以指定 <option>-O</option>。
       </para>
<!-- pgdoc-cn_end sig_en=b692ea03930ce4bc5a0c4ff01bdcea87 -->

<!-- pgdoc-cn_start sig_en=10252c40732e700bcd7c42e8cae7cb96 sig_cn_org=4cbf5275ef5a31dedb6f8d3ca8412304 source=15.7 
       <para>
        This option is ignored when emitting an archive (non-text) output
        file.  For the archive formats, you can specify the option when you
        call <command>pg_restore</command>.
       </para>
________________________________________________________-->
       <para>
        当生成一个归档（非文本）输出文件时，此选项将被忽略。对于归档格式，您可以在调用<command>pg_restore</command>时指定该选项。
       </para>
<!-- pgdoc-cn_end sig_en=10252c40732e700bcd7c42e8cae7cb96 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-R</option></term>
      <term><option>--no-reconnect</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=71586361c9a4ba61b7195d694c5f12da sig_cn_org=ece9e6f05ec035c5d58875c6270e05a5 source=15.7 
       <para>
        This option is obsolete but still accepted for backwards
        compatibility.
       </para>
________________________________________________________-->
       <para>
        这个选项已经过时，但仍然被接受以保持向后兼容性。
       </para>
<!-- pgdoc-cn_end sig_en=71586361c9a4ba61b7195d694c5f12da -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s</option></term>
      <term><option>--schema-only</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=de40581fa5cf63379e575cb94b658558 sig_cn_org=7b893f1de4e341b031f6080144bea0da source=15.7 
       <para>
        Dump only the object definitions (schema), not data.
       </para>
________________________________________________________-->
       <para>
        仅转储对象定义（模式），不包括数据。
       </para>
<!-- pgdoc-cn_end sig_en=de40581fa5cf63379e575cb94b658558 -->
<!-- pgdoc-cn_start sig_en=6c538319d91ee49d52e20f017fe1c090 sig_cn_org=fcd1a0dbc223028643efc2a54c9ee877 source=15.7 
       <para>
        This option is the inverse of <option>-&minus;data-only</option>.
        It is similar to, but for historical reasons not identical to,
        specifying
        <option>-&minus;section=pre-data -&minus;section=post-data</option>.
       </para>
________________________________________________________-->
       <para>
        这个选项是<option>--data-only</option>的反义词。
        它类似于，但出于历史原因并非完全相同于，
        指定<option>--section=pre-data --section=post-data</option>。
       </para>
<!-- pgdoc-cn_end sig_en=6c538319d91ee49d52e20f017fe1c090 -->
<!-- pgdoc-cn_start sig_en=a29ea55b878427c1ab81fd11f8dc552d sig_cn_org=522e68493b594926c54811cbd8d600d1 source=15.7 
       <para>
        (Do not confuse this with the <option>-&minus;schema</option> option, which
        uses the word <quote>schema</quote> in a different meaning.)
       </para>
________________________________________________________-->
       <para>
        (不要将此与<option>--schema</option>选项混淆，该选项使用单词<quote>schema</quote>具有不同的含义。)
       </para>
<!-- pgdoc-cn_end sig_en=a29ea55b878427c1ab81fd11f8dc552d -->
<!-- pgdoc-cn_start sig_en=efeea7870fc21cd808bdc3c8294dc48f sig_cn_org=f9e18ec1d548f091ff533c0fdb16ada7 source=15.7 
       <para>
        To exclude table data for only a subset of tables in the database,
        see <option>-&minus;exclude-table-data</option>.
       </para>
________________________________________________________-->
       <para>
        要仅排除数据库中某些表的表数据，请参见<option>--exclude-table-data</option>。
       </para>
<!-- pgdoc-cn_end sig_en=efeea7870fc21cd808bdc3c8294dc48f -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-S <replaceable class="parameter">username</replaceable></option></term>
      <term><option>--superuser=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=d63260f72a73cc045037ca35a2ea863d sig_cn_org=05e717e789d45918b788d34c890addc5 source=15.7 
       <para>
        Specify the superuser user name to use when disabling triggers.
        This is relevant only if <option>-&minus;disable-triggers</option> is used.
        (Usually, it's better to leave this out, and instead start the
        resulting script as superuser.)
       </para>
________________________________________________________-->
       <para>
        指定在禁用触发器时要使用的超级用户用户名。
        这仅在使用<option>--disable-triggers</option>时才相关。
        （通常，最好将其省略，而是以超级用户身份启动生成的脚本。）
       </para>
<!-- pgdoc-cn_end sig_en=d63260f72a73cc045037ca35a2ea863d -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-t <replaceable class="parameter">pattern</replaceable></option></term>
      <term><option>--table=<replaceable class="parameter">pattern</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=78d2e00a5b174e59f7026879599e8eae sig_cn_org=8668f0dbf729683bc70de541924e5652 source=15.7 
       <para>
        Dump only tables with names matching
        <replaceable class="parameter">pattern</replaceable>. Multiple tables
        can be selected by writing multiple <option>-t</option> switches.  The
        <replaceable class="parameter">pattern</replaceable> parameter is
        interpreted as a pattern according to the same rules used by
        <application>psql</application>'s <literal>\d</literal> commands
        (see <xref linkend="app-psql-patterns"/> below),
        so multiple tables can also be selected by writing wildcard characters
        in the pattern.  When using wildcards, be careful to quote the pattern
        if needed to prevent the shell from expanding the wildcards;  see
        <xref linkend="pg-dump-examples"/> below.
       </para>
________________________________________________________-->
       <para>
        仅转储名称与<replaceable class="parameter">模式</replaceable>匹配的表。可以通过编写多个
        <option>-t</option>开关来选择多个表。 <replaceable class="parameter">模式</replaceable>参数
        被解释为与<application>psql</application>的<literal>\d</literal>命令使用相同规则的模式
        （参见下面的<xref linkend="app-psql-patterns"/>），因此也可以通过在模式中使用通配符
        来选择多个表。 使用通配符时，如果需要防止shell扩展通配符，请小心引用模式；参见下面的
        <xref linkend="pg-dump-examples"/>。
       </para>
<!-- pgdoc-cn_end sig_en=78d2e00a5b174e59f7026879599e8eae -->

<!-- pgdoc-cn_start sig_en=1e47d6a4080e7e7be9c446605009c5dd sig_cn_org=d70f9660ff3825fa8cb1831926895451 source=15.7 
       <para>
        As well as tables, this option can be used to dump the definition of matching
        views, materialized views, foreign tables, and sequences.  It will not dump the
        contents of views or materialized views, and the contents of foreign tables will
        only be dumped if the corresponding foreign server is specified with
        <option>-&minus;include-foreign-data</option>.
       </para>
________________________________________________________-->
       <para>
        除了表格外，此选项还可用于转储匹配的视图、物化视图、外部表和序列的定义。它不会转储视图或物化视图的内容，
        只有在使用<option>--include-foreign-data</option>指定相应外部服务器时，才会转储外部表的内容。
       </para>
<!-- pgdoc-cn_end sig_en=1e47d6a4080e7e7be9c446605009c5dd -->

<!-- pgdoc-cn_start sig_en=41a37467867cfd6951d0d9ed6f4c71b6 sig_cn_org=9b98300fa86f6cf8d0fb96b06bc3aa27 source=15.7 
       <para>
        The <option>-n</option> and <option>-N</option> switches have no effect when
        <option>-t</option> is used, because tables selected by <option>-t</option> will
        be dumped regardless of those switches, and non-table objects will not
        be dumped.
       </para>
________________________________________________________-->
       <para>
        <option>-n</option>和<option>-N</option>开关在使用<option>-t</option>时没有效果，因为被<option>-t</option>选择的表将被转储，而不管这些开关如何设置，非表对象将不会被转储。
       </para>
<!-- pgdoc-cn_end sig_en=41a37467867cfd6951d0d9ed6f4c71b6 -->

       <note>
<!-- pgdoc-cn_start sig_en=23cc4391c6f2bd2e283dbb4208380829 sig_cn_org=f237abcaaf32a90c831c06dee24fbe81 source=15.7 
        <para>
         When <option>-t</option> is specified, <application>pg_dump</application>
         makes no attempt to dump any other database objects that the selected
         table(s) might depend upon. Therefore, there is no guarantee
         that the results of a specific-table dump can be successfully
         restored by themselves into a clean database.
        </para>
________________________________________________________-->
        <para>
         当指定<option>-t</option>选项时，<application>pg_dump</application>
         不会尝试转储所选表可能依赖的任何其他数据库对象。因此，不能保证
         特定表的转储结果能够成功地单独恢复到一个干净的数据库中。
        </para>
<!-- pgdoc-cn_end sig_en=23cc4391c6f2bd2e283dbb4208380829 -->
       </note>

      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-T <replaceable class="parameter">pattern</replaceable></option></term>
      <term><option>--exclude-table=<replaceable class="parameter">pattern</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=e5fa9901778c54f15beb6eb6495e9568 sig_cn_org=067dbd678c6d2d4510593848963adf77 source=15.7 
       <para>
        Do not dump any tables matching <replaceable
        class="parameter">pattern</replaceable>.  The pattern is
        interpreted according to the same rules as for <option>-t</option>.
        <option>-T</option> can be given more than once to exclude tables
        matching any of several patterns.
       </para>
________________________________________________________-->
       <para>
        不导出任何与 <replaceable class="parameter">pattern</replaceable> 匹配的表。该模式的解释规则与 <option>-t</option> 相同。<option>-T</option> 可以多次使用，以排除与多个模式匹配的表。
       </para>
<!-- pgdoc-cn_end sig_en=e5fa9901778c54f15beb6eb6495e9568 -->

<!-- pgdoc-cn_start sig_en=ad11f3874b9463ab9d09b23da3c781f7 sig_cn_org=7099308fad5acfb866d0df6c96012d83 source=15.7 
       <para>
        When both <option>-t</option> and <option>-T</option> are given, the behavior
        is to dump just the tables that match at least one <option>-t</option>
        switch but no <option>-T</option> switches.  If <option>-T</option> appears
        without <option>-t</option>, then tables matching <option>-T</option> are
        excluded from what is otherwise a normal dump.
       </para>
________________________________________________________-->
       <para>
        当同时给出<option>-t</option>和<option>-T</option>选项时，行为是仅转储至少匹配一个<option>-t</option>开关但没有<option>-T</option>开关的表格。
        如果<option>-T</option>出现而没有<option>-t</option>，那么与<option>-T</option>匹配的表格将被排除在否则是正常转储的内容之外。
       </para>
<!-- pgdoc-cn_end sig_en=ad11f3874b9463ab9d09b23da3c781f7 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>--verbose</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=e93b68c0bdc6517309f76eda4f30893b sig_cn_org=b20525051d44f7f0bc3ea95980501bfb source=15.7 
       <para>
        Specifies verbose mode.  This will cause
        <application>pg_dump</application> to output detailed object
        comments and start/stop times to the dump file, and progress
        messages to standard error.
        Repeating the option causes additional debug-level messages
        to appear on standard error.
       </para>
________________________________________________________-->
       <para>
        指定详细模式。这将导致<application>pg_dump</application>将详细的对象注释和开始/停止时间输出到转储文件，并将进度消息输出到标准错误。
        重复该选项会导致额外的调试级别消息出现在标准错误上。
       </para>
<!-- pgdoc-cn_end sig_en=e93b68c0bdc6517309f76eda4f30893b -->
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-V</option></term>
       <term><option>--version</option></term>
       <listitem>
<!-- pgdoc-cn_start sig_en=00345b28c8b0e568a55b79df14ccfd5e sig_cn_org=57ec6a8a1bb4981ed3a730f5ef269e05 source=15.7 
       <para>
       Print the <application>pg_dump</application> version and exit.
       </para>
________________________________________________________-->
       <para>
       打印<application>pg_dump</application>的版本并退出。
       </para>
<!-- pgdoc-cn_end sig_en=00345b28c8b0e568a55b79df14ccfd5e -->
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-x</option></term>
      <term><option>--no-privileges</option></term>
      <term><option>--no-acl</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=85c67f4b40fa3e060e15432424c5c79c sig_cn_org=d4e0db605535e400b43245412625d3c4 source=15.7 
       <para>
        Prevent dumping of access privileges (grant/revoke commands).
       </para>
________________________________________________________-->
       <para>
        防止访问权限的泄露（grant/revoke命令）。
       </para>
<!-- pgdoc-cn_end sig_en=85c67f4b40fa3e060e15432424c5c79c -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-Z <replaceable class="parameter">0..9</replaceable></option></term>
      <term><option>--compress=<replaceable class="parameter">0..9</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=f48bd45ed2dd841f87ff8188b87db4f4 sig_cn_org=456addbb41b4361f13dc166427acf741 source=15.7 
       <para>
        Specify the compression level to use.  Zero means no compression.
        For the custom and directory archive formats, this specifies compression of
        individual table-data segments, and the default is to compress
        at a moderate level.
        For plain text output, setting a nonzero compression level causes
        the entire output file to be compressed, as though it had been
        fed through <application>gzip</application>; but the default is not to compress.
        The tar archive format currently does not support compression at all.
       </para>
________________________________________________________-->
       <para>
        指定要使用的压缩级别。零表示不压缩。
        对于自定义和目录存档格式，这指定对个别表数据段进行压缩，默认情况下以适度级别压缩。
        对于纯文本输出，设置非零压缩级别会导致整个输出文件被压缩，就像通过<application>gzip</application>处理一样；但默认情况下不压缩。
        tar 存档格式目前不支持任何压缩。
       </para>
<!-- pgdoc-cn_end sig_en=f48bd45ed2dd841f87ff8188b87db4f4 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--binary-upgrade</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=1ace8d1f36fd24dbb3b895c9fc1dc31f sig_cn_org=094d46588d8b3056bd70826c7ceb4525 source=15.7 
       <para>
        This option is for use by in-place upgrade utilities.  Its use
        for other purposes is not recommended or supported.  The
        behavior of the option may change in future releases without
        notice.
       </para>
________________________________________________________-->
       <para>
        此选项供就地升级实用程序使用。不建议或支持将其用于其他目的。该选项的行为可能在未来的版本中更改而不另行通知。
       </para>
<!-- pgdoc-cn_end sig_en=1ace8d1f36fd24dbb3b895c9fc1dc31f -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--column-inserts</option></term>
      <term><option>--attribute-inserts</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=c5415e4a28ff9da6cd24855057af3fd5 sig_cn_org=3ca3b267e652420e1a04f4ce667cf699 source=15.7 
       <para>
        Dump data as <command>INSERT</command> commands with explicit
        column names (<literal>INSERT INTO
        <replaceable>table</replaceable>
        (<replaceable>column</replaceable>, ...) VALUES
        ...</literal>).  This will make restoration very slow; it is mainly
        useful for making dumps that can be loaded into
        non-<productname>PostgreSQL</productname> databases.
        Any error during restoring will cause only rows that are part of the
        problematic <command>INSERT</command> to be lost, rather than the
        entire table contents.
       </para>
________________________________________________________-->
       <para>
        将数据转储为带有显式列名的<command>INSERT</command>命令
        (<literal>INSERT INTO
        <replaceable>table</replaceable>
        (<replaceable>column</replaceable>, ...) VALUES
        ...</literal>)。这将使恢复过程非常缓慢；主要用于创建可以加载到非<productname>PostgreSQL</productname>数据库中的转储文件。
        在恢复过程中发生任何错误将导致只有属于有问题的<command>INSERT</command>的行丢失，而不是整个表的内容。
       </para>
<!-- pgdoc-cn_end sig_en=c5415e4a28ff9da6cd24855057af3fd5 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--disable-dollar-quoting</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=b135ce7b01532894da1f0f38ef6b6f81 sig_cn_org=e38b1328d46ea1c313719ae2e0cd1641 source=15.7 
       <para>
        This option disables the use of dollar quoting for function bodies,
        and forces them to be quoted using SQL standard string syntax.
       </para>
________________________________________________________-->
       <para>
        这个选项禁用了在函数体中使用美元引用的功能，并强制使用SQL标准字符串语法进行引用。
       </para>
<!-- pgdoc-cn_end sig_en=b135ce7b01532894da1f0f38ef6b6f81 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--disable-triggers</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=fb2c103f1b084fa0128b81bbf0937158 sig_cn_org=2f7577c15d916d83ad4fb0d618dc76fc source=15.7 
       <para>
        This option is relevant only when creating a data-only dump.
        It instructs <application>pg_dump</application> to include commands
        to temporarily disable triggers on the target tables while
        the data is restored.  Use this if you have referential
        integrity checks or other triggers on the tables that you
        do not want to invoke during data restore.
       </para>
________________________________________________________-->
       <para>
        此选项仅在创建仅数据转储时才相关。它指示<application>pg_dump</application>在恢复数据时包含命令以临时禁用目标表上的触发器。
        如果您在表上有引用完整性检查或其他触发器，而不希望在数据恢复期间调用它们，请使用此选项。
       </para>
<!-- pgdoc-cn_end sig_en=fb2c103f1b084fa0128b81bbf0937158 -->

<!-- pgdoc-cn_start sig_en=3413f905a1a9cdc8f0a07d7d6f71ecbb sig_cn_org=d04b9762bdb5216bd85406fb479a560c source=15.7 
       <para>
        Presently, the commands emitted for <option>-&minus;disable-triggers</option>
        must be done as superuser.  So, you should also specify
        a superuser name with <option>-S</option>, or preferably be careful to
        start the resulting script as a superuser.
       </para>
________________________________________________________-->
       <para>
        目前，为了<option>--disable-triggers</option>选项发出的命令必须由超级用户执行。
        因此，您还应该使用<option>-S</option>指定一个超级用户名称，或者最好小心地
        以超级用户身份启动生成的脚本。
       </para>
<!-- pgdoc-cn_end sig_en=3413f905a1a9cdc8f0a07d7d6f71ecbb -->

<!-- pgdoc-cn_start sig_en=10252c40732e700bcd7c42e8cae7cb96 sig_cn_org=4cbf5275ef5a31dedb6f8d3ca8412304 source=15.7 
       <para>
        This option is ignored when emitting an archive (non-text) output
        file.  For the archive formats, you can specify the option when you
        call <command>pg_restore</command>.
       </para>
________________________________________________________-->
       <para>
        当生成一个归档（非文本）输出文件时，此选项将被忽略。对于归档格式，您可以在调用<command>pg_restore</command>时指定该选项。
       </para>
<!-- pgdoc-cn_end sig_en=10252c40732e700bcd7c42e8cae7cb96 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--enable-row-security</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=34b05a381d1c2ffd1f2a7e649f4c5bbd sig_cn_org=7274ef894191c33dee1fd5e9c6461b75 source=15.7 
       <para>
        This option is relevant only when dumping the contents of a table
        which has row security.  By default, <application>pg_dump</application> will set
        <xref linkend="guc-row-security"/> to off, to ensure
        that all data is dumped from the table.  If the user does not have
        sufficient privileges to bypass row security, then an error is thrown.
        This parameter instructs <application>pg_dump</application> to set
        <xref linkend="guc-row-security"/> to on instead, allowing the user
        to dump the parts of the contents of the table that they have access to.
       </para>
________________________________________________________-->
       <para>
        此选项仅在转储具有行安全性的表的内容时才相关。默认情况下，<application>pg_dump</application>将设置
        <xref linkend="guc-row-security"/>为关闭，以确保从表中转储所有数据。如果用户没有足够的权限来绕过行安全性，则会抛出错误。
        此参数指示<application>pg_dump</application>将<xref linkend="guc-row-security"/>设置为打开，允许用户转储他们有权限访问的表内容的部分。
       </para>
<!-- pgdoc-cn_end sig_en=34b05a381d1c2ffd1f2a7e649f4c5bbd -->

<!-- pgdoc-cn_start sig_en=87cd95ecde715e8a4743794a1262a88d sig_cn_org=5bba21abe104a969ec9e779464e24d9f source=15.7 
       <para>
        Note that if you use this option currently, you probably also want
        the dump be in <command>INSERT</command> format, as the
        <command>COPY FROM</command> during restore does not support row security.
       </para>
________________________________________________________-->
       <para>
        请注意，如果您当前使用此选项，您可能还希望将转储文件格式设置为<command>INSERT</command>，
		因为在还原期间<command>COPY FROM</command>不支持行安全性。
       </para>
<!-- pgdoc-cn_end sig_en=87cd95ecde715e8a4743794a1262a88d -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--exclude-table-data=<replaceable class="parameter">pattern</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=1afb239ed9c30b25a662e5d81ee38164 sig_cn_org=d132cca24f93342dd2f1bd59e6583c49 source=15.7 
       <para>
        Do not dump data for any tables matching <replaceable
        class="parameter">pattern</replaceable>. The pattern is
        interpreted according to the same rules as for <option>-t</option>.
        <option>-&minus;exclude-table-data</option> can be given more than once to
        exclude tables matching any of several patterns. This option is
        useful when you need the definition of a particular table even
        though you do not need the data in it.
       </para>
________________________________________________________-->
       <para>
        不要为任何匹配<replaceable class="parameter">pattern</replaceable>的表转储数据。
        该模式的解释方式与<option>-t</option>的规则相同。
        可以多次使用<option>--exclude-table-data</option>来排除匹配任何几个模式的表。
        当您需要特定表的定义但不需要其中的数据时，此选项非常有用。
       </para>
<!-- pgdoc-cn_end sig_en=1afb239ed9c30b25a662e5d81ee38164 -->
<!-- pgdoc-cn_start sig_en=39d7a81de54c652e573d9757bb928bb8 sig_cn_org=471ceef5c7566890c71b8a9aeb3702d3 source=15.7 
       <para>
        To exclude data for all tables in the database, see <option>-&minus;schema-only</option>.
       </para>
________________________________________________________-->
       <para>
        要排除数据库中所有表的数据，请参见<option>--schema-only</option>。
       </para>
<!-- pgdoc-cn_end sig_en=39d7a81de54c652e573d9757bb928bb8 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--extra-float-digits=<replaceable class="parameter">ndigits</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=7341926cb0b1850a19217e3cc38b3834 sig_cn_org=4bfa11780ca8fe672f99ed8232d886fd source=15.7 
       <para>
        Use the specified value of <option>extra_float_digits</option> when dumping
        floating-point data, instead of the maximum available precision.
        Routine dumps made for backup purposes should not use this option.
       </para>
________________________________________________________-->
       <para>
        使用指定值<option>extra_float_digits</option>来转储浮点数据，而不是使用最大可用精度。
        用于备份目的的例程不应使用此选项。
       </para>
<!-- pgdoc-cn_end sig_en=7341926cb0b1850a19217e3cc38b3834 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--if-exists</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=d95768d0c689c3272172cb9653dfcbae sig_cn_org=6a33cbecacd1d42d0b1c080cea38440e source=15.7 
       <para>
        Use <literal>DROP ... IF EXISTS</literal> commands to drop objects
        in <option>-&minus;clean</option> mode.  This suppresses <quote>does not
        exist</quote> errors that might otherwise be reported.  This
        option is not valid unless <option>-&minus;clean</option> is also
        specified.
       </para>
________________________________________________________-->
       <para>
        使用<literal>DROP ... IF EXISTS</literal>命令在<option>--clean</option>模式下删除对象。
        这将抑制可能会报告的<quote>不存在</quote>错误。除非还指定了<option>--clean</option>，否则此选项无效。
       </para>
<!-- pgdoc-cn_end sig_en=d95768d0c689c3272172cb9653dfcbae -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--include-foreign-data=<replaceable class="parameter">foreignserver</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=7a07e74d8958ea63b1df6f299321c138 sig_cn_org=937bee422f1ab1b06b0fae65ea79eee0 source=15.7 
       <para>
        Dump the data for any foreign table with a foreign server
        matching <replaceable class="parameter">foreignserver</replaceable>
        pattern. Multiple foreign servers can be selected by writing multiple
        <option>-&minus;include-foreign-data</option> switches.
        Also, the <replaceable class="parameter">foreignserver</replaceable> parameter is
        interpreted as a pattern according to the same rules used by
        <application>psql</application>'s <literal>\d</literal> commands
        (see <xref linkend="app-psql-patterns"/> below),
        so multiple foreign servers can also be selected by writing wildcard characters
        in the pattern.  When using wildcards, be careful to quote the pattern
        if needed to prevent the shell from expanding the wildcards; see
        <xref linkend="pg-dump-examples"/> below.
        The only exception is that an empty pattern is disallowed.
       </para>
________________________________________________________-->
       <para>
        将与匹配<replaceable class="parameter">foreignserver</replaceable>模式的外部服务器的任何外部表的数据转储。
        可以通过编写多个<option>-&minus;include-foreign-data</option>参数来选择多个外部服务器。
        此外，<replaceable class="parameter">foreignserver</replaceable>参数根据<application>psql</application>的<literal>\d</literal>命令使用的相同规则解释
        （请参见下面的<xref linkend="app-psql-patterns"/>），
        因此，也可以通过在模式中写入通配符字符来选择多个外部服务器。在使用通配符时，务必注意引用模式，
        以防止shell扩展通配符；请参见下面的<xref linkend="pg-dump-examples"/>。
        唯一的例外是不允许空模式。
       </para>
<!-- pgdoc-cn_end sig_en=7a07e74d8958ea63b1df6f299321c138 -->

       <note>
<!-- pgdoc-cn_start sig_en=52a0c50653bcb9955dc400af94339ccf sig_cn_org=ee7608c091224d1a008171b3c1eddf56 source=15.7 
        <para>
         When <option>-&minus;include-foreign-data</option> is specified,
         <application>pg_dump</application> does not check that the foreign
         table is writable.  Therefore, there is no guarantee that the
         results of a foreign table dump can be successfully restored.
        </para>
________________________________________________________-->
        <para>
         当指定<option>--include-foreign-data</option>选项时，
         <application>pg_dump</application>不会检查外部表是否可写。
         因此，不能保证外部表转储的结果可以成功恢复。
        </para>
<!-- pgdoc-cn_end sig_en=52a0c50653bcb9955dc400af94339ccf -->
       </note>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--inserts</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=74fd4d927cc08289541081aed1e18a71 sig_cn_org=eabb74bd094c127266d56be65906644f source=15.7 
       <para>
        Dump data as <command>INSERT</command> commands (rather
        than <command>COPY</command>).  This will make restoration very slow;
        it is mainly useful for making dumps that can be loaded into
        non-<productname>PostgreSQL</productname> databases.
        Any error during restoring will cause only rows that are part of the
        problematic <command>INSERT</command> to be lost, rather than the
        entire table contents.  Note that the restore might fail altogether if
        you have rearranged column order.  The
        <option>-&minus;column-inserts</option> option is safe against column order
        changes, though even slower.
       </para>
________________________________________________________-->
       <para>
        将数据转储为<command>INSERT</command>命令（而不是<command>COPY</command>）。
        这将使恢复过程非常缓慢；主要用于创建可以加载到非<productname>PostgreSQL</productname>数据库中的转储文件。
        在恢复过程中发生任何错误将导致只有属于有问题的<command>INSERT</command>的行丢失，而不是整个表的内容。
        请注意，如果您重新排列了列的顺序，恢复可能会完全失败。
        <option>--column-inserts</option>选项可以防止列顺序更改，尽管速度更慢。
       </para>
<!-- pgdoc-cn_end sig_en=74fd4d927cc08289541081aed1e18a71 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--load-via-partition-root</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=959a7dd0b6dde53f805233a70c947162 sig_cn_org=949e54b5655f10d34da47bb7fe3e12ea source=15.7 
       <para>
        When dumping data for a table partition, make
        the <command>COPY</command> or <command>INSERT</command> statements
        target the root of the partitioning hierarchy that contains it, rather
        than the partition itself.  This causes the appropriate partition to
        be re-determined for each row when the data is loaded.  This may be
        useful when restoring data on a server where rows do not always fall
        into the same partitions as they did on the original server.  That
        could happen, for example, if the partitioning column is of type text
        and the two systems have different definitions of the collation used
        to sort the partitioning column.
       </para>
________________________________________________________-->
       <para>
        当为表分区转储数据时，使<command>COPY</command>或<command>INSERT</command>语句
        指向包含它的分区层次结构的根，而不是分区本身。这会导致在加载数据时为每一行重新确定适当的分区。
        当在一个服务器上恢复数据时，这可能很有用，因为行不总是落入与原始服务器上相同的分区中。
        例如，如果分区列是文本类型，并且两个系统对用于对分区列进行排序的排序规则的定义不同。
       </para>
<!-- pgdoc-cn_end sig_en=959a7dd0b6dde53f805233a70c947162 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--lock-wait-timeout=<replaceable class="parameter">timeout</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=2bf4b44b67959eb277e079e42e493891 sig_cn_org=2e53f6a852f04177ce9a38c9bd9b76c4 source=15.7 
       <para>
        Do not wait forever to acquire shared table locks at the beginning of
        the dump. Instead fail if unable to lock a table within the specified
        <replaceable class="parameter">timeout</replaceable>. The timeout may be
        specified in any of the formats accepted by <command>SET
        statement_timeout</command>.  (Allowed formats vary depending on the server
        version you are dumping from, but an integer number of milliseconds
        is accepted by all versions.)
       </para>
________________________________________________________-->
       <para>
        在转储开始时不要永远等待获取共享表锁。如果无法在指定的<replaceable class="parameter">超时</replaceable>内锁定表，则失败。
        超时可以以<command>SET statement_timeout</command>接受的任何格式指定。（允许的格式因转储服务器版本而异，但所有版本都接受以毫秒为单位的整数。）
       </para>
<!-- pgdoc-cn_end sig_en=2bf4b44b67959eb277e079e42e493891 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-comments</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=64d546f23c786035eab11f7e3446946f sig_cn_org=2a710f03352645f6a9bfff0524e68470 source=15.7 
       <para>
        Do not dump comments.
       </para>
________________________________________________________-->
       <para>
        不要转储注释。
       </para>
<!-- pgdoc-cn_end sig_en=64d546f23c786035eab11f7e3446946f -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-publications</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=e3beeac18caec38f8802d2bf9e9e3b33 sig_cn_org=59f697c70d54fe650003057644d77212 source=15.7 
       <para>
        Do not dump publications.
       </para>
________________________________________________________-->
       <para>
        不要转储发布。
       </para>
<!-- pgdoc-cn_end sig_en=e3beeac18caec38f8802d2bf9e9e3b33 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-security-labels</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=a2c172083763a4a74f8d4a1fcf52a8b6 sig_cn_org=fcc07e4a6e4a7cb40598a38cb01af8f3 source=15.7 
       <para>
        Do not dump security labels.
       </para>
________________________________________________________-->
       <para>
        不要转储安全标签。
       </para>
<!-- pgdoc-cn_end sig_en=a2c172083763a4a74f8d4a1fcf52a8b6 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-subscriptions</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=9081e04bdf2696c648f265a07ee7896c sig_cn_org=f9f525f02440d6cbd5ae034e131d6856 source=15.7 
       <para>
        Do not dump subscriptions.
       </para>
________________________________________________________-->
       <para>
        不要转储订阅。
       </para>
<!-- pgdoc-cn_end sig_en=9081e04bdf2696c648f265a07ee7896c -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-sync</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=4707c3b1eadb33f52af9f5704fdeffd5 sig_cn_org=0789a4069c07d10ad1901285878cb8d3 source=15.7 
       <para>
        By default, <command>pg_dump</command> will wait for all files
        to be written safely to disk.  This option causes
        <command>pg_dump</command> to return without waiting, which is
        faster, but means that a subsequent operating system crash can leave
        the dump corrupt.  Generally, this option is useful for testing
        but should not be used when dumping data from production installation.
       </para>
________________________________________________________-->
       <para>
        默认情况下，<command>pg_dump</command>将等待所有文件被安全写入磁盘。
        此选项导致<command>pg_dump</command>在不等待的情况下返回，这样更快，
        但意味着随后的操作系统崩溃可能会导致转储文件损坏。通常，此选项在测试时很有用，
        但在从生产安装中转储数据时不应使用。
       </para>
<!-- pgdoc-cn_end sig_en=4707c3b1eadb33f52af9f5704fdeffd5 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-table-access-method</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=251beb20effebb1dc7bbe7c07afa9fba sig_cn_org=50be1e448a8e7c071565528a251aba90 source=15.7 
       <para>
        Do not output commands to select table access methods.
        With this option, all objects will be created with whichever
        table access method is the default during restore.
       </para>
________________________________________________________-->
       <para>
       不输出选择表访问方法的命令。使用此选项时，所有对象将在恢复过程中采用默认的表访问方法进行创建。
       </para>
<!-- pgdoc-cn_end sig_en=251beb20effebb1dc7bbe7c07afa9fba -->

<!-- pgdoc-cn_start sig_en=10252c40732e700bcd7c42e8cae7cb96 sig_cn_org=4cbf5275ef5a31dedb6f8d3ca8412304 source=15.7 
       <para>
        This option is ignored when emitting an archive (non-text) output
        file.  For the archive formats, you can specify the option when you
        call <command>pg_restore</command>.
       </para>
________________________________________________________-->
       <para>
        当生成一个归档（非文本）输出文件时，此选项将被忽略。对于归档格式，您可以在调用<command>pg_restore</command>时指定该选项。
       </para>
<!-- pgdoc-cn_end sig_en=10252c40732e700bcd7c42e8cae7cb96 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-tablespaces</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=b37e6b6ebd264d027476ae207c893063 sig_cn_org=d5132eb99393a01b9f30535ba867b1fc source=15.7 
       <para>
        Do not output commands to select tablespaces.
        With this option, all objects will be created in whichever
        tablespace is the default during restore.
       </para>
________________________________________________________-->
       <para>
        不要输出选择表空间的命令。
        使用此选项，所有对象将在恢复期间默认的表空间中创建。
       </para>
<!-- pgdoc-cn_end sig_en=b37e6b6ebd264d027476ae207c893063 -->

<!-- pgdoc-cn_start sig_en=10252c40732e700bcd7c42e8cae7cb96 sig_cn_org=4cbf5275ef5a31dedb6f8d3ca8412304 source=15.7 
       <para>
        This option is ignored when emitting an archive (non-text) output
        file.  For the archive formats, you can specify the option when you
        call <command>pg_restore</command>.
       </para>
________________________________________________________-->
       <para>
        当生成一个归档（非文本）输出文件时，此选项将被忽略。对于归档格式，您可以在调用<command>pg_restore</command>时指定该选项。
       </para>
<!-- pgdoc-cn_end sig_en=10252c40732e700bcd7c42e8cae7cb96 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-toast-compression</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=c79c1335e60bf3d7be029edc92ab1f29 sig_cn_org=e5363650df1340148b083e096fc7d9ef source=15.7 
       <para>
        Do not output commands to set <acronym>TOAST</acronym> compression
        methods.
        With this option, all columns will be restored with the default
        compression setting.
       </para>
________________________________________________________-->
       <para>
        不要输出命令来设置<acronym>TOAST</acronym>压缩方法。
        使用此选项，所有列将以默认压缩设置恢复。
       </para>
<!-- pgdoc-cn_end sig_en=c79c1335e60bf3d7be029edc92ab1f29 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--no-unlogged-table-data</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=5d400bfbcfa78c90a2bdcdcf7ec12c0b sig_cn_org=76500b5623abfd55a3ba450676cdd197 source=15.7 
       <para>
        Do not dump the contents of unlogged tables and sequences.  This
        option has no effect on whether or not the table and sequence
        definitions (schema) are dumped; it only suppresses dumping the table
        and sequence data. Data in unlogged tables and sequences
        is always excluded when dumping from a standby server.
       </para>
________________________________________________________-->
       <para>
        不要转储未记录表和序列的内容。此选项不影响是否转储表和序列的定义（模式）；
        它只是抑制转储表和序列数据。从备用服务器转储时，未记录表和序列中的数据始终被排除。
       </para>
<!-- pgdoc-cn_end sig_en=5d400bfbcfa78c90a2bdcdcf7ec12c0b -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--on-conflict-do-nothing</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=779150b83e34181aff9ff6f1c2e5c879 sig_cn_org=731a5ff474a2001b85c5a53b791a5050 source=15.7 
       <para>
        Add <literal>ON CONFLICT DO NOTHING</literal> to
        <command>INSERT</command> commands.
        This option is not valid unless <option>-&minus;inserts</option>,
        <option>-&minus;column-inserts</option> or
        <option>-&minus;rows-per-insert</option> is also specified.
       </para>
________________________________________________________-->
       <para>
        在<literal>ON CONFLICT DO NOTHING</literal>添加到<command>INSERT</command>命令中。
        除非还指定了<option>--inserts</option>、<option>--column-inserts</option>或
        <option>--rows-per-insert</option>，否则此选项无效。
       </para>
<!-- pgdoc-cn_end sig_en=779150b83e34181aff9ff6f1c2e5c879 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--quote-all-identifiers</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=bce1f26dcddfe2ba057b519763033e56 sig_cn_org=4565d88b1bec95de5c30bdac9f8727e0 source=15.7 
       <para>
        Force quoting of all identifiers.  This option is recommended when
        dumping a database from a server whose <productname>PostgreSQL</productname>
        major version is different from <application>pg_dump</application>'s, or when
        the output is intended to be loaded into a server of a different
        major version.  By default, <application>pg_dump</application> quotes only
        identifiers that are reserved words in its own major version.
        This sometimes results in compatibility issues when dealing with
        servers of other versions that may have slightly different sets
        of reserved words.  Using <option>-&minus;quote-all-identifiers</option> prevents
        such issues, at the price of a harder-to-read dump script.
       </para>
________________________________________________________-->
       <para>
        强制引用所有标识符。当从一个<productname>PostgreSQL</productname>主版本与<application>pg_dump</application>不同的服务器中导出数据库时，
        或者当输出意图加载到一个不同主版本的服务器时，建议使用此选项。默认情况下，
        <application>pg_dump</application>仅引用其自身主版本中的保留字标识符。
        这有时会导致与其他版本服务器处理时出现兼容性问题，可能具有稍有不同的保留字集合。
        使用<option>--quote-all-identifiers</option>可以避免这些问题，但会导致生成的脚本更难阅读。
       </para>
<!-- pgdoc-cn_end sig_en=bce1f26dcddfe2ba057b519763033e56 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--rows-per-insert=<replaceable class="parameter">nrows</replaceable></option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=1f257ad3e9aa76bf024b95b99814c1f9 sig_cn_org=1f52a22fb08cfe0fd9160fb718814580 source=15.7 
       <para>
        Dump data as <command>INSERT</command> commands (rather than
        <command>COPY</command>).  Controls the maximum number of rows per
        <command>INSERT</command> command. The value specified must be a
        number greater than zero.  Any error during restoring will cause only
        rows that are part of the problematic <command>INSERT</command> to be
        lost, rather than the entire table contents.
       </para>
________________________________________________________-->
       <para>
        将数据转储为<command>INSERT</command>命令（而不是<command>COPY</command>）。
        控制每个<command>INSERT</command>命令的最大行数。指定的值必须是大于零的数字。
        恢复过程中的任何错误将导致只有属于有问题的<command>INSERT</command>的行丢失，
        而不是整个表的内容。
       </para>
<!-- pgdoc-cn_end sig_en=1f257ad3e9aa76bf024b95b99814c1f9 -->
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>--section=<replaceable class="parameter">sectionname</replaceable></option></term>
       <listitem>
<!-- pgdoc-cn_start sig_en=1a2aa5219abcd22f68257856193d7409 sig_cn_org=de48c5b6aec72f1bdbcf290428499ced source=15.7 
         <para>
          Only dump the named section. The section name can be
          <option>pre-data</option>, <option>data</option>, or <option>post-data</option>.
          This option can be specified more than once to select multiple
          sections. The default is to dump all sections.
         </para>
________________________________________________________-->
         <para>
          仅转储指定的部分。部分名称可以是
          <option>pre-data</option>，<option>data</option>，或<option>post-data</option>。
          可以多次指定此选项以选择多个部分。默认情况下是转储所有部分。
         </para>
<!-- pgdoc-cn_end sig_en=1a2aa5219abcd22f68257856193d7409 -->
<!-- pgdoc-cn_start sig_en=1a78d7d0b8ddb37c0d881f7ac4e86624 sig_cn_org=87cfeaf2c96b8898e95898e40dbfaa68 source=15.7 
         <para>
          The data section contains actual table data, large-object
          contents, and sequence values.
          Post-data items include definitions of indexes, triggers, rules,
          and constraints other than validated check constraints.
          Pre-data items include all other data definition items.
         </para>
________________________________________________________-->
         <para>
          数据部分包含实际的表数据、大对象内容和序列值。
          数据后项包括索引、触发器、规则和除验证检查约束之外的约束的定义。
          数据前项包括所有其他数据定义项。
         </para>
<!-- pgdoc-cn_end sig_en=1a78d7d0b8ddb37c0d881f7ac4e86624 -->
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--serializable-deferrable</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=d92caac8e231636a7fad5c35597736c7 sig_cn_org=879cc62da2ac907109bfb702efecf3e3 source=15.7 
       <para>
        Use a <literal>serializable</literal> transaction for the dump, to
        ensure that the snapshot used is consistent with later database
        states; but do this by waiting for a point in the transaction stream
        at which no anomalies can be present, so that there isn't a risk of
        the dump failing or causing other transactions to roll back with a
        <literal>serialization_failure</literal>.  See <xref linkend="mvcc"/>
        for more information about transaction isolation and concurrency
        control.
       </para>
________________________________________________________-->
       <para>
        使用<literal>可序列化</literal>事务进行转储，以确保使用的快照与后续数据库状态一致；
        但是通过等待事务流中不存在异常的点来实现这一点，以确保转储不会失败或导致其他事务回滚，
        出现<literal>serialization_failure</literal>。有关事务隔离和并发控制的更多信息，请参见<xref linkend="mvcc"/>。
       </para>
<!-- pgdoc-cn_end sig_en=d92caac8e231636a7fad5c35597736c7 -->

<!-- pgdoc-cn_start sig_en=551679e2c5b060454ea9eb3e74a44b55 sig_cn_org=29d231db2182a2a45a53b8425ada503b source=15.7 
       <para>
        This option is not beneficial for a dump which is intended only for
        disaster recovery.  It could be useful for a dump used to load a
        copy of the database for reporting or other read-only load sharing
        while the original database continues to be updated.  Without it the
        dump may reflect a state which is not consistent with any serial
        execution of the transactions eventually committed.  For example, if
        batch processing techniques are used, a batch may show as closed in
        the dump without all of the items which are in the batch appearing.
       </para>
________________________________________________________-->
       <para>
        这个选项对于仅用于灾难恢复的转储并不有益。对于用于加载数据库副本以供报告或其他只读负载共享的转储可能有用，而原始数据库仍在更新。如果没有它，转储可能反映出与最终提交的事务的任何串行执行不一致的状态。例如，如果使用批处理技术，一个批处理可能在转储中显示为关闭，而批处理中的所有项目都没有出现。
       </para>
<!-- pgdoc-cn_end sig_en=551679e2c5b060454ea9eb3e74a44b55 -->

<!-- pgdoc-cn_start sig_en=a9e674999dd3ed7c5a85c3eb76c92fd9 sig_cn_org=812164fe457711ee4bd176db73fc5a86 source=15.7 
       <para>
        This option will make no difference if there are no read-write
        transactions active when pg_dump is started.  If read-write
        transactions are active, the start of the dump may be delayed for an
        indeterminate length of time.  Once running, performance with or
        without the switch is the same.
       </para>
________________________________________________________-->
       <para>
        如果在启动pg_dump时没有活动的读写事务，则此选项不会产生任何影响。如果有活动的读写事务，
        则dump的开始可能会延迟一段不确定的时间。一旦运行，使用此开关与不使用开关时的性能是相同的。
</para>
<!-- pgdoc-cn_end sig_en=a9e674999dd3ed7c5a85c3eb76c92fd9 -->
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>--snapshot=<replaceable class="parameter">snapshotname</replaceable></option></term>
       <listitem>
<!-- pgdoc-cn_start sig_en=c08aeef06d7eb445b264c908ac2fe7a4 sig_cn_org=3c5797029ead18f5f0f529cd38ca9496 source=15.7 
         <para>
          Use the specified synchronized snapshot when making a dump of the
          database (see
          <xref linkend="functions-snapshot-synchronization-table"/> for more
          details).
         </para>
________________________________________________________-->
         <para>
          在制作数据库转储时，请使用指定的同步快照（详细信息请参见<xref linkend="functions-snapshot-synchronization-table"/>）。
         </para>
<!-- pgdoc-cn_end sig_en=c08aeef06d7eb445b264c908ac2fe7a4 -->
<!-- pgdoc-cn_start sig_en=e43602c649b7beefc7f7cebf657f5d96 sig_cn_org=9d31a270b6b17b4a55931eefe4bb356e source=15.7 
         <para>
          This option is useful when needing to synchronize the dump with
          a logical replication slot (see <xref linkend="logicaldecoding"/>)
          or with a concurrent session.
         </para>
________________________________________________________-->
         <para>
          当需要将转储与逻辑复制插槽（参见<xref linkend="logicaldecoding"/>）或与并发会话同步时，此选项非常有用。
         </para>
<!-- pgdoc-cn_end sig_en=e43602c649b7beefc7f7cebf657f5d96 -->
<!-- pgdoc-cn_start sig_en=cd82f2eacf9f5661befcfbc35c0ff2a9 sig_cn_org=299834f66a32853d199b4ee84067632b source=15.7 
         <para>
          In the case of a parallel dump, the snapshot name defined by this
          option is used rather than taking a new snapshot.
         </para>
________________________________________________________-->
         <para>
          在并行转储的情况下，使用此选项定义的快照名称，而不是创建一个新的快照。
         </para>
<!-- pgdoc-cn_end sig_en=cd82f2eacf9f5661befcfbc35c0ff2a9 -->
       </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--strict-names</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=e5532b34384ba58ed7c70fe4b1d9a1c3 sig_cn_org=99d46427955acd323ce0ae6774fcfd66 source=15.7 
       <para>
        Require that each
        extension (<option>-e</option>/<option>-&minus;extension</option>),
        schema (<option>-n</option>/<option>-&minus;schema</option>) and
        table (<option>-t</option>/<option>-&minus;table</option>) qualifier
        match at least one extension/schema/table in the database to be dumped.
        Note that if none of the extension/schema/table qualifiers find
        matches, <application>pg_dump</application> will generate an error
        even without <option>-&minus;strict-names</option>.
       </para>
________________________________________________________-->
       <para>
        要求每个扩展(<option>-e</option>/<option>--extension</option>)、
        模式(<option>-n</option>/<option>--schema</option>)和
        表(<option>-t</option>/<option>--table</option>)限定符
        至少匹配数据库中要转储的一个扩展/模式/表。
        请注意，如果没有扩展/模式/表限定符找到匹配项，
        <application>pg_dump</application>即使没有<option>--strict-names</option>，
        也会生成错误。
       </para>
<!-- pgdoc-cn_end sig_en=e5532b34384ba58ed7c70fe4b1d9a1c3 -->
<!-- pgdoc-cn_start sig_en=1233c27f2533ff8d2f2738f1b3ff2283 sig_cn_org=0484469404dab221d6c3cad8ddbb7015 source=15.7 
       <para>
        This option has no effect
        on <option>-N</option>/<option>-&minus;exclude-schema</option>,
        <option>-T</option>/<option>-&minus;exclude-table</option>,
        or <option>-&minus;exclude-table-data</option>.  An exclude pattern failing
        to match any objects is not considered an error.
       </para>
________________________________________________________-->
       <para>
        该选项对<option>-N</option>/<option>--exclude-schema</option>、
        <option>-T</option>/<option>--exclude-table</option>或
        <option>--exclude-table-data</option>没有影响。未匹配任何对象的排除模式不被视为错误。
       </para>
<!-- pgdoc-cn_end sig_en=1233c27f2533ff8d2f2738f1b3ff2283 -->
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--use-set-session-authorization</option></term>
      <listitem>
<!-- pgdoc-cn_start sig_en=6d89326bead4b6fe820cf0621a69c27d sig_cn_org=7565f90df04977d24ee2c19820da0291 source=15.7 
       <para>
        Output SQL-standard <command>SET SESSION AUTHORIZATION</command> commands
        instead of <command>ALTER OWNER</command> commands to determine object
        ownership.  This makes the dump more standards-compatible, but
        depending on the history of the objects in the dump, might not restore
        properly.  Also, a dump using <command>SET SESSION AUTHORIZATION</command>
        will certainly require superuser privileges to restore correctly,
        whereas <command>ALTER OWNER</command> requires lesser privileges.
       </para>
________________________________________________________-->
       <para>
        输出SQL标准的<command>SET SESSION AUTHORIZATION</command>命令，而不是<command>ALTER OWNER</command>命令来确定对象所有权。
        这使得转储更符合标准，但根据转储中对象的历史，可能无法正确恢复。
        此外，使用<command>SET SESSION AUTHORIZATION</command>的转储肯定需要超级用户权限才能正确恢复，
        而<command>ALTER OWNER</command>需要较低的权限。
       </para>
<!-- pgdoc-cn_end sig_en=6d89326bead4b6fe820cf0621a69c27d -->
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</option></term>
       <term><option>--help</option></term>
       <listitem>
<!-- pgdoc-cn_start sig_en=6e0cfcebfe8e8373d464391642b8f171 sig_cn_org=6140f3dc17552d2e3228f149af6b99f5 source=15.7 
       <para>
       Show help about <application>pg_dump</application> command line
       arguments, and exit.
       </para>
________________________________________________________-->
       <para>
       显示关于<application>pg_dump</application>命令行参数的帮助信息，并退出。
       </para>
<!-- pgdoc-cn_end sig_en=6e0cfcebfe8e8373d464391642b8f171 -->
       </listitem>
     </varlistentry>

    </variablelist>
   </para>

<!-- pgdoc-cn_start sig_en=1add991f17e0770d1a30d7e807d69e94 sig_cn_org=None source=14.1 
   <para>
    The following command-line options control the database connection parameters.

    <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">dbname</replaceable></option></term>
      <term><option>-&minus;dbname=<replaceable class="parameter">dbname</replaceable></option></term>
      <listitem>
      <para>
       Specifies the name of the database to connect to. This is
       equivalent to specifying <replaceable
       class="parameter">dbname</replaceable> as the first non-option
       argument on the command line.  The <replaceable>dbname</replaceable>
       can be a <link linkend="libpq-connstring">connection string</link>.
       If so, connection string parameters will override any conflicting
       command line options.
      </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable class="parameter">host</replaceable></option></term>
      <term><option>-&minus;host=<replaceable class="parameter">host</replaceable></option></term>
      <listitem>
       <para>
        Specifies the host name of the machine on which the server is
        running.  If the value begins with a slash, it is used as the
        directory for the Unix domain socket. The default is taken
        from the <envar>PGHOST</envar> environment variable, if set,
        else a Unix domain socket connection is attempted.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
      <term><option>-&minus;port=<replaceable class="parameter">port</replaceable></option></term>
      <listitem>
       <para>
        Specifies the TCP port or local Unix domain socket file
        extension on which the server is listening for connections.
        Defaults to the <envar>PGPORT</envar> environment variable, if
        set, or a compiled-in default.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>-&minus;username=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <para>
        User name to connect as.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</option></term>
      <term><option>-&minus;no-password</option></term>
      <listitem>
       <para>
        Never issue a password prompt.  If the server requires
        password authentication and a password is not available by
        other means such as a <filename>.pgpass</filename> file, the
        connection attempt will fail.  This option can be useful in
        batch jobs and scripts where no user is present to enter a
        password.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>-&minus;password</option></term>
      <listitem>
       <para>
        Force <application>pg_dump</application> to prompt for a
        password before connecting to a database.
       </para>

       <para>
        This option is never essential, since
        <application>pg_dump</application> will automatically prompt
        for a password if the server demands password authentication.
        However, <application>pg_dump</application> will waste a
        connection attempt finding out that the server wants a password.
        In some cases it is worth typing <option>-W</option> to avoid the extra
        connection attempt.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-&minus;role=<replaceable class="parameter">rolename</replaceable></option></term>
      <listitem>
       <para>
        Specifies a role name to be used to create the dump.
        This option causes <application>pg_dump</application> to issue a
        <command>SET ROLE</command> <replaceable class="parameter">rolename</replaceable>
        command after connecting to the database. It is useful when the
        authenticated user (specified by <option>-U</option>) lacks privileges
        needed by <application>pg_dump</application>, but can switch to a role with
        the required rights.  Some installations have a policy against
        logging in directly as a superuser, and use of this option allows
        dumps to be made without violating the policy.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
________________________________________________________-->
   <para>
    下列命令行选项控制数据库连接参数。

    <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">dbname</replaceable></option></term>
      <term><option>--dbname=<replaceable class="parameter">dbname</replaceable></option></term>
      <listitem>
      <para>
       指定要连接的数据库的名称。 这等效于在命令行上将<replaceable class="parameter">dbname</replaceable>指定为
       第一个非选项参数。<replaceable>dbname</replaceable>可以是<link linkend="libpq-connstring">连接字符串</link>。
       如果是这样，连接字符串参数将覆盖所有冲突的命令行选项。
      </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable class="parameter">host</replaceable></option></term>
      <term><option>--host=<replaceable class="parameter">host</replaceable></option></term>
      <listitem>
       <para>
        指定服务器正在运行的机器的主机名。如果该值开始于一个斜线，它被用作一个 Unix 域套接字的目录。默认是从<envar>PGHOST</envar>环境变量中取得（如果被设置），否则将尝试一次 Unix 域套接字连接。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
      <term><option>--port=<replaceable class="parameter">port</replaceable></option></term>
      <listitem>
       <para>
        指定服务器正在监听连接的 TCP 端口或本地 Unix 域套接字文件扩展名。默认是放在<envar>PGPORT</envar>环境变量中（如果被设置），否则使用编译在程序中的默认值。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>--username=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <para>
        要作为哪个用户连接。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</option></term>
      <term><option>--no-password</option></term>
      <listitem>
       <para>
        从不发出一个口令提示。如果服务器要求口令认证并且没有其他方式提供口令（例如一个<filename>.pgpass</filename>文件），那么连接尝试将失败。这个选项对于批处理任务和脚本有用，因为在其中没有一个用户来输入口令。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>--password</option></term>
      <listitem>
       <para>
        强制<application>pg_dump</application>在连接到一个数据库之前提示要求一个口令。
       </para>

       <para>
        这个选项从来不是必须的，因为如果服务器要求口令认证，<application>pg_dump</application>将自动提示要求一个口令。但是，<application>pg_dump</application>将浪费一次连接尝试来发现服务器想要一个口令。在某些情况下，值得键入<option>-W</option>来避免额外的连接尝试。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>--role=<replaceable class="parameter">rolename</replaceable></option></term>
      <listitem>
       <para>
        指定一个用来创建该转储的角色名。这个选项导致<application>pg_dump</application>在连接到数据库后发出一个<command>SET ROLE</command> <replaceable class="parameter">rolename</replaceable>命令。当已认证用户（由<option>-U</option>指定）缺少<application>pg_dump</application>所需的特权但是能够切换到一个具有所需权利的角色时，这个选项很有用。一些安装有针对直接作为超级用户登录的策略，使用这个选项可以让转储在不违反该策略的前提下完成。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
<!-- pgdoc-cn_end sig_en=1add991f17e0770d1a30d7e807d69e94 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=3b1cdb4e9f7c411322dc1c76ca7f31f3 sig_cn_org=None source=14.1 
  <title>Environment</title>
________________________________________________________-->
  <title>环境</title>
<!-- pgdoc-cn_end sig_en=3b1cdb4e9f7c411322dc1c76ca7f31f3 -->

  <variablelist>
   <varlistentry>
    <term><envar>PGDATABASE</envar></term>
    <term><envar>PGHOST</envar></term>
    <term><envar>PGOPTIONS</envar></term>
    <term><envar>PGPORT</envar></term>

    <term><envar>PGUSER</envar></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=f412b137fb925529b7e8d7608ee14ab0 sig_cn_org=None source=14.1 
     <para>
      Default connection parameters.
     </para>
________________________________________________________-->
     <para>
      默认连接参数
     </para>
<!-- pgdoc-cn_end sig_en=f412b137fb925529b7e8d7608ee14ab0 -->
    </listitem>

   </varlistentry>

   <varlistentry>
    <term><envar>PG_COLOR</envar></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=39edaf7f74e555fd049f4cbfdb1bb1dd sig_cn_org=None source=14.1 
     <para>
      Specifies whether to use color in diagnostic messages. Possible values
      are <literal>always</literal>, <literal>auto</literal> and
      <literal>never</literal>.
     </para>
________________________________________________________-->
     <para>
      规定在诊断消息中是否使用颜色。可能的值为<literal>always</literal>、 <literal>auto</literal>、<literal>never</literal>。.
     </para>
<!-- pgdoc-cn_end sig_en=39edaf7f74e555fd049f4cbfdb1bb1dd -->
    </listitem>
   </varlistentry>
  </variablelist>

<!-- pgdoc-cn_start sig_en=18623d3e90c0b63e38e8518be27a3237 sig_cn_org=None source=14.1 
  <para>
   This utility, like most other <productname>PostgreSQL</productname> utilities,
   also uses the environment variables supported by <application>libpq</application>
   (see <xref linkend="libpq-envars"/>).
  </para>
________________________________________________________-->
  <para>
   和大部分其他<productname>PostgreSQL</productname>工具相似，这个工具也使用<application>libpq</application>（见<xref linkend="libpq-envars"/>）支持的环境变量。
  </para>
<!-- pgdoc-cn_end sig_en=18623d3e90c0b63e38e8518be27a3237 -->

 </refsect1>

 <refsect1 id="app-pgdump-diagnostics">
<!-- pgdoc-cn_start sig_en=fcbfec7bdfdd5abe4ac8d6f255f7190f sig_cn_org=None source=14.1 
  <title>Diagnostics</title>
________________________________________________________-->
  <title>诊断</title>
<!-- pgdoc-cn_end sig_en=fcbfec7bdfdd5abe4ac8d6f255f7190f -->

<!-- pgdoc-cn_start sig_en=f44bcaae90e38093865855edd528322a sig_cn_org=None source=14.1 
  <para>
   <application>pg_dump</application> internally executes
   <command>SELECT</command> statements. If you have problems running
   <application>pg_dump</application>, make sure you are able to
   select information from the database using, for example, <xref
   linkend="app-psql"/>.  Also, any default connection settings and environment
   variables used by the <application>libpq</application> front-end
   library will apply.
  </para>
________________________________________________________-->
  <para>
   <application>pg_dump</application>在内部执行<command>SELECT</command>语句。如果你运行<application>pg_dump</application>时出现问题，确定你能够从正在使用的数据库中选择信息，例如<xref linkend="app-psql"/>。此外，<application>libpq</application>前端-后端库所使用的任何默认连接设置和环境变量都将适用。
  </para>
<!-- pgdoc-cn_end sig_en=f44bcaae90e38093865855edd528322a -->

<!-- pgdoc-cn_start sig_en=13a2a1702e271ce4c99ea8fb97b8322e sig_cn_org=f65dfbc5097ec58cd7bfdc650a6a7f86 source=15.7 
  <para>
   The database activity of <application>pg_dump</application> is
   normally collected by the cumulative statistics system.  If this is
   undesirable, you can set parameter <varname>track_counts</varname>
   to false via <envar>PGOPTIONS</envar> or the <literal>ALTER
   USER</literal> command.
  </para>
________________________________________________________-->
  <para>
   <application>pg_dump</application>的数据库活动通常由累积统计系统收集。
   如果这是不希望的，您可以通过<envar>PGOPTIONS</envar>或<literal>ALTER
   USER</literal>命令将参数<varname>track_counts</varname>设置为false。
</para>
<!-- pgdoc-cn_end sig_en=13a2a1702e271ce4c99ea8fb97b8322e -->

 </refsect1>


 <refsect1 id="pg-dump-notes">
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=65dfe752955869cf7eef1e85984dfd6c sig_cn_org=None source=14.1 
  <para>
   If your database cluster has any local additions to the <literal>template1</literal> database,
   be careful to restore the output of <application>pg_dump</application> into a
   truly empty database; otherwise you are likely to get errors due to
   duplicate definitions of the added objects.  To make an empty database
   without any local additions, copy from <literal>template0</literal> not <literal>template1</literal>,
   for example:
<programlisting>
CREATE DATABASE foo WITH TEMPLATE template0;
</programlisting>
  </para>
________________________________________________________-->
  <para>
   如果你的数据库集簇对于<literal>template1</literal>数据库有任何本地添加，要注意将<application>pg_dump</application>的输出恢复到一个真正的空数据库。否则你很可能由于以增加对象的重复定义而得到错误。要创建一个不带任何本地添加的空数据库，从<literal>template0</literal>而不是<literal>template1</literal>复制它，例如：
<programlisting>
CREATE DATABASE foo WITH TEMPLATE template0;
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=65dfe752955869cf7eef1e85984dfd6c -->

<!-- pgdoc-cn_start sig_en=bb6cc09816c6d87748dd1a6ab9ec1a27 sig_cn_org=None source=14.1 
  <para>
   When a data-only dump is chosen and the option <option>-&minus;disable-triggers</option>
   is used, <application>pg_dump</application> emits commands
   to disable triggers on user tables before inserting the data,
   and then commands to re-enable them after the data has been
   inserted.  If the restore is stopped in the middle, the system
   catalogs might be left in the wrong state.
  </para>
________________________________________________________-->
  <para>
   当一个只含数据的转储被选中并且使用了选项<option>--disable-triggers</option>时，<application>pg_dump</application>在开始插入数据之前会发出命令禁用用户表上的触发器，并且接着在数据被插入之后发出命令重新启用它们。如果恢复中途被停止，系统目录可能会停留在一种错误状态。
  </para>
<!-- pgdoc-cn_end sig_en=bb6cc09816c6d87748dd1a6ab9ec1a27 -->

<!-- pgdoc-cn_start sig_en=68f3556e74e71b49c349227a3a713172 sig_cn_org=None source=14.1 
  <para>
   The dump file produced by <application>pg_dump</application>
   does not contain the statistics used by the optimizer to make
   query planning decisions.  Therefore, it is wise to run
   <command>ANALYZE</command> after restoring from a dump file
   to ensure optimal performance; see <xref linkend="vacuum-for-statistics"/>
   and <xref linkend="autovacuum"/> for more information.
  </para>
________________________________________________________-->
  <para>
   <application>pg_dump</application>产生的转储文件不包含优化器用来做出查询计划决定的统计信息。因此，在从一个转储文件恢复后运行<command>ANALYZE</command>来确保最优性能是明智的，详见<xref linkend="vacuum-for-statistics"/>和<xref linkend="autovacuum"/>。
  </para>
<!-- pgdoc-cn_end sig_en=68f3556e74e71b49c349227a3a713172 -->

<!-- pgdoc-cn_start sig_en=67fa50957781b7d00cfeb6ecee6a8869 sig_cn_org=89ea93583648760957964a6f6c03cec2 source=15.7 
  <para>
   Because <application>pg_dump</application> is used to transfer data
   to newer versions of <productname>PostgreSQL</productname>, the output of
   <application>pg_dump</application> can be expected to load into
   <productname>PostgreSQL</productname> server versions newer than
   <application>pg_dump</application>'s version.  <application>pg_dump</application> can also
   dump from <productname>PostgreSQL</productname> servers older than its own version.
   (Currently, servers back to version 9.2 are supported.)
   However, <application>pg_dump</application> cannot dump from
   <productname>PostgreSQL</productname> servers newer than its own major version;
   it will refuse to even try, rather than risk making an invalid dump.
   Also, it is not guaranteed that <application>pg_dump</application>'s output can
   be loaded into a server of an older major version &mdash; not even if the
   dump was taken from a server of that version.  Loading a dump file
   into an older server may require manual editing of the dump file
   to remove syntax not understood by the older server.
   Use of the <option>-&minus;quote-all-identifiers</option> option is recommended
   in cross-version cases, as it can prevent problems arising from varying
   reserved-word lists in different <productname>PostgreSQL</productname> versions.
  </para>
________________________________________________________-->
  <para>
   因为<application>pg_dump</application>用于将数据传输到更新版本的<productname>PostgreSQL</productname>，
   所以可以预期<application>pg_dump</application>的输出可以加载到比<application>pg_dump</application>版本更新的
   <productname>PostgreSQL</productname>服务器版本中。 <application>pg_dump</application>也可以从比其自身版本旧的
   <productname>PostgreSQL</productname>服务器中转储数据。 （目前，支持的服务器版本可以追溯到9.2版本。）
   但是，<application>pg_dump</application>无法从比其自身主要版本更新的<productname>PostgreSQL</productname>服务器中转储数据；
   它将拒绝尝试，而不是冒险生成无效的转储文件。此外，不能保证<application>pg_dump</application>的输出可以加载到
   较旧主要版本的服务器中 — 即使转储文件是从该版本的服务器中获取的。将转储文件加载到较旧的服务器可能需要手动编辑
   转储文件，以删除较旧服务器不理解的语法。在跨版本情况下，建议使用<option>--quote-all-identifiers</option>选项，
   因为它可以防止在不同<productname>PostgreSQL</productname>版本中由于保留字列表的差异而导致的问题。
</para>
<!-- pgdoc-cn_end sig_en=67fa50957781b7d00cfeb6ecee6a8869 -->

<!-- pgdoc-cn_start sig_en=54e38076840a80f6f1863179ad8fe55b sig_cn_org=f0673e707f4feb4dbaa92350a6df00fe source=15.7 
  <para>
   When dumping logical replication subscriptions,
   <application>pg_dump</application> will generate <command>CREATE
   SUBSCRIPTION</command> commands that use the <literal>connect = false</literal>
   option, so that restoring the subscription does not make remote connections
   for creating a replication slot or for initial table copy.  That way, the
   dump can be restored without requiring network access to the remote
   servers.  It is then up to the user to reactivate the subscriptions in a
   suitable way.  If the involved hosts have changed, the connection
   information might have to be changed.  It might also be appropriate to
   truncate the target tables before initiating a new full table copy.  If users
   intend to copy initial data during refresh they must create the slot with
   <literal>two_phase = false</literal>.  After the initial sync, the
   <literal>two_phase</literal> option will be automatically enabled by the
   subscriber if the subscription had been originally created with
   <literal>two_phase = true</literal> option.
  </para>
________________________________________________________-->
  <para>
   在转储逻辑复制订阅时，<application>pg_dump</application>将生成使用<command>CREATE
   SUBSCRIPTION</command>命令的选项，该选项使用<literal>connect = false</literal>，
   以便恢复订阅时不会进行远程连接来创建复制插槽或进行初始表复制。这样，可以在不需要访问远程服务器的情况下恢复转储。然后，用户可以以适当的方式重新激活订阅。如果涉及的主机已更改，则连接信息可能需要更改。在启动新的完整表复制之前截断目标表可能也是合适的。如果用户打算在刷新期间复制初始数据，则必须使用<literal>two_phase = false</literal>创建插槽。在初始同步之后，如果订阅最初是使用<literal>two_phase = true</literal>选项创建的，则订阅者将自动启用<literal>two_phase</literal>选项。
  </para>
<!-- pgdoc-cn_end sig_en=54e38076840a80f6f1863179ad8fe55b -->
 </refsect1>

 <refsect1 id="pg-dump-examples" xreflabel="Examples">
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>实例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=739adbfa8055842b76b15db81bba0360 sig_cn_org=None source=14.1 
  <para>
   To dump a database called <literal>mydb</literal> into an SQL-script file:
<screen>
<prompt>$</prompt> <userinput>pg_dump mydb &gt; db.sql</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   要把一个数据库<literal>mydb</literal>转储到一个 SQL 脚本文件：
<screen>
<prompt>$</prompt> <userinput>pg_dump mydb &gt; db.sql</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=739adbfa8055842b76b15db81bba0360 -->

<!-- pgdoc-cn_start sig_en=cf5324915aadaf52b7ce09e24730f13f sig_cn_org=None source=14.1 
  <para>
   To reload such a script into a (freshly created) database named
   <literal>newdb</literal>:

<screen>
<prompt>$</prompt> <userinput>psql -d newdb -f db.sql</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   要把这样一个脚本重新载入到一个（新创建的）名为<literal>newdb</literal>的数据库中：

<screen>
<prompt>$</prompt> <userinput>psql -d newdb -f db.sql</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=cf5324915aadaf52b7ce09e24730f13f -->

<!-- pgdoc-cn_start sig_en=19096b602fc44b9b98a6dda81d4148c2 sig_cn_org=None source=14.1 
  <para>
   To dump a database into a custom-format archive file:

<screen>
<prompt>$</prompt> <userinput>pg_dump -Fc mydb &gt; db.dump</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   要转储一个数据库到一个自定义格式归档文件：

<screen>
<prompt>$</prompt> <userinput>pg_dump -Fc mydb &gt; db.dump</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=19096b602fc44b9b98a6dda81d4148c2 -->

<!-- pgdoc-cn_start sig_en=303858bc15d177960f9f8668af93cb30 sig_cn_org=None source=14.1 
  <para>
   To dump a database into a directory-format archive:

<screen>
<prompt>$</prompt> <userinput>pg_dump -Fd mydb -f dumpdir</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   要转储一个数据库到一个目录格式的归档：

<screen>
<prompt>$</prompt> <userinput>pg_dump -Fd mydb -f dumpdir</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=303858bc15d177960f9f8668af93cb30 -->

<!-- pgdoc-cn_start sig_en=df94b97bfc7d8e489e039f135b197e72 sig_cn_org=None source=14.1 
  <para>
   To dump a database into a directory-format archive in parallel with
   5 worker jobs:

<screen>
<prompt>$</prompt> <userinput>pg_dump -Fd mydb -j 5 -f dumpdir</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   要用 5 个并行的工作者任务转储一个数据库到一个目录格式的归档：

<screen>
<prompt>$</prompt> <userinput>pg_dump -Fd mydb -j 5 -f dumpdir</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=df94b97bfc7d8e489e039f135b197e72 -->

<!-- pgdoc-cn_start sig_en=c0a5d9b7cf8399acbc60f9a495625485 sig_cn_org=None source=14.1 
  <para>
   To reload an archive file into a (freshly created) database named
   <literal>newdb</literal>:

<screen>
<prompt>$</prompt> <userinput>pg_restore -d newdb db.dump</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   要把一个归档文件重新载入到一个（新创建的）名为<literal>newdb</literal>的数据库：

<screen>
<prompt>$</prompt> <userinput>pg_restore -d newdb db.dump</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=c0a5d9b7cf8399acbc60f9a495625485 -->

<!-- pgdoc-cn_start sig_en=a7be66d7e02bde8097ee4151d7b9dbfc sig_cn_org=None source=14.1 
  <para>
   To reload an archive file into the same database it was dumped from,
   discarding the current contents of that database:

<screen>
<prompt>$</prompt> <userinput>pg_restore -d postgres -&minus;clean -&minus;create db.dump</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   把一个归档文件重新装载到同一个数据库（该归档正是从这个数据库中转储得来）中，丢掉那个数据库中的当前内容：

<screen>
<prompt>$</prompt> <userinput>pg_restore -d postgres --clean --create db.dump</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=a7be66d7e02bde8097ee4151d7b9dbfc -->

<!-- pgdoc-cn_start sig_en=8eed6a515b126e9ace0fa4e91f7b1fae sig_cn_org=None source=14.1 
  <para>
   To dump a single table named <literal>mytab</literal>:

<screen>
<prompt>$</prompt> <userinput>pg_dump -t mytab mydb &gt; db.sql</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   要转储一个名为<literal>mytab</literal>的表：

<screen>
<prompt>$</prompt> <userinput>pg_dump -t mytab mydb &gt; db.sql</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=8eed6a515b126e9ace0fa4e91f7b1fae -->

<!-- pgdoc-cn_start sig_en=60eb2a7e1dc1f103bbeac312662e733b sig_cn_org=None source=14.1 
  <para>
   To dump all tables whose names start with <literal>emp</literal> in the
   <literal>detroit</literal> schema, except for the table named
   <literal>employee_log</literal>:

<screen>
<prompt>$</prompt> <userinput>pg_dump -t 'detroit.emp*' -T detroit.employee_log mydb &gt; db.sql</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   要转储<literal>detroit</literal>模式中名称以<literal>emp</literal>开始的所有表，排除名为<literal>employee_log</literal>的表：

<screen>
<prompt>$</prompt> <userinput>pg_dump -t 'detroit.emp*' -T detroit.employee_log mydb &gt; db.sql</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=60eb2a7e1dc1f103bbeac312662e733b -->

<!-- pgdoc-cn_start sig_en=20e16fb401f7d1b24283e63d88c82e02 sig_cn_org=None source=14.1 
  <para>
   To dump all schemas whose names start with <literal>east</literal> or
   <literal>west</literal> and end in <literal>gsm</literal>, excluding any schemas whose
   names contain the word <literal>test</literal>:

<screen>
<prompt>$</prompt> <userinput>pg_dump -n 'east*gsm' -n 'west*gsm' -N '*test*' mydb &gt; db.sql</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   要转储名称以<literal>east</literal>或者<literal>west</literal>开始并且以<literal>gsm</literal>结束的所有模式，排除名称包含词<literal>test</literal>的任何模式：

<screen>
<prompt>$</prompt> <userinput>pg_dump -n 'east*gsm' -n 'west*gsm' -N '*test*' mydb &gt; db.sql</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=20e16fb401f7d1b24283e63d88c82e02 -->

<!-- pgdoc-cn_start sig_en=29cd28652846a3a507b3e139a916ce27 sig_cn_org=None source=14.1 
  <para>
   The same, using regular expression notation to consolidate the switches:

<screen>
<prompt>$</prompt> <userinput>pg_dump -n '(east|west)*gsm' -N '*test*' mydb &gt; db.sql</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   同样，用正则表达式记号法来合并开关：

<screen>
<prompt>$</prompt> <userinput>pg_dump -n '(east|west)*gsm' -N '*test*' mydb &gt; db.sql</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=29cd28652846a3a507b3e139a916ce27 -->

<!-- pgdoc-cn_start sig_en=d8afa9a664f123b96975a453ec13269e sig_cn_org=None source=14.1 
  <para>
   To dump all database objects except for tables whose names begin with
   <literal>ts_</literal>:

<screen>
<prompt>$</prompt> <userinput>pg_dump -T 'ts_*' mydb &gt; db.sql</userinput>
</screen>
  </para>
________________________________________________________-->
  <para>
   要转储除了名称以<literal>ts_</literal>开头的表之外的所有数据库对象：

<screen>
<prompt>$</prompt> <userinput>pg_dump -T 'ts_*' mydb &gt; db.sql</userinput>
</screen>
  </para>
<!-- pgdoc-cn_end sig_en=d8afa9a664f123b96975a453ec13269e -->

<!-- pgdoc-cn_start sig_en=02e07f3557de33b789a4429af57234cb sig_cn_org=None source=14.1 
  <para>
   To specify an upper-case or mixed-case name in <option>-t</option> and related
   switches, you need to double-quote the name; else it will be folded to
   lower case (see <xref linkend="app-psql-patterns"/> below).  But
   double quotes are special to the shell, so in turn they must be quoted.
   Thus, to dump a single table with a mixed-case name, you need something
   like

<screen>
<prompt>$</prompt> <userinput>pg_dump -t "\"MixedCaseName\"" mydb &gt; mytab.sql</userinput>
</screen></para>
________________________________________________________-->
  <para>
   要在<option>-t</option>和相关开关中指定一个大写形式或混合大小写形式的名称，你需要双引用该名称，否则它会被折叠到小写形式
   （请参见下面的<xref linkend="app-psql-patterns"/>）。但是双引号对于 shell 是特殊的，所以反过来它们必须被引用。因此，
   要转储一个有混合大小写名称的表，你需要类似这样的东西：

<screen>
<prompt>$</prompt> <userinput>pg_dump -t "\"MixedCaseName\"" mydb &gt; mytab.sql</userinput>
</screen></para>
<!-- pgdoc-cn_end sig_en=02e07f3557de33b789a4429af57234cb -->

 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>参见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="app-pg-dumpall"/></member>
   <member><xref linkend="app-pgrestore"/></member>
   <member><xref linkend="app-psql"/></member>
  </simplelist>
 </refsect1>

</refentry>

