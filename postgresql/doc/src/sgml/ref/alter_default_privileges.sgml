<!--
doc/src/sgml/ref/alter_default_privileges.sgml
PostgreSQL documentation
-->

<refentry id="sql-alterdefaultprivileges">
<!-- pgdoc-cn_start sig_en=f9c22534e8a1e8980efa966ec59b0f4a sig_cn_org=None source=14.1 
 <indexterm zone="sql-alterdefaultprivileges">
  <primary>ALTER DEFAULT PRIVILEGES</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-alterdefaultprivileges">
  <primary>ALTER DEFAULT PRIVILEGES</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=f9c22534e8a1e8980efa966ec59b0f4a -->

 <refmeta>
  <refentrytitle>ALTER DEFAULT PRIVILEGES</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=ea61628550c232a358c8cc622736015c sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>ALTER DEFAULT PRIVILEGES</refname>
  <refpurpose>define default access privileges</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>ALTER DEFAULT PRIVILEGES</refname>
  <refpurpose>定义默认访问特权</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=ea61628550c232a358c8cc622736015c -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=6da62db6e854dbe2d9f20d94ffd69985 sig_cn_org=6da62db6e854dbe2d9f20d94ffd69985 source=15.7 
<synopsis>
ALTER DEFAULT PRIVILEGES
    [ FOR { ROLE | USER } <replaceable>target_role</replaceable> [, ...] ]
    [ IN SCHEMA <replaceable>schema_name</replaceable> [, ...] ]
    <replaceable class="parameter">abbreviated_grant_or_revoke</replaceable>

<phrase>where <replaceable class="parameter">abbreviated_grant_or_revoke</replaceable> is one of:</phrase>

GRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON TABLES
    TO { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SEQUENCES
    TO { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { EXECUTE | ALL [ PRIVILEGES ] }
    ON { FUNCTIONS | ROUTINES }
    TO { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON TYPES
    TO { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { USAGE | CREATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SCHEMAS
    TO { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

REVOKE [ GRANT OPTION FOR ]
    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON TABLES
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SEQUENCES
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { EXECUTE | ALL [ PRIVILEGES ] }
    ON { FUNCTIONS | ROUTINES }
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON TYPES
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { USAGE | CREATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SCHEMAS
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]
</synopsis>
________________________________________________________-->
<synopsis>
ALTER DEFAULT PRIVILEGES
    [ FOR { ROLE | USER } <replaceable>target_role</replaceable> [, ...] ]
    [ IN SCHEMA <replaceable>schema_name</replaceable> [, ...] ]
    <replaceable class="parameter">abbreviated_grant_or_revoke</replaceable>

<phrase>where <replaceable class="parameter">abbreviated_grant_or_revoke</replaceable> is one of:</phrase>

GRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON TABLES
    TO { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SEQUENCES
    TO { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { EXECUTE | ALL [ PRIVILEGES ] }
    ON { FUNCTIONS | ROUTINES }
    TO { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON TYPES
    TO { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { USAGE | CREATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SCHEMAS
    TO { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

REVOKE [ GRANT OPTION FOR ]
    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON TABLES
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SEQUENCES
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { EXECUTE | ALL [ PRIVILEGES ] }
    ON { FUNCTIONS | ROUTINES }
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON TYPES
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { USAGE | CREATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SCHEMAS
    FROM { [ GROUP ] <replaceable class="parameter">role_name</replaceable> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]
</synopsis>
<!-- pgdoc-cn_end sig_en=6da62db6e854dbe2d9f20d94ffd69985 -->
 </refsynopsisdiv>

 <refsect1 id="sql-alterdefaultprivileges-description">
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=071a8ae9df5c154ac7864f2165e2c95c sig_cn_org=None source=14.1 
  <para>
   <command>ALTER DEFAULT PRIVILEGES</command> allows you to set the privileges
   that will be applied to objects created in the future.  (It does not
   affect privileges assigned to already-existing objects.)  Currently,
   only the privileges for schemas, tables (including views and foreign
   tables), sequences, functions, and types (including domains) can be
   altered.  For this command, functions include aggregates and procedures.
   The words <literal>FUNCTIONS</literal> and <literal>ROUTINES</literal> are
   equivalent in this command.  (<literal>ROUTINES</literal> is preferred
   going forward as the standard term for functions and procedures taken
   together.  In earlier PostgreSQL releases, only the
   word <literal>FUNCTIONS</literal> was allowed.  It is not possible to set
   default privileges for functions and procedures separately.)
  </para>
________________________________________________________-->
  <para>
   <command>ALTER DEFAULT PRIVILEGES</command>允许你设置将被应用于未来要创建的对象的特权（它不会影响分配给已经存在的对象的特权）。当前，只能修改用于模式、表（包括视图和外部表）、序列、函数和类型（包括域）的特权。其中，可设置权限的函数包括聚集函数和过程函数。当这个命令应用于函数时，单词<literal>FUNCTIONS</literal>和<literal>ROUTINES</literal>是等效的。（推荐使用<literal>ROUTINES</literal>，因为它是用来囊括函数和过程的一个标准术语。在较早的PostgreSQL发行版中，只允许单词<literal>FUNCTIONS</literal>。无法为函数或过程单独设置默认特权。）
  </para>
<!-- pgdoc-cn_end sig_en=071a8ae9df5c154ac7864f2165e2c95c -->

<!-- pgdoc-cn_start sig_en=ee7cc25f743b38cef0a9d3b3ed397b0a sig_cn_org=None source=14.1 
  <para>
   You can change default privileges only for objects that will be created by
   yourself or by roles that you are a member of.  The privileges can be set
   globally (i.e., for all objects created in the current database),
   or just for objects created in specified schemas.
  </para>
________________________________________________________-->
  <para>
   你只能改变你自己或者你属于其中的角色所创建的对象的默认特权。这些特权可以对全局范围设置（即对当前数据库中创建的所有对象），或者只对在指定模式中创建的对象设置。
  </para>
<!-- pgdoc-cn_end sig_en=ee7cc25f743b38cef0a9d3b3ed397b0a -->

<!-- pgdoc-cn_start sig_en=a021ee3b2f6801e99777a53888a69232 sig_cn_org=None source=14.1 
  <para>
   As explained in <xref linkend="ddl-priv"/>,
   the default privileges for any object type normally grant all grantable
   permissions to the object owner, and may grant some privileges to
   <literal>PUBLIC</literal> as well.  However, this behavior can be changed by
   altering the global default privileges with
   <command>ALTER DEFAULT PRIVILEGES</command>.
  </para>
________________________________________________________-->
  <para>
   如<xref linkend="ddl-priv"/>中所述，用于任何对象类型的默认特权通常会把所有可授予的权限授予给对象拥有者，并且也可能授予一些特权给<literal>PUBLIC</literal>。不过，这种行为可以通过使用<command>ALTER DEFAULT PRIVILEGES</command>修改全局默认特权来改变。
  </para>
<!-- pgdoc-cn_end sig_en=a021ee3b2f6801e99777a53888a69232 -->

<!-- pgdoc-cn_start sig_en=081e2cb8aa445d0e51b852e75751b6c8 sig_cn_org=None source=14.1 
  <para>
   Default privileges that are specified per-schema are added to whatever
   the global default privileges are for the particular object type.
   This means you cannot revoke privileges per-schema if they are granted
   globally (either by default, or according to a previous <command>ALTER
   DEFAULT PRIVILEGES</command> command that did not specify a schema).
   Per-schema <literal>REVOKE</literal> is only useful to reverse the
   effects of a previous per-schema <literal>GRANT</literal>.
  </para>
________________________________________________________-->
  <para>
   每个模式规定的默认权限将添加到特定对象类型的全局默认特权的内容中。
   这意味着你不能撤销每个模式的特权，如果它们已经被全局授予（默认情况下，或者根据以前未规定模式的<command>ALTER DEFAULT PRIVILEGES</command>命令）。
   每个模式的<literal>REVOKE</literal>仅用于反转以前每个模式<literal>GRANT</literal>的影响。
  </para>
<!-- pgdoc-cn_end sig_en=081e2cb8aa445d0e51b852e75751b6c8 -->

 <refsect2>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
    <term><replaceable>target_role</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=0121f35f0b92fb21f53198160c9c919c sig_cn_org=58986f25331021cc080ab5397dffecd4 source=15.7 
     <para>
      The name of an existing role of which the current role is a member.
      Default access privileges are not inherited, so member roles
      must use <command>SET ROLE</command> to access these privileges,
      or <command>ALTER DEFAULT PRIVILEGES</command> must be run for
      each member role.  If <literal>FOR ROLE</literal> is omitted,
      the current role is assumed.
     </para>
________________________________________________________-->
     <para>
      当前角色所属的已存在角色的名称。默认访问权限不会被继承，因此成员角色必须使用
      <command>SET ROLE</command>来访问这些权限，或者必须为每个成员角色运行
      <command>ALTER DEFAULT PRIVILEGES</command>。如果省略了<literal>FOR ROLE</literal>，
      则假定为当前角色。
</para>
<!-- pgdoc-cn_end sig_en=0121f35f0b92fb21f53198160c9c919c -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>schema_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=52f0e41420220e035caffcdb9eb1140b sig_cn_org=None source=14.1 
     <para>
      The name of an existing schema.  If specified, the default privileges
      are altered for objects later created in that schema.
      If <literal>IN SCHEMA</literal> is omitted, the global default privileges
      are altered.
      <literal>IN SCHEMA</literal> is not allowed when setting privileges
      for schemas, since schemas can't be nested.
     </para>
________________________________________________________-->
     <para>
      一个现有模式的名称。如果被指定，以后在那个模式中创建的对象的默认特权会被修改。如果<literal>IN SCHEMA</literal>被忽略，全局默认特权会被修改。
      当设置特权给模式时不能使用<literal>IN SCHEMA</literal>，因为模式不能嵌套。
     </para>
<!-- pgdoc-cn_end sig_en=52f0e41420220e035caffcdb9eb1140b -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>role_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=aa8114f182c05ba172fd85189f08fd7a sig_cn_org=None source=14.1 
     <para>
      The name of an existing role to grant or revoke privileges for.
      This parameter, and all the other parameters in
      <replaceable class="parameter">abbreviated_grant_or_revoke</replaceable>,
      act as described under
      <xref linkend="sql-grant"/> or
      <xref linkend="sql-revoke"/>,
      except that one is setting permissions for a whole class of objects
      rather than specific named objects.
     </para>
________________________________________________________-->
     <para>
      要为其授予或者收回特权的一个现有角色的名称。这个参数以及所有<replaceable class="parameter">abbreviated_grant_or_revoke</replaceable>中的其他参数会按照<xref linkend="sql-grant"/>或者<xref linkend="sql-revoke"/>中描述的方式运作，不过这里是为一整类的对象而不是特别指定的对象设置权限。
     </para>
<!-- pgdoc-cn_end sig_en=aa8114f182c05ba172fd85189f08fd7a -->
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect2>
 </refsect1>

 <refsect1 id="sql-alterdefaultprivileges-notes">
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=b7a8f8ebef32d01a464ff699ed93d9f2 sig_cn_org=None source=14.1 
  <para>
   Use <xref linkend="app-psql"/>'s <command>\ddp</command> command
   to obtain information about existing assignments of default privileges.
   The meaning of the privilege display is the same as explained for
   <command>\dp</command> in <xref linkend="ddl-priv"/>.
  </para>
________________________________________________________-->
  <para>
   使用<xref linkend="app-psql"/>的<command>\ddp</command>命令可以获得关于默认特权的现有分配信息。
   特权显示的含义和<xref linkend="ddl-priv"/>中的<command>\dp</command>描述的相同。
  </para>
<!-- pgdoc-cn_end sig_en=b7a8f8ebef32d01a464ff699ed93d9f2 -->

<!-- pgdoc-cn_start sig_en=f0d3ec624c4a3788d6e92b2e56da078b sig_cn_org=None source=14.1 
  <para>
   If you wish to drop a role for which the default privileges have been
   altered, it is necessary to reverse the changes in its default privileges
   or use <command>DROP OWNED BY</command> to get rid of the default privileges entry
   for the role.
  </para>
________________________________________________________-->
  <para>
   如果你希望删除一个默认特权被修改的角色，有必要撤销其默认特权上的改变或者使用<command>DROP OWNED BY</command>来为该角色去除默认特权项。
  </para>
<!-- pgdoc-cn_end sig_en=f0d3ec624c4a3788d6e92b2e56da078b -->
 </refsect1>

 <refsect1 id="sql-alterdefaultprivileges-examples">
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>例子</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=030b28a7449d6353d1a7d9088d2d72e1 sig_cn_org=None source=14.1 
  <para>
   Grant SELECT privilege to everyone for all tables (and views) you
   subsequently create in schema <literal>myschema</literal>, and allow
   role <literal>webuser</literal> to INSERT into them too:

<programlisting>
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema GRANT SELECT ON TABLES TO PUBLIC;
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema GRANT INSERT ON TABLES TO webuser;
</programlisting>
  </para>
________________________________________________________-->
  <para>
   为你后续在模式<literal>myschema</literal>中创建的所有表（和视图）授予 SELECT 特权，并且也允许角色<literal>webuser</literal>向它们之中 INSERT 数据：

<programlisting>
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema GRANT SELECT ON TABLES TO PUBLIC;
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema GRANT INSERT ON TABLES TO webuser;
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=030b28a7449d6353d1a7d9088d2d72e1 -->

<!-- pgdoc-cn_start sig_en=9dbab33367fa9582b6ed8a38e68b8678 sig_cn_org=None source=14.1 
  <para>
   Undo the above, so that subsequently-created tables won't have any
   more permissions than normal:

<programlisting>
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema REVOKE SELECT ON TABLES FROM PUBLIC;
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema REVOKE INSERT ON TABLES FROM webuser;
</programlisting>
  </para>
________________________________________________________-->
  <para>
   撤销上面的动作，因此后续创建的表不会有任何不寻常的权限：

<programlisting>
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema REVOKE SELECT ON TABLES FROM PUBLIC;
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema REVOKE INSERT ON TABLES FROM webuser;
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=9dbab33367fa9582b6ed8a38e68b8678 -->

<!-- pgdoc-cn_start sig_en=3721e4f4ff94bc9ae84242c0573f17d8 sig_cn_org=None source=14.1 
  <para>
   Remove the public EXECUTE permission that is normally granted on functions,
   for all functions subsequently created by role <literal>admin</literal>:
<programlisting>
ALTER DEFAULT PRIVILEGES FOR ROLE admin REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;
</programlisting>
   Note however that you <emphasis>cannot</emphasis> accomplish that effect
   with a command limited to a single schema.  This command has no effect,
   unless it is undoing a matching <literal>GRANT</literal>:
<programlisting>
ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;
</programlisting>
   That's because per-schema default privileges can only add privileges to
   the global setting, not remove privileges granted by it.
  </para>
________________________________________________________-->
  <para>
   为后续由角色<literal>admin</literal>创建的所有函数移除通常在函数上会授予的公共 EXECUTE 权限：
<programlisting>
ALTER DEFAULT PRIVILEGES FOR ROLE admin REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;
</programlisting>
   但是注意你<emphasis>不能</emphasis>使用限制为单个模式的命令来实现该效果。 
   此命令不起作用，除非它撤消匹配的<literal>GRANT</literal>：
<programlisting>
ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;
</programlisting>
   这是因为每个模式的默认特权只能向全局设置添加特权，而不能移除它授予的特权。
  </para>
<!-- pgdoc-cn_end sig_en=3721e4f4ff94bc9ae84242c0573f17d8 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=c3e1883a208e8a5d809e927cae2e261a sig_cn_org=None source=14.1 
  <para>
   There is no <command>ALTER DEFAULT PRIVILEGES</command> statement in the SQL
   standard.
  </para>
________________________________________________________-->
  <para>
   在 SQL 标准中没有<command>ALTER DEFAULT PRIVILEGES</command>语句。
  </para>
<!-- pgdoc-cn_end sig_en=c3e1883a208e8a5d809e927cae2e261a -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>参见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-grant"/></member>
   <member><xref linkend="sql-revoke"/></member>
  </simplelist>
 </refsect1>

</refentry>
