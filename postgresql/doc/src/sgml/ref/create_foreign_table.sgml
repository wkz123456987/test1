<!--
doc/src/sgml/ref/create_foreign_table.sgml
PostgreSQL documentation
-->

<refentry id="sql-createforeigntable">
<!-- pgdoc-cn_start sig_en=00d50d0467b2cd2913d5383a6c824c70 sig_cn_org=None source=14.1 
 <indexterm zone="sql-createforeigntable">
  <primary>CREATE FOREIGN TABLE</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-createforeigntable">
  <primary>CREATE FOREIGN TABLE</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=00d50d0467b2cd2913d5383a6c824c70 -->

 <refmeta>
  <refentrytitle>CREATE FOREIGN TABLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=8620e10d47b7cb1c0896daa0d280ad80 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>CREATE FOREIGN TABLE</refname>
  <refpurpose>define a new foreign table</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>CREATE FOREIGN TABLE</refname>
  <refpurpose>定义一个新的外部表</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=8620e10d47b7cb1c0896daa0d280ad80 -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=c59bbb6ca9551f8b7bd8c160564afec7 sig_cn_org=c59bbb6ca9551f8b7bd8c160564afec7 source=15.7 
<synopsis>
CREATE FOREIGN TABLE [ IF NOT EXISTS ] <replaceable class="parameter">table_name</replaceable> ( [
  { <replaceable class="parameter">column_name</replaceable> <replaceable class="parameter">data_type</replaceable> [ OPTIONS ( <replaceable class="parameter">option</replaceable> '<replaceable class="parameter">value</replaceable>' [, ... ] ) ] [ COLLATE <replaceable>collation</replaceable> ] [ <replaceable class="parameter">column_constraint</replaceable> [ ... ] ]
    | <replaceable>table_constraint</replaceable> }
    [, ... ]
] )
[ INHERITS ( <replaceable>parent_table</replaceable> [, ... ] ) ]
  SERVER <replaceable class="parameter">server_name</replaceable>
[ OPTIONS ( <replaceable class="parameter">option</replaceable> '<replaceable class="parameter">value</replaceable>' [, ... ] ) ]

CREATE FOREIGN TABLE [ IF NOT EXISTS ] <replaceable class="parameter">table_name</replaceable>
  PARTITION OF <replaceable class="parameter">parent_table</replaceable> [ (
  { <replaceable class="parameter">column_name</replaceable> [ WITH OPTIONS ] [ <replaceable class="parameter">column_constraint</replaceable> [ ... ] ]
    | <replaceable>table_constraint</replaceable> }
    [, ... ]
) ]
{ FOR VALUES <replaceable class="parameter">partition_bound_spec</replaceable> | DEFAULT }
  SERVER <replaceable class="parameter">server_name</replaceable>
[ OPTIONS ( <replaceable class="parameter">option</replaceable> '<replaceable class="parameter">value</replaceable>' [, ... ] ) ]

<phrase>where <replaceable class="parameter">column_constraint</replaceable> is:</phrase>

[ CONSTRAINT <replaceable class="parameter">constraint_name</replaceable> ]
{ NOT NULL |
  NULL |
  CHECK ( <replaceable class="parameter">expression</replaceable> ) [ NO INHERIT ] |
  DEFAULT <replaceable>default_expr</replaceable> |
  GENERATED ALWAYS AS ( <replaceable>generation_expr</replaceable> ) STORED }

<phrase>and <replaceable class="parameter">table_constraint</replaceable> is:</phrase>

[ CONSTRAINT <replaceable class="parameter">constraint_name</replaceable> ]
CHECK ( <replaceable class="parameter">expression</replaceable> ) [ NO INHERIT ]

<phrase>and <replaceable class="parameter">partition_bound_spec</replaceable> is:</phrase>

IN ( <replaceable class="parameter">partition_bound_expr</replaceable> [, ...] ) |
FROM ( { <replaceable class="parameter">partition_bound_expr</replaceable> | MINVALUE | MAXVALUE } [, ...] )
  TO ( { <replaceable class="parameter">partition_bound_expr</replaceable> | MINVALUE | MAXVALUE } [, ...] ) |
WITH ( MODULUS <replaceable class="parameter">numeric_literal</replaceable>, REMAINDER <replaceable class="parameter">numeric_literal</replaceable> )
</synopsis>
________________________________________________________-->
<synopsis>
CREATE FOREIGN TABLE [ IF NOT EXISTS ] <replaceable class="parameter">table_name</replaceable> ( [
  { <replaceable class="parameter">column_name</replaceable> <replaceable class="parameter">data_type</replaceable> [ OPTIONS ( <replaceable class="parameter">option</replaceable> '<replaceable class="parameter">value</replaceable>' [, ... ] ) ] [ COLLATE <replaceable>collation</replaceable> ] [ <replaceable class="parameter">column_constraint</replaceable> [ ... ] ]
    | <replaceable>table_constraint</replaceable> }
    [, ... ]
] )
[ INHERITS ( <replaceable>parent_table</replaceable> [, ... ] ) ]
  SERVER <replaceable class="parameter">server_name</replaceable>
[ OPTIONS ( <replaceable class="parameter">option</replaceable> '<replaceable class="parameter">value</replaceable>' [, ... ] ) ]

CREATE FOREIGN TABLE [ IF NOT EXISTS ] <replaceable class="parameter">table_name</replaceable>
  PARTITION OF <replaceable class="parameter">parent_table</replaceable> [ (
  { <replaceable class="parameter">column_name</replaceable> [ WITH OPTIONS ] [ <replaceable class="parameter">column_constraint</replaceable> [ ... ] ]
    | <replaceable>table_constraint</replaceable> }
    [, ... ]
) ]
{ FOR VALUES <replaceable class="parameter">partition_bound_spec</replaceable> | DEFAULT }
  SERVER <replaceable class="parameter">server_name</replaceable>
[ OPTIONS ( <replaceable class="parameter">option</replaceable> '<replaceable class="parameter">value</replaceable>' [, ... ] ) ]

<phrase>where <replaceable class="parameter">column_constraint</replaceable> is:</phrase>

[ CONSTRAINT <replaceable class="parameter">constraint_name</replaceable> ]
{ NOT NULL |
  NULL |
  CHECK ( <replaceable class="parameter">expression</replaceable> ) [ NO INHERIT ] |
  DEFAULT <replaceable>default_expr</replaceable> |
  GENERATED ALWAYS AS ( <replaceable>generation_expr</replaceable> ) STORED }

<phrase>and <replaceable class="parameter">table_constraint</replaceable> is:</phrase>

[ CONSTRAINT <replaceable class="parameter">constraint_name</replaceable> ]
CHECK ( <replaceable class="parameter">expression</replaceable> ) [ NO INHERIT ]

<phrase>and <replaceable class="parameter">partition_bound_spec</replaceable> is:</phrase>

IN ( <replaceable class="parameter">partition_bound_expr</replaceable> [, ...] ) |
FROM ( { <replaceable class="parameter">partition_bound_expr</replaceable> | MINVALUE | MAXVALUE } [, ...] )
  TO ( { <replaceable class="parameter">partition_bound_expr</replaceable> | MINVALUE | MAXVALUE } [, ...] ) |
WITH ( MODULUS <replaceable class="parameter">numeric_literal</replaceable>, REMAINDER <replaceable class="parameter">numeric_literal</replaceable> )
</synopsis>
<!-- pgdoc-cn_end sig_en=c59bbb6ca9551f8b7bd8c160564afec7 -->
 </refsynopsisdiv>

 <refsect1 id="sql-createforeigntable-description">
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=6146f7bea34f4fc176436730459ae57f sig_cn_org=None source=14.1 
  <para>
   <command>CREATE FOREIGN TABLE</command> creates a new foreign table
   in the current database. The table will be owned by the user issuing the
   command.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE FOREIGN TABLE</command>在当前数据库中创建
   一个新的外部表。该表将由发出这个命令的用户所拥有。
  </para>
<!-- pgdoc-cn_end sig_en=6146f7bea34f4fc176436730459ae57f -->

<!-- pgdoc-cn_start sig_en=43aa221966719a25da77e7baa8f58365 sig_cn_org=8fc0917c6a354ff0cf477adbf920252b source=15.7 
  <para>
   If a schema name is given (for example, <literal>CREATE FOREIGN TABLE
   myschema.mytable ...</literal>) then the table is created in the specified
   schema.  Otherwise it is created in the current schema.
   The name of the foreign table must be
   distinct from the name of any other relation (table, sequence, index, view,
   materialized view, or foreign table) in the same schema.
  </para>
________________________________________________________-->
  <para>
   如果给定了模式名称（例如，<literal>CREATE FOREIGN TABLE myschema.mytable ...</literal>），
   那么表将在指定的模式中创建。否则，它将在当前模式中创建。
   外部表的名称必须与同一模式中的任何其他关系（表、序列、索引、视图、物化视图或外部表）的名称不同。
</para>
<!-- pgdoc-cn_end sig_en=43aa221966719a25da77e7baa8f58365 -->

<!-- pgdoc-cn_start sig_en=43d979e6ab6c6234d20de666b2b33f39 sig_cn_org=None source=14.1 
  <para>
   <command>CREATE FOREIGN TABLE</command> also automatically creates a data
   type that represents the composite type corresponding to one row of
   the foreign table.  Therefore, foreign tables cannot have the same
   name as any existing data type in the same schema.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE FOREIGN TABLE</command>还将自动创建
   一个数据类型来表示该外部表行相应的组合类型。因此，外部表不能和
   同一个模式中任何现有的数据类型同名。
  </para>
<!-- pgdoc-cn_end sig_en=43d979e6ab6c6234d20de666b2b33f39 -->

<!-- pgdoc-cn_start sig_en=c5fce043938e560fa66e960212c1138f sig_cn_org=None source=14.1 
  <para>
   If <literal>PARTITION OF</literal> clause is specified then the table is
   created as a partition of <literal>parent_table</literal> with specified
   bounds.
  </para>
________________________________________________________-->
  <para>
   如果指定了<literal>PARTITION OF</literal>子句，
   则该表被创建为具有指定边界的<literal>parent_table</literal>的分区。
  </para>
<!-- pgdoc-cn_end sig_en=c5fce043938e560fa66e960212c1138f -->

<!-- pgdoc-cn_start sig_en=8e920c402eee77da776514de96c37edc sig_cn_org=None source=14.1 
  <para>
   To be able to create a foreign table, you must have <literal>USAGE</literal>
   privilege on the foreign server, as well as <literal>USAGE</literal>
   privilege on all column types used in the table.
  </para>
________________________________________________________-->
  <para>
   要创建一个外部表，你必须具有该外部服务器上的<literal>USAGE</literal>
   特权，以及该表中用到的所有列类型上的<literal>USAGE</literal>特权。
  </para>
<!-- pgdoc-cn_end sig_en=8e920c402eee77da776514de96c37edc -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>

   <varlistentry>
    <term><literal>IF NOT EXISTS</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=8b230bc7b271cc6fa0e0e8d969266139 sig_cn_org=None source=14.1 
     <para>
      Do not throw an error if a relation with the same name already exists.
      A notice is issued in this case.  Note that there is no guarantee that
      the existing relation is anything like the one that would have been
      created.
     </para>
________________________________________________________-->
     <para>
      已经存在同名关系时不要抛出错误。这种情况下会发出一个提示。注意，
      并不保证已经存在的关系与将要创建的那一个相似。
     </para>
<!-- pgdoc-cn_end sig_en=8b230bc7b271cc6fa0e0e8d969266139 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">table_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=53bb0823460e7bb61174fdc991c87c9a sig_cn_org=None source=14.1 
     <para>
      The name (optionally schema-qualified) of the table to be created.
     </para>
________________________________________________________-->
     <para>
      要创建的表的名称（可以被模式限定）。
     </para>
<!-- pgdoc-cn_end sig_en=53bb0823460e7bb61174fdc991c87c9a -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">column_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=4fc30e2a7de04c922abb02a57f46ce78 sig_cn_org=None source=14.1 
     <para>
      The name of a column to be created in the new table.
     </para>
________________________________________________________-->
     <para>
      要在新表中创建的列名。
     </para>
<!-- pgdoc-cn_end sig_en=4fc30e2a7de04c922abb02a57f46ce78 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">data_type</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=28664c2469604c58925a2321661bd00b sig_cn_org=None source=14.1 
     <para>
      The data type of the column. This can include array
      specifiers. For more information on the data types supported by
      <productname>PostgreSQL</productname>, refer to <xref
      linkend="datatype"/>.
     </para>
________________________________________________________-->
     <para>
      该列的数据类型。可以包括数组指示符。更多
      <productname>PostgreSQL</productname>支持的数据类型可见<xref
      linkend="datatype"/>。
     </para>
<!-- pgdoc-cn_end sig_en=28664c2469604c58925a2321661bd00b -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>COLLATE <replaceable>collation</replaceable></literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=a6a4ce9d315a3680172ae9e01b4f9f8a sig_cn_org=None source=14.1 
     <para>
      The <literal>COLLATE</literal> clause assigns a collation to
      the column (which must be of a collatable data type).
      If not specified, the column data type's default collation is used.
     </para>
________________________________________________________-->
     <para>
      <literal>COLLATE</literal>子句为该列（必须是一个可排序的数据类型）
      赋予一个排序规则。如果没有指定，则会使用该列的数据类型的默认
      排序规则。
     </para>
<!-- pgdoc-cn_end sig_en=a6a4ce9d315a3680172ae9e01b4f9f8a -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>INHERITS ( <replaceable>parent_table</replaceable> [, ... ] )</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=6afc3f05fc892849bb5070dce4edd6b4 sig_cn_org=None source=14.1 
     <para>
      The optional <literal>INHERITS</literal> clause specifies a list of
      tables from which the new foreign table automatically inherits
      all columns.  Parent tables can be plain tables or foreign tables.
      See the similar form of
      <link linkend="sql-createtable"><command>CREATE TABLE</command></link> for more details.
     </para>
________________________________________________________-->
     <para>
      可选的<literal>INHERITS</literal>子句指定了一个表的列表，新的外部表
      会自动从中继承所有列。父表可以是普通表或者外部表。详见
      <link linkend="sql-createtable"><command>CREATE TABLE</command></link>的类似形式。
     </para>
<!-- pgdoc-cn_end sig_en=6afc3f05fc892849bb5070dce4edd6b4 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>PARTITION OF <replaceable>parent_table</replaceable> { FOR VALUES <replaceable class="parameter">partition_bound_spec</replaceable> | DEFAULT }</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=5bfd975688b94519961fefd509a60005 sig_cn_org=None source=14.1 
     <para>
      This form can be used to create the foreign table as partition of
      the given parent table with specified partition bound values.
      See the similar form of
      <link linkend="sql-createtable"><command>CREATE TABLE</command></link> for more details.
      Note that it is currently not allowed to create the foreign table as a
      partition of the parent table if there are <literal>UNIQUE</literal>
      indexes on the parent table.  (See also
      <link linkend="sql-altertable"><command>ALTER TABLE ATTACH PARTITION</command></link>.)
     </para>
________________________________________________________-->
     <para>
      此语句可以用来将外部表创建为父表的一个指定区间的分区表。
      详见<link linkend="sql-createtable"><command>CREATE TABLE</command></link>的类似形式。
      注意如果父表存在<literal>UNIQUE</literal>类型的索引时，当前是不允许将外部表
      创建为该父表的分区表。（另见<link linkend="sql-altertable">
      <command>ALTER TABLE ATTACH PARTITION</command></link>。）
     </para>
<!-- pgdoc-cn_end sig_en=5bfd975688b94519961fefd509a60005 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CONSTRAINT <replaceable class="parameter">constraint_name</replaceable></literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=70946fb60dbdfd395aefa5ffc4397182 sig_cn_org=None source=14.1 
     <para>
      An optional name for a column or table constraint.  If the
      constraint is violated, the constraint name is present in error messages,
      so constraint names like <literal>col must be positive</literal> can be used
      to communicate helpful constraint information to client applications.
      (Double-quotes are needed to specify constraint names that contain spaces.)
      If a constraint name is not specified, the system generates a name.
     </para>
________________________________________________________-->
     <para>
      一个可选的用于列或者表约束的名字。如果该约束被违背，这个约束名字会
      出现在错误消息中，这样<literal>col must be positive</literal>这种约束名就
      可以被用来与客户端应用交流有用的约束信息（指定包含空格的约束名需要
      使用双引号）。如果没有指定约束名，系统会自动生成一个。
     </para>
<!-- pgdoc-cn_end sig_en=70946fb60dbdfd395aefa5ffc4397182 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>NOT NULL</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=00d37bc36172cb3150a654b82a336661 sig_cn_org=None source=14.1 
     <para>
      The column is not allowed to contain null values.
     </para>
________________________________________________________-->
     <para>
      该列不允许包含空值。
     </para>
<!-- pgdoc-cn_end sig_en=00d37bc36172cb3150a654b82a336661 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>NULL</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=9ce7b4fd206dfcace8810b0a0cb21442 sig_cn_org=None source=14.1 
     <para>
      The column is allowed to contain null values. This is the default.
     </para>
________________________________________________________-->
     <para>
      该列可以包含空值，这是默认值。
     </para>
<!-- pgdoc-cn_end sig_en=9ce7b4fd206dfcace8810b0a0cb21442 -->

<!-- pgdoc-cn_start sig_en=7a0bd5fe66fb977ac9c3da28718380e1 sig_cn_org=None source=14.1 
     <para>
      This clause is only provided for compatibility with
      non-standard SQL databases.  Its use is discouraged in new
      applications.
     </para>
________________________________________________________-->
     <para>
      提供这个子句只是为了兼容非标准的 SQL 数据库。在新的应用中
      不鼓励使用它。
     </para>
<!-- pgdoc-cn_end sig_en=7a0bd5fe66fb977ac9c3da28718380e1 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CHECK ( <replaceable class="parameter">expression</replaceable> ) [ NO INHERIT ] </literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=df3f983e0e829ba2b8f66152434a6273 sig_cn_org=None source=14.1 
     <para>
      The <literal>CHECK</literal> clause specifies an expression producing a
      Boolean result which each row in the foreign table is expected
      to satisfy; that is, the expression should produce TRUE or UNKNOWN,
      never FALSE, for all rows in the foreign table.
      A check constraint specified as a column constraint should
      reference that column's value only, while an expression
      appearing in a table constraint can reference multiple columns.
     </para>
________________________________________________________-->
     <para>
      <literal>CHECK</literal>子句指定一个产生布尔结果的表达式，该外部表
      中的每一行都应该满足该表达式。也就是说，对于该外部表中所有的行，
      这个表达式应该产生 TRUE 或者 UNKNOWN 而不能产生 FALSE。被
      作为列约束指定的检查约束应该只引用该列的值，而出现在表约束中的
      表达式可以引用多列。
     </para>
<!-- pgdoc-cn_end sig_en=df3f983e0e829ba2b8f66152434a6273 -->

<!-- pgdoc-cn_start sig_en=fb67b08a1508e2d5f3f6cd2c0083d4d2 sig_cn_org=None source=14.1 
     <para>
      Currently, <literal>CHECK</literal> expressions cannot contain
      subqueries nor refer to variables other than columns of the
      current row.  The system column <literal>tableoid</literal>
      may be referenced, but not any other system column.
     </para>
________________________________________________________-->
     <para>
      当前，<literal>CHECK</literal>表达式不能包含子查询，也不能
      引用除当前行的列之外的其他变量。可以引用系统列
      <literal>tableoid</literal>，但是不能引用其他系统列。
     </para>
<!-- pgdoc-cn_end sig_en=fb67b08a1508e2d5f3f6cd2c0083d4d2 -->

<!-- pgdoc-cn_start sig_en=1d3cfedec04b7f0aeaf89c9a09063955 sig_cn_org=None source=14.1 
     <para>
      A constraint marked with <literal>NO INHERIT</literal> will not propagate to
      child tables.
     </para>
________________________________________________________-->
     <para>
      被标记为<literal>NO INHERIT</literal>的约束将不会传播到子表上。
     </para>
<!-- pgdoc-cn_end sig_en=1d3cfedec04b7f0aeaf89c9a09063955 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DEFAULT
    <replaceable>default_expr</replaceable></literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=af2a00dccaecd0e30db7ba52fbb0fd8f sig_cn_org=None source=14.1 
     <para>
      The <literal>DEFAULT</literal> clause assigns a default data value for
      the column whose column definition it appears within.  The value
      is any variable-free expression (subqueries and cross-references
      to other columns in the current table are not allowed).  The
      data type of the default expression must match the data type of the
      column.
     </para>
________________________________________________________-->
     <para>
      <literal>DEFAULT</literal>子句为包含它的列定义赋予一个默认数据值。该
      值是任意不包含变量的表达式（不允许子查询和对当前表中其他列的交叉
      引用）。默认值表达式的数据类型必须匹配列的数据类型。
     </para>
<!-- pgdoc-cn_end sig_en=af2a00dccaecd0e30db7ba52fbb0fd8f -->

<!-- pgdoc-cn_start sig_en=f98e17b690c6d55a408e1963a5fd9f38 sig_cn_org=None source=14.1 
     <para>
      The default expression will be used in any insert operation that
      does not specify a value for the column.  If there is no default
      for a column, then the default is null.
     </para>
________________________________________________________-->
     <para>
      默认值表达式将被用在任何没有指定列值的插入操作中。如果一列没有
      默认值，则默认值为空值。
     </para>
<!-- pgdoc-cn_end sig_en=f98e17b690c6d55a408e1963a5fd9f38 -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=c14062d006c7ec19efa2c58ee41ca504 sig_cn_org=None source=14.1 
    <term><literal>GENERATED ALWAYS AS ( <replaceable>generation_expr</replaceable> ) STORED</literal><indexterm><primary>generated column</primary></indexterm></term>
________________________________________________________-->
    <term><literal>GENERATED ALWAYS AS ( <replaceable>generation_expr</replaceable> ) STORED</literal><indexterm><primary>generated column</primary></indexterm></term>
<!-- pgdoc-cn_end sig_en=c14062d006c7ec19efa2c58ee41ca504 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=6d2f46f4bba89bbeb2a5155cfc8112ce sig_cn_org=None source=14.1 
     <para>
      This clause creates the column as a <firstterm>generated
      column</firstterm>.  The column cannot be written to, and when read the
      result of the specified expression will be returned.
     </para>
________________________________________________________-->
     <para>
      该子句创建一个<firstterm>生成列</firstterm>。
      此列不能写入，只能在读取时返回所指定的表达式的值。
     </para>
<!-- pgdoc-cn_end sig_en=6d2f46f4bba89bbeb2a5155cfc8112ce -->

<!-- pgdoc-cn_start sig_en=883ea82f49a96ce53e85e3598669598e sig_cn_org=None source=14.1 
     <para>
      The keyword <literal>STORED</literal> is required to signify that the
      column will be computed on write.  (The computed value will be presented
      to the foreign-data wrapper for storage and must be returned on
      reading.)
     </para>
________________________________________________________-->
     <para>
      关键字<literal>STORED</literal>是必须的，用来表明该列将在写入时计算。
      （计算出的值将会传递给外部数据封装器负责保存，并在读取时返回。）
     </para>
<!-- pgdoc-cn_end sig_en=883ea82f49a96ce53e85e3598669598e -->

<!-- pgdoc-cn_start sig_en=93273596f2ef247a8316beb0884b50e3 sig_cn_org=None source=14.1 
     <para>
      The generation expression can refer to other columns in the table, but
      not other generated columns.  Any functions and operators used must be
      immutable.  References to other tables are not allowed.
     </para>
________________________________________________________-->
     <para>
      生成表达式可以引用表中的其他列，但不能引用其他的生成列。
      所使用的函数和操作符必须是不可变。
      不能引用其他表。
     </para>
<!-- pgdoc-cn_end sig_en=93273596f2ef247a8316beb0884b50e3 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">server_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=cdf5a0cb1a4e8fe28f960f34d92ee0b0 sig_cn_org=None source=14.1 
     <para>
      The name of an existing foreign server to use for the foreign table.
      For details on defining a server, see <xref
      linkend="sql-createserver"/>.
     </para>
________________________________________________________-->
     <para>
      要用于该外部表的一个现有外部服务器的名称。有关定义一个服务器
      的细节可以参考<xref
      linkend="sql-createserver"/>。
     </para>
<!-- pgdoc-cn_end sig_en=cdf5a0cb1a4e8fe28f960f34d92ee0b0 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OPTIONS ( <replaceable class="parameter">option</replaceable> '<replaceable class="parameter">value</replaceable>' [, ...] )</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=4061643e3608d741787410248fda19c6 sig_cn_org=None source=14.1 
     <para>
      Options to be associated with the new foreign table or one of its
      columns.
      The allowed option names and values are specific to each foreign
      data wrapper and are validated using the foreign-data wrapper's
      validator function.  Duplicate option names are not allowed (although
      it's OK for a table option and a column option to have the same name).
     </para>
________________________________________________________-->
     <para>
      要与新外部表或者它的一个列相关联的选项。被允许的选项名称和值是与
      每一个外部数据包装器相关的，并且它们会被该外部数据包装器的验证器
      函数验证。不允许重复的选项名称（不过一个表选项和一个列选项重名是
      可以的）。
     </para>
<!-- pgdoc-cn_end sig_en=4061643e3608d741787410248fda19c6 -->
    </listitem>
   </varlistentry>

  </variablelist>

 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=c94ae093eb9df352939291b2a9283af8 sig_cn_org=None source=14.1 
   <para>
    Constraints on foreign tables (such as <literal>CHECK</literal>
    or <literal>NOT NULL</literal> clauses) are not enforced by the
    core <productname>PostgreSQL</productname> system, and most foreign data wrappers
    do not attempt to enforce them either; that is, the constraint is
    simply assumed to hold true.  There would be little point in such
    enforcement since it would only apply to rows inserted or updated via
    the foreign table, and not to rows modified by other means, such as
    directly on the remote server.  Instead, a constraint attached to a
    foreign table should represent a constraint that is being enforced by
    the remote server.
   </para>
________________________________________________________-->
   <para>
    <productname>PostgreSQL</productname>核心系统不会强制外部表上的约束（
    例如<literal>CHECK</literal>或<literal>NOT NULL</literal>子句），大部分外部
    数据包装器也不会尝试强制它们。也就是说，这类约束会被简单地认为保持
    为真。这种强制其实没什么意义，因为它只适用于通过该外部表插入或者更
    新的行，而对通过其他方式修改的行（例如直接在远程服务器上修改）没有
    作用。附着在外部表上的约束应该表示由外部服务器强制的一个约束。
   </para>
<!-- pgdoc-cn_end sig_en=c94ae093eb9df352939291b2a9283af8 -->

<!-- pgdoc-cn_start sig_en=f64c41893133115123cea247a36f2278 sig_cn_org=None source=14.1 
   <para>
    Some special-purpose foreign data wrappers might be the only access
    mechanism for the data they access, and in that case it might be
    appropriate for the foreign data wrapper itself to perform constraint
    enforcement.  But you should not assume that a wrapper does that
    unless its documentation says so.
   </para>
________________________________________________________-->
   <para>
    有些特殊目的的外部数据包装器可能是它们所访问的数据的唯一一种访问
    机制，在那种情况下让外部数据包装器自己来执行约束强制可能是合适的。
    但是不应该假设包装器会这样做，除非它的文档说它会。
   </para>
<!-- pgdoc-cn_end sig_en=f64c41893133115123cea247a36f2278 -->

<!-- pgdoc-cn_start sig_en=dc758f89c4b31dab0e67d3186fb592d1 sig_cn_org=87a31416edbf5b75e96a427a209af2b7 source=15.7 
   <para>
    Although <productname>PostgreSQL</productname> does not attempt to enforce
    constraints on foreign tables, it does assume that they are correct
    for purposes of query optimization.  If there are rows visible in the
    foreign table that do not satisfy a declared constraint, queries on
    the table might produce errors or incorrect answers.  It is the user's
    responsibility to ensure that the constraint definition matches
    reality.
   </para>
________________________________________________________-->
   <para>
    虽然<productname>PostgreSQL</productname>不会尝试对外部表强制执行约束，
    但它假定它们在查询优化方面是正确的。如果外部表中存在不符合声明约束的可见行，
    对表的查询可能会产生错误或不正确的答案。用户有责任确保约束定义与现实匹配。
</para>
<!-- pgdoc-cn_end sig_en=dc758f89c4b31dab0e67d3186fb592d1 -->

   <caution>
<!-- pgdoc-cn_start sig_en=dcdfd0c15005ef977a976f8350961535 sig_cn_org=012b9d22d4ca7655d1a914cab0cb9453 source=15.7 
    <para>
     When a foreign table is used as a partition of a partitioned table,
     there is an implicit constraint that its contents must satisfy the
     partitioning rule.  Again, it is the user's responsibility to ensure
     that that is true, which is best done by installing a matching
     constraint on the remote server.
    </para>
________________________________________________________-->
    <para>
     当外部表作为分区表的一个分区时，存在一个隐含约束，即其内容必须满足分区规则。
     再次强调，用户有责任确保这一点，最好的方法是在远程服务器上安装匹配的约束。
</para>
<!-- pgdoc-cn_end sig_en=dcdfd0c15005ef977a976f8350961535 -->
   </caution>

<!-- pgdoc-cn_start sig_en=60716e36901a74c6fe719065d88d2105 sig_cn_org=695168032ac60532ac764d70c8cb77c6 source=15.7 
   <para>
    Within a partitioned table containing foreign-table partitions,
    an <command>UPDATE</command> that changes the partition key value can
    cause a row to be moved from a local partition to a foreign-table
    partition, provided the foreign data wrapper supports tuple routing.
    However, it is not currently possible to move a row from a
    foreign-table partition to another partition.
    An <command>UPDATE</command> that would require doing that will fail
    due to the partitioning constraint, assuming that that is properly
    enforced by the remote server.
   </para>
________________________________________________________-->
   <para>
    在包含外部表分区的分区表中，更改分区键值的<command>UPDATE</command>可能会导致一行从本地分区移动到外部表分区，
    前提是外部数据包装器支持元组路由。然而，目前无法将一行从外部表分区移动到另一个分区。
    一个需要这样做的<command>UPDATE</command>将由于分区约束而失败，假设远程服务器正确执行了该约束。
   </para>
<!-- pgdoc-cn_end sig_en=60716e36901a74c6fe719065d88d2105 -->

<!-- pgdoc-cn_start sig_en=a7a710697982c0745d612bbd1bcd5779 sig_cn_org=None source=14.1 
   <para>
    Similar considerations apply to generated columns.  Stored generated
    columns are computed on insert or update on the local
    <productname>PostgreSQL</productname> server and handed to the
    foreign-data wrapper for writing out to the foreign data store, but it is
    not enforced that a query of the foreign table returns values for stored
    generated columns that are consistent with the generation expression.
    Again, this might result in incorrect query results.
   </para>
________________________________________________________-->
   <para>
    类似的要点也适用于生成列。生成列在本地<productname>PostgreSQL</productname>
    服务器发生插入或更新时进行计算，并将计算结果传递给外部数据封装器，由外部数据
    封装器负责把结果写到外部数据存储中，但是并不强制要求查询外部表时返回的生成列
    的值一定是与生成表达式一致。
    总而言之，此行为可能导致查询到不正确的结果。
   </para>
<!-- pgdoc-cn_end sig_en=a7a710697982c0745d612bbd1bcd5779 -->
 </refsect1>

 <refsect1 id="sql-createforeigntable-examples">
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=7b441170b01f59115ae7dbb3b048de14 sig_cn_org=None source=14.1 
  <para>
   Create foreign table <structname>films</structname>, which will be accessed through
   the server <structname>film_server</structname>:

<programlisting>
CREATE FOREIGN TABLE films (
    code        char(5) NOT NULL,
    title       varchar(40) NOT NULL,
    did         integer NOT NULL,
    date_prod   date,
    kind        varchar(10),
    len         interval hour to minute
)
SERVER film_server;
</programlisting></para>
________________________________________________________-->
  <para>
   创建外部表<structname>films</structname>，通过服务器<structname>film_server</structname>访问它：

<programlisting>
CREATE FOREIGN TABLE films (
    code        char(5) NOT NULL,
    title       varchar(40) NOT NULL,
    did         integer NOT NULL,
    date_prod   date,
    kind        varchar(10),
    len         interval hour to minute
)
SERVER film_server;
</programlisting></para>
<!-- pgdoc-cn_end sig_en=7b441170b01f59115ae7dbb3b048de14 -->

<!-- pgdoc-cn_start sig_en=ab9bbd137474ac105a7a3584ea06c720 sig_cn_org=None source=14.1 
  <para>
   Create foreign table <structname>measurement_y2016m07</structname>, which will be
   accessed through the server <structname>server_07</structname>, as a partition
   of the range partitioned table <structname>measurement</structname>:

<programlisting>
CREATE FOREIGN TABLE measurement_y2016m07
    PARTITION OF measurement FOR VALUES FROM ('2016-07-01') TO ('2016-08-01')
    SERVER server_07;
</programlisting></para>
________________________________________________________-->
  <para>
   创建外部表<structname>measurement_y2016m07</structname>，通过服务器
   <structname>server_07</structname>访问它，作为范围分区表<structname>measurement</structname>
   的分区：

<programlisting>
CREATE FOREIGN TABLE measurement_y2016m07
    PARTITION OF measurement FOR VALUES FROM ('2016-07-01') TO ('2016-08-01')
    SERVER server_07;
</programlisting></para>
<!-- pgdoc-cn_end sig_en=ab9bbd137474ac105a7a3584ea06c720 -->

 </refsect1>

 <refsect1 id="sql-createforeigntable-compatibility">
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=2f031e480c9b765e2d7e0462b081907c sig_cn_org=None source=14.1 
  <para>
   The <command>CREATE FOREIGN TABLE</command> command largely conforms to the
   <acronym>SQL</acronym> standard; however, much as with
   <link linkend="sql-createtable"><command>CREATE TABLE</command></link>,
   <literal>NULL</literal> constraints and zero-column foreign tables are permitted.
   The ability to specify column default values is also
   a <productname>PostgreSQL</productname> extension.  Table inheritance, in the form
   defined by <productname>PostgreSQL</productname>, is nonstandard.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE FOREIGN TABLE</command>命令大部分符合
   <acronym>SQL</acronym>标准。不过，与
   <link linkend="sql-createtable"><command>CREATE TABLE</command></link>
   很相似，它允许<literal>NULL</literal>约束以及零列外部表。能够指定列默认值
   也是一种<productname>PostgreSQL</productname>扩展。
   <productname>PostgreSQL</productname>定义的表继承形式是非标准的。
  </para>
<!-- pgdoc-cn_end sig_en=2f031e480c9b765e2d7e0462b081907c -->

 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-alterforeigntable"/></member>
   <member><xref linkend="sql-dropforeigntable"/></member>
   <member><xref linkend="sql-createtable"/></member>
   <member><xref linkend="sql-createserver"/></member>
   <member><xref linkend="sql-importforeignschema"/></member>
  </simplelist>
 </refsect1>
</refentry>
