<!--
doc/src/sgml/ref/values.sgml
PostgreSQL documentation
-->

<refentry id="sql-values">
<!-- pgdoc-cn_start sig_en=2399c009f07d0889f123184d9edd77db sig_cn_org=None source=14.1 
 <indexterm zone="sql-values">
  <primary>VALUES</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-values">
  <primary>VALUES</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=2399c009f07d0889f123184d9edd77db -->

 <refmeta>
  <refentrytitle>VALUES</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=8cf24781c7747c085f13af45617bc34e sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>VALUES</refname>
  <refpurpose>compute a set of rows</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>VALUES</refname>
  <refpurpose>计算一个行集合</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=8cf24781c7747c085f13af45617bc34e -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=1153e55040336a9129a6cccce6f77d05 sig_cn_org=None source=14.1 
<synopsis>
VALUES ( <replaceable class="parameter">expression</replaceable> [, ...] ) [, ...]
    [ ORDER BY <replaceable class="parameter">sort_expression</replaceable> [ ASC | DESC | USING <replaceable class="parameter">operator</replaceable> ] [, ...] ]
    [ LIMIT { <replaceable class="parameter">count</replaceable> | ALL } ]
    [ OFFSET <replaceable class="parameter">start</replaceable> [ ROW | ROWS ] ]
    [ FETCH { FIRST | NEXT } [ <replaceable class="parameter">count</replaceable> ] { ROW | ROWS } ONLY ]
</synopsis>
________________________________________________________-->
<synopsis>
VALUES ( <replaceable class="parameter">expression</replaceable> [, ...] ) [, ...]
    [ ORDER BY <replaceable class="parameter">sort_expression</replaceable> [ ASC | DESC | USING <replaceable class="parameter">operator</replaceable> ] [, ...] ]
    [ LIMIT { <replaceable class="parameter">count</replaceable> | ALL } ]
    [ OFFSET <replaceable class="parameter">start</replaceable> [ ROW | ROWS ] ]
    [ FETCH { FIRST | NEXT } [ <replaceable class="parameter">count</replaceable> ] { ROW | ROWS } ONLY ]
</synopsis>
<!-- pgdoc-cn_end sig_en=1153e55040336a9129a6cccce6f77d05 -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=d5cc7b8391263c2e41b20f47662dd998 sig_cn_org=None source=14.1 
  <para>
   <command>VALUES</command> computes a row value or set of row values
   specified by value expressions.  It is most commonly used to generate
   a <quote>constant table</quote> within a larger command, but it can be
   used on its own.
  </para>
________________________________________________________-->
  <para>
   <command>VALUES</command>计算由值表达式指定的一个行值或者
   一组行值。更常见的是把它用来生成一个大型命令内的<quote>常量表</quote>，
   但是它也可以被独自使用。
  </para>
<!-- pgdoc-cn_end sig_en=d5cc7b8391263c2e41b20f47662dd998 -->

<!-- pgdoc-cn_start sig_en=5c6c52a1379b7416d52d87e31b4b6250 sig_cn_org=None source=14.1 
  <para>
   When more than one row is specified, all the rows must have the same
   number of elements.  The data types of the resulting table's columns are
   determined by combining the explicit or inferred types of the expressions
   appearing in that column, using the same rules as for <literal>UNION</literal>
   (see <xref linkend="typeconv-union-case"/>).
  </para>
________________________________________________________-->
  <para>
   当多于一行被指定时，所有行都必须具有相同数量的元素。结果表的列数据类型
   由出现在该列的表达式的显式或者推导类型组合决定，决定的规则与
   <literal>UNION</literal>相同（见<xref linkend="typeconv-union-case"/>）。
  </para>
<!-- pgdoc-cn_end sig_en=5c6c52a1379b7416d52d87e31b4b6250 -->

<!-- pgdoc-cn_start sig_en=da1f03bd740ea8da72ba56fd07134829 sig_cn_org=None source=14.1 
  <para>
   Within larger commands, <command>VALUES</command> is syntactically allowed
   anywhere that <command>SELECT</command> is.  Because it is treated like a
   <command>SELECT</command> by the grammar, it is possible to use
   the <literal>ORDER BY</literal>, <literal>LIMIT</literal> (or
   equivalently <literal>FETCH FIRST</literal>),
   and <literal>OFFSET</literal> clauses with a
   <command>VALUES</command> command.
  </para>
________________________________________________________-->
  <para>
   在大型的命令中，在语法上允许<command>VALUES</command>出现在
   <command>SELECT</command>出现的任何地方。因为语法把它当做一个
   <command>SELECT</command>，可以为一个<command>VALUES</command>
   命令使用<literal>ORDER BY</literal>、
   <literal>LIMIT</literal>（或者等效的<literal>FETCH FIRST</literal>）
   以及<literal>OFFSET</literal>子句。
  </para>
<!-- pgdoc-cn_end sig_en=da1f03bd740ea8da72ba56fd07134829 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">expression</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=53a2aaf34316ecf1d19f5111256ff2ee sig_cn_org=None source=14.1 
     <para>
      A constant or expression to compute and insert at the indicated place
      in the resulting table (set of rows).  In a <command>VALUES</command> list
      appearing at the top level of an <command>INSERT</command>, an
      <replaceable class="parameter">expression</replaceable> can be replaced
      by <literal>DEFAULT</literal> to indicate that the destination column's
      default value should be inserted.  <literal>DEFAULT</literal> cannot
      be used when <command>VALUES</command> appears in other contexts.
     </para>
________________________________________________________-->
     <para>
      要在结果表（行集合）中指定位置计算并且插入的一个常量或者表达式。
      在一个出现于<command>INSERT</command>顶层的
      <command>VALUES</command>列表中，
      <replaceable class="parameter">expression</replaceable>可以
      被<literal>DEFAULT</literal>替代以表示应该插入目标列的默认值。
      当<command>VALUES</command>出现在其他环境中时，不能使用
      <literal>DEFAULT</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=53a2aaf34316ecf1d19f5111256ff2ee -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">sort_expression</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=d9a51afe0c65923deb853a5b0b019625 sig_cn_org=None source=14.1 
     <para>
      An expression or integer constant indicating how to sort the result
      rows.  This expression can refer to the columns of the
      <command>VALUES</command> result as <literal>column1</literal>, <literal>column2</literal>,
      etc.  For more details see
      <xref linkend="sql-orderby"/>
      in the <xref linkend="sql-select"/> documentation.
     </para>
________________________________________________________-->
     <para>
      一个指示如何排序结果行的表达式或者整型常量。这个表达式
      可以用<literal>column1</literal>、<literal>column2</literal>等来
      引用该<command>VALUES</command>结果的列。有关详细信息，请参阅
      <xref linkend="sql-select"/>文档中的<xref linkend="sql-orderby"/>。
     </para>
<!-- pgdoc-cn_end sig_en=d9a51afe0c65923deb853a5b0b019625 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">operator</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=4c36ccff8120bc09fc6bb008dc8b4637 sig_cn_org=None source=14.1 
     <para>
      A sorting operator.  For details see
      <xref linkend="sql-orderby"/>
      in the <xref linkend="sql-select"/> documentation.
     </para>
________________________________________________________-->
     <para>
      一个排序操作符。详见
      <xref linkend="sql-select"/>文档中的<xref linkend="sql-orderby"/>。
     </para>
<!-- pgdoc-cn_end sig_en=4c36ccff8120bc09fc6bb008dc8b4637 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">count</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=c1890f0afb2a4613c48e78f60854663b sig_cn_org=None source=14.1 
     <para>
      The maximum number of rows to return.  For details see
      <xref linkend="sql-limit"/>
      in the <xref linkend="sql-select"/> documentation.
     </para>
________________________________________________________-->
     <para>
      要返回的最大行数。详见
      <xref linkend="sql-select"/>文档中的<xref linkend="sql-limit"/>。
     </para>
<!-- pgdoc-cn_end sig_en=c1890f0afb2a4613c48e78f60854663b -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">start</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=601ef10ae4336dd49a251a684e1c15e2 sig_cn_org=None source=14.1 
     <para>
      The number of rows to skip before starting to return rows.
      For details see <xref linkend="sql-limit"/>
      in the <xref linkend="sql-select"/> documentation.
     </para>
________________________________________________________-->
     <para>
      开始返回行之前要跳过的行数。详见
      <xref linkend="sql-select"/>文档中的<xref linkend="sql-limit"/>。
     </para>
<!-- pgdoc-cn_end sig_en=601ef10ae4336dd49a251a684e1c15e2 -->
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=fda50f0321b261ca6920c1a6176996e1 sig_cn_org=None source=14.1 
  <para>
   <command>VALUES</command> lists with very large numbers of rows should be avoided,
   as you might encounter out-of-memory failures or poor performance.
   <command>VALUES</command> appearing within <command>INSERT</command> is a special case
   (because the desired column types are known from the <command>INSERT</command>'s
   target table, and need not be inferred by scanning the <command>VALUES</command>
   list), so it can handle larger lists than are practical in other contexts.
  </para>
________________________________________________________-->
  <para>
   应该避免具有大量行的<command>VALUES</command>列表，否则可能会
   碰到内存不足失败或者很差的性能。出现在<command>INSERT</command>
   中的<command>VALUES</command>是一种特殊情况（因为想要的列类型
   可以从<command>INSERT</command>的目标表得知，并且不需要通过扫描
   该<command>VALUES</command>列表来推导），因此它可以处理比其他
   环境中更大的列表。
  </para>
<!-- pgdoc-cn_end sig_en=fda50f0321b261ca6920c1a6176996e1 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=7ec84e82e01a201d86722620174d38ba sig_cn_org=None source=14.1 
  <para>
   A bare <command>VALUES</command> command:

<programlisting>
VALUES (1, 'one'), (2, 'two'), (3, 'three');
</programlisting>

   This will return a table of two columns and three rows.  It's effectively
   equivalent to:

<programlisting>
SELECT 1 AS column1, 'one' AS column2
UNION ALL
SELECT 2, 'two'
UNION ALL
SELECT 3, 'three';
</programlisting>

  </para>
________________________________________________________-->
  <para>
   一个纯粹的<command>VALUES</command>命令：

<programlisting>
VALUES (1, 'one'), (2, 'two'), (3, 'three');
</programlisting>

   这将返回一个具有两列、三行的表。它实际等效于：

<programlisting>
SELECT 1 AS column1, 'one' AS column2
UNION ALL
SELECT 2, 'two'
UNION ALL
SELECT 3, 'three';
</programlisting>

  </para>
<!-- pgdoc-cn_end sig_en=7ec84e82e01a201d86722620174d38ba -->

<!-- pgdoc-cn_start sig_en=bfd1a32079632d0bebb1a6cc30bba3a2 sig_cn_org=None source=14.1 
  <para>
   More usually, <command>VALUES</command> is used within a larger SQL command.
   The most common use is in <command>INSERT</command>:

<programlisting>
INSERT INTO films (code, title, did, date_prod, kind)
    VALUES ('T_601', 'Yojimbo', 106, '1961-06-16', 'Drama');
</programlisting>
  </para>
________________________________________________________-->
  <para>
   更常用地，<command>VALUES</command>可以被用在一个大型 SQL 命令中。
   在<command>INSERT</command>中最常用：

<programlisting>
INSERT INTO films (code, title, did, date_prod, kind)
    VALUES ('T_601', 'Yojimbo', 106, '1961-06-16', 'Drama');
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=bfd1a32079632d0bebb1a6cc30bba3a2 -->

<!-- pgdoc-cn_start sig_en=953e982c88f389346f9321b7afdfc6ca sig_cn_org=None source=14.1 
  <para>
   In the context of <command>INSERT</command>, entries of a <command>VALUES</command> list
   can be <literal>DEFAULT</literal> to indicate that the column default
   should be used here instead of specifying a value:

<programlisting>
INSERT INTO films VALUES
    ('UA502', 'Bananas', 105, DEFAULT, 'Comedy', '82 minutes'),
    ('T_601', 'Yojimbo', 106, DEFAULT, 'Drama', DEFAULT);
</programlisting>
  </para>
________________________________________________________-->
  <para>
   在<command>INSERT</command>的环境中，一个<command>VALUES</command>列表
   的项可以是<literal>DEFAULT</literal>来指示应该使用该列的默认值而不是
   指定一个值：

<programlisting>
INSERT INTO films VALUES
    ('UA502', 'Bananas', 105, DEFAULT, 'Comedy', '82 minutes'),
    ('T_601', 'Yojimbo', 106, DEFAULT, 'Drama', DEFAULT);
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=953e982c88f389346f9321b7afdfc6ca -->

<!-- pgdoc-cn_start sig_en=a4e9ae6025fef464c684e9aa6d9d14e7 sig_cn_org=95cdcc33d4a3e3f23b5f68391df49dff source=15.7 
  <para>
   <command>VALUES</command> can also be used where a sub-<command>SELECT</command> might
   be written, for example in a <literal>FROM</literal> clause:

<programlisting>
SELECT f.*
  FROM films f, (VALUES('MGM', 'Horror'), ('UA', 'Sci-Fi')) AS t (studio, kind)
  WHERE f.studio = t.studio AND f.kind = t.kind;

UPDATE employees SET salary = salary * v.increase
  FROM (VALUES(1, 200000, 1.2), (2, 400000, 1.4)) AS v (depno, target, increase)
  WHERE employees.depno = v.depno AND employees.sales &gt;= v.target;
</programlisting>

   Note that an <literal>AS</literal> clause is required when <command>VALUES</command>
   is used in a <literal>FROM</literal> clause, just as is true for
   <command>SELECT</command>.  It is not required that the <literal>AS</literal> clause
   specify names for all the columns, but it's good practice to do so.
   (The default column names for <command>VALUES</command> are <literal>column1</literal>,
   <literal>column2</literal>, etc. in <productname>PostgreSQL</productname>, but
   these names might be different in other database systems.)
  </para>
________________________________________________________-->
  <para>
   <command>VALUES</command>可以用在子<command>SELECT</command>的地方，例如在<literal>FROM</literal>子句中：

<programlisting>
SELECT f.*
  FROM films f, (VALUES('MGM', 'Horror'), ('UA', 'Sci-Fi')) AS t (studio, kind)
  WHERE f.studio = t.studio AND f.kind = t.kind;

UPDATE employees SET salary = salary * v.increase
  FROM (VALUES(1, 200000, 1.2), (2, 400000, 1.4)) AS v (depno, target, increase)
  WHERE employees.depno = v.depno AND employees.sales &gt;= v.target;
</programlisting>

   注意，在<literal>FROM</literal>子句中使用<command>VALUES</command>时，需要一个<literal>AS</literal>子句，就像在<command>SELECT</command>中一样。并不需要<literal>AS</literal>子句为所有列指定名称，但最好这样做。
   （在<productname>PostgreSQL</productname>中，<command>VALUES</command>的默认列名是<literal>column1</literal>，<literal>column2</literal>等，但在其他数据库系统中这些名称可能不同。）
</para>
<!-- pgdoc-cn_end sig_en=a4e9ae6025fef464c684e9aa6d9d14e7 -->

<!-- pgdoc-cn_start sig_en=1ccb512aee55adb9f27ca69d11c2d348 sig_cn_org=None source=14.1 
  <para>
   When <command>VALUES</command> is used in <command>INSERT</command>, the values are all
   automatically coerced to the data type of the corresponding destination
   column.  When it's used in other contexts, it might be necessary to specify
   the correct data type.  If the entries are all quoted literal constants,
   coercing the first is sufficient to determine the assumed type for all:

<programlisting>
SELECT * FROM machines
WHERE ip_address IN (VALUES('192.168.0.1'::inet), ('192.168.0.10'), ('192.168.1.43'));
</programlisting></para>
________________________________________________________-->
  <para>
   当在<command>INSERT</command>中使用<command>VALUES</command>时，值都会
   被自动地强制为相应目标列的数据类型。当在其他环境中使用时，有必要指定
   正确的数据类型。如果项都是带引号的字符串常量，强制第一个就足以为所有
   项假设数据类型：

<programlisting>
SELECT * FROM machines
WHERE ip_address IN (VALUES('192.168.0.1'::inet), ('192.168.0.10'), ('192.168.1.43'));
</programlisting></para>
<!-- pgdoc-cn_end sig_en=1ccb512aee55adb9f27ca69d11c2d348 -->

  <tip>
<!-- pgdoc-cn_start sig_en=a07b44b992b248493253d45c832516a4 sig_cn_org=None source=14.1 
   <para>
    For simple <literal>IN</literal> tests, it's better to rely on the
    <link linkend="functions-comparisons-in-scalar">list-of-scalars</link>
    form of <literal>IN</literal> than to write a <command>VALUES</command>
    query as shown above.  The list of scalars method requires less writing
    and is often more efficient.
   </para>
________________________________________________________-->
   <para>
    对于简单的<literal>IN</literal>测试，最好使用<literal>IN</literal>的
    <link linkend="functions-comparisons-in-scalar">list-of-scalars</link>形式
    而不是写一个上面那样的<command>VALUES</command>查询。标量列表方法的
    书写更少并且常常更加高效。
   </para>
<!-- pgdoc-cn_end sig_en=a07b44b992b248493253d45c832516a4 -->
  </tip>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=82b534516badbc887d00f2313320af0f sig_cn_org=None source=14.1 
  <para><command>VALUES</command> conforms to the SQL standard.
   <literal>LIMIT</literal> and <literal>OFFSET</literal> are
   <productname>PostgreSQL</productname> extensions; see also
   under <xref linkend="sql-select"/>.
  </para>
________________________________________________________-->
  <para><command>VALUES</command>符合 SQL 标准。
   <literal>LIMIT</literal>和<literal>OFFSET</literal>是
   <productname>PostgreSQL</productname>扩展，另见
   <xref linkend="sql-select"/>。
  </para>
<!-- pgdoc-cn_end sig_en=82b534516badbc887d00f2313320af0f -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-insert"/></member>
   <member><xref linkend="sql-select"/></member>
  </simplelist>
 </refsect1>
</refentry>
