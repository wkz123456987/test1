<!--
doc/src/sgml/ref/create_sequence.sgml
PostgreSQL documentation
-->

<refentry id="sql-createsequence">
<!-- pgdoc-cn_start sig_en=10f852cddce0b4c4041e8328186a9cc1 sig_cn_org=None source=14.1 
 <indexterm zone="sql-createsequence">
  <primary>CREATE SEQUENCE</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-createsequence">
  <primary>CREATE SEQUENCE</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=10f852cddce0b4c4041e8328186a9cc1 -->

 <refmeta>
  <refentrytitle>CREATE SEQUENCE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=fafb1e332d7520a0df0594f73a213c52 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>CREATE SEQUENCE</refname>
  <refpurpose>define a new sequence generator</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>CREATE SEQUENCE</refname>
  <refpurpose>定义一个新的序列发生器</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=fafb1e332d7520a0df0594f73a213c52 -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=b0c4ddca7a410ca2dfc10487df44a5ca sig_cn_org=b0c4ddca7a410ca2dfc10487df44a5ca source=15.7 
<synopsis>
CREATE [ { TEMPORARY | TEMP } | UNLOGGED ] SEQUENCE [ IF NOT EXISTS ] <replaceable class="parameter">name</replaceable>
    [ AS <replaceable class="parameter">data_type</replaceable> ]
    [ INCREMENT [ BY ] <replaceable class="parameter">increment</replaceable> ]
    [ MINVALUE <replaceable class="parameter">minvalue</replaceable> | NO MINVALUE ] [ MAXVALUE <replaceable class="parameter">maxvalue</replaceable> | NO MAXVALUE ]
    [ START [ WITH ] <replaceable class="parameter">start</replaceable> ] [ CACHE <replaceable class="parameter">cache</replaceable> ] [ [ NO ] CYCLE ]
    [ OWNED BY { <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable> | NONE } ]
</synopsis>
________________________________________________________-->
<synopsis>
CREATE [ { TEMPORARY | TEMP } | UNLOGGED ] SEQUENCE [ IF NOT EXISTS ] <replaceable class="parameter">name</replaceable>
    [ AS <replaceable class="parameter">data_type</replaceable> ]
    [ INCREMENT [ BY ] <replaceable class="parameter">increment</replaceable> ]
    [ MINVALUE <replaceable class="parameter">minvalue</replaceable> | NO MINVALUE ] [ MAXVALUE <replaceable class="parameter">maxvalue</replaceable> | NO MAXVALUE ]
    [ START [ WITH ] <replaceable class="parameter">start</replaceable> ] [ CACHE <replaceable class="parameter">cache</replaceable> ] [ [ NO ] CYCLE ]
    [ OWNED BY { <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable> | NONE } ]
</synopsis>
<!-- pgdoc-cn_end sig_en=b0c4ddca7a410ca2dfc10487df44a5ca -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=a8edfcf80069ccd22e1070fbf2934fd8 sig_cn_org=None source=14.1 
  <para>
   <command>CREATE SEQUENCE</command> creates a new sequence number
   generator.  This involves creating and initializing a new special
   single-row table with the name <replaceable
   class="parameter">name</replaceable>.  The generator will be
   owned by the user issuing the command.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE SEQUENCE</command>创建一个新的序列数
   发生器。这涉及到用名称<replaceable
   class="parameter">name</replaceable>创建并且初始化
   一个新的特殊的单行表。该发生器将由发出该命令的用户所拥有。
  </para>
<!-- pgdoc-cn_end sig_en=a8edfcf80069ccd22e1070fbf2934fd8 -->

<!-- pgdoc-cn_start sig_en=4c02368b1cc84072dec443e7b9c97cfa sig_cn_org=70199d236b45870d799a13e234e29684 source=15.7 
  <para>
   If a schema name is given then the sequence is created in the
   specified schema.  Otherwise it is created in the current schema.
   Temporary sequences exist in a special schema, so a schema name cannot be
   given when creating a temporary sequence.
   The sequence name must be distinct from the name of any other relation
   (table, sequence, index, view, materialized view, or foreign table) in
   the same schema.
  </para>
________________________________________________________-->
  <para>
   如果给定了模式名称，则序列将在指定的模式中创建。否则，它将在当前模式中创建。
   临时序列存在于一个特殊的模式中，因此在创建临时序列时不能指定模式名称。
   序列名称必须与同一模式中的任何其他关系（表、序列、索引、视图、物化视图或外部表）的名称不同。
</para>
<!-- pgdoc-cn_end sig_en=4c02368b1cc84072dec443e7b9c97cfa -->

<!-- pgdoc-cn_start sig_en=f4f2c5144207096bdd431ff03aa9e6b2 sig_cn_org=None source=14.1 
  <para>
   After a sequence is created, you use the functions
   <function>nextval</function>,
   <function>currval</function>, and
   <function>setval</function>
   to operate on the sequence.  These functions are documented in
   <xref linkend="functions-sequence"/>.
  </para>
________________________________________________________-->
  <para>
   在序列被创建后，可以使用函数
   <function>nextval</function>、
   <function>currval</function>以及
   <function>setval</function>来操作该序列。这些函数在
   <xref linkend="functions-sequence"/>中有介绍。
  </para>
<!-- pgdoc-cn_end sig_en=f4f2c5144207096bdd431ff03aa9e6b2 -->

<!-- pgdoc-cn_start sig_en=68882bf26e3a5da96ba274d6c22bdb0d sig_cn_org=None source=14.1 
  <para>
   Although you cannot update a sequence directly, you can use a query like:

<programlisting>
SELECT * FROM <replaceable>name</replaceable>;
</programlisting>

   to examine the parameters and current state of a sequence.  In particular,
   the <literal>last_value</literal> field of the sequence shows the last value
   allocated by any session.  (Of course, this value might be obsolete
   by the time it's printed, if other sessions are actively doing
   <function>nextval</function> calls.)
  </para>
________________________________________________________-->
  <para>
   尽管无法直接更新一个序列，可以使用这样的查询：

<programlisting>
SELECT * FROM <replaceable>name</replaceable>;
</programlisting>

   来检查一个序列的参数以及当前状态。特别地，序列的
   <literal>last_value</literal>域显示被任意会话最后一次取得的值（当然，
   在被打印时该值可能已经过时了，因为可能有其他会话正在执行
   <function>nextval</function>调用）。
  </para>
<!-- pgdoc-cn_end sig_en=68882bf26e3a5da96ba274d6c22bdb0d -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
<!-- pgdoc-cn_start sig_en=38f5f15c2286c0019a288ab70bbfb93e sig_cn_org=None source=14.1 
    <term><literal>TEMPORARY</literal> or <literal>TEMP</literal></term>
________________________________________________________-->
    <term><literal>TEMPORARY</literal> or <literal>TEMP</literal></term>
<!-- pgdoc-cn_end sig_en=38f5f15c2286c0019a288ab70bbfb93e -->
    <listitem>
<!-- pgdoc-cn_start sig_en=d1d01130eccaa14317201f1ae6b43229 sig_cn_org=None source=14.1 
     <para>
      If specified, the sequence object is created only for this
      session, and is automatically dropped on session exit.  Existing
      permanent sequences with the same name are not visible (in this
      session) while the temporary sequence exists, unless they are
      referenced with schema-qualified names.
     </para>
________________________________________________________-->
     <para>
      如果被指定，只会为这个会话创建序列对象，并且在会话退出时自动
      删除它。当临时序列存在时，已有的同名永久序列（在这个会话中）
      会变得不可见，不过可以用模式限定的名称来引用同名永久序列。
     </para>
<!-- pgdoc-cn_end sig_en=d1d01130eccaa14317201f1ae6b43229 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>UNLOGGED</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=658e39782efbf0b4bdec2647acf101cf sig_cn_org=e5cd0343a82eea0dcb4df4d9a5b899c8 source=15.7 
     <para>
      If specified, the sequence is created as an unlogged sequence.  Changes
      to unlogged sequences are not written to the write-ahead log.  They are
      not crash-safe: an unlogged sequence is automatically reset to its
      initial state after a crash or unclean shutdown.  Unlogged sequences are
      also not replicated to standby servers.
     </para>
________________________________________________________-->
     <para>
      如果指定，该序列将被创建为非记录序列。对非记录序列的更改不会被写入预写式日志。
      它们不是崩溃安全的：在崩溃或非正常关闭后，非记录序列会自动重置为其初始状态。
      非记录序列也不会被复制到备用服务器。
</para>
<!-- pgdoc-cn_end sig_en=658e39782efbf0b4bdec2647acf101cf -->

<!-- pgdoc-cn_start sig_en=0877377baced45c1031eb903e71f4b38 sig_cn_org=b7ec679cdab8c974fac88b10a28d6d9f source=15.7 
     <para>
      Unlike unlogged tables, unlogged sequences do not offer a significant
      performance advantage.  This option is mainly intended for sequences
      associated with unlogged tables via identity columns or serial columns.
      In those cases, it usually wouldn't make sense to have the sequence
      WAL-logged and replicated but not its associated table.
     </para>
________________________________________________________-->
     <para>
      与未记录的表不同，未记录的序列并不提供显著的性能优势。此选项主要用于通过标识列或序列列与未记录表关联的序列。
      在这些情况下，通常没有意义将序列WAL记录并复制，而不是其关联的表。
     </para>
<!-- pgdoc-cn_end sig_en=0877377baced45c1031eb903e71f4b38 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>IF NOT EXISTS</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=1e136b8af2696fc625bb9f1497faf444 sig_cn_org=None source=14.1 
     <para>
      Do not throw an error if a relation with the same name already exists.
      A notice is issued in this case. Note that there is no guarantee that
      the existing relation is anything like the sequence that would have
      been created &mdash; it might not even be a sequence.
     </para>
________________________________________________________-->
     <para>
      如果已经存在一个同名的关系时不要抛出错误。这种情况下会发出一个
      提示。注意这不保证现有的关系与即将创建的序列相似 &mdash; 它甚至可能
      都不是一个序列。
     </para>
<!-- pgdoc-cn_end sig_en=1e136b8af2696fc625bb9f1497faf444 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=05da385523ed50580e921d5256bece3b sig_cn_org=None source=14.1 
     <para>
      The name (optionally schema-qualified) of the sequence to be created.
     </para>
________________________________________________________-->
     <para>
      要创建的序列的名称（可以是模式限定的）。
     </para>
<!-- pgdoc-cn_end sig_en=05da385523ed50580e921d5256bece3b -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">data_type</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=232f2f1b7dea3bfe831c8ba1b75b9344 sig_cn_org=None source=14.1 
     <para>
      The optional
      clause <literal>AS <replaceable class="parameter">data_type</replaceable></literal>
      specifies the data type of the sequence.  Valid types are
      <literal>smallint</literal>, <literal>integer</literal>,
      and <literal>bigint</literal>.  <literal>bigint</literal> is the
      default.  The data type determines the default minimum and maximum
      values of the sequence.
     </para>
________________________________________________________-->
     <para>
      可选的子句<literal>AS <replaceable class="parameter">data_type</replaceable></literal>
      制定序列的数据类型。有效类型是
      <literal>smallint</literal>、<literal>integer</literal>、
      和<literal>bigint</literal>。默认是<literal>bigint</literal>。
      数据类型决定了序列的默认最小和最大值。
     </para>
<!-- pgdoc-cn_end sig_en=232f2f1b7dea3bfe831c8ba1b75b9344 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">increment</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=80865fd437c04a4ce18e7ce136179314 sig_cn_org=None source=14.1 
     <para>
      The optional clause <literal>INCREMENT BY <replaceable
      class="parameter">increment</replaceable></literal> specifies
      which value is added to the current sequence value to create a
      new value.  A positive value will make an ascending sequence, a
      negative one a descending sequence.  The default value is 1.
     </para>
________________________________________________________-->
     <para>
      可选的子句<literal>INCREMENT BY <replaceable
      class="parameter">increment</replaceable></literal>指定为了
      创建新值会把哪个值加到当前序列值上。一个正值将会创造一个上升
      序列，负值会创造一个下降序列。默认值是 1。
     </para>
<!-- pgdoc-cn_end sig_en=80865fd437c04a4ce18e7ce136179314 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">minvalue</replaceable></term>
    <term><literal>NO MINVALUE</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=f80ff4aebf4d7976e47eb74c08f06d27 sig_cn_org=None source=14.1 
     <para>
      The optional clause <literal>MINVALUE <replaceable
      class="parameter">minvalue</replaceable></literal> determines
      the minimum value a sequence can generate. If this clause is not
      supplied or <option>NO MINVALUE</option> is specified, then
      defaults will be used.  The default for an ascending sequence is 1.  The
      default for a descending sequence is the minimum value of the data type.
     </para>
________________________________________________________-->
     <para>
      可选的子句<literal>MINVALUE <replaceable
      class="parameter">minvalue</replaceable></literal>决定一个序列
      能产生的最小值。如果没有提供这个子句或者指定了
      <option>NO MINVALUE</option>，那么会使用默认值。
	  升序序列的默认值为1。降序序列的默认值为数据类型的最小值。
     </para>
<!-- pgdoc-cn_end sig_en=f80ff4aebf4d7976e47eb74c08f06d27 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">maxvalue</replaceable></term>
    <term><literal>NO MAXVALUE</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=51cdbd210f7109b296f1a7ba9b88997d sig_cn_org=None source=14.1 
     <para>
      The optional clause <literal>MAXVALUE <replaceable
      class="parameter">maxvalue</replaceable></literal> determines
      the maximum value for the sequence. If this clause is not
      supplied or <option>NO MAXVALUE</option> is specified, then
      default values will be used.  The default for an ascending sequence is
      the maximum value of the data type.  The default for a descending
      sequence is -1.
     </para>
________________________________________________________-->
     <para>
      可选的子句<literal>MAXVALUE <replaceable
      class="parameter">maxvalue</replaceable></literal>决定该序列
      的最大值。如果没有提供这个子句或者指定了
      <option>NO MAXVALUE</option>，那么将会使用默认值。
	  升序序列的默认值是数据类型的最大值。降序序列的默认值是-1。
     </para>
<!-- pgdoc-cn_end sig_en=51cdbd210f7109b296f1a7ba9b88997d -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">start</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=755ddda48173108ad010acfb8bf0baef sig_cn_org=None source=14.1 
     <para>
      The optional clause <literal>START WITH <replaceable
      class="parameter">start</replaceable> </literal> allows the
      sequence to begin anywhere.  The default starting value is
      <replaceable class="parameter">minvalue</replaceable> for
      ascending sequences and <replaceable
      class="parameter">maxvalue</replaceable> for descending ones.
     </para>
________________________________________________________-->
     <para>
      可选的子句<literal>START WITH <replaceable
      class="parameter">start</replaceable> </literal>允许序列从任何
      地方开始。对于上升序列和下降序列来说，默认的开始值分别是
      <replaceable class="parameter">minvalue</replaceable>和
      <replaceable class="parameter">maxvalue</replaceable>。
     </para>
<!-- pgdoc-cn_end sig_en=755ddda48173108ad010acfb8bf0baef -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">cache</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=1877e4a66545a7d6c45863190c02b41b sig_cn_org=None source=14.1 
     <para>
      The optional clause <literal>CACHE <replaceable
      class="parameter">cache</replaceable></literal> specifies how
      many sequence numbers are to be preallocated and stored in
      memory for faster access. The minimum value is 1 (only one value
      can be generated at a time, i.e., no cache), and this is also the
      default.
     </para>
________________________________________________________-->
     <para>
      可选的子句<literal>CACHE <replaceable
      class="parameter">cache</replaceable></literal>指定要预分配多少
      个序列数并且把它们放在内存中以便快速访问。最小值为 1 （一次只生成
      一个值，即没有缓存），默认值也是 1。
     </para>
<!-- pgdoc-cn_end sig_en=1877e4a66545a7d6c45863190c02b41b -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CYCLE</literal></term>
    <term><literal>NO CYCLE</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=0343a5246108dc880d4f975021d7934c sig_cn_org=None source=14.1 
     <para>
      The <literal>CYCLE</literal> option allows the sequence to wrap
      around when the <replaceable
      class="parameter">maxvalue</replaceable> or <replaceable
      class="parameter">minvalue</replaceable> has been reached by an
      ascending or descending sequence respectively. If the limit is
      reached, the next number generated will be the <replaceable
      class="parameter">minvalue</replaceable> or <replaceable
      class="parameter">maxvalue</replaceable>, respectively.
     </para>
________________________________________________________-->
     <para>
      对于上升序列和下降序列，<literal>CYCLE</literal>选项允许序列
      在分别达到<replaceable
      class="parameter">maxvalue</replaceable>和<replaceable
      class="parameter">minvalue</replaceable>时回卷。如果达到
      该限制，下一个产生的数字将分别是<replaceable
      class="parameter">minvalue</replaceable>和<replaceable
      class="parameter">maxvalue</replaceable>。
     </para>
<!-- pgdoc-cn_end sig_en=0343a5246108dc880d4f975021d7934c -->

<!-- pgdoc-cn_start sig_en=cf06e8ed6c5f79aaecc8361b01afe8d0 sig_cn_org=None source=14.1 
     <para>
      If <literal>NO CYCLE</literal> is specified, any calls to
      <function>nextval</function> after the sequence has reached its
      maximum value will return an error.  If neither
      <literal>CYCLE</literal> or <literal>NO CYCLE</literal> are
      specified, <literal>NO CYCLE</literal> is the default.
     </para>
________________________________________________________-->
     <para>
      如果指定了<literal>NO CYCLE</literal>，当序列到达其最大值
      后任何<function>nextval</function>调用将返回一个错误。如果
      <literal>CYCLE</literal>和<literal>NO CYCLE</literal>都没有
      被指定，则默认为<literal>NO CYCLE</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=cf06e8ed6c5f79aaecc8361b01afe8d0 -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=a8968bf9278852cce24900c4af6d932a sig_cn_org=None source=14.1 
    <term><literal>OWNED BY</literal> <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable></term>
________________________________________________________-->
    <term><literal>OWNED BY</literal> <replaceable class="parameter">table_name</replaceable>.<replaceable class="parameter">column_name</replaceable></term>
<!-- pgdoc-cn_end sig_en=a8968bf9278852cce24900c4af6d932a -->
    <term><literal>OWNED BY NONE</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=4b8f3f0436f87a79a53af20792741c20 sig_cn_org=None source=14.1 
     <para>
      The <literal>OWNED BY</literal> option causes the sequence to be
      associated with a specific table column, such that if that column
      (or its whole table) is dropped, the sequence will be automatically
      dropped as well.  The specified table must have the same owner and be in
      the same schema as the sequence.
      <literal>OWNED BY NONE</literal>, the default, specifies that there
      is no such association.
     </para>
________________________________________________________-->
     <para>
      <literal>OWNED BY</literal>选项导致序列被与一个特定的表列关联
      在一起，这样如果该列（或者整个表）被删除，该序列也将被自动删除。
      指定的表必须和序列具有相同的拥有者并且在同一个模式中。默认选项
      <literal>OWNED BY NONE</literal>指定该序列不与某个列关联。
     </para>
<!-- pgdoc-cn_end sig_en=4b8f3f0436f87a79a53af20792741c20 -->
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=65c2ab1687e63197ebe95d06214d3ecf sig_cn_org=None source=14.1 
  <para>
   Use <command>DROP SEQUENCE</command> to remove a sequence.
  </para>
________________________________________________________-->
  <para>
   使用<command>DROP SEQUENCE</command>移除一个序列。
  </para>
<!-- pgdoc-cn_end sig_en=65c2ab1687e63197ebe95d06214d3ecf -->

<!-- pgdoc-cn_start sig_en=2cc251da4c707da5675c68560e4bf4ab sig_cn_org=None source=14.1 
  <para>
   Sequences are based on <type>bigint</type> arithmetic, so the range
   cannot exceed the range of an eight-byte integer
   (-9223372036854775808 to 9223372036854775807).
  </para>
________________________________________________________-->
  <para>
   序列是基于<type>bigint</type>算法的，因此范围是不能超过一个八字节
   整数的范围（-9223372036854775808 到 9223372036854775807）。
  </para>
<!-- pgdoc-cn_end sig_en=2cc251da4c707da5675c68560e4bf4ab -->

<!-- pgdoc-cn_start sig_en=d5208f796e9eb7575bd405d821e302ee sig_cn_org=None source=14.1 
  <para>
   Because <function>nextval</function> and <function>setval</function> calls are never
   rolled back, sequence objects cannot be used if <quote>gapless</quote>
   assignment of sequence numbers is needed.  It is possible to build
   gapless assignment by using exclusive locking of a table containing a
   counter; but this solution is much more expensive than sequence
   objects, especially if many transactions need sequence numbers
   concurrently.
  </para>
________________________________________________________-->
  <para>
   由于<function>nextval</function>和<function>setval</function>调用绝不会回滚，
   如果需要序数的<quote>无间隙</quote>分配，则不能使用序列对象。可以
   通过在一个只包含一个计数器的表上使用排他锁来构建无间隙的分配，
   但是这种方案比序列对象开销更大，特别是当有很多事务并发请求序数
   时。
  </para>
<!-- pgdoc-cn_end sig_en=d5208f796e9eb7575bd405d821e302ee -->

<!-- pgdoc-cn_start sig_en=3fece12dfc10fe5fdc1e086bd96403ef sig_cn_org=None source=14.1 
  <para>
   Unexpected results might be obtained if a <replaceable
   class="parameter">cache</replaceable> setting greater than one is
   used for a sequence object that will be used concurrently by
   multiple sessions.  Each session will allocate and cache successive
   sequence values during one access to the sequence object and
   increase the sequence object's <literal>last_value</literal> accordingly.
   Then, the next <replaceable class="parameter">cache</replaceable>-1
   uses of <function>nextval</function> within that session simply return the
   preallocated values without touching the sequence object.  So, any
   numbers allocated but not used within a session will be lost when
   that session ends, resulting in <quote>holes</quote> in the
   sequence.
  </para>
________________________________________________________-->
  <para>
   如果对一个将由多个会话并发使用的序列对象使用了大于 1 的<replaceable
   class="parameter">cache</replaceable>设置，可能会得到意想不到的结果。
   每个会话会在访问该序列对象时分配并且缓存后续的序列值，并且相应地增加
   该序列对象的<literal>last_value</literal>。然后，在该会话中下一次
   <function>nextval</function>会做
   <replaceable class="parameter">cache</replaceable>-1，并且简单地
   返回预分配的值而不修改序列对象。因此，任何已分配但没有在会话中使用的
   数字将会在该会话结束时丢失，导致该序列中的<quote>空洞</quote>。
  </para>
<!-- pgdoc-cn_end sig_en=3fece12dfc10fe5fdc1e086bd96403ef -->

<!-- pgdoc-cn_start sig_en=8edd805e208850f50238024f2b8c2a3e sig_cn_org=51b426a02e14d16eec25e0a06fe48f01 source=15.7 
  <para>
   Furthermore, although multiple sessions are guaranteed to allocate
   distinct sequence values, the values might be generated out of
   sequence when all the sessions are considered.  For example, with
   a <replaceable class="parameter">cache</replaceable> setting of 10,
   session A might reserve values 1..10 and return
   <function>nextval</function>=1, then session B might reserve values
   11..20 and return <function>nextval</function>=11 before session A
   has generated <function>nextval</function>=2.  Thus, with a
   <replaceable class="parameter">cache</replaceable> setting of one
   it is safe to assume that <function>nextval</function> values are generated
   sequentially; with a <replaceable
   class="parameter">cache</replaceable> setting greater than one you
   should only assume that the <function>nextval</function> values are all
   distinct, not that they are generated purely sequentially.  Also,
   <literal>last_value</literal> will reflect the latest value reserved by
   any session, whether or not it has yet been returned by
   <function>nextval</function>.
  </para>
________________________________________________________-->
  <para>
   此外，虽然多个会话保证分配不同的序列值，但在考虑所有会话时，这些值可能是按顺序生成的。例如，使用<replaceable class="parameter">cache</replaceable>设置为10时，会话A可能保留值1..10并返回<function>nextval</function>=1，然后会话B可能保留值11..20并返回<function>nextval</function>=11，而会话A尚未生成<function>nextval</function>=2。因此，当<replaceable class="parameter">cache</replaceable>设置为1时，可以安全地假设<function>nextval</function>值是按顺序生成的；当<replaceable class="parameter">cache</replaceable>设置大于1时，您只能假设<function>nextval</function>值都是不同的，而不是纯粹按顺序生成的。此外，<literal>last_value</literal>将反映任何会话保留的最新值，无论是否已被<function>nextval</function>返回。
  </para>
<!-- pgdoc-cn_end sig_en=8edd805e208850f50238024f2b8c2a3e -->

<!-- pgdoc-cn_start sig_en=4deb4fea8658eb60fc2648ff495ebd59 sig_cn_org=None source=14.1 
  <para>
   Another consideration is that a <function>setval</function> executed on
   such a sequence will not be noticed by other sessions until they
   have used up any preallocated values they have cached.
  </para>
________________________________________________________-->
  <para>
   另一个考虑是，在这样一个序列上执行的<function>setval</function>将不会通知
   其他会话，直到它们用尽了任何已缓存的预分配值。
  </para>
<!-- pgdoc-cn_end sig_en=4deb4fea8658eb60fc2648ff495ebd59 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=46ea626e31d864c1630807594eb05935 sig_cn_org=None source=14.1 
  <para>
   Create an ascending sequence called <literal>serial</literal>, starting at 101:
<programlisting>
CREATE SEQUENCE serial START 101;
</programlisting>
  </para>
________________________________________________________-->
  <para>
   创建一个称作<literal>serial</literal>的上升序列，从 101 开始：
<programlisting>
CREATE SEQUENCE serial START 101;
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=46ea626e31d864c1630807594eb05935 -->

<!-- pgdoc-cn_start sig_en=89046593c5e36b0e950ba3409aed3bc7 sig_cn_org=None source=14.1 
  <para>
   Select the next number from this sequence:
<programlisting>
SELECT nextval('serial');

 nextval
-&minus;-&minus;-&minus;-&minus;-
     101
</programlisting>
  </para>
________________________________________________________-->
  <para>
   从这个序列中选取下一个数字：
<programlisting>
SELECT nextval('serial');

 nextval
---------
     101
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=89046593c5e36b0e950ba3409aed3bc7 -->

<!-- pgdoc-cn_start sig_en=bbd82436daca6f524d303b708e2ae5f6 sig_cn_org=None source=14.1 
  <para>
   Select the next number from this sequence:
<programlisting>
SELECT nextval('serial');

 nextval
-&minus;-&minus;-&minus;-&minus;-
     102
</programlisting>
  </para>
________________________________________________________-->
  <para>
   再从这个序列中选取下一个数字：
<programlisting>
SELECT nextval('serial');

 nextval
---------
     102
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=bbd82436daca6f524d303b708e2ae5f6 -->

<!-- pgdoc-cn_start sig_en=402ca1f8afb5eb1283b42e6322fdb58f sig_cn_org=None source=14.1 
  <para>
   Use this sequence in an <command>INSERT</command> command:
<programlisting>
INSERT INTO distributors VALUES (nextval('serial'), 'nothing');
</programlisting>
  </para>
________________________________________________________-->
  <para>
   在一个<command>INSERT</command>命令中使用这个序列：
<programlisting>
INSERT INTO distributors VALUES (nextval('serial'), 'nothing');
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=402ca1f8afb5eb1283b42e6322fdb58f -->

<!-- pgdoc-cn_start sig_en=89f4391e70f8fa8dce4b07b361d22e83 sig_cn_org=None source=14.1 
  <para>
   Update the sequence value after a <command>COPY FROM</command>:
<programlisting>
BEGIN;
COPY distributors FROM 'input_file';
SELECT setval('serial', max(id)) FROM distributors;
END;
</programlisting></para>
________________________________________________________-->
  <para>
   在一次<command>COPY FROM</command>后更新新列值：
<programlisting>
BEGIN;
COPY distributors FROM 'input_file';
SELECT setval('serial', max(id)) FROM distributors;
END;
</programlisting></para>
<!-- pgdoc-cn_end sig_en=89f4391e70f8fa8dce4b07b361d22e83 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=d4495492938e5f63951097df4e9fdfb1 sig_cn_org=None source=14.1 
  <para>
   <command>CREATE SEQUENCE</command> conforms to the <acronym>SQL</acronym>
   standard, with the following exceptions:
   <itemizedlist>
    <listitem>
     <para>
      Obtaining the next value is done using the <function>nextval()</function>
      function instead of the standard's <command>NEXT VALUE FOR</command>
      expression.
     </para>
    </listitem>
    <listitem>
     <para>
      The <literal>OWNED BY</literal> clause is a <productname>PostgreSQL</productname>
      extension.
     </para>
    </listitem>
   </itemizedlist></para>
________________________________________________________-->
  <para>
   <command>CREATE SEQUENCE</command>符合<acronym>SQL</acronym>
   标准，不过下列除外：
   <itemizedlist>
    <listitem>
     <para>
      使用<function>nextval()</function>而不是标准的<command>NEXT VALUE FOR</command>
      表达式获取下一个值。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>OWNED BY</literal>子句是一种<productname>PostgreSQL</productname>扩展。
     </para>
    </listitem>
   </itemizedlist></para>
<!-- pgdoc-cn_end sig_en=d4495492938e5f63951097df4e9fdfb1 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-altersequence"/></member>
   <member><xref linkend="sql-dropsequence"/></member>
  </simplelist>
 </refsect1>

</refentry>
