<!--
doc/src/sgml/ref/call.sgml
PostgreSQL documentation
-->

<refentry id="sql-call">
<!-- pgdoc-cn_start sig_en=cb6f6fcbfdbf1229f0f8c9f5d4ac131a sig_cn_org=None source=14.1 
 <indexterm zone="sql-call">
  <primary>CALL</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-call">
  <primary>CALL</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=cb6f6fcbfdbf1229f0f8c9f5d4ac131a -->

 <refmeta>
  <refentrytitle>CALL</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=548b280f662620bcf627b37dc3b67475 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>CALL</refname>
  <refpurpose>invoke a procedure</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>CALL</refname>
  <refpurpose>调用一个过程</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=548b280f662620bcf627b37dc3b67475 -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=b06893b4560570635e37486364a85902 sig_cn_org=None source=14.1 
<synopsis>
CALL <replaceable class="parameter">name</replaceable> ( [ <replaceable class="parameter">argument</replaceable> ] [, ...] )
</synopsis>
________________________________________________________-->
<synopsis>
CALL <replaceable class="parameter">name</replaceable> ( [ <replaceable class="parameter">argument</replaceable> ] [, ...] )
</synopsis>
<!-- pgdoc-cn_end sig_en=b06893b4560570635e37486364a85902 -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>简介</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=e7e9fefd7bc8e21074f16a85f8748f39 sig_cn_org=None source=14.1 
  <para>
   <command>CALL</command> executes a procedure.
  </para>
________________________________________________________-->
  <para>
   <command>CALL</command>执行一个过程。
  </para>
<!-- pgdoc-cn_end sig_en=e7e9fefd7bc8e21074f16a85f8748f39 -->

<!-- pgdoc-cn_start sig_en=ed1b6aea733c25871560b3cb1b609143 sig_cn_org=None source=14.1 
  <para>
   If the procedure has any output parameters, then a result row will be
   returned, containing the values of those parameters.
  </para>
________________________________________________________-->
  <para>
   如果过程有任何输出参数，则会返回一个结果行，返回这些参数的值。
  </para>
<!-- pgdoc-cn_end sig_en=ed1b6aea733c25871560b3cb1b609143 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=99d8cca85ff5cb9fb03511ffbffe62da sig_cn_org=None source=14.1 
     <para>
      The name (optionally schema-qualified) of the procedure.
     </para>
________________________________________________________-->
     <para>
      过程的名称（可以被方案限定）。
     </para>
<!-- pgdoc-cn_end sig_en=99d8cca85ff5cb9fb03511ffbffe62da -->
    </listitem>
   </varlistentry>

  <varlistentry>
    <term><replaceable class="parameter">argument</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=1b33f6dcf335dac73e091ec7dde97c5c sig_cn_org=None source=14.1 
     <para>
      An argument expression for the procedure call.
     </para>
________________________________________________________-->
     <para>
      过程调用的一个参数表达式。
     </para>
<!-- pgdoc-cn_end sig_en=1b33f6dcf335dac73e091ec7dde97c5c -->

<!-- pgdoc-cn_start sig_en=b72a8edc25ac2e4be3b15df7a12e6990 sig_cn_org=None source=14.1 
     <para>
      Arguments can include parameter names, using the syntax
      <literal><replaceable class="parameter">name</replaceable> =&gt; <replaceable class="parameter">value</replaceable></literal>.
      This works the same as in ordinary function calls; see
      <xref linkend="sql-syntax-calling-funcs"/> for details.
     </para>
________________________________________________________-->
     <para>
      参数可以包括参数名称，使用语法为
      <literal><replaceable class="parameter">name</replaceable> =&gt; <replaceable class="parameter">value</replaceable></literal>。
      这与普通函数调用的工作方式相同。
      详细参考<xref linkend="sql-syntax-calling-funcs"/>。
     </para>
<!-- pgdoc-cn_end sig_en=b72a8edc25ac2e4be3b15df7a12e6990 -->

<!-- pgdoc-cn_start sig_en=5f11ac5c696dc82ad17907af26c9487c sig_cn_org=None source=14.1 
     <para>
      Arguments must be supplied for all procedure parameters that lack
      defaults, including <literal>OUT</literal> parameters.  However,
      arguments matching <literal>OUT</literal> parameters are not evaluated,
      so it's customary to just write <literal>NULL</literal> for them.
      (Writing something else for an <literal>OUT</literal> parameter
      might cause compatibility problems with
      future <productname>PostgreSQL</productname> versions.)
     </para>
________________________________________________________-->
     <para>
      必须为所有缺少默认值的过程参数提供参数值，包括<literal>OUT</literal>参数。
      然而，匹配<literal>OUT</literal>参数的参数不会被求值，因此通常为它们代入<literal>NULL</literal>。
     （为<literal>OUT</literal>参数代入其他内容可能会导致与未来的
     <productname>PostgreSQL</productname>版本的兼容问题。）
     </para>
<!-- pgdoc-cn_end sig_en=5f11ac5c696dc82ad17907af26c9487c -->
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=b31a4fafcca937d6a1795eaa17eeb645 sig_cn_org=None source=14.1 
  <para>
   The user must have <literal>EXECUTE</literal> privilege on the procedure in
   order to be allowed to invoke it.
  </para>
________________________________________________________-->
  <para>
   用户必须有过程上的<literal>EXECUTE</literal>特权才能调用它。
  </para>
<!-- pgdoc-cn_end sig_en=b31a4fafcca937d6a1795eaa17eeb645 -->

<!-- pgdoc-cn_start sig_en=94bdbf229c3137b1fe0a484fda7661ca sig_cn_org=None source=14.1 
  <para>
   To call a function (not a procedure), use <command>SELECT</command> instead.
  </para>
________________________________________________________-->
  <para>
   要调用一个函数（不是过程），应使用<command>SELECT</command>。
  </para>
<!-- pgdoc-cn_end sig_en=94bdbf229c3137b1fe0a484fda7661ca -->

<!-- pgdoc-cn_start sig_en=16f3cfd48e6be3d73e13bafd25d14f72 sig_cn_org=None source=14.1 
  <para>
   If <command>CALL</command> is executed in a transaction block, then the
   called procedure cannot execute transaction control statements.
   Transaction control statements are only allowed if <command>CALL</command>
   is executed in its own transaction.
  </para>
________________________________________________________-->
  <para>
   如果在事务块中执行<command>CALL</command>，那么被调用的过程不能执行事务控制语句。只有当<command>CALL</command>在其自身的事务中执行时，才允许过程执行事务控制语句。
  </para>
<!-- pgdoc-cn_end sig_en=16f3cfd48e6be3d73e13bafd25d14f72 -->

<!-- pgdoc-cn_start sig_en=15e8ba2b5b7bc2337db371ef66aa2279 sig_cn_org=None source=14.1 
  <para>
   <application>PL/pgSQL</application> handles output parameters
   in <command>CALL</command> commands differently;
   see <xref linkend="plpgsql-statements-calling-procedure"/>.
  </para>
________________________________________________________-->
  <para>
   <application>PL/pgSQL</application> 以不同的方式处理<command>CALL</command>中的输出参数。
   详见<xref linkend="plpgsql-statements-calling-procedure"/>。
  </para>
<!-- pgdoc-cn_end sig_en=15e8ba2b5b7bc2337db371ef66aa2279 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->
<!-- pgdoc-cn_start sig_en=75c42490a4960e696de41fc8606069ed sig_cn_org=None source=14.1 
<programlisting>
CALL do_db_maintenance();
</programlisting>
________________________________________________________-->
<programlisting>
CALL do_db_maintenance();
</programlisting>
<!-- pgdoc-cn_end sig_en=75c42490a4960e696de41fc8606069ed -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=a11b68f02cba364f73074a511a5438b8 sig_cn_org=None source=14.1 
  <para>
   <command>CALL</command> conforms to the SQL standard,
   except for the handling of output parameters.  The standard
   says that users should write variables to receive the values
   of output parameters.
  </para>
________________________________________________________-->
  <para>
   <command>CALL</command>符合SQL标准，除了输出参数的处理。
   该标准规定，用户应该编写变量来接收输出参数的值。
  </para>
<!-- pgdoc-cn_end sig_en=a11b68f02cba364f73074a511a5438b8 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-createprocedure"/></member>
  </simplelist>
 </refsect1>
</refentry>
