<!--
doc/src/sgml/ref/ecpg-ref.sgml
PostgreSQL documentation
-->

<refentry id="app-ecpg">
<!-- pgdoc-cn_start sig_en=86e979f9e4766e3137441376f5a335cb sig_cn_org=None source=14.1 
 <indexterm zone="app-ecpg">
  <primary>ecpg</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="app-ecpg">
  <primary>ecpg</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=86e979f9e4766e3137441376f5a335cb -->

 <refmeta>
  <refentrytitle><application>ecpg</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=2d491328042eb4827e43f8885eccc9ff sig_cn_org=None source=14.1 
 <refnamediv>
  <refname><application>ecpg</application></refname>
  <refpurpose>embedded SQL C preprocessor</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname><application>ecpg</application></refname>
  <refpurpose>嵌入式 SQL C 预处理器</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=2d491328042eb4827e43f8885eccc9ff -->

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>ecpg</command>
   <arg choice="opt" rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="plain" rep="repeat"><replaceable>file</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>


 <refsect1 id="app-ecpg-description">
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=6c30e701dcdab8d5927504f9c092385c sig_cn_org=None source=14.1 
  <para>
   <command>ecpg</command> is the embedded SQL preprocessor for C
   programs.  It converts C programs with embedded SQL statements to
   normal C code by replacing the SQL invocations with special
   function calls.  The output files can then be processed with any C
   compiler tool chain.
  </para>
________________________________________________________-->
  <para>
   <command>ecpg</command>是用于 C 程序的嵌入式 SQL 预处理器。它通过将 SQL 调用替换为特殊函数调用把带有嵌入式 SQL 语句的 C 程序转换为普通 C 代码。输出文件可以被任何 C 编译器工具链处理。
  </para>
<!-- pgdoc-cn_end sig_en=6c30e701dcdab8d5927504f9c092385c -->

<!-- pgdoc-cn_start sig_en=4dd07d1075648cdcb5e5ebf08bd29cee sig_cn_org=None source=14.1 
  <para>
   <command>ecpg</command> will convert each input file given on the
   command line to the corresponding C output file.  If an input file
   name does not have any extension, <filename>.pgc</filename> is
   assumed.  The file's extension will be replaced
   by <filename>.c</filename> to construct the output file name.
   But the output file name can be overridden using the
   <option>-o</option> option.
  </para>
________________________________________________________-->
  <para>
   <command>ecpg</command>将把命令行中给出的每一个输入文件转换为相应的 C 输出文件。
   如果输入文件名没有任何扩展名，则假定为<filename>.pgc</filename>。文件扩展名将由
   <filename>.c</filename>替换以构造输出文件名。
   但是输出文件名可以使用<option>-o</option>选项覆盖。
  </para>
<!-- pgdoc-cn_end sig_en=4dd07d1075648cdcb5e5ebf08bd29cee -->

<!-- pgdoc-cn_start sig_en=39000c354aa806912ffdf64bcc5958d3 sig_cn_org=None source=14.1 
  <para>
   If an input file name is just <literal>-</literal>,
   <command>ecpg</command> reads the program from standard input
   (and writes to standard output, unless that is overridden
   with <option>-o</option>).
  </para>
________________________________________________________-->
  <para>
   如果输入文件名只是<literal>-</literal>，<command>ecpg</command>从标准输入
   读取程序（并写入标准输出，除非用<option>-o</option>重写）。
  </para>
<!-- pgdoc-cn_end sig_en=39000c354aa806912ffdf64bcc5958d3 -->

<!-- pgdoc-cn_start sig_en=4c247a895a04adaf035ecf890530aa52 sig_cn_org=None source=14.1 
  <para>
   This reference page does not describe the embedded SQL language.
   See <xref linkend="ecpg"/> for more information on that topic.
  </para>
________________________________________________________-->
  <para>
   这个参考页没有描述嵌入式 SQL 语言。关于该主题请参考<xref linkend="ecpg"/>。
  </para>
<!-- pgdoc-cn_end sig_en=4c247a895a04adaf035ecf890530aa52 -->
 </refsect1>


 <refsect1>
<!-- pgdoc-cn_start sig_en=ee3f399228d18d2103d5b7f4e0aeeba8 sig_cn_org=None source=14.1 
  <title>Options</title>
________________________________________________________-->
  <title>选项</title>
<!-- pgdoc-cn_end sig_en=ee3f399228d18d2103d5b7f4e0aeeba8 -->

<!-- pgdoc-cn_start sig_en=ad34fa5f77f2296bbdd019c08b393874 sig_cn_org=9239807e09e2b4370d75c149f6dd93cb source=15.7 
  <para>
   <command>ecpg</command> accepts the following command-line
   arguments:

   <variablelist>
    <varlistentry>
________________________________________________________-->
  <para>
   <command>ecpg</command>接受以下命令行参数：

   <variablelist>
    <varlistentry>
<!-- pgdoc-cn_end sig_en=ad34fa5f77f2296bbdd019c08b393874 -->
     <term><option>-c</option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=f765af98975b73365436b727841bf39c sig_cn_org=daf788a0564566677cc935e3593776c8 source=15.7 
      <para>
       Automatically generate certain C code from SQL code.  Currently, this
       works for <literal>EXEC SQL TYPE</literal>.
      </para>
________________________________________________________-->
      <para>
       从SQL代码自动生成某些C代码。目前，这适用于<literal>EXEC SQL TYPE</literal>。
      </para>
<!-- pgdoc-cn_end sig_en=f765af98975b73365436b727841bf39c -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-C <replaceable>mode</replaceable></option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=97a26d268c546f3291911967ae924774 sig_cn_org=cc0b5bf619324840636b6ab2c352488f source=15.7 
      <para>
       Set a compatibility mode.  <replaceable>mode</replaceable> can
       be <literal>INFORMIX</literal>,
       <literal>INFORMIX_SE</literal>, or <literal>ORACLE</literal>.
      </para>
________________________________________________________-->
      <para>
       设置兼容模式。<replaceable>mode</replaceable>可以是<literal>INFORMIX</literal>，
       <literal>INFORMIX_SE</literal>，或<literal>ORACLE</literal>。
      </para>
<!-- pgdoc-cn_end sig_en=97a26d268c546f3291911967ae924774 -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-D <replaceable>symbol</replaceable>[=<replaceable>value</replaceable>]</option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=565ca4385dc1aacfbf869424c38e9cbc sig_cn_org=fa537893cd143b16340487d4b16245cd source=15.7 
      <para>
       Define a preprocessor symbol, equivalently to the <command>EXEC SQL
       DEFINE</command> directive.  If no <replaceable>value</replaceable> is
       specified, the symbol is defined with the value <literal>1</literal>.
      </para>
________________________________________________________-->
      <para>
       定义一个预处理器符号，相当于<command>EXEC SQL DEFINE</command>指令。如果没有指定<replaceable>value</replaceable>，
	   则该符号将被定义为值<literal>1</literal>。
      </para>
<!-- pgdoc-cn_end sig_en=565ca4385dc1aacfbf869424c38e9cbc -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-h</option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=413bfa8a14c5369a7cfd1c24eaaf0b58 sig_cn_org=add39ab6a3d71bbb14606abfb746a6ec source=15.7 
      <para>
       Process header files.  When this option is specified, the output file
       extension becomes <literal>.h</literal> not <literal>.c</literal>,
       and the default input file extension is <literal>.pgh</literal>
       not <literal>.pgc</literal>.  Also, the <option>-c</option> option is
       forced on.
      </para>
________________________________________________________-->
      <para>
       处理头文件。当指定此选项时，输出文件扩展名变为<literal>.h</literal>而不是<literal>.c</literal>，
       默认输入文件扩展名为<literal>.pgh</literal>而不是<literal>.pgc</literal>。此外，<option>-c</option>选项被强制打开。
      </para>
<!-- pgdoc-cn_end sig_en=413bfa8a14c5369a7cfd1c24eaaf0b58 -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-i</option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=2235b1a1e106888b004dc0cc2c347af9 sig_cn_org=fa953b90f83c2ca85274c702918faa41 source=15.7 
      <para>
       Parse system include files as well.
      </para>
________________________________________________________-->
      <para>
       解析系统包含文件。
      </para>
<!-- pgdoc-cn_end sig_en=2235b1a1e106888b004dc0cc2c347af9 -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-I <replaceable class="parameter">directory</replaceable></option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=1c35b269a36b4c5580f32fbe52ef6337 sig_cn_org=25ac68284761677bac335262cb7d2d11 source=15.7 
      <para>
       Specify an additional include path, used to find files included
       via <literal>EXEC SQL INCLUDE</literal>.  Defaults are
       <filename>.</filename> (current directory),
       <filename>/usr/local/include</filename>, the
       <productname>PostgreSQL</productname> include directory which
       is defined at compile time (default:
       <filename>/usr/local/pgsql/include</filename>), and
       <filename>/usr/include</filename>, in that order.
      </para>
________________________________________________________-->
      <para>
       指定一个额外的包含路径，用于查找通过<literal>EXEC SQL INCLUDE</literal>包含的文件。默认值为
       <filename>.</filename>（当前目录），
       <filename>/usr/local/include</filename>，
       <productname>PostgreSQL</productname>包含目录，在编译时定义（默认值为：
       <filename>/usr/local/pgsql/include</filename>），
       和<filename>/usr/include</filename>，按照这个顺序。
      </para>
<!-- pgdoc-cn_end sig_en=1c35b269a36b4c5580f32fbe52ef6337 -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-o <replaceable>filename</replaceable></option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=a2b6cf5b263cfe0f795c0ebc941bb436 sig_cn_org=53b57ae37c59a1679ebbfcef5ad7a8d7 source=15.7 
      <para>
       Specifies that <command>ecpg</command> should write all
       its output to the given <replaceable>filename</replaceable>.
       Write <literal>-o -</literal> to send all output to standard output.
      </para>
________________________________________________________-->
      <para>
       指定<command>ecpg</command>应将所有输出写入给定的<replaceable>filename</replaceable>。
       写入<literal>-o -</literal>以将所有输出发送到标准输出。
      </para>
<!-- pgdoc-cn_end sig_en=a2b6cf5b263cfe0f795c0ebc941bb436 -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-r <replaceable>option</replaceable></option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=941b6f2090a354cad05bb492df563ac9 sig_cn_org=a366f881e9248ee308229d41cc0771b0 source=15.7 
      <para>
       Selects run-time behavior.  <replaceable>Option</replaceable> can be
       one of the following:
       <variablelist>
        <varlistentry>
         <term><option>no_indicator</option></term>
         <listitem>
         <para>
         Do not use indicators but instead use special values to represent
         null values. Historically there have been databases using this approach.
         </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><option>prepare</option></term>
         <listitem>
         <para>
         Prepare all statements before using them. Libecpg will keep a cache of
         prepared statements and reuse a statement if it gets executed again. If the
         cache runs full, libecpg will free the least used statement.
         </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><option>questionmarks</option></term>
         <listitem>
         <para>
         Allow question mark as placeholder for compatibility reasons.
         This used to be the default long ago.
         </para>
         </listitem>
        </varlistentry>
       </variablelist></para>
________________________________________________________-->
      <para>
       选择运行时行为。<replaceable>Option</replaceable>可以是以下之一：
       <variablelist>
        <varlistentry>
         <term><option>no_indicator</option></term>
         <listitem>
         <para>
         不使用指示器，而是使用特殊值表示空值。历史上有一些数据库使用这种方法。
         </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><option>prepare</option></term>
         <listitem>
         <para>
         在使用之前准备所有语句。Libecpg将保留一个准备好的语句的缓存，并在再次执行时重用语句。如果缓存满了，libecpg将释放最少使用的语句。
         </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><option>questionmarks</option></term>
         <listitem>
         <para>
         允许问号作为占位符，出于兼容性原因。很久以前这曾经是默认设置。
         </para>
         </listitem>
        </varlistentry>
       </variablelist></para>
<!-- pgdoc-cn_end sig_en=941b6f2090a354cad05bb492df563ac9 -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-t</option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=92431ffdaaf43ba5c01784d35cb46d11 sig_cn_org=b53f1e87678623f41d25b00b38c24e01 source=15.7 
      <para>
       Turn on autocommit of transactions. In this mode, each SQL command is
       automatically committed unless it is inside an explicit
       transaction block. In the default mode, commands are committed
       only when <command>EXEC SQL COMMIT</command> is issued.
      </para>
________________________________________________________-->
      <para>
       打开事务的自动提交。在此模式下，每个SQL命令都会自动提交，除非它在显式事务块内。在默认模式下，只有在发出<command>EXEC SQL COMMIT</command>命令时才会提交命令。
      </para>
<!-- pgdoc-cn_end sig_en=92431ffdaaf43ba5c01784d35cb46d11 -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-v</option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=3128648cf4104e98434d776e35d340d9 sig_cn_org=95f326fa5c4ad1ab5d54cd49bdc5f020 source=15.7 
      <para>
       Print additional information including the version and the
       "include" path.
      </para>
________________________________________________________-->
      <para>
       打印额外信息，包括版本和“include”路径。
      </para>
<!-- pgdoc-cn_end sig_en=3128648cf4104e98434d776e35d340d9 -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--version</option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=5866e553d1311c5f7d71fd9d5543fd4d sig_cn_org=787ef54d17f5304d8f9d7f15079efe62 source=15.7 
      <para>
       Print the <application>ecpg</application> version and exit.
      </para>
________________________________________________________-->
      <para>
       打印<application>ecpg</application>版本并退出。
      </para>
<!-- pgdoc-cn_end sig_en=5866e553d1311c5f7d71fd9d5543fd4d -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-?</option></term>
     <term><option>--help</option></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=92617d63e96bab59748c027682e401d8 sig_cn_org=17ef4bdd4ab50cb86d8e73c98da43891 source=15.7 
      <para>
       Show help about <application>ecpg</application> command line
       arguments, and exit.
      </para>
________________________________________________________-->
      <para>
       显示关于<application>ecpg</application>命令行参数的帮助信息，并退出。
      </para>
<!-- pgdoc-cn_end sig_en=92617d63e96bab59748c027682e401d8 -->
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>


 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=2cb822a755339610ad48df5dc5353c3b sig_cn_org=None source=14.1 
  <para>
   When compiling the preprocessed C code files, the compiler needs to
   be able to find the <application>ECPG</application> header files in the
   <productname>PostgreSQL</productname> include directory.  Therefore, you might
   have to use the <option>-I</option> option when invoking the compiler
   (e.g., <literal>-I/usr/local/pgsql/include</literal>).
  </para>
________________________________________________________-->
  <para>
   在编译预处理好的 C 代码文件时，编译器需要能够找到<productname>PostgreSQL</productname>包括目录中的<application>ECPG</application>头文件。因此，在调用编译器时，你可能必须使用<option>-I</option>选项（例如，<literal>-I/usr/local/pgsql/include</literal>）。
  </para>
<!-- pgdoc-cn_end sig_en=2cb822a755339610ad48df5dc5353c3b -->

<!-- pgdoc-cn_start sig_en=cbcd612e9d5defb332e51c0dd8662ad0 sig_cn_org=None source=14.1 
  <para>
   Programs using C code with embedded SQL have to be linked against
   the <filename>libecpg</filename> library, for example using the
   linker options <literal>-L/usr/local/pgsql/lib -lecpg</literal>.
  </para>
________________________________________________________-->
  <para>
   使用带有嵌入式 SQL 的 C 代码的程序必须被链接到<filename>libecpg</filename>库，例如使用链接器选项<literal>-L/usr/local/pgsql/lib -lecpg</literal>。
  </para>
<!-- pgdoc-cn_end sig_en=cbcd612e9d5defb332e51c0dd8662ad0 -->

<!-- pgdoc-cn_start sig_en=bd59016868c2a6ba337cea714f9049f9 sig_cn_org=None source=14.1 
  <para>
   The value of either of these directories that is appropriate for
   the installation can be found out using <xref
   linkend="app-pgconfig"/>.
  </para>
________________________________________________________-->
  <para>
   适合于安装的这些目录的值可以使用<xref linkend="app-pgconfig"/>找到。
  </para>
<!-- pgdoc-cn_end sig_en=bd59016868c2a6ba337cea714f9049f9 -->
 </refsect1>


 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>例子</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=139a5cd12eb10c5098e1a695581cf209 sig_cn_org=None source=14.1 
  <para>
   If you have an embedded SQL C source file named
   <filename>prog1.pgc</filename>, you can create an executable
   program using the following sequence of commands:
<programlisting>
ecpg prog1.pgc
cc -I/usr/local/pgsql/include -c prog1.c
cc -o prog1 prog1.o -L/usr/local/pgsql/lib -lecpg
</programlisting></para>
________________________________________________________-->
  <para>
   如果你有一个名为<filename>prog1.pgc</filename>的嵌入式 SQL C 源文件，你可以使用下列命令序列创建一个可执行程序：
<programlisting>
ecpg prog1.pgc
cc -I/usr/local/pgsql/include -c prog1.c
cc -o prog1 prog1.o -L/usr/local/pgsql/lib -lecpg
</programlisting></para>
<!-- pgdoc-cn_end sig_en=139a5cd12eb10c5098e1a695581cf209 -->
 </refsect1>

</refentry>
