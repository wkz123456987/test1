<!--
doc/src/sgml/ref/comment.sgml
PostgreSQL documentation
-->

<refentry id="sql-comment">
<!-- pgdoc-cn_start sig_en=99d75cbee1fd85a9b89e96fd138a966a sig_cn_org=None source=14.1 
 <indexterm zone="sql-comment">
  <primary>COMMENT</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-comment">
  <primary>COMMENT</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=99d75cbee1fd85a9b89e96fd138a966a -->

 <refmeta>
  <refentrytitle>COMMENT</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=c480550daa0b9bad48ec8dd500c39681 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>COMMENT</refname>
  <refpurpose>define or change the comment of an object</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>COMMENT</refname>
  <refpurpose>定义或者更改一个对象的注释</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=c480550daa0b9bad48ec8dd500c39681 -->

<!-- pgdoc-cn_start sig_en=2e02beed5764f2946dc4838627fae25f sig_cn_org=2e02beed5764f2946dc4838627fae25f source=15.7 
 <refsynopsisdiv>
<synopsis>
COMMENT ON
{
  ACCESS METHOD <replaceable class="parameter">object_name</replaceable> |
  AGGREGATE <replaceable class="parameter">aggregate_name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) |
  CAST (<replaceable>source_type</replaceable> AS <replaceable>target_type</replaceable>) |
  COLLATION <replaceable class="parameter">object_name</replaceable> |
  COLUMN <replaceable class="parameter">relation_name</replaceable>.<replaceable class="parameter">column_name</replaceable> |
  CONSTRAINT <replaceable class="parameter">constraint_name</replaceable> ON <replaceable class="parameter">table_name</replaceable> |
  CONSTRAINT <replaceable class="parameter">constraint_name</replaceable> ON DOMAIN <replaceable class="parameter">domain_name</replaceable> |
  CONVERSION <replaceable class="parameter">object_name</replaceable> |
  DATABASE <replaceable class="parameter">object_name</replaceable> |
  DOMAIN <replaceable class="parameter">object_name</replaceable> |
  EXTENSION <replaceable class="parameter">object_name</replaceable> |
  EVENT TRIGGER <replaceable class="parameter">object_name</replaceable> |
  FOREIGN DATA WRAPPER <replaceable class="parameter">object_name</replaceable> |
  FOREIGN TABLE <replaceable class="parameter">object_name</replaceable> |
  FUNCTION <replaceable class="parameter">function_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  INDEX <replaceable class="parameter">object_name</replaceable> |
  LARGE OBJECT <replaceable class="parameter">large_object_oid</replaceable> |
  MATERIALIZED VIEW <replaceable class="parameter">object_name</replaceable> |
  OPERATOR <replaceable class="parameter">operator_name</replaceable> (<replaceable class="parameter">left_type</replaceable>, <replaceable class="parameter">right_type</replaceable>) |
  OPERATOR CLASS <replaceable class="parameter">object_name</replaceable> USING <replaceable class="parameter">index_method</replaceable> |
  OPERATOR FAMILY <replaceable class="parameter">object_name</replaceable> USING <replaceable class="parameter">index_method</replaceable> |
  POLICY <replaceable class="parameter">policy_name</replaceable> ON <replaceable class="parameter">table_name</replaceable> |
  [ PROCEDURAL ] LANGUAGE <replaceable class="parameter">object_name</replaceable> |
  PROCEDURE <replaceable class="parameter">procedure_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  PUBLICATION <replaceable class="parameter">object_name</replaceable> |
  ROLE <replaceable class="parameter">object_name</replaceable> |
  ROUTINE <replaceable class="parameter">routine_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  RULE <replaceable class="parameter">rule_name</replaceable> ON <replaceable class="parameter">table_name</replaceable> |
  SCHEMA <replaceable class="parameter">object_name</replaceable> |
  SEQUENCE <replaceable class="parameter">object_name</replaceable> |
  SERVER <replaceable class="parameter">object_name</replaceable> |
  STATISTICS <replaceable class="parameter">object_name</replaceable> |
  SUBSCRIPTION <replaceable class="parameter">object_name</replaceable> |
  TABLE <replaceable class="parameter">object_name</replaceable> |
  TABLESPACE <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH CONFIGURATION <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH DICTIONARY <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH PARSER <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH TEMPLATE <replaceable class="parameter">object_name</replaceable> |
  TRANSFORM FOR <replaceable>type_name</replaceable> LANGUAGE <replaceable>lang_name</replaceable> |
  TRIGGER <replaceable class="parameter">trigger_name</replaceable> ON <replaceable class="parameter">table_name</replaceable> |
  TYPE <replaceable class="parameter">object_name</replaceable> |
  VIEW <replaceable class="parameter">object_name</replaceable>
} IS { <replaceable class="parameter">string_literal</replaceable> | NULL }

<phrase>where <replaceable>aggregate_signature</replaceable> is:</phrase>

* |
[ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] |
[ [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] ] ORDER BY [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ]
</synopsis>
________________________________________________________-->
 <refsynopsisdiv>
<synopsis>
COMMENT ON
{
  ACCESS METHOD <replaceable class="parameter">object_name</replaceable> |
  AGGREGATE <replaceable class="parameter">aggregate_name</replaceable> ( <replaceable>aggregate_signature</replaceable> ) |
  CAST (<replaceable>source_type</replaceable> AS <replaceable>target_type</replaceable>) |
  COLLATION <replaceable class="parameter">object_name</replaceable> |
  COLUMN <replaceable class="parameter">relation_name</replaceable>.<replaceable class="parameter">column_name</replaceable> |
  CONSTRAINT <replaceable class="parameter">constraint_name</replaceable> ON <replaceable class="parameter">table_name</replaceable> |
  CONSTRAINT <replaceable class="parameter">constraint_name</replaceable> ON DOMAIN <replaceable class="parameter">domain_name</replaceable> |
  CONVERSION <replaceable class="parameter">object_name</replaceable> |
  DATABASE <replaceable class="parameter">object_name</replaceable> |
  DOMAIN <replaceable class="parameter">object_name</replaceable> |
  EXTENSION <replaceable class="parameter">object_name</replaceable> |
  EVENT TRIGGER <replaceable class="parameter">object_name</replaceable> |
  FOREIGN DATA WRAPPER <replaceable class="parameter">object_name</replaceable> |
  FOREIGN TABLE <replaceable class="parameter">object_name</replaceable> |
  FUNCTION <replaceable class="parameter">function_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  INDEX <replaceable class="parameter">object_name</replaceable> |
  LARGE OBJECT <replaceable class="parameter">large_object_oid</replaceable> |
  MATERIALIZED VIEW <replaceable class="parameter">object_name</replaceable> |
  OPERATOR <replaceable class="parameter">operator_name</replaceable> (<replaceable class="parameter">left_type</replaceable>, <replaceable class="parameter">right_type</replaceable>) |
  OPERATOR CLASS <replaceable class="parameter">object_name</replaceable> USING <replaceable class="parameter">index_method</replaceable> |
  OPERATOR FAMILY <replaceable class="parameter">object_name</replaceable> USING <replaceable class="parameter">index_method</replaceable> |
  POLICY <replaceable class="parameter">policy_name</replaceable> ON <replaceable class="parameter">table_name</replaceable> |
  [ PROCEDURAL ] LANGUAGE <replaceable class="parameter">object_name</replaceable> |
  PROCEDURE <replaceable class="parameter">procedure_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  PUBLICATION <replaceable class="parameter">object_name</replaceable> |
  ROLE <replaceable class="parameter">object_name</replaceable> |
  ROUTINE <replaceable class="parameter">routine_name</replaceable> [ ( [ [ <replaceable class="parameter">argmode</replaceable> ] [ <replaceable class="parameter">argname</replaceable> ] <replaceable class="parameter">argtype</replaceable> [, ...] ] ) ] |
  RULE <replaceable class="parameter">rule_name</replaceable> ON <replaceable class="parameter">table_name</replaceable> |
  SCHEMA <replaceable class="parameter">object_name</replaceable> |
  SEQUENCE <replaceable class="parameter">object_name</replaceable> |
  SERVER <replaceable class="parameter">object_name</replaceable> |
  STATISTICS <replaceable class="parameter">object_name</replaceable> |
  SUBSCRIPTION <replaceable class="parameter">object_name</replaceable> |
  TABLE <replaceable class="parameter">object_name</replaceable> |
  TABLESPACE <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH CONFIGURATION <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH DICTIONARY <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH PARSER <replaceable class="parameter">object_name</replaceable> |
  TEXT SEARCH TEMPLATE <replaceable class="parameter">object_name</replaceable> |
  TRANSFORM FOR <replaceable>type_name</replaceable> LANGUAGE <replaceable>lang_name</replaceable> |
  TRIGGER <replaceable class="parameter">trigger_name</replaceable> ON <replaceable class="parameter">table_name</replaceable> |
  TYPE <replaceable class="parameter">object_name</replaceable> |
  VIEW <replaceable class="parameter">object_name</replaceable>
} IS { <replaceable class="parameter">string_literal</replaceable> | NULL }

<phrase>where <replaceable>aggregate_signature</replaceable> is:</phrase>

* |
[ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] |
[ [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ] ] ORDER BY [ <replaceable>argmode</replaceable> ] [ <replaceable>argname</replaceable> ] <replaceable>argtype</replaceable> [ , ... ]
</synopsis>
<!-- pgdoc-cn_end sig_en=2e02beed5764f2946dc4838627fae25f -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=e0244020c7a019f24c663ae981067d81 sig_cn_org=None source=14.1 
  <para>
   <command>COMMENT</command> stores a comment about a database object.
  </para>
________________________________________________________-->
  <para>
   <command>COMMENT</command>存储关于一个数据库对象的注释。
  </para>
<!-- pgdoc-cn_end sig_en=e0244020c7a019f24c663ae981067d81 -->

<!-- pgdoc-cn_start sig_en=a6cfc3072b7853eecca86d319ee44c8a sig_cn_org=None source=14.1 
  <para>
   Only one comment string is stored for each object, so to modify a comment,
   issue a new <command>COMMENT</command> command for the same object.  To remove a
   comment, write <literal>NULL</literal> in place of the text string.
   Comments are automatically dropped when their object is dropped.
  </para>
________________________________________________________-->
  <para>
   对每一个对象只保存一个注释字符串，因此为了修改一段注释，对同一个对象
   发出一个新的<command>COMMENT</command>命令。要移除一段注释，可在文
   本字符串的位置上写上<literal>NULL</literal>。当对象被删除时，其注释
   也会被自动删除。
  </para>
<!-- pgdoc-cn_end sig_en=a6cfc3072b7853eecca86d319ee44c8a -->

<!-- pgdoc-cn_start sig_en=43a83a3a6c6e302e87525ddcfa8e55d6 sig_cn_org=a12a9667087ebe9d4339a08aca7cb541 source=15.7 
  <para>
   A <literal>SHARE UPDATE EXCLUSIVE</literal> lock is acquired on the
   object to be commented.
  </para>
________________________________________________________-->
  <para>
   对要进行评论的对象进行了<literal>SHARE UPDATE EXCLUSIVE</literal>锁定。
</para>
<!-- pgdoc-cn_end sig_en=43a83a3a6c6e302e87525ddcfa8e55d6 -->

<!-- pgdoc-cn_start sig_en=fd31978ab654935c8b45e50944978985 sig_cn_org=None source=14.1 
  <para>
   For most kinds of object, only the object's owner can set the comment.
   Roles don't have owners, so the rule for <literal>COMMENT ON ROLE</literal> is
   that you must be superuser to comment on a superuser role, or have the
   <literal>CREATEROLE</literal> privilege to comment on non-superuser roles.
   Likewise, access methods don't have owners either; you must be superuser
   to comment on an access method.
   Of course, a superuser can comment on anything.
  </para>
________________________________________________________-->
  <para>
   对大部分类型的对象，只有对象的拥有者可以设置注释。角色没有拥有者，因此
   <literal>COMMENT ON ROLE</literal>的规则是你必须作为一个超级用户来对一个
   超级用户角色设置注释，或者具有<literal>CREATEROLE</literal>特权来对非超级用
   户角色设置注释。同样的，访问方法也没有拥有者，你必须作为一个超级用户来
   对一个访问方法设置注释。当然，一个超级用户可以对任何东西设置注释。
  </para>
<!-- pgdoc-cn_end sig_en=fd31978ab654935c8b45e50944978985 -->

<!-- pgdoc-cn_start sig_en=d88e1ef663e631f82a7ef3d2a9197d60 sig_cn_org=None source=14.1 
  <para>
    Comments can be viewed using <application>psql</application>'s
    <command>\d</command> family of commands.
    Other user interfaces to retrieve comments can be built atop
    the same built-in functions that <application>psql</application> uses, namely
    <function>obj_description</function>, <function>col_description</function>,
    and <function>shobj_description</function>
    (see <xref linkend="functions-info-comment-table"/>).
  </para>
________________________________________________________-->
  <para>
    使用<application>psql</application>的<command>\d</command>
    命令家族可以查看注释。其他检索注释的用户接口可以构建在
    <application>psql</application>使用的内建函数之上，即
    <function>obj_description</function>、<function>col_description</function>
    以及<function>shobj_description</function>
    （见<xref linkend="functions-info-comment-table"/>）。
  </para>
<!-- pgdoc-cn_end sig_en=d88e1ef663e631f82a7ef3d2a9197d60 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">object_name</replaceable></term>
<!-- pgdoc-cn_start sig_en=c80df6bf735962e3905a962a9760540b sig_cn_org=None source=14.1 
    <term><replaceable class="parameter">relation_name</replaceable>.<replaceable>column_name</replaceable></term>
________________________________________________________-->
    <term><replaceable class="parameter">relation_name</replaceable>.<replaceable>column_name</replaceable></term>
<!-- pgdoc-cn_end sig_en=c80df6bf735962e3905a962a9760540b -->
    <term><replaceable class="parameter">aggregate_name</replaceable></term>
    <term><replaceable class="parameter">constraint_name</replaceable></term>
    <term><replaceable class="parameter">function_name</replaceable></term>
    <term><replaceable class="parameter">operator_name</replaceable></term>
    <term><replaceable class="parameter">policy_name</replaceable></term>
    <term><replaceable class="parameter">procedure_name</replaceable></term>
    <term><replaceable class="parameter">routine_name</replaceable></term>
    <term><replaceable class="parameter">rule_name</replaceable></term>
    <term><replaceable class="parameter">trigger_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=267264804390ae2c1799d58c3225c495 sig_cn_org=None source=14.1 
     <para>
      The name of the object to be commented.  Names of objects that reside in
      schemas (tables, functions, etc.) can be
      schema-qualified. When commenting on a column,
      <replaceable class="parameter">relation_name</replaceable> must refer
      to a table, view, composite type, or foreign table.
     </para>
________________________________________________________-->
     <para>
      要被注释的对象的名称。驻留在模式（表、函数等）中的对象的名称可以是模式限定的。
      在注释一列时，<replaceable class="parameter">relation_name</replaceable>必须
      引用一个表、视图、组合类型或者外部表。
     </para>
<!-- pgdoc-cn_end sig_en=267264804390ae2c1799d58c3225c495 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">table_name</replaceable></term>
    <term><replaceable class="parameter">domain_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=8cd3f044f6b099ac6f7cdcd2dfb90bba sig_cn_org=None source=14.1 
     <para>
      When creating a comment on a constraint, a trigger, a rule or
      a policy these parameters specify the name of the table or domain on
      which that object is defined.
     </para>
________________________________________________________-->
     <para>
      当在一个约束、触发器、规则或者策略上创建一段注释时，这些参数指定在其上定义
      该对象的表或域的名称。
     </para>
<!-- pgdoc-cn_end sig_en=8cd3f044f6b099ac6f7cdcd2dfb90bba -->
    </listitem>
   </varlistentry>

   <varlistentry>
     <term><replaceable>source_type</replaceable></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=2a221d770eef9fb8a116b4867e9a1410 sig_cn_org=None source=14.1 
      <para>
       The name of the source data type of the cast.
      </para>
________________________________________________________-->
      <para>
       造型的源数据类型的名称。
      </para>
<!-- pgdoc-cn_end sig_en=2a221d770eef9fb8a116b4867e9a1410 -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>target_type</replaceable></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=a5f554aa77c67721a748b3da0ddb2486 sig_cn_org=None source=14.1 
      <para>
       The name of the target data type of the cast.
      </para>
________________________________________________________-->
      <para>
       造型的目标数据类型的名称。
      </para>
<!-- pgdoc-cn_end sig_en=a5f554aa77c67721a748b3da0ddb2486 -->
     </listitem>
    </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argmode</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=cb05429eb38dd526b93ba09e7eaa8612 sig_cn_org=None source=14.1 
     <para>
      The mode of a function, procedure, or aggregate
      argument: <literal>IN</literal>, <literal>OUT</literal>,
      <literal>INOUT</literal>, or <literal>VARIADIC</literal>.
      If omitted, the default is <literal>IN</literal>.
      Note that <command>COMMENT</command> does not actually pay
      any attention to <literal>OUT</literal> arguments, since only the input
      arguments are needed to determine the function's identity.
      So it is sufficient to list the <literal>IN</literal>, <literal>INOUT</literal>,
      and <literal>VARIADIC</literal> arguments.
     </para>
________________________________________________________-->
     <para>
      一个函数，存储过程或者聚集函数的参数的模式：<literal>IN</literal>、
      <literal>OUT</literal>、<literal>INOUT</literal>或者<literal>VARIADIC</literal>。
      如果被省略，默认值是<literal>IN</literal>。注意
      <command>COMMENT</command>并不真正关心
      <literal>OUT</literal>参数，因为决定函数的身份只需要输入参数。因此
      列出<literal>IN</literal>、<literal>INOUT</literal>和<literal>VARIADIC</literal>
      参数就足够了。
     </para>
<!-- pgdoc-cn_end sig_en=cb05429eb38dd526b93ba09e7eaa8612 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argname</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=d685c6cdc658a47d6c6a69b65c74f673 sig_cn_org=None source=14.1 
     <para>
      The name of a function, procedure, or aggregate argument.
      Note that <command>COMMENT</command> does not actually pay
      any attention to argument names, since only the argument data
      types are needed to determine the function's identity.
     </para>
________________________________________________________-->
     <para>
      一个函数，存储过程或者聚集函数参数的名称。注意
      <command>COMMENT</command>并不真正关心参数名称，
      因为决定函数的身份只需要参数数据类型。
     </para>
<!-- pgdoc-cn_end sig_en=d685c6cdc658a47d6c6a69b65c74f673 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argtype</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=c7f03f39e2577096667ea7fd84f5bdf4 sig_cn_org=None source=14.1 
     <para>
      The data type of a function, procedure, or aggregate argument.
     </para>
________________________________________________________-->
     <para>
      一个函数，存储过程或者聚集函数参数的数据类型。
     </para>
<!-- pgdoc-cn_end sig_en=c7f03f39e2577096667ea7fd84f5bdf4 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">large_object_oid</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=f8ebe329f82c0c5c816884f3495006c3 sig_cn_org=None source=14.1 
     <para>
      The OID of the large object.
     </para>
________________________________________________________-->
     <para>
      大对象的 OID。
     </para>
<!-- pgdoc-cn_end sig_en=f8ebe329f82c0c5c816884f3495006c3 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">left_type</replaceable></term>
    <term><replaceable class="parameter">right_type</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=b546e453e947df2d1fb44d385335f8cb sig_cn_org=None source=14.1 
     <para>
      The data type(s) of the operator's arguments (optionally
      schema-qualified).  Write <literal>NONE</literal> for the missing argument
      of a prefix operator.
     </para>
________________________________________________________-->
     <para>
      操作符的参数的数据类型（可以是模式限定的）。对一个前缀操作符
      的缺失参数可以写<literal>NONE</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=b546e453e947df2d1fb44d385335f8cb -->
    </listitem>
   </varlistentry>

    <varlistentry>
     <term><literal>PROCEDURAL</literal></term>
     <listitem>
<!-- pgdoc-cn_start sig_en=7bf02effa31a38140627d633c5200e47 sig_cn_org=None source=14.1 
      <para>
       This is a noise word.
      </para>
________________________________________________________-->
      <para>
       这是一个噪声词。
      </para>
<!-- pgdoc-cn_end sig_en=7bf02effa31a38140627d633c5200e47 -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>type_name</replaceable></term>

     <listitem>
<!-- pgdoc-cn_start sig_en=7920116fe15ce07be9a3f35f17ff59cb sig_cn_org=None source=14.1 
      <para>
       The name of the data type of the transform.
      </para>
________________________________________________________-->
      <para>
       该转换的数据类型的名称。
      </para>
<!-- pgdoc-cn_end sig_en=7920116fe15ce07be9a3f35f17ff59cb -->
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>lang_name</replaceable></term>

     <listitem>
<!-- pgdoc-cn_start sig_en=bce233da7ad89ad9ae2cac6e06a906a9 sig_cn_org=None source=14.1 
      <para>
       The name of the language of the transform.
      </para>
________________________________________________________-->
      <para>
       该转换的语言的名称。
      </para>
<!-- pgdoc-cn_end sig_en=bce233da7ad89ad9ae2cac6e06a906a9 -->
     </listitem>
    </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">string_literal</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=a38844ff0a7175d03172e2a2719f65e8 sig_cn_org=d1c710d3b92b9f68d17b44072dcf82cb source=15.7 
     <para>
      The new comment contents, written as a string literal.
     </para>
________________________________________________________-->
     <para>
      新评论内容，以字符串字面量形式编写。
     </para>
<!-- pgdoc-cn_end sig_en=a38844ff0a7175d03172e2a2719f65e8 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>NULL</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=485ca9f8efbbb8618a79485c22117e7a sig_cn_org=81723565970c0032ab859bce1b6f41bd source=15.7 
     <para>
      Write <literal>NULL</literal> to drop the comment.
     </para>
________________________________________________________-->
     <para>
      写入<literal>NULL</literal>以删除该注释。
     </para>
<!-- pgdoc-cn_end sig_en=485ca9f8efbbb8618a79485c22117e7a -->
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=f24034843c06a0815b0dd84dfe6c1f98 sig_cn_org=None source=14.1 
  <para>
   There is presently no security mechanism for viewing comments: any user
   connected to a database can see all the comments for objects in
   that database.  For shared objects such as
   databases, roles, and tablespaces, comments are stored globally so any
   user connected to any database in the cluster can see all the comments
   for shared objects.  Therefore, don't put security-critical
   information in comments.
  </para>
________________________________________________________-->
  <para>
   当前对查看注释没有安全机制：任何连接到一个数据库的用户能够看到
   该数据库中所有对象的注释。对于数据库、角色、表空间这类共享对象，
   注释被全局存储，因此连接到集簇中任何数据库的任何用户可以看到共
   享对象的所有注释。因此，不要在注释中放置有安全性风险的信息。
  </para>
<!-- pgdoc-cn_end sig_en=f24034843c06a0815b0dd84dfe6c1f98 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=ed7b5acab3273eef88517124475dd4e0 sig_cn_org=None source=14.1 
  <para>
   Attach a comment to the table <literal>mytable</literal>:

<programlisting>
COMMENT ON TABLE mytable IS 'This is my table.';
</programlisting>

   Remove it again:

<programlisting>
COMMENT ON TABLE mytable IS NULL;
</programlisting>
  </para>
________________________________________________________-->
  <para>
   为表<literal>mytable</literal>附加一段注释：

<programlisting>
COMMENT ON TABLE mytable IS 'This is my table.';
</programlisting>

   移除它：

<programlisting>
COMMENT ON TABLE mytable IS NULL;
</programlisting>
  </para>
<!-- pgdoc-cn_end sig_en=ed7b5acab3273eef88517124475dd4e0 -->

<!-- pgdoc-cn_start sig_en=582811279d80315a745a68db4b8a492d sig_cn_org=5837d1aa6cc8e43f25716684ab4fb57f source=15.7 
  <para>
   Some more examples:

<programlisting>
COMMENT ON ACCESS METHOD gin IS 'GIN index access method';
COMMENT ON AGGREGATE my_aggregate (double precision) IS 'Computes sample variance';
COMMENT ON CAST (text AS int4) IS 'Allow casts from text to int4';
COMMENT ON COLLATION "fr_CA" IS 'Canadian French';
COMMENT ON COLUMN my_table.my_column IS 'Employee ID number';
COMMENT ON CONVERSION my_conv IS 'Conversion to UTF8';
COMMENT ON CONSTRAINT bar_col_cons ON bar IS 'Constrains column col';
COMMENT ON CONSTRAINT dom_col_constr ON DOMAIN dom IS 'Constrains col of domain';
COMMENT ON DATABASE my_database IS 'Development Database';
COMMENT ON DOMAIN my_domain IS 'Email Address Domain';
COMMENT ON EVENT TRIGGER abort_ddl IS 'Aborts all DDL commands';
COMMENT ON EXTENSION hstore IS 'implements the hstore data type';
COMMENT ON FOREIGN DATA WRAPPER mywrapper IS 'my foreign data wrapper';
COMMENT ON FOREIGN TABLE my_foreign_table IS 'Employee Information in other database';
COMMENT ON FUNCTION my_function (timestamp) IS 'Returns Roman Numeral';
COMMENT ON INDEX my_index IS 'Enforces uniqueness on employee ID';
COMMENT ON LANGUAGE plpython IS 'Python support for stored procedures';
COMMENT ON LARGE OBJECT 346344 IS 'Planning document';
COMMENT ON MATERIALIZED VIEW my_matview IS 'Summary of order history';
COMMENT ON OPERATOR ^ (text, text) IS 'Performs intersection of two texts';
COMMENT ON OPERATOR - (NONE, integer) IS 'Unary minus';
COMMENT ON OPERATOR CLASS int4ops USING btree IS '4 byte integer operators for btrees';
COMMENT ON OPERATOR FAMILY integer_ops USING btree IS 'all integer operators for btrees';
COMMENT ON POLICY my_policy ON mytable IS 'Filter rows by users';
COMMENT ON PROCEDURE my_proc (integer, integer) IS 'Runs a report';
COMMENT ON PUBLICATION alltables IS 'Publishes all operations on all tables';
COMMENT ON ROLE my_role IS 'Administration group for finance tables';
COMMENT ON ROUTINE my_routine (integer, integer) IS 'Runs a routine (which is a function or procedure)';
COMMENT ON RULE my_rule ON my_table IS 'Logs updates of employee records';
COMMENT ON SCHEMA my_schema IS 'Departmental data';
COMMENT ON SEQUENCE my_sequence IS 'Used to generate primary keys';
COMMENT ON SERVER myserver IS 'my foreign server';
COMMENT ON STATISTICS my_statistics IS 'Improves planner row estimations';
COMMENT ON SUBSCRIPTION alltables IS 'Subscription for all operations on all tables';
COMMENT ON TABLE my_schema.my_table IS 'Employee Information';
COMMENT ON TABLESPACE my_tablespace IS 'Tablespace for indexes';
COMMENT ON TEXT SEARCH CONFIGURATION my_config IS 'Special word filtering';
COMMENT ON TEXT SEARCH DICTIONARY swedish IS 'Snowball stemmer for Swedish language';
COMMENT ON TEXT SEARCH PARSER my_parser IS 'Splits text into words';
COMMENT ON TEXT SEARCH TEMPLATE snowball IS 'Snowball stemmer';
COMMENT ON TRANSFORM FOR hstore LANGUAGE plpython3u IS 'Transform between hstore and Python dict';
COMMENT ON TRIGGER my_trigger ON my_table IS 'Used for RI';
COMMENT ON TYPE complex IS 'Complex number data type';
COMMENT ON VIEW my_view IS 'View of departmental costs';
</programlisting></para>
________________________________________________________-->
  <para>
   更多示例：

<programlisting>
COMMENT ON ACCESS METHOD gin IS 'GIN index access method';
COMMENT ON AGGREGATE my_aggregate (double precision) IS 'Computes sample variance';
COMMENT ON CAST (text AS int4) IS 'Allow casts from text to int4';
COMMENT ON COLLATION "fr_CA" IS 'Canadian French';
COMMENT ON COLUMN my_table.my_column IS 'Employee ID number';
COMMENT ON CONVERSION my_conv IS 'Conversion to UTF8';
COMMENT ON CONSTRAINT bar_col_cons ON bar IS 'Constrains column col';
COMMENT ON CONSTRAINT dom_col_constr ON DOMAIN dom IS 'Constrains col of domain';
COMMENT ON DATABASE my_database IS 'Development Database';
COMMENT ON DOMAIN my_domain IS 'Email Address Domain';
COMMENT ON EVENT TRIGGER abort_ddl IS 'Aborts all DDL commands';
COMMENT ON EXTENSION hstore IS 'implements the hstore data type';
COMMENT ON FOREIGN DATA WRAPPER mywrapper IS 'my foreign data wrapper';
COMMENT ON FOREIGN TABLE my_foreign_table IS 'Employee Information in other database';
COMMENT ON FUNCTION my_function (timestamp) IS 'Returns Roman Numeral';
COMMENT ON INDEX my_index IS 'Enforces uniqueness on employee ID';
COMMENT ON LANGUAGE plpython IS 'Python support for stored procedures';
COMMENT ON LARGE OBJECT 346344 IS 'Planning document';
COMMENT ON MATERIALIZED VIEW my_matview IS 'Summary of order history';
COMMENT ON OPERATOR ^ (text, text) IS 'Performs intersection of two texts';
COMMENT ON OPERATOR - (NONE, integer) IS 'Unary minus';
COMMENT ON OPERATOR CLASS int4ops USING btree IS '4 byte integer operators for btrees';
COMMENT ON OPERATOR FAMILY integer_ops USING btree IS 'all integer operators for btrees';
COMMENT ON POLICY my_policy ON mytable IS 'Filter rows by users';
COMMENT ON PROCEDURE my_proc (integer, integer) IS 'Runs a report';
COMMENT ON PUBLICATION alltables IS 'Publishes all operations on all tables';
COMMENT ON ROLE my_role IS 'Administration group for finance tables';
COMMENT ON ROUTINE my_routine (integer, integer) IS 'Runs a routine (which is a function or procedure)';
COMMENT ON RULE my_rule ON my_table IS 'Logs updates of employee records';
COMMENT ON SCHEMA my_schema IS 'Departmental data';
COMMENT ON SEQUENCE my_sequence IS 'Used to generate primary keys';
COMMENT ON SERVER myserver IS 'my foreign server';
COMMENT ON STATISTICS my_statistics IS 'Improves planner row estimations';
COMMENT ON SUBSCRIPTION alltables IS 'Subscription for all operations on all tables';
COMMENT ON TABLE my_schema.my_table IS 'Employee Information';
COMMENT ON TABLESPACE my_tablespace IS 'Tablespace for indexes';
COMMENT ON TEXT SEARCH CONFIGURATION my_config IS 'Special word filtering';
COMMENT ON TEXT SEARCH DICTIONARY swedish IS 'Snowball stemmer for Swedish language';
COMMENT ON TEXT SEARCH PARSER my_parser IS 'Splits text into words';
COMMENT ON TEXT SEARCH TEMPLATE snowball IS 'Snowball stemmer';
COMMENT ON TRANSFORM FOR hstore LANGUAGE plpython3u IS 'Transform between hstore and Python dict';
COMMENT ON TRIGGER my_trigger ON my_table IS 'Used for RI';
COMMENT ON TYPE complex IS 'Complex number data type';
COMMENT ON VIEW my_view IS 'View of departmental costs';
</programlisting></para>
<!-- pgdoc-cn_end sig_en=582811279d80315a745a68db4b8a492d -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=5a7fe09eda35f9ca5665a6de3a8e62cd sig_cn_org=None source=14.1 
  <para>
   There is no <command>COMMENT</command> command in the SQL standard.
  </para>
________________________________________________________-->
  <para>
   SQL 标准中没有<command>COMMENT</command>命令。
  </para>
<!-- pgdoc-cn_end sig_en=5a7fe09eda35f9ca5665a6de3a8e62cd -->
 </refsect1>
</refentry>
