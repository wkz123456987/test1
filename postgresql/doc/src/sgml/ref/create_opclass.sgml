<!--
doc/src/sgml/ref/create_opclass.sgml
PostgreSQL documentation
-->

<refentry id="sql-createopclass">
<!-- pgdoc-cn_start sig_en=848f133569bc6df150e730405c38069c sig_cn_org=None source=14.1 
 <indexterm zone="sql-createopclass">
  <primary>CREATE OPERATOR CLASS</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-createopclass">
  <primary>CREATE OPERATOR CLASS</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=848f133569bc6df150e730405c38069c -->

 <refmeta>
  <refentrytitle>CREATE OPERATOR CLASS</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=433b7f0315f9ff0a6dfb7251ad7cfe9b sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>CREATE OPERATOR CLASS</refname>
  <refpurpose>define a new operator class</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>CREATE OPERATOR CLASS</refname>
  <refpurpose>定义一个新的操作符类</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=433b7f0315f9ff0a6dfb7251ad7cfe9b -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=eb0851b9aefb5ca8493b96372b791684 sig_cn_org=None source=14.1 
<synopsis>
CREATE OPERATOR CLASS <replaceable class="parameter">name</replaceable> [ DEFAULT ] FOR TYPE <replaceable class="parameter">data_type</replaceable>
  USING <replaceable class="parameter">index_method</replaceable> [ FAMILY <replaceable class="parameter">family_name</replaceable> ] AS
  {  OPERATOR <replaceable class="parameter">strategy_number</replaceable> <replaceable class="parameter">operator_name</replaceable> [ ( <replaceable class="parameter">op_type</replaceable>, <replaceable class="parameter">op_type</replaceable> ) ] [ FOR SEARCH | FOR ORDER BY <replaceable class="parameter">sort_family_name</replaceable> ]
   | FUNCTION <replaceable class="parameter">support_number</replaceable> [ ( <replaceable class="parameter">op_type</replaceable> [ , <replaceable class="parameter">op_type</replaceable> ] ) ] <replaceable class="parameter">function_name</replaceable> ( <replaceable class="parameter">argument_type</replaceable> [, ...] )
   | STORAGE <replaceable class="parameter">storage_type</replaceable>
  } [, ... ]
</synopsis>
________________________________________________________-->
<synopsis>
CREATE OPERATOR CLASS <replaceable class="parameter">name</replaceable> [ DEFAULT ] FOR TYPE <replaceable class="parameter">data_type</replaceable>
  USING <replaceable class="parameter">index_method</replaceable> [ FAMILY <replaceable class="parameter">family_name</replaceable> ] AS
  {  OPERATOR <replaceable class="parameter">strategy_number</replaceable> <replaceable class="parameter">operator_name</replaceable> [ ( <replaceable class="parameter">op_type</replaceable>, <replaceable class="parameter">op_type</replaceable> ) ] [ FOR SEARCH | FOR ORDER BY <replaceable class="parameter">sort_family_name</replaceable> ]
   | FUNCTION <replaceable class="parameter">support_number</replaceable> [ ( <replaceable class="parameter">op_type</replaceable> [ , <replaceable class="parameter">op_type</replaceable> ] ) ] <replaceable class="parameter">function_name</replaceable> ( <replaceable class="parameter">argument_type</replaceable> [, ...] )
   | STORAGE <replaceable class="parameter">storage_type</replaceable>
  } [, ... ]
</synopsis>
<!-- pgdoc-cn_end sig_en=eb0851b9aefb5ca8493b96372b791684 -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=648f08401e6dd590a2e93cbdda220afc sig_cn_org=None source=14.1 
  <para>
   <command>CREATE OPERATOR CLASS</command> creates a new operator class.
   An operator class defines how a particular data type can be used with
   an index.  The operator class specifies that certain operators will fill
   particular roles or <quote>strategies</quote> for this data type and this
   index method.  The operator class also specifies the support functions to
   be used by
   the index method when the operator class is selected for an
   index column.  All the operators and functions used by an operator
   class must be defined before the operator class can be created.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE OPERATOR CLASS</command>创建新的操作符类。
   一个操作符类定义一种特殊的数据类型如何被用于一个索引。操作符类指定为
   该数据类型和索引方法扮演特殊角色或者<quote>策略</quote>的操作符。操作符
   类还指定当该操作符类被选择用于一个索引列时，索引方法要使用的支持函数。
   操作符类所使用的所有操作符和函数必须在操作符类被创建之前被定义好。
  </para>
<!-- pgdoc-cn_end sig_en=648f08401e6dd590a2e93cbdda220afc -->

<!-- pgdoc-cn_start sig_en=b5075b4fb823f1a464c9ffa4ef07a85f sig_cn_org=None source=14.1 
  <para>
   If a schema name is given then the operator class is created in the
   specified schema.  Otherwise it is created in the current schema.
   Two operator classes in the same schema can have the same name only if they
   are for different index methods.
  </para>
________________________________________________________-->
  <para>
   如果给出了一个模式名称，那么该操作符类会被创建在指定模式中。否则，它
   会被创建在当前模式中。同一模式中的两个操作符类只有在被用于不同的索引
   方法时才可以具有相同的名称。
  </para>
<!-- pgdoc-cn_end sig_en=b5075b4fb823f1a464c9ffa4ef07a85f -->

<!-- pgdoc-cn_start sig_en=80855755b84c32b5a2d9dbd4835cfd06 sig_cn_org=None source=14.1 
  <para>
   The user who defines an operator class becomes its owner.  Presently,
   the creating user must be a superuser.  (This restriction is made because
   an erroneous operator class definition could confuse or even crash the
   server.)
  </para>
________________________________________________________-->
  <para>
   定义操作符类的用户将成为其拥有者。当前，创建用户必须是超级用户（做出
   这种限制是因为错误的操作符类定义会让服务器混淆甚至崩溃）。
  </para>
<!-- pgdoc-cn_end sig_en=80855755b84c32b5a2d9dbd4835cfd06 -->

<!-- pgdoc-cn_start sig_en=6ff52ecf782ec49bc48ceca30f6256a3 sig_cn_org=None source=14.1 
  <para>
   <command>CREATE OPERATOR CLASS</command> does not presently check
   whether the operator class definition includes all the operators and
   functions required by the index method, nor whether the operators and
   functions form a self-consistent set.  It is the user's
   responsibility to define a valid operator class.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE OPERATOR CLASS</command>当前不会检查操作符
   类定义是否包括该索引方法所要求的所有操作符和函数，也不会检查这些操作符
   和函数是否构成一个一致的集合。定义一个合法的操作符类是用户的责任。
  </para>
<!-- pgdoc-cn_end sig_en=6ff52ecf782ec49bc48ceca30f6256a3 -->

<!-- pgdoc-cn_start sig_en=25a44afffea78ff0124db2dfcf589dc2 sig_cn_org=None source=14.1 
  <para>
   Related operator classes can be grouped into <firstterm>operator
   families</firstterm>.  To add a new operator class to an existing family,
   specify the <literal>FAMILY</literal> option in <command>CREATE OPERATOR
   CLASS</command>.  Without this option, the new class is placed into
   a family named the same as the new class (creating that family if
   it doesn't already exist).
  </para>
________________________________________________________-->
  <para>
   相关的操作符类可以被组成<firstterm>操作符族</firstterm>。要把一个新的操作符类
   加入到一个现有的族中，可以在<command>CREATE OPERATOR
   CLASS</command>中指定<literal>FAMILY</literal>选项。如果没有这个选项，
   新的类会被放到一个同名的族中（如果族不存在会创建之）。
  </para>
<!-- pgdoc-cn_end sig_en=25a44afffea78ff0124db2dfcf589dc2 -->

<!-- pgdoc-cn_start sig_en=1bec00b38af746ce0eb19c3aa3b1c94e sig_cn_org=None source=14.1 
  <para>
   Refer to <xref linkend="xindex"/> for further information.
  </para>
________________________________________________________-->
  <para>
   进一步的信息可参考<xref linkend="xindex"/>。
  </para>
<!-- pgdoc-cn_end sig_en=1bec00b38af746ce0eb19c3aa3b1c94e -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=115854dd14c5e03016e266f11baf93d9 sig_cn_org=None source=14.1 
     <para>
      The name of the operator class to be created.  The name can be
      schema-qualified.
     </para>
________________________________________________________-->
     <para>
      要创建的操作符类的名称。该名称可以被模式限定。
     </para>
<!-- pgdoc-cn_end sig_en=115854dd14c5e03016e266f11baf93d9 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DEFAULT</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=b746ccd168923a75b9d6c6d6fb752f94 sig_cn_org=None source=14.1 
     <para>
      If present, the operator class will become the default
      operator class for its data type.  At most one operator class
      can be the default for a specific data type and index method.
     </para>
________________________________________________________-->
     <para>
      如果存在，该操作符类将成为其数据类型的默认操作符类。对一种
      特定的数据类型和索引方法至多有一个默认操作符类。
     </para>
<!-- pgdoc-cn_end sig_en=b746ccd168923a75b9d6c6d6fb752f94 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">data_type</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=eab31731d78c8a0068222f5f8fb65467 sig_cn_org=None source=14.1 
     <para>
      The column data type that this operator class is for.
     </para>
________________________________________________________-->
     <para>
      这个操作符类所用于的列数据类型。
     </para>
<!-- pgdoc-cn_end sig_en=eab31731d78c8a0068222f5f8fb65467 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">index_method</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=99573a95053ce61375a4a54b0a71a35b sig_cn_org=None source=14.1 
     <para>
      The name of the index method this operator class is for.
     </para>
________________________________________________________-->
     <para>
      这个操作符类所用于的索引方法的名称。
     </para>
<!-- pgdoc-cn_end sig_en=99573a95053ce61375a4a54b0a71a35b -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">family_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=bdfb7ce67e65f0300d75b5f10dd5e8f6 sig_cn_org=None source=14.1 
     <para>
      The name of the existing operator family to add this operator class to.
      If not specified, a family named the same as the operator class is
      used (creating it, if it doesn't already exist).
     </para>
________________________________________________________-->
     <para>
      要把这个操作符类加入其中的已有操作符族的名称。如果没有指定，
      将使用一个同名操作符族（如果还不存在则创建之）。
     </para>
<!-- pgdoc-cn_end sig_en=bdfb7ce67e65f0300d75b5f10dd5e8f6 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">strategy_number</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=3a6e6d341372a7e9b2eaf7ffbbd04609 sig_cn_org=None source=14.1 
     <para>
      The index method's strategy number for an operator
      associated with the operator class.
     </para>
________________________________________________________-->
     <para>
      用于一个与该操作符类相关联的操作符的索引方法策略号。
     </para>
<!-- pgdoc-cn_end sig_en=3a6e6d341372a7e9b2eaf7ffbbd04609 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">operator_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=d8582bbea8857159ae91fe310668d4fb sig_cn_org=None source=14.1 
     <para>
      The name (optionally schema-qualified) of an operator associated
      with the operator class.
     </para>
________________________________________________________-->
     <para>
      一个与该操作符类相关联的操作符的名称（可以被模式限定）。
     </para>
<!-- pgdoc-cn_end sig_en=d8582bbea8857159ae91fe310668d4fb -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">op_type</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=60ab66cda439f265d178e996fb637230 sig_cn_org=None source=14.1 
     <para>
      In an <literal>OPERATOR</literal> clause,
      the operand data type(s) of the operator, or <literal>NONE</literal> to
      signify a prefix operator.  The operand data
      types can be omitted in the normal case where they are the same
      as the operator class's data type.
     </para>
________________________________________________________-->
     <para>
      在一个<literal>OPERATOR</literal>子句中，这表示该操作符的操作数数据
      类型，或者用<literal>NONE</literal>来表示一个前缀操作符。
      在操作数数据类型与该操作符的数据类型相同的一般情况下，操作数的
      数据类型可以被省略。
     </para>
<!-- pgdoc-cn_end sig_en=60ab66cda439f265d178e996fb637230 -->

<!-- pgdoc-cn_start sig_en=064f10977295daf863bb9b2beadcc58a sig_cn_org=None source=14.1 
     <para>
      In a <literal>FUNCTION</literal> clause, the operand data type(s) the
      function is intended to support, if different from
      the input data type(s) of the function (for B-tree comparison functions
      and hash functions)
      or the class's data type (for B-tree sort support functions,
      B-tree equal image functions, and all functions in GiST,
      SP-GiST, GIN and BRIN operator classes).  These defaults are
      correct, and so <replaceable
       class="parameter">op_type</replaceable> need not be specified
      in <literal>FUNCTION</literal> clauses, except for the case of a
      B-tree sort support function that is meant to support
      cross-data-type comparisons.
     </para>
________________________________________________________-->
     <para>
      在一个<literal>FUNCTION</literal>子句中，这表示该函数要支持的操作数
      数据类型，如果它与该函数的输入数据类型（对于 B-树比较函数和哈希
      函数）或者操作符类的数据类型（对于 B-树排序支持函数和与B-树相同的的图像函数以及所有GiST、
      SP-GiST、GIN 和 BRIN 操作符类中的函数）不同。这些默认值是正确的，并且
      <replaceable class="parameter">op_type</replaceable>因此不必
      在<literal>FUNCTION</literal>子句中被指定，对于 B-树排序支持函数的情
      况来说，这表示跨数据类型比较。
     </para>
<!-- pgdoc-cn_end sig_en=064f10977295daf863bb9b2beadcc58a -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">sort_family_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=927a0a3f9fcb2ec69bf6311156816fc6 sig_cn_org=None source=14.1 
     <para>
      The name (optionally schema-qualified) of an existing <literal>btree</literal> operator
      family that describes the sort ordering associated with an ordering
      operator.
     </para>
________________________________________________________-->
     <para>
      一个现有<literal>btree</literal>操作符族的名称（可以是模式限定的），
      它描述与一种排序操作符相关联的排序顺序。
     </para>
<!-- pgdoc-cn_end sig_en=927a0a3f9fcb2ec69bf6311156816fc6 -->

<!-- pgdoc-cn_start sig_en=75ae5ab142fd6e9f5a8f5ed84d6bbe6a sig_cn_org=None source=14.1 
     <para>
      If neither <literal>FOR SEARCH</literal> nor <literal>FOR ORDER BY</literal> is
      specified, <literal>FOR SEARCH</literal> is the default.
     </para>
________________________________________________________-->
     <para>
      如果<literal>FOR SEARCH</literal>和<literal>FOR ORDER BY</literal>都没有被
      指定，那么<literal>FOR SEARCH</literal>是默认值。
     </para>
<!-- pgdoc-cn_end sig_en=75ae5ab142fd6e9f5a8f5ed84d6bbe6a -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">support_number</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=e07e9b054072020306722f4227d7bf3b sig_cn_org=None source=14.1 
     <para>
      The index method's support function number for a
      function associated with the operator class.
     </para>
________________________________________________________-->
     <para>
      用于一个与该操作符类相关联的函数的索引方法支持函数编号。
     </para>
<!-- pgdoc-cn_end sig_en=e07e9b054072020306722f4227d7bf3b -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">function_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=b641f1fd09986cccfc1d8f535583f580 sig_cn_org=None source=14.1 
     <para>
      The name (optionally schema-qualified) of a function that is an
      index method support function for the operator class.
     </para>
________________________________________________________-->
     <para>
      一个用于该操作符类的索引方法支持函数的函数名称（可以是
      模式限定的）。
     </para>
<!-- pgdoc-cn_end sig_en=b641f1fd09986cccfc1d8f535583f580 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">argument_type</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=f33de16ec3767bea3df3abb1368889ee sig_cn_org=None source=14.1 
     <para>
      The parameter data type(s) of the function.
     </para>
________________________________________________________-->
     <para>
      该函数的参数数据类型。
     </para>
<!-- pgdoc-cn_end sig_en=f33de16ec3767bea3df3abb1368889ee -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">storage_type</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=dfb3f0fe11e20a98f92b39528146d7d3 sig_cn_org=None source=14.1 
     <para>
      The data type actually stored in the index.  Normally this is
      the same as the column data type, but some index methods
      (currently GiST, GIN, SP-GiST and BRIN) allow it to be different.  The
      <literal>STORAGE</literal> clause must be omitted unless the index
      method allows a different type to be used.
      If the column <replaceable class="parameter">data_type</replaceable> is specified
      as <type>anyarray</type>, the <replaceable class="parameter">storage_type</replaceable>
      can be declared as <type>anyelement</type> to indicate that the index
      entries are members of the element type belonging to the actual array
      type that each particular index is created for.
     </para>
________________________________________________________-->
     <para>
      实际存储在索引中的数据类型。通常这和列数据类型相同，但是有些
      索引方法（当前有 GiST、GIN、SP-GiST和 BRIN）允许它们不同。
      除非索引方法允许使用不同的类型，<literal>STORAGE</literal>子句必须
      被省略。
	  如果<replaceable class="parameter">data_type</replaceable>列被指定为<type>anyarray</type>，
	  那么<replaceable class="parameter">storage_type</replaceable>可以被声明为<type>anyelement</type>
	  以指示索引条目是属于为每个特定索引创建的实际数组类型的元素类型的成员。
     </para>
<!-- pgdoc-cn_end sig_en=dfb3f0fe11e20a98f92b39528146d7d3 -->
    </listitem>
   </varlistentry>
  </variablelist>

<!-- pgdoc-cn_start sig_en=f449d26e623d85a4fc19834b4e762362 sig_cn_org=None source=14.1 
  <para>
   The <literal>OPERATOR</literal>, <literal>FUNCTION</literal>, and <literal>STORAGE</literal>
   clauses can appear in any order.
  </para>
________________________________________________________-->
  <para>
   <literal>OPERATOR</literal>、<literal>FUNCTION</literal>和<literal>STORAGE</literal>
   子句可以以任何顺序出现。
  </para>
<!-- pgdoc-cn_end sig_en=f449d26e623d85a4fc19834b4e762362 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注解</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=ad2bcdc274f165c8ce2c0e3795f7962a sig_cn_org=None source=14.1 
  <para>
   Because the index machinery does not check access permissions on functions
   before using them, including a function or operator in an operator class
   is tantamount to granting public execute permission on it.  This is usually
   not an issue for the sorts of functions that are useful in an operator
   class.
  </para>
________________________________________________________-->
  <para>
   因为索引机制在使用函数之前不检查它们的权限，将一个函数或者操作符包括在
   一个操作符类中相当于在其上授予公共执行权限。这对操作符类中很有用的函数
   来说通常不成问题。
  </para>
<!-- pgdoc-cn_end sig_en=ad2bcdc274f165c8ce2c0e3795f7962a -->

<!-- pgdoc-cn_start sig_en=a9e43b0b79f517f8f1cb44fe83b1415d sig_cn_org=None source=14.1 
  <para>
   The operators should not be defined by SQL functions.  An SQL function
   is likely to be inlined into the calling query, which will prevent
   the optimizer from recognizing that the query matches an index.
  </para>
________________________________________________________-->
  <para>
   操作符不应该用 SQL 函数定义。SQL 函数很有可能会被内联到调用查询中，这
   会妨碍优化器识别该查询匹配一个索引。
  </para>
<!-- pgdoc-cn_end sig_en=a9e43b0b79f517f8f1cb44fe83b1415d -->

<!-- pgdoc-cn_start sig_en=a555386f425de67413cb21847e239ae0 sig_cn_org=None source=14.1 
  <para>
   Before <productname>PostgreSQL</productname> 8.4, the <literal>OPERATOR</literal>
   clause could include a <literal>RECHECK</literal> option.  This is no longer
   supported because whether an index operator is <quote>lossy</quote> is now
   determined on-the-fly at run time.  This allows efficient handling of
   cases where an operator might or might not be lossy.
  </para>
________________________________________________________-->
  <para>
   在<productname>PostgreSQL</productname> 8.4 之前，
   <literal>OPERATOR</literal>子句可以包括一个<literal>RECHECK</literal>选项。现在
   已经不再支持，因为一个索引操作符是否为<quote>有损的</quote>现在是在运行
   时实时决定的。这允许在一个操作符可能是或者可能不是有损的情况下有效地处理。
  </para>
<!-- pgdoc-cn_end sig_en=a555386f425de67413cb21847e239ae0 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>示例</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=f5729396af96d795c92f37c1b62c26ac sig_cn_org=None source=14.1 
  <para>
   The following example command defines a GiST index operator class
   for the data type <literal>_int4</literal> (array of <type>int4</type>).  See the
   <xref linkend="intarray"/> module for the complete example.
  </para>
________________________________________________________-->
  <para>
   下面的例子为数据类型<literal>_int4</literal>（<type>int4</type>数组）
   定义了一个 GiST 索引操作符。完整的例子请见
   <xref linkend="intarray"/>模块。
  </para>
<!-- pgdoc-cn_end sig_en=f5729396af96d795c92f37c1b62c26ac -->

<!-- pgdoc-cn_start sig_en=9a58aa65dc16c6100fba270f018b82aa sig_cn_org=None source=14.1 
<programlisting>
CREATE OPERATOR CLASS gist__int_ops
    DEFAULT FOR TYPE _int4 USING gist AS
        OPERATOR        3       &amp;&amp;,
        OPERATOR        6       = (anyarray, anyarray),
        OPERATOR        7       @&gt;,
        OPERATOR        8       &lt;@,
        OPERATOR        20      @@ (_int4, query_int),
        FUNCTION        1       g_int_consistent (internal, _int4, smallint, oid, internal),
        FUNCTION        2       g_int_union (internal, internal),
        FUNCTION        3       g_int_compress (internal),
        FUNCTION        4       g_int_decompress (internal),
        FUNCTION        5       g_int_penalty (internal, internal, internal),
        FUNCTION        6       g_int_picksplit (internal, internal),
        FUNCTION        7       g_int_same (_int4, _int4, internal);
</programlisting>
________________________________________________________-->
<programlisting>
CREATE OPERATOR CLASS gist__int_ops
    DEFAULT FOR TYPE _int4 USING gist AS
        OPERATOR        3       &amp;&amp;,
        OPERATOR        6       = (anyarray, anyarray),
        OPERATOR        7       @&gt;,
        OPERATOR        8       &lt;@,
        OPERATOR        20      @@ (_int4, query_int),
        FUNCTION        1       g_int_consistent (internal, _int4, smallint, oid, internal),
        FUNCTION        2       g_int_union (internal, internal),
        FUNCTION        3       g_int_compress (internal),
        FUNCTION        4       g_int_decompress (internal),
        FUNCTION        5       g_int_penalty (internal, internal, internal),
        FUNCTION        6       g_int_picksplit (internal, internal),
        FUNCTION        7       g_int_same (_int4, _int4, internal);
</programlisting>
<!-- pgdoc-cn_end sig_en=9a58aa65dc16c6100fba270f018b82aa -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=47e1271f58dd12594f8199bd90c29586 sig_cn_org=None source=14.1 
  <para>
   <command>CREATE OPERATOR CLASS</command> is a
   <productname>PostgreSQL</productname> extension.  There is no
   <command>CREATE OPERATOR CLASS</command> statement in the SQL
   standard.
  </para>
________________________________________________________-->
  <para>
   <command>CREATE OPERATOR CLASS</command>是一种
   <productname>PostgreSQL</productname>扩展。在 SQL 标准中没有
   <command>CREATE OPERATOR CLASS</command>语句。
  </para>
<!-- pgdoc-cn_end sig_en=47e1271f58dd12594f8199bd90c29586 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>另见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="sql-alteropclass"/></member>
   <member><xref linkend="sql-dropopclass"/></member>
   <member><xref linkend="sql-createopfamily"/></member>
   <member><xref linkend="sql-alteropfamily"/></member>
  </simplelist>
 </refsect1>
</refentry>
