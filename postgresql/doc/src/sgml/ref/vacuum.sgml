<!--
doc/src/sgml/ref/vacuum.sgml
PostgreSQL documentation
-->

<refentry id="sql-vacuum">
<!-- pgdoc-cn_start sig_en=8381b84f18b3dd3b93fb896e2ef13680 sig_cn_org=None source=14.1 
 <indexterm zone="sql-vacuum">
  <primary>VACUUM</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-vacuum">
  <primary>VACUUM</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=8381b84f18b3dd3b93fb896e2ef13680 -->

 <refmeta>
  <refentrytitle>VACUUM</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

<!-- pgdoc-cn_start sig_en=90ad2315e5d6db48fe85fab7d1a1d738 sig_cn_org=None source=14.1 
 <refnamediv>
  <refname>VACUUM</refname>
  <refpurpose>garbage-collect and optionally analyze a database</refpurpose>
 </refnamediv>
________________________________________________________-->
 <refnamediv>
  <refname>VACUUM</refname>
  <refpurpose>垃圾收集并根据需要分析一个数据库</refpurpose>
 </refnamediv>
<!-- pgdoc-cn_end sig_en=90ad2315e5d6db48fe85fab7d1a1d738 -->

 <refsynopsisdiv>
<!-- pgdoc-cn_start sig_en=32210543069f1222577e20a8e339741c sig_cn_org=None source=14.1 
<synopsis>
VACUUM [ ( <replaceable class="parameter">option</replaceable> [, ...] ) ] [ <replaceable class="parameter">table_and_columns</replaceable> [, ...] ]
VACUUM [ FULL ] [ FREEZE ] [ VERBOSE ] [ ANALYZE ] [ <replaceable class="parameter">table_and_columns</replaceable> [, ...] ]

<phrase>where <replaceable class="parameter">option</replaceable> can be one of:</phrase>

    FULL [ <replaceable class="parameter">boolean</replaceable> ]
    FREEZE [ <replaceable class="parameter">boolean</replaceable> ]
    VERBOSE [ <replaceable class="parameter">boolean</replaceable> ]
    ANALYZE [ <replaceable class="parameter">boolean</replaceable> ]
    DISABLE_PAGE_SKIPPING [ <replaceable class="parameter">boolean</replaceable> ]
    SKIP_LOCKED [ <replaceable class="parameter">boolean</replaceable> ]
    INDEX_CLEANUP { AUTO | ON | OFF }
    PROCESS_TOAST [ <replaceable class="parameter">boolean</replaceable> ]
    TRUNCATE [ <replaceable class="parameter">boolean</replaceable> ]
    PARALLEL <replaceable class="parameter">integer</replaceable>

<phrase>and <replaceable class="parameter">table_and_columns</replaceable> is:</phrase>

    <replaceable class="parameter">table_name</replaceable> [ ( <replaceable class="parameter">column_name</replaceable> [, ...] ) ]
</synopsis>
________________________________________________________-->
<synopsis>
VACUUM [ ( <replaceable class="parameter">option</replaceable> [, ...] ) ] [ <replaceable class="parameter">table_and_columns</replaceable> [, ...] ]
VACUUM [ FULL ] [ FREEZE ] [ VERBOSE ] [ ANALYZE ] [ <replaceable class="parameter">table_and_columns</replaceable> [, ...] ]

<phrase>其中<replaceable class="parameter">option</replaceable>可以是下列之一：</phrase>

    FULL [ <replaceable class="parameter">boolean</replaceable> ]
    FREEZE [ <replaceable class="parameter">boolean</replaceable> ]
    VERBOSE [ <replaceable class="parameter">boolean</replaceable> ]
    ANALYZE [ <replaceable class="parameter">boolean</replaceable> ]
    DISABLE_PAGE_SKIPPING [ <replaceable class="parameter">boolean</replaceable> ]
    SKIP_LOCKED [ <replaceable class="parameter">boolean</replaceable> ]
    INDEX_CLEANUP { AUTO | ON | OFF }
    PROCESS_TOAST [ <replaceable class="parameter">boolean</replaceable> ]
    TRUNCATE [ <replaceable class="parameter">boolean</replaceable> ]
    PARALLEL <replaceable class="parameter">integer</replaceable>

<phrase>而<replaceable class="parameter">table_and_columns</replaceable>是：</phrase>

    <replaceable class="parameter">table_name</replaceable> [ ( <replaceable class="parameter">column_name</replaceable> [, ...] ) ]
</synopsis>
<!-- pgdoc-cn_end sig_en=32210543069f1222577e20a8e339741c -->
 </refsynopsisdiv>

 <refsect1>
<!-- pgdoc-cn_start sig_en=59d6e86f3a60db4f1e08d0d6e639924e sig_cn_org=None source=14.1 
  <title>Description</title>
________________________________________________________-->
  <title>描述</title>
<!-- pgdoc-cn_end sig_en=59d6e86f3a60db4f1e08d0d6e639924e -->

<!-- pgdoc-cn_start sig_en=0f582a955df19ae12927be8aa7e04933 sig_cn_org=None source=14.1 
  <para>
   <command>VACUUM</command> reclaims storage occupied by dead tuples.
   In normal <productname>PostgreSQL</productname> operation, tuples that
   are deleted or obsoleted by an update are not physically removed from
   their table; they remain present until a <command>VACUUM</command> is
   done.  Therefore it's necessary to do <command>VACUUM</command>
   periodically, especially on frequently-updated tables.
  </para>
________________________________________________________-->
  <para>
   <command>VACUUM</command>收回由死亡元组占用的存储空间。在通常的<productname>PostgreSQL</productname>操作中，被删除或者被更新废弃的元组并没有在物理上从它们的表中移除，它们将一直存在直到一次<command>VACUUM</command>被执行。因此有必要周期性地做<command>VACUUM</command>，特别是在频繁被更新的表上。
  </para>
<!-- pgdoc-cn_end sig_en=0f582a955df19ae12927be8aa7e04933 -->

<!-- pgdoc-cn_start sig_en=1620337bcd4c9d0a496becd85cb38beb sig_cn_org=None source=14.1 
  <para>
   Without a <replaceable class="parameter">table_and_columns</replaceable>
   list, <command>VACUUM</command> processes every table and materialized view
   in the current database that the current user has permission to vacuum.
   With a list, <command>VACUUM</command> processes only those table(s).
  </para>
________________________________________________________-->
  <para>
   在没有<replaceable class="parameter">table_and_columns</replaceable>列表的情况下，<command>VACUUM</command>会处理当前用户具有清理权限的当前数据库中的每一个表和物化视图。如果给出一个列表，<command>VACUUM</command>可以只处理列表中的那些表。
  </para>
<!-- pgdoc-cn_end sig_en=1620337bcd4c9d0a496becd85cb38beb -->

<!-- pgdoc-cn_start sig_en=7f653b8430e1750d943f23aa832616c6 sig_cn_org=None source=14.1 
  <para>
   <command>VACUUM ANALYZE</command> performs a <command>VACUUM</command>
   and then an <command>ANALYZE</command> for each selected table.  This
   is a handy combination form for routine maintenance scripts.  See
   <xref linkend="sql-analyze"/>
   for more details about its processing.
  </para>
________________________________________________________-->
  <para>
   <command>VACUUM ANALYZE</command>对每一个选定的表<command>ANALYZE</command>。这是两种命令的一种方便的组合形式，可以用于例行的维护脚本。其处理细节可参考<xref linkend="sql-analyze"/>。
  </para>
<!-- pgdoc-cn_end sig_en=7f653b8430e1750d943f23aa832616c6 -->

<!-- pgdoc-cn_start sig_en=cc4cbc9fdc181c42f516e14c32258df7 sig_cn_org=None source=14.1 
  <para>
   Plain <command>VACUUM</command> (without <literal>FULL</literal>) simply reclaims
   space and makes it
   available for re-use.  This form of the command can operate in parallel
   with normal reading and writing of the table, as an exclusive lock
   is not obtained.  However, extra space is not returned to the operating
   system (in most cases); it's just kept available for re-use within the
   same table.  It also allows us to leverage multiple CPUs in order to process
   indexes.  This feature is known as <firstterm>parallel vacuum</firstterm>.
   To disable this feature, one can use <literal>PARALLEL</literal> option and
   specify parallel workers as zero.  <command>VACUUM FULL</command> rewrites
   the entire contents of the table into a new disk file with no extra space,
   allowing unused space to be returned to the operating system.  This form is
   much slower and requires an <literal>ACCESS EXCLUSIVE</literal> lock on
   each table while it is being processed.
  </para>
________________________________________________________-->
  <para>
   简单的 <command>VACUUM</command>（不带<literal>FULL</literal>）简单地收回空间并使其可以被重用。
   这种形式的命令可以和表的普通读写操作并行，因为它不会获得一个排他锁。
   但是，这种形式中额外的空间并没有被还给操作系统（在大多数情况下），它仅仅被保留在同一个表中以备重用。
   它还允许我们利用多个 CPU 来处理索引。 此功能称为<firstterm>parallel vacuum</firstterm>。
   要禁用此功能，可以使用<literal>PARALLEL</literal>选项并将并行工作程序指定为零。
   <command>VACUUM FULL</command>将表的整个内容重写到一个新的磁盘文件中，并且不包含额外的空间，这使得没有被使用的空间被还给操作系统。
   这种形式的命令更慢并且在其被处理时要求在每个表上保持一个<literal>ACCESS EXCLUSIVE</literal> 锁。
  </para>
<!-- pgdoc-cn_end sig_en=cc4cbc9fdc181c42f516e14c32258df7 -->

<!-- pgdoc-cn_start sig_en=3ead1000f1a48d7744d567f2083f6ecd sig_cn_org=None source=14.1 
  <para>
   When the option list is surrounded by parentheses, the options can be
   written in any order.  Without parentheses, options must be specified
   in exactly the order shown above.
   The parenthesized syntax was added in
   <productname>PostgreSQL</productname> 9.0;  the unparenthesized
   syntax is deprecated.
  </para>
________________________________________________________-->
  <para>
   当选项列表被包围在圆括号中时，选项可以被写成任何顺序。如果没有圆括号，选项必须严格按照上面所展示的顺序指定。有圆括号的语法在<productname>PostgreSQL</productname> 9.0时被加入，无圆括号的语法则被废弃。
  </para>
<!-- pgdoc-cn_end sig_en=3ead1000f1a48d7744d567f2083f6ecd -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=55f21f3bddee6a8d223aa24ab57d80dc sig_cn_org=None source=14.1 
  <title>Parameters</title>
________________________________________________________-->
  <title>参数</title>
<!-- pgdoc-cn_end sig_en=55f21f3bddee6a8d223aa24ab57d80dc -->

  <variablelist>
   <varlistentry>
    <term><literal>FULL</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=87842939db95d17e0b3490a8fed1c1e1 sig_cn_org=None source=14.1 
     <para>
      Selects <quote>full</quote> vacuum, which can reclaim more
      space, but takes much longer and exclusively locks the table.
      This method also requires extra disk space, since it writes a
      new copy of the table and doesn't release the old copy until
      the operation is complete.  Usually this should only be used when a
      significant amount of space needs to be reclaimed from within the table.
     </para>
________________________________________________________-->
     <para>
      选择<quote>完全</quote>清理，它可以收回更多空间，并且需要更长时间和表上的排他锁。这种方法还需要额外的磁盘空间，因为它会创建该表的一个新拷贝，并且在操作完成之前都不会释放旧的拷贝。通常这种方法只用于需要从表中收回数量庞大的空间时。
     </para>
<!-- pgdoc-cn_end sig_en=87842939db95d17e0b3490a8fed1c1e1 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FREEZE</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=2d4514bfa6ce37fb86e5a68d79abca17 sig_cn_org=None source=14.1 
     <para>
      Selects aggressive <quote>freezing</quote> of tuples.
      Specifying <literal>FREEZE</literal> is equivalent to performing
      <command>VACUUM</command> with the
      <xref linkend="guc-vacuum-freeze-min-age"/> and
      <xref linkend="guc-vacuum-freeze-table-age"/> parameters
      set to zero.  Aggressive freezing is always performed when the
      table is rewritten, so this option is redundant when <literal>FULL</literal>
      is specified.
     </para>
________________________________________________________-->
     <para>
      选择激进的元组<quote>冻结</quote>。指定<literal>FREEZE</literal>
      等价于参数<xref linkend="guc-vacuum-freeze-min-age"/>和
      <xref linkend="guc-vacuum-freeze-table-age"/>设置为0的
      <command>VACUUM</command>。当表被重写时总是会执行激进的冻结，
      因此指定<literal>FULL</literal>时这个选项是多余的。
     </para>
<!-- pgdoc-cn_end sig_en=2d4514bfa6ce37fb86e5a68d79abca17 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VERBOSE</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=a8f7a80dc79b826d778d94e9067d342a sig_cn_org=None source=14.1 
     <para>
      Prints a detailed vacuum activity report for each table.
     </para>
________________________________________________________-->
     <para>
      为每个表打印一份详细的清理活动报告。
     </para>
<!-- pgdoc-cn_end sig_en=a8f7a80dc79b826d778d94e9067d342a -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ANALYZE</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=ce7ac29e802055b1a34786f24f46d8b6 sig_cn_org=None source=14.1 
     <para>
      Updates statistics used by the planner to determine the most
      efficient way to execute a query.
     </para>
________________________________________________________-->
     <para>
      更新优化器用以决定最有效执行一个查询的方法的统计信息。
     </para>
<!-- pgdoc-cn_end sig_en=ce7ac29e802055b1a34786f24f46d8b6 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DISABLE_PAGE_SKIPPING</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=ad5c9642a1959265058710ee28fb4883 sig_cn_org=None source=14.1 
     <para>
      Normally, <command>VACUUM</command> will skip pages based on the <link
      linkend="vacuum-for-visibility-map">visibility map</link>.  Pages where
      all tuples are known to be frozen can always be skipped, and those
      where all tuples are known to be visible to all transactions may be
      skipped except when performing an aggressive vacuum.  Furthermore,
      except when performing an aggressive vacuum, some pages may be skipped
      in order to avoid waiting for other sessions to finish using them.
      This option disables all page-skipping behavior, and is intended to
      be used only when the contents of the visibility map are
      suspect, which should happen only if there is a hardware or software
      issue causing database corruption.
     </para>
________________________________________________________-->
     <para>
      通常，<command>VACUUM</command>将基于<link linkend="vacuum-for-visibility-map">可见性映射</link>跳过页面。已知所有元组都被冻结的页面总是会被跳过，而那些所有元组对所有事务都可见的页面则可能会被跳过（除非执行的是激进的清理）。此外，除非在执行激进的清理时，一些页面也可能会被跳过，这样可避免等待其他页面完成对其使用。这个选项禁用所有的跳过页面的行为，其意图是只在可见性映射内容被怀疑时使用，这种情况只有在硬件或者软件问题导致数据库损坏时才会发生。
     </para>
<!-- pgdoc-cn_end sig_en=ad5c9642a1959265058710ee28fb4883 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SKIP_LOCKED</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=50915febd9b3f392b442ccc3aaf3c2fd sig_cn_org=None source=14.1 
     <para>
      Specifies that <command>VACUUM</command> should not wait for any
      conflicting locks to be released when beginning work on a relation:
      if a relation cannot be locked immediately without waiting, the relation
      is skipped.  Note that even with this option,
      <command>VACUUM</command> may still block when opening the relation's
      indexes.  Additionally, <command>VACUUM ANALYZE</command> may still
      block when acquiring sample rows from partitions, table inheritance
      children, and some types of foreign tables.  Also, while
      <command>VACUUM</command> ordinarily processes all partitions of
      specified partitioned tables, this option will cause
      <command>VACUUM</command> to skip all partitions if there is a
      conflicting lock on the partitioned table.
     </para>
________________________________________________________-->
     <para>
      规定<command>VACUUM</command>在开始处理关系时不等待任何冲突锁被释放：如果关系不能立即锁定而不等待，则跳过关系。
      请注意即使采用此选项，<command>VACUUM</command>在打开关系的索引时仍可能阻塞。
      此外，<command>VACUUM ANALYZE</command>在从分区、继承子表和某些类型的外表获取示例行时，仍然可能阻塞。 
      还有，虽然<command>VACUUM</command>通常处理指定分区表的所有分区，但如果分区表上的锁冲突，   此选项将导致<command>VACUUM</command>跳过所有分区。
     </para>
<!-- pgdoc-cn_end sig_en=50915febd9b3f392b442ccc3aaf3c2fd -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>INDEX_CLEANUP</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=c8e2559db1983c217a77b8ad7a3323c0 sig_cn_org=None source=14.1 
     <para>
      Normally, <command>VACUUM</command> will skip index vacuuming
      when there are very few dead tuples in the table.  The cost of
      processing all of the table's indexes is expected to greatly
      exceed the benefit of removing dead index tuples when this
      happens.  This option can be used to force
      <command>VACUUM</command> to process indexes when there are more
      than zero dead tuples.  The default is <literal>AUTO</literal>,
      which allows <command>VACUUM</command> to skip index vacuuming
      when appropriate.  If <literal>INDEX_CLEANUP</literal> is set to
      <literal>ON</literal>, <command>VACUUM</command> will
      conservatively remove all dead tuples from indexes.  This may be
      useful for backwards compatibility with earlier releases of
      <productname>PostgreSQL</productname> where this was the
      standard behavior.
     </para>
________________________________________________________-->
     <para>
      通常，当表中的死亡元组很少时，<command>VACUUM</command>将跳过索引清理。
      处理全部表索引的成本预计将大大超过删除死索引元组的好处，当这发生时。
      当多于零个死元组时，此选项可用于强制<command>VACUUM</command>处理索引。
      默认值是<literal>AUTO</literal>，这允许<command>VACUUM</command>在适当的时候略过索引清理。
      如果<literal>INDEX_CLEANUP</literal>设置为<literal>ON</literal>，<command>VACUUM</command>将适当地从索引中删除所有死元组。
      这对于向后兼容<productname>PostgreSQL</productname>的早期版本是很有用的，在那里这是标准的行为。
     </para>
<!-- pgdoc-cn_end sig_en=c8e2559db1983c217a77b8ad7a3323c0 -->
<!-- pgdoc-cn_start sig_en=38f60fe12b70bc8ead1323c05f9ab84d sig_cn_org=None source=14.1 
     <para>
      <literal>INDEX_CLEANUP</literal> can also be set to
      <literal>OFF</literal> to force <command>VACUUM</command> to
      <emphasis>always</emphasis> skip index vacuuming, even when
      there are many dead tuples in the table.  This may be useful
      when it is necessary to make <command>VACUUM</command> run as
      quickly as possible to avoid imminent transaction ID wraparound
      (see <xref linkend="vacuum-for-wraparound"/>).  However, the
      wraparound failsafe mechanism controlled by <xref
       linkend="guc-vacuum-failsafe-age"/>  will generally trigger
      automatically to avoid transaction ID wraparound failure, and
      should be preferred.  If index cleanup is not performed
      regularly, performance may suffer, because as the table is
      modified indexes will accumulate dead tuples and the table
      itself will accumulate dead line pointers that cannot be removed
      until index cleanup is completed.
     </para>
________________________________________________________-->
     <para>
      <literal>INDEX_CLEANUP</literal>也可以设置为<literal>OFF</literal>来强制<command>VACUUM</command> <emphasis>总是</emphasis> 略过索引清理，即使表中有许多死元组。
      当需要使<command>VACUUM</command>尽可能快地运行，以避免临近的事务ID回卷时，这可能很有用(参见<xref linkend="vacuum-for-wraparound"/>)。
      然而，由<xref linkend="guc-vacuum-failsafe-age"/>控制的回卷失效保护机制通常会自动触发，以避免事务ID回卷失败，并且将被优先考虑。
      如果索引清理不被定期执行，性能可能会变差，
      因为当表被修改时，索引会累积死元组，并且表自己也会累积死线指针，这些在索引清理完成之前无法删除。
     </para>
<!-- pgdoc-cn_end sig_en=38f60fe12b70bc8ead1323c05f9ab84d -->
<!-- pgdoc-cn_start sig_en=dfd7cc8caae2b2bc62054728fd71fa4d sig_cn_org=None source=14.1 
     <para>
      This option has no effect for tables that have no index and is
      ignored if the <literal>FULL</literal> option is used.  It also
      has no effect on the transaction ID wraparound failsafe
      mechanism.  When triggered it will skip index vacuuming, even
      when <literal>INDEX_CLEANUP</literal> is set to
      <literal>ON</literal>.
     </para>
________________________________________________________-->
     <para>
      该选项对没有索引的表无影响，并且如果使用了<literal>FULL</literal>选项就会被忽略。
      它对事务ID回卷失效保护机制也没有影响。
      当触发它时会略过索引抽清理，即使<literal>INDEX_CLEANUP</literal>设置为<literal>ON</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=dfd7cc8caae2b2bc62054728fd71fa4d -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>PROCESS_TOAST</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=eeb00b781b1bb20a4ec88665059fd946 sig_cn_org=None source=14.1 
     <para>
      Specifies that <command>VACUUM</command> should attempt to process the
      corresponding <literal>TOAST</literal> table for each relation, if one
      exists. This is usually the desired behavior and is the default.
      Setting this option to false may be useful when it is only necessary to
      vacuum the main relation. This option is required when the
      <literal>FULL</literal> option is used.
     </para>
________________________________________________________-->
     <para>
      Specifies that <command>VACUUM</command> should attempt to process the
      corresponding <literal>TOAST</literal> table for each relation, if one
      exists. This is usually the desired behavior and is the default.
      Setting this option to false may be useful when it is only necessary to
      vacuum the main relation. This option is required when the
      <literal>FULL</literal> option is used.
     </para>
<!-- pgdoc-cn_end sig_en=eeb00b781b1bb20a4ec88665059fd946 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>TRUNCATE</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=df7eb0e312e330eb2efa4cfdfd65b61f sig_cn_org=None source=14.1 
     <para>
      Specifies that <command>VACUUM</command> should attempt to
      truncate off any empty pages at the end of the table and allow
      the disk space for the truncated pages to be returned to
      the operating system. This is normally the desired behavior
      and is the default unless the <literal>vacuum_truncate</literal>
      option has been set to false for the table to be vacuumed.
      Setting this option to false may be useful to avoid
      <literal>ACCESS EXCLUSIVE</literal> lock on the table that
      the truncation requires. This option is ignored if the
      <literal>FULL</literal> option is used.
     </para>
________________________________________________________-->
     <para>
      指定<command>VACUUM</command>尝试截断表末尾的任何空页，并允许将截断页的磁盘空间返回到操作系统。
      这通常是所需的行为，并且是默认行为，除非将<literal>vacuum_truncate</literal>选项设置为 false，对要被清空的表。
      将此选项设置为 false 可能有助于避免<literal>ACCESS EXCLUSIVE</literal>锁定需要截断的表。如果使用<literal>FULL</literal>选项，则忽略此选项。
     </para>
<!-- pgdoc-cn_end sig_en=df7eb0e312e330eb2efa4cfdfd65b61f -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>PARALLEL</literal></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=e566725acec7480b94c9b411cbfd022d sig_cn_org=None source=14.1 
     <para>
      Perform index vacuum and index cleanup phases of <command>VACUUM</command>
      in parallel using <replaceable class="parameter">integer</replaceable>
      background workers (for the details of each vacuum phase, please
      refer to <xref linkend="vacuum-phases"/>).  The number of workers used
      to perform the operation is equal to the number of indexes on the
      relation that support parallel vacuum which is limited by the number of
      workers specified with <literal>PARALLEL</literal> option if any which is
      further limited by <xref linkend="guc-max-parallel-maintenance-workers"/>.
      An index can participate in parallel vacuum if and only if the size of the
      index is more than <xref linkend="guc-min-parallel-index-scan-size"/>.
      Please note that it is not guaranteed that the number of parallel workers
      specified in <replaceable class="parameter">integer</replaceable> will be
      used during execution.  It is possible for a vacuum to run with fewer
      workers than specified, or even with no workers at all.  Only one worker
      can be used per index.  So parallel workers are launched only when there
      are at least <literal>2</literal> indexes in the table.  Workers for
      vacuum are launched before the start of each phase and exit at the end of
      the phase.  These behaviors might change in a future release.  This
      option can't be used with the <literal>FULL</literal> option.
     </para>
________________________________________________________-->
     <para>
      使用<replaceable class="parameter">integer</replaceable>后台处理器并行执行<command>VACUUM</command>
      的索引真空和索引清理阶段（每个真空阶段的详细信息请参考<xref linkend="vacuum-phases"/>)）。
      用于执行操作的处理器数量等于关系上支持并行清理的索引数量，该数量受<literal>PARALLEL</literal>
      选项指定的工人数量的限制，如果有的话，该数量还受到<xref linkend="guc-max-parallel-maintenance-workers"/>限制。
      当且仅当索引的大小大于<xref linkend="guc-min-parallel-index-scan-size"/>时，索引才能参与并行清理。
      请注意，不保证在执行期间会使用<replaceable class="parameter">integer</replaceable>中指定的并行工作线程数。
      清理运行时可能需要比指定的更少的处理器，甚至根本没有处理器。每个索引只能使用一名处理器。
      所以只有当表中至少有<literal>2</literal>索引时才会启动并行工作程序。
      在每个阶段开始之前启动清理工作进程，并在阶段结束时退出。这些行为可能会在未来的版本中发生变化。
      此选项不能与<literal>FULL</literal>选项一起使用。
     </para>
<!-- pgdoc-cn_end sig_en=e566725acec7480b94c9b411cbfd022d -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">boolean</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=8bf72cd4d6f8014b82e3bee2e1efc117 sig_cn_org=None source=14.1 
     <para>
      Specifies whether the selected option should be turned on or off.
      You can write <literal>TRUE</literal>, <literal>ON</literal>, or
      <literal>1</literal> to enable the option, and <literal>FALSE</literal>,
      <literal>OFF</literal>, or <literal>0</literal> to disable it.  The
      <replaceable class="parameter">boolean</replaceable> value can also
      be omitted, in which case <literal>TRUE</literal> is assumed.
     </para>
________________________________________________________-->
     <para>
      指定打开还是关闭所选选项。你可以写入<literal>TRUE</literal>、<literal>ON</literal>或<literal>1</literal>以启用该选项，以及<literal>FALSE</literal>、<literal>OFF</literal>或<literal>0</literal>来禁用它。
      在<literal>TRUE</literal>被假定的情况下，<replaceable class="parameter">boolean</replaceable> 值也可以被省略。
     </para>
<!-- pgdoc-cn_end sig_en=8bf72cd4d6f8014b82e3bee2e1efc117 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">integer</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=6201cbb5f46b3879153319225c301a17 sig_cn_org=None source=14.1 
     <para>
      Specifies a non-negative integer value passed to the selected option.
     </para>
________________________________________________________-->
     <para>
      指定传递给所选选项的非负整数值。
     </para>
<!-- pgdoc-cn_end sig_en=6201cbb5f46b3879153319225c301a17 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">table_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=23d9c3350aa605a5809f2f0800a896b1 sig_cn_org=None source=14.1 
     <para>
      The name (optionally schema-qualified) of a specific table or
      materialized view to vacuum.  If the specified table is a partitioned
      table, all of its leaf partitions are vacuumed.
     </para>
________________________________________________________-->
     <para>
      要清理的表或物化视图的名称（可以有模式修饰）。如果指定的表示一个分区表，则它所有的叶子分区也会被清理。
     </para>
<!-- pgdoc-cn_end sig_en=23d9c3350aa605a5809f2f0800a896b1 -->
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">column_name</replaceable></term>
    <listitem>
<!-- pgdoc-cn_start sig_en=c9f67211e848158db83c98959024fd8c sig_cn_org=None source=14.1 
     <para>
      The name of a specific column to analyze. Defaults to all columns.
      If a column list is specified, <literal>ANALYZE</literal> must also be
      specified.
     </para>
________________________________________________________-->
     <para>
      要分析的指定列的名称。缺省是所有列。如果指定了一个列的列表，则<literal>ANALYZE</literal>也必须被指定。
     </para>
<!-- pgdoc-cn_end sig_en=c9f67211e848158db83c98959024fd8c -->
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=83a929047ae9374bbfd2aa827d90c66a sig_cn_org=None source=14.1 
  <title>Outputs</title>
________________________________________________________-->
  <title>输出</title>
<!-- pgdoc-cn_end sig_en=83a929047ae9374bbfd2aa827d90c66a -->

<!-- pgdoc-cn_start sig_en=4420d4f3a3b140b4b77ac4351fd0361b sig_cn_org=None source=14.1 
   <para>
    When <literal>VERBOSE</literal> is specified, <command>VACUUM</command> emits
    progress messages to indicate which table is currently being
    processed.  Various statistics about the tables are printed as well.
   </para>
________________________________________________________-->
   <para>
    如果声明了<literal>VERBOSE</literal>，<command>VACUUM</command>会发出进度消息来表明当前正在处理哪个表。各种有关这些表的统计信息也会打印出来。
   </para>
<!-- pgdoc-cn_end sig_en=4420d4f3a3b140b4b77ac4351fd0361b -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 sig_cn_org=None source=14.1 
  <title>Notes</title>
________________________________________________________-->
  <title>注意</title>
<!-- pgdoc-cn_end sig_en=c44fa43baeb4f69a8a2aa1ea108c6e97 -->

<!-- pgdoc-cn_start sig_en=667f22235df9aeb6f168582fd86332a6 sig_cn_org=None source=14.1 
   <para>
    To vacuum a table, one must ordinarily be the table's owner or a
    superuser.  However, database owners are allowed to
    vacuum all tables in their databases, except shared catalogs.
    (The restriction for shared catalogs means that a true database-wide
    <command>VACUUM</command> can only be performed by a superuser.)
    <command>VACUUM</command> will skip over any tables that the calling user
    does not have permission to vacuum.
   </para>
________________________________________________________-->
   <para>
    要清理一个表，操作者通常必须是表的拥有者或者超级用户。但是，数据库拥有者被允许清理他们的数据库中除了共享目录之外的所有表（对于共享目录的限制意味着一个真正的数据库范围的<command>VACUUM</command>只能被超级用户执行）。<command>VACUUM</command>将会跳过执行者不具备清理权限的表。
   </para>
<!-- pgdoc-cn_end sig_en=667f22235df9aeb6f168582fd86332a6 -->

<!-- pgdoc-cn_start sig_en=6b2a659668bd89c0265d6477886eb57b sig_cn_org=None source=14.1 
   <para>
    <command>VACUUM</command> cannot be executed inside a transaction block.
   </para>
________________________________________________________-->
   <para>
    <command>VACUUM</command>不能在一个事务块内被执行。
   </para>
<!-- pgdoc-cn_end sig_en=6b2a659668bd89c0265d6477886eb57b -->

<!-- pgdoc-cn_start sig_en=36b1b2a5f22f90c3ce6f1209ab3d5f74 sig_cn_org=None source=14.1 
   <para>
    For tables with <acronym>GIN</acronym> indexes, <command>VACUUM</command> (in
    any form) also completes any pending index insertions, by moving pending
    index entries to the appropriate places in the main <acronym>GIN</acronym> index
    structure.  See <xref linkend="gin-fast-update"/> for details.
   </para>
________________________________________________________-->
   <para>
    对具有<acronym>GIN</acronym>索引的表，<command>VACUUM</command>（任何形式）也会通过将待处理索引项移动到主要<acronym>GIN</acronym>索引结构中的合适位置来完成任何待处理的索引插入。详见<xref linkend="gin-fast-update"/>。
   </para>
<!-- pgdoc-cn_end sig_en=36b1b2a5f22f90c3ce6f1209ab3d5f74 -->

<!-- pgdoc-cn_start sig_en=988bd70cc186351862c4831846ac28be sig_cn_org=ee1e14a04d356a6a0b69e22bd841a6d3 source=15.7 
   <para>
    We recommend that all databases be vacuumed regularly in
    order to remove dead rows.  <productname>PostgreSQL</productname> includes
    an <quote>autovacuum</quote> facility which can automate routine vacuum
    maintenance.  For more information about automatic and manual vacuuming,
    see <xref linkend="routine-vacuuming"/>.
   </para>
________________________________________________________-->
   <para>
    我们建议定期对所有数据库进行清理，以删除死行。 <productname>PostgreSQL</productname> 包括一个<quote>autovacuum</quote> 设施，可以自动化常规清理维护。有关自动和手动清理的更多信息，请参阅<xref linkend="routine-vacuuming"/>。
</para>
<!-- pgdoc-cn_end sig_en=988bd70cc186351862c4831846ac28be -->

<!-- pgdoc-cn_start sig_en=4c4281962b254c819e95be5d2a51a0fd sig_cn_org=None source=14.1 
   <para>
    The <option>FULL</option> option is not recommended for routine use,
    but might be useful in special cases.  An example is when you have deleted
    or updated most of the rows in a table and would like the table to
    physically shrink to occupy less disk space and allow faster table
    scans. <command>VACUUM FULL</command> will usually shrink the table
    more than a plain <command>VACUUM</command> would.
   </para>
________________________________________________________-->
   <para>
    日常使用时，不推荐<option>FULL</option>选项，但在特殊情况时它会有用。一个例子是当你删除或者更新了一个表中的绝大部分行时，如果你希望在物理上收缩表以减少磁盘空间占用并且允许更快的表扫描，则该选项是比较合适的。<command>VACUUM FULL</command>通常会比简单<command>VACUUM</command>更多地收缩表。
   </para>
<!-- pgdoc-cn_end sig_en=4c4281962b254c819e95be5d2a51a0fd -->

<!-- pgdoc-cn_start sig_en=427863035cd90d9a7a4b1dc7356b1551 sig_cn_org=None source=14.1 
   <para>
     The <option>PARALLEL</option> option is used only for vacuum purposes.
     If this option is specified with the <option>ANALYZE</option> option,
     it does not affect <option>ANALYZE</option>.
   </para>
________________________________________________________-->
   <para>
     <option>PARALLEL</option>选项仅用于清理目的。如果此选项与<option>ANALYZE</option>选项一起指定，则不会影响<option>ANALYZE</option>。
   </para>
<!-- pgdoc-cn_end sig_en=427863035cd90d9a7a4b1dc7356b1551 -->

<!-- pgdoc-cn_start sig_en=e10351d859d240fa95041ef53c453e0f sig_cn_org=None source=14.1 
   <para>
    <command>VACUUM</command> causes a substantial increase in I/O traffic,
    which might cause poor performance for other active sessions.  Therefore,
    it is sometimes advisable to use the cost-based vacuum delay feature.  For
    parallel vacuum, each worker sleeps in proportion to the work done by that
    worker.  See <xref linkend="runtime-config-resource-vacuum-cost"/> for
    details.
   </para>
________________________________________________________-->
   <para>
    <command>VACUUM</command>会导致I/O流量的大幅度增加，这可能导致其他活动会话性能变差。因此，有时建议使用基于代价的清理延迟特性。
    对于并行清理，每个处理器的睡眠与该处理器完成的工作成比例。详情请参阅<xref linkend="runtime-config-resource-vacuum-cost"/>。
   </para>
<!-- pgdoc-cn_end sig_en=e10351d859d240fa95041ef53c453e0f -->

<!-- pgdoc-cn_start sig_en=65ec037f898631cf403bedff40c78482 sig_cn_org=None source=14.1 
   <para>
    Each backend running <command>VACUUM</command> without the
    <literal>FULL</literal> option will report its progress in the
    <structname>pg_stat_progress_vacuum</structname> view. Backends running
    <command>VACUUM FULL</command> will instead report their progress in the
    <structname>pg_stat_progress_cluster</structname> view. See
    <xref linkend="vacuum-progress-reporting"/> and
    <xref linkend="cluster-progress-reporting"/> for details.
   </para>
________________________________________________________-->
   <para>
    每个后端运行没有<literal>FULL</literal>选项的<command>VACUUM</command>时，将在<structname>pg_stat_progress_vacuum</structname>视图中报告它的进度。
    运行<command>VACUUM FULL</command>的后端将改为在<structname>pg_stat_progress_cluster</structname>视图中报告它的进度。
    详见<xref linkend="vacuum-progress-reporting"/> 和 <xref linkend="cluster-progress-reporting"/>。
   </para>
<!-- pgdoc-cn_end sig_en=65ec037f898631cf403bedff40c78482 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d sig_cn_org=None source=14.1 
  <title>Examples</title>
________________________________________________________-->
  <title>例子</title>
<!-- pgdoc-cn_end sig_en=8f24ed0a9e4d47ffa2be9a1f3e09fa6d -->

<!-- pgdoc-cn_start sig_en=06d5d3997e23528c902ae84a3dc1cba0 sig_cn_org=None source=14.1 
  <para>
   To clean a single table <literal>onek</literal>, analyze it for
   the optimizer and print a detailed vacuum activity report:

<programlisting>
VACUUM (VERBOSE, ANALYZE) onek;
</programlisting></para>
________________________________________________________-->
  <para>
   清理单一表<literal>onek</literal>，为优化器分析它并且打印出详细的清理活动报告：

<programlisting>
VACUUM (VERBOSE, ANALYZE) onek;
</programlisting></para>
<!-- pgdoc-cn_end sig_en=06d5d3997e23528c902ae84a3dc1cba0 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=b38d493f3c2d2d5d9a7a49d257da9811 sig_cn_org=None source=14.1 
  <title>Compatibility</title>
________________________________________________________-->
  <title>兼容性</title>
<!-- pgdoc-cn_end sig_en=b38d493f3c2d2d5d9a7a49d257da9811 -->

<!-- pgdoc-cn_start sig_en=a719ef4b9e630076429f73ab2f4ef7b1 sig_cn_org=None source=14.1 
  <para>
   There is no <command>VACUUM</command> statement in the SQL standard.
  </para>
________________________________________________________-->
  <para>
   在SQL标准中没有<command>VACUUM</command>语句。
  </para>
<!-- pgdoc-cn_end sig_en=a719ef4b9e630076429f73ab2f4ef7b1 -->
 </refsect1>

 <refsect1>
<!-- pgdoc-cn_start sig_en=8b7cc214676b443e6527e3d6bf054420 sig_cn_org=None source=14.1 
  <title>See Also</title>
________________________________________________________-->
  <title>参见</title>
<!-- pgdoc-cn_end sig_en=8b7cc214676b443e6527e3d6bf054420 -->

  <simplelist type="inline">
   <member><xref linkend="app-vacuumdb"/></member>
   <member><xref linkend="runtime-config-resource-vacuum-cost"/></member>
   <member><xref linkend="autovacuum"/></member>
   <member><xref linkend="vacuum-progress-reporting"/></member>
   <member><xref linkend="cluster-progress-reporting"/></member>
  </simplelist>
 </refsect1>
</refentry>
