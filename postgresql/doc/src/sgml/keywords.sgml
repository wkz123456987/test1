<!-- doc/src/sgml/keywords.sgml -->

<appendix id="sql-keywords-appendix">
<!-- pgdoc-cn_start sig_en=30c309740c790857f313067ee40a0869 sig_cn_org=None source=14.1 
 <title><acronym>SQL</acronym> Key Words</title>
________________________________________________________-->
 <title><acronym>SQL</acronym>关键词</title>
<!-- pgdoc-cn_end sig_en=30c309740c790857f313067ee40a0869 -->

<!-- pgdoc-cn_start sig_en=8f86db4b872af6a8371ce901e3c64c8f sig_cn_org=None source=14.1 
 <indexterm zone="sql-keywords-appendix">
  <primary>key word</primary>
  <secondary>list of</secondary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sql-keywords-appendix">
  <primary>key word</primary>
  <secondary>list of</secondary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=8f86db4b872af6a8371ce901e3c64c8f -->

<!-- pgdoc-cn_start sig_en=770b3796e555d02d1b372695552c20e0 sig_cn_org=None source=14.1 
 <para>
  <xref linkend="keywords-table"/> lists all tokens that are key words
  in the SQL standard and in <productname>PostgreSQL</productname>
  &version;.  Background information can be found in <xref
  linkend="sql-syntax-identifiers"/>.
  (For space reasons, only the latest two versions of the SQL standard, and
  SQL-92 for historical comparison, are included.  The differences between
  those and the other intermediate standard versions are small.)
 </para>
________________________________________________________-->
 <para>
  <xref linkend="keywords-table"/>列出了在SQL标准以及<productname>PostgreSQL</productname> &version;中作为关键词的所有记号。背景资料可以在<xref linkend="sql-syntax-identifiers"/>中找到（由于篇幅的缘故，只包括了SQL标准的最近两个版本以及用于与历史比较的SQL-92。这些版本以及其他中间标准的版本之间的差别很小）。
 </para>
<!-- pgdoc-cn_end sig_en=770b3796e555d02d1b372695552c20e0 -->

<!-- pgdoc-cn_start sig_en=6b97124094409f28913792be3c358989 sig_cn_org=None source=14.1 
 <para>
  SQL distinguishes between <firstterm>reserved</firstterm> and
  <firstterm>non-reserved</firstterm> key words.  According to the standard,
  reserved key words
  are the only real key words; they are never allowed as identifiers.
  Non-reserved key words only have a special meaning in particular
  contexts and can be used as identifiers in other contexts.  Most
  non-reserved key words are actually the names of built-in tables
  and functions specified by SQL.  The concept of non-reserved key
  words essentially only exists to declare that some predefined meaning
  is attached to a word in some contexts.
 </para>
________________________________________________________-->
 <para>
  SQL区分<firstterm>保留</firstterm>关键词和<firstterm>非保留</firstterm>关键词。根据标准，保留关键词才是真正的关键词，它们绝不会被允许作为标识符。非关键词仅仅是在特定上下文中具有特殊的含义并且可以在其他上下文中被用作标识符。大部分非保留关键词实际上是SQL指定的内建表和内建函数的名字。非保留关键词的概念存在的意义上实际上是声明某些上下文中的一个词被附加了某种预定义的含义。
 </para>
<!-- pgdoc-cn_end sig_en=6b97124094409f28913792be3c358989 -->

<!-- pgdoc-cn_start sig_en=c1741089bee99e09c48d5d986c28d380 sig_cn_org=None source=14.1 
 <para>
  In the <productname>PostgreSQL</productname> parser, life is a bit
  more complicated. There are several different classes of tokens
  ranging from those that can never be used as an identifier to those
  that have absolutely no special status in the parser, but are considered
  ordinary identifiers.  (The latter is usually the case for
  functions specified by SQL.)  Even reserved key words are not
  completely reserved in <productname>PostgreSQL</productname>, but
  can be used as column labels (for example, <literal>SELECT 55 AS
  CHECK</literal>, even though <token>CHECK</token> is a reserved key
  word).
 </para>
________________________________________________________-->
 <para>
  在<productname>PostgreSQL</productname>的解析器中，情况更加复杂。其中有多种不同的记号分类，从那些决不能被用作标识符的记号到那些在解析器中绝对没有特殊状态，但被认为是普通的标识符。（后者通常是SQL中指定的函数）。在<productname>PostgreSQL</productname>中甚至保留关键词也不是完全被保留的，而是可以被用作列标签（例如可以写<literal>SELECT 55 AS
  CHECK</literal>，虽然<token>CHECK</token>是一个保留关键词）。
 </para>
<!-- pgdoc-cn_end sig_en=c1741089bee99e09c48d5d986c28d380 -->

<!-- pgdoc-cn_start sig_en=eb7d5b5cd73017e3be5d84270e87c780 sig_cn_org=None source=14.1 
 <para>
  In <xref linkend="keywords-table"/> in the column for
  <productname>PostgreSQL</productname> we classify as
  <quote>non-reserved</quote> those key words that are explicitly
  known to the parser but are allowed as column or table names.
  Some key words that are otherwise
  non-reserved cannot be used as function or data type names and are
  marked accordingly.  (Most of these words represent built-in
  functions or data types with special syntax.  The function or type
  is still available but it cannot be redefined by the user.)  Labeled
  <quote>reserved</quote> are those tokens that are not allowed as
  column or table names.  Some reserved key words are
  allowable as names for functions or data types; this is also shown in the
  table.  If not so marked, a reserved key word is only allowed as a
  column label.
  A blank entry in this column means that the word is treated as an
  ordinary identifier by <productname>PostgreSQL</productname>.
 </para>
________________________________________________________-->
 <para>
  在<xref linkend="keywords-table"/>的<productname>PostgreSQL</productname>列中，我们把解析器明确知道但允许作为列名或者表名的那些关键词分类为<quote>非保留</quote>。有一些关键词是非保留的，但是不能被用作函数或数据类型名称，因此它们会被标记（大部分这些词表示有特殊语法的内建函数或数据类型。这种函数或类型仍然可用，但是不能被用户重新定义）。不允许作为列名或表名的记号被打上<quote>保留</quote>的标签。某些保留关键词被允许作为函数或数据类型的名字，这也显示在该表中。如果没有被那样标记，保留关键词仅被允许作为列标签。
  这一列的空白项意味着这个词被<productname>PostgreSQL</productname>当作一个普通的标识符。
 </para>
<!-- pgdoc-cn_end sig_en=eb7d5b5cd73017e3be5d84270e87c780 -->

<!-- pgdoc-cn_start sig_en=bb7108110149e4c387496eda09e5b827 sig_cn_org=None source=14.1 
 <para>
  Furthermore, while most key words can be used as <quote>bare</quote>
  column labels without writing <literal>AS</literal> before them (as
  described in <xref linkend="queries-column-labels"/>), there are a few
  that require a leading <literal>AS</literal> to avoid ambiguity.  These
  are marked in the table as <quote>requires <literal>AS</literal></quote>.
 </para>
________________________________________________________-->
 <para>
   此外，虽然大多数关键词可以用作<quote>bare</quote>列标签，而不用在它们前面写<literal>AS</literal>（如<xref linkend="queries-column-labels"/>中描述的那样），但有一些需要在前面加上<literal>AS</literal>以避免歧义。 这些在表中被标记为<quote>requires <literal>AS</literal></quote>。
  </para>
<!-- pgdoc-cn_end sig_en=bb7108110149e4c387496eda09e5b827 -->

<!-- pgdoc-cn_start sig_en=7d3f38c10af3c04783c0875ae77b918e sig_cn_org=None source=14.1 
 <para>
  As a general rule, if you get spurious parser errors for commands
  that use any of the listed key words as an identifier, you should
  try quoting the identifier to see if the problem goes away.
 </para>
________________________________________________________-->
 <para>
  一般来说，如果你在使用任何所列出关键词作为标识符的命令，遇到虚假的解析器错误，应该尝试将该标识符加上引号来看看是否能解决问题。
 </para>
<!-- pgdoc-cn_end sig_en=7d3f38c10af3c04783c0875ae77b918e -->

<!-- pgdoc-cn_start sig_en=d9ff554bfefb0c171e0127e14486d45b sig_cn_org=None source=14.1 
 <para>
  It is important to understand before studying <xref
  linkend="keywords-table"/> that the fact that a key word is not
  reserved in <productname>PostgreSQL</productname> does not mean that
  the feature related to the word is not implemented.  Conversely, the
  presence of a key word does not indicate the existence of a feature.
 </para>
________________________________________________________-->
 <para>
  在学习<xref linkend="keywords-table"/>之前有一件重要的事情是理解一个在<productname>PostgreSQL</productname>中不被保留的关键字并不意味着与该词相关的特性没有被实现。反过来，一个关键词的存在也不表示相应特性的存在。
 </para>
<!-- pgdoc-cn_end sig_en=d9ff554bfefb0c171e0127e14486d45b -->

 &keywords-table;

</appendix>
