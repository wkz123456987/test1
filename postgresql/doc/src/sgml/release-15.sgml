<!-- doc/src/sgml/release-15.sgml -->
<!-- See header comment in release.sgml about typical markup -->

 <sect1 id="release-15-7">
<!-- pgdoc-cn_start sig_en=a408a12668428376bc650f24a9926f3d sig_cn_org=906d740a1d48174dcbb5a96d54cfab6d source=15.7 
  <title>Release 15.7</title>
________________________________________________________-->
  <title>发布版本 15.7</title>
<!-- pgdoc-cn_end sig_en=a408a12668428376bc650f24a9926f3d -->

  <formalpara>
<!-- pgdoc-cn_start sig_en=c45e8127eac45f2347bf1713afaeffda sig_cn_org=253305b4c6dff5b87ef36e3c2d95e52e source=15.7 
  <title>Release date:</title>
________________________________________________________-->
  <title>发布日期：</title>
<!-- pgdoc-cn_end sig_en=c45e8127eac45f2347bf1713afaeffda -->
<!-- pgdoc-cn_start sig_en=b16e422c52b7b859b8aac4d621ece8ad sig_cn_org=a960ebb84d5af2bf0dfee75525350c69 source=15.7 
  <para>2024-05-09</para>
________________________________________________________-->
  <para>2024年5月9日</para>
<!-- pgdoc-cn_end sig_en=b16e422c52b7b859b8aac4d621ece8ad -->
  </formalpara>

<!-- pgdoc-cn_start sig_en=2b8daf45edc3f76416a3c4c6f7f33aa8 sig_cn_org=82bb4e2bff619dcaec68a28a3e90ff15 source=15.7 
  <para>
   This release contains a variety of fixes from 15.6.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>
________________________________________________________-->
  <para>
   这个版本包含了从15.6版本中修复的各种问题。
   有关主要版本15中新功能的信息，请参见<xref linkend="release-15"/>。
</para>
<!-- pgdoc-cn_end sig_en=2b8daf45edc3f76416a3c4c6f7f33aa8 -->

  <sect2>
<!-- pgdoc-cn_start sig_en=1629efb632c7a0def285d3ec14551fe8 sig_cn_org=9195a994f551239415fb8d0243ef9d9b source=15.7 
   <title>Migration to Version 15.7</title>
________________________________________________________-->
   <title>升级到版本15.7</title>
<!-- pgdoc-cn_end sig_en=1629efb632c7a0def285d3ec14551fe8 -->

<!-- pgdoc-cn_start sig_en=036ed5117c7b85420fc61cc5e5b99f8b sig_cn_org=992c4bf77211ba6013c0d564cef911c0 source=15.7 
   <para>
    A dump/restore is not required for those running 15.X.
   </para>
________________________________________________________-->
   <para>
    对于运行15.X版本的用户，不需要进行dump/restore操作。
   </para>
<!-- pgdoc-cn_end sig_en=036ed5117c7b85420fc61cc5e5b99f8b -->

<!-- pgdoc-cn_start sig_en=dadd1a8142768ead558fa2381ca6a62f sig_cn_org=55fd88a2c64ae81044bef949c58b9db6 source=15.7 
   <para>
    However, a security vulnerability was found in the system
    views <structname>pg_stats_ext</structname>
    and <structname>pg_stats_ext_exprs</structname>, potentially allowing
    authenticated database users to see data they shouldn't.  If this is
    of concern in your installation, follow the steps in the first
    changelog entry below to rectify it.
   </para>
________________________________________________________-->
   <para>
    然而，在系统视图<structname>pg_stats_ext</structname>和<structname>pg_stats_ext_exprs</structname>中发现了一个安全漏洞，
    可能允许经过身份验证的数据库用户查看他们不应该看到的数据。如果这在您的安装中是一个问题，请按照下面第一个变更日志条目中的步骤进行纠正。
   </para>
<!-- pgdoc-cn_end sig_en=dadd1a8142768ead558fa2381ca6a62f -->

<!-- pgdoc-cn_start sig_en=97390fd7e34e685253b9fd5f04495368 sig_cn_org=036442b0a5884a3e0a9ecd86895dde5b source=15.7 
   <para>
    Also, if you are upgrading from a version earlier than 15.6,
    see <xref linkend="release-15-6"/>.
   </para>
________________________________________________________-->
   <para>
    另外，如果您正在从早于15.6版本升级，请参见<xref linkend="release-15-6"/>。
   </para>
<!-- pgdoc-cn_end sig_en=97390fd7e34e685253b9fd5f04495368 -->
  </sect2>

  <sect2>
<!-- pgdoc-cn_start sig_en=e161fef38e54e54458e215e5f978ef9b sig_cn_org=f104d50dd9d4dd802f94229ebe5bc097 source=15.7 
   <title>Changes</title>
________________________________________________________-->
   <title>变更</title>
<!-- pgdoc-cn_end sig_en=e161fef38e54e54458e215e5f978ef9b -->

   <itemizedlist>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [521a7156a] 2024-05-06 09:00:00 -0500
Branch: REL_16_STABLE [2485a85e9] 2024-05-06 09:00:07 -0500
Branch: REL_15_STABLE [9cc2b6289] 2024-05-06 09:00:13 -0500
Branch: REL_14_STABLE [c3425383b] 2024-05-06 09:00:19 -0500
-->
<!-- pgdoc-cn_start sig_en=a06b7cc2411d52b21c69716057a9a73b sig_cn_org=70a3564310d4de508f6d4d097fb856e5 source=15.7 
     <para>
      Restrict visibility of <structname>pg_stats_ext</structname> and
      <structname>pg_stats_ext_exprs</structname> entries to the table
      owner (Nathan Bossart)
     </para>
________________________________________________________-->
     <para>
      限制<structname>pg_stats_ext</structname>和<structname>pg_stats_ext_exprs</structname>条目的可见性，仅限于表所有者（Nathan Bossart）
     </para>
<!-- pgdoc-cn_end sig_en=a06b7cc2411d52b21c69716057a9a73b -->

<!-- pgdoc-cn_start sig_en=e82516039167c5857946e55f5d0f27cd sig_cn_org=74a9bcae686f6874bb2061df02d80621 source=15.7 
     <para>
      These views failed to hide statistics for expressions that involve
      columns the accessing user does not have permission to read.  View
      columns such as <structfield>most_common_vals</structfield> might
      expose security-relevant data.  The potential interactions here are
      not fully clear, so in the interest of erring on the side of safety,
      make rows in these views visible only to the owner of the associated
      table.
     </para>
________________________________________________________-->
     <para>
      这些视图未能隐藏涉及访问用户无权读取的列的表达式的统计信息。视图列，如
      <structfield>most_common_vals</structfield>，可能会暴露与安全相关的数据。
      这里的潜在交互作用还不完全清楚，因此为了安全起见，将这些视图中的行
      仅对关联表的所有者可见。
     </para>
<!-- pgdoc-cn_end sig_en=e82516039167c5857946e55f5d0f27cd -->

<!-- pgdoc-cn_start sig_en=3a8a81b82725bcc8a7f1971160d8c4c9 sig_cn_org=26b5f82018c12187eefc53d8fd378797 source=15.7 
     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Lukas Fittl for reporting this problem.
      (CVE-2024-4317)
     </para>
________________________________________________________-->
     <para>
      <productname>PostgreSQL</productname>项目感谢Lukas Fittl报告了这个问题。
      (CVE-2024-4317)
     </para>
<!-- pgdoc-cn_end sig_en=3a8a81b82725bcc8a7f1971160d8c4c9 -->

<!-- pgdoc-cn_start sig_en=94eaeef5b8808dc344868b75a2c2b186 sig_cn_org=1f2c6556252d4c36c931bbcae9236d1c source=15.7 
     <para>
      By itself, this fix will only fix the behavior in newly initdb'd
      database clusters.  If you wish to apply this change in an existing
      cluster, you will need to do the following:
     </para>
________________________________________________________-->
     <para>
      单独使用，这个修复只会修复在新初始化的数据库集群中的行为。如果您希望在现有集群中应用此更改，您需要执行以下操作：
     </para>
<!-- pgdoc-cn_end sig_en=94eaeef5b8808dc344868b75a2c2b186 -->

     <procedure>
      <step>
<!-- pgdoc-cn_start sig_en=4c8b1d4701ef6842b15aeaab11dacbc2 sig_cn_org=a0840a811bfa475dd0889e9c05a1c8d6 source=15.7 
       <para>
        Find the SQL script <filename>fix-CVE-2024-4317.sql</filename> in
        the <replaceable>share</replaceable> directory of
        the <productname>PostgreSQL</productname> installation (typically
        located someplace like <filename>/usr/share/postgresql/</filename>).
        Be sure to use the script appropriate to
        your <productname>PostgreSQL</productname> major version.
        If you do not see this file, either your version is not vulnerable
        (only v14&ndash;v16 are affected) or your minor version is too
        old to have the fix.
       </para>
________________________________________________________-->
       <para>
        在<replaceable>share</replaceable>目录中找到<filename>fix-CVE-2024-4317.sql</filename>
        SQL脚本，该目录位于<productname>PostgreSQL</productname>安装目录中
        （通常类似于<filename>/usr/share/postgresql/</filename>）。确保使用适用于
        您的<productname>PostgreSQL</productname>主要版本的脚本。如果您找不到此文件，
        则可能您的版本不受影响（仅v14-v16受影响），或者您的次要版本太旧无法修复。
       </para>
<!-- pgdoc-cn_end sig_en=4c8b1d4701ef6842b15aeaab11dacbc2 -->
      </step>

      <step>
<!-- pgdoc-cn_start sig_en=bb77069739b776223a730c0a67da37b7 sig_cn_org=cb30517b3d9a44f4a3ab0e993319a173 source=15.7 
       <para>
        In <emphasis>each</emphasis> database of the cluster, run
        the <filename>fix-CVE-2024-4317.sql</filename> script as superuser.
        In <application>psql</application> this would look like
<programlisting>
\i /usr/share/postgresql/fix-CVE-2024-4317.sql
</programlisting>
        (adjust the file path as appropriate).  Any error probably indicates
        that you've used the wrong script version.  It will not hurt to run
        the script more than once.
       </para>
________________________________________________________-->
       <para>
        在集群的<emphasis>每个</emphasis>数据库中，以超级用户身份运行<filename>fix-CVE-2024-4317.sql</filename>脚本。
        在<application>psql</application>中，看起来像是
<programlisting>
\i /usr/share/postgresql/fix-CVE-2024-4317.sql
</programlisting>
        （根据需要调整文件路径）。任何错误可能表明您使用了错误的脚本版本。多次运行脚本不会有害。
       </para>
<!-- pgdoc-cn_end sig_en=bb77069739b776223a730c0a67da37b7 -->
      </step>

      <step>
<!-- pgdoc-cn_start sig_en=2e263f6a348e41fe1ce3d40a580d1460 sig_cn_org=2117addd5d56a73f56331020d2dd6a58 source=15.7 
       <para>
        Do not forget to include the <literal>template0</literal>
        and <literal>template1</literal> databases, or the vulnerability
        will still exist in databases you create later.  To
        fix <literal>template0</literal>, you'll need to temporarily make
        it accept connections.  Do that with
<programlisting>
ALTER DATABASE template0 WITH ALLOW_CONNECTIONS true;
</programlisting>
        and then after fixing <literal>template0</literal>, undo it with
<programlisting>
ALTER DATABASE template0 WITH ALLOW_CONNECTIONS false;
</programlisting>
       </para>
________________________________________________________-->
       <para>
        不要忘记包含<literal>template0</literal>和<literal>template1</literal>数据库，否则漏洞仍将存在于您稍后创建的数据库中。要修复<literal>template0</literal>，您需要暂时允许它接受连接。使用以下命令进行操作：
<programlisting>
ALTER DATABASE template0 WITH ALLOW_CONNECTIONS true;
</programlisting>
        然后在修复<literal>template0</literal>后，使用以下命令撤消：
<programlisting>
ALTER DATABASE template0 WITH ALLOW_CONNECTIONS false;
</programlisting>
       </para>
<!-- pgdoc-cn_end sig_en=2e263f6a348e41fe1ce3d40a580d1460 -->
      </step>
     </procedure>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b4a71cf65] 2024-03-14 14:57:16 -0400
Branch: REL_16_STABLE [52898c63e] 2024-03-14 14:57:16 -0400
Branch: REL_15_STABLE [7c61d2342] 2024-03-14 14:57:16 -0400
Branch: REL_14_STABLE [3621ffd9f] 2024-03-14 14:57:16 -0400
Branch: REL_13_STABLE [0200398dd] 2024-03-14 14:57:16 -0400
Branch: REL_12_STABLE [82c87af7a] 2024-03-14 14:57:16 -0400
-->
<!-- pgdoc-cn_start sig_en=7b88c7e2be25d141a8dc6623430d6dcd sig_cn_org=daf48853bf7eafffc8aad1a07385946d source=15.7 
     <para>
      Fix <command>INSERT</command> from
      multiple <command>VALUES</command> rows into a target column that is
      a domain over an array or composite type (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<command>INSERT</command>从多个<command>VALUES</command>行插入到目标列，该列是数组或复合类型上的域。（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=7b88c7e2be25d141a8dc6623430d6dcd -->

<!-- pgdoc-cn_start sig_en=c2cc329d80876164f5f17f598d67735d sig_cn_org=5d1032a926f5030141de519b3d2ce5af source=15.7 
     <para>
      Such cases would either fail with surprising complaints about
      mismatched datatypes, or insert unexpected coercions that could lead
      to odd results.
     </para>
________________________________________________________-->
     <para>
      这种情况要么会因为不匹配的数据类型而失败，导致令人惊讶的投诉，要么会插入意外的强制转换，可能导致奇怪的结果。
     </para>
<!-- pgdoc-cn_end sig_en=c2cc329d80876164f5f17f598d67735d -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [4989ce726] 2024-02-21 17:18:52 +0100
Branch: REL_16_STABLE [a3f5d2056] 2024-02-21 17:18:52 +0100
Branch: REL_15_STABLE [90ad85db6] 2024-02-21 17:18:52 +0100
-->
<!-- pgdoc-cn_start sig_en=f9def3de7bd31af1be96170fd11a295d sig_cn_org=1838e78b4d318ee2c8fdbbb369991654 source=15.7 
     <para>
      Require <literal>SELECT</literal> privilege on the target table
      for <command>MERGE</command> with a <literal>DO NOTHING</literal>
      clause (&Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      针对<literal>SELECT</literal>权限，对目标表进行<command>MERGE</command>操作时需要带有<literal>DO NOTHING</literal>子句（&Aacute;lvaro Herrera）
     </para>
<!-- pgdoc-cn_end sig_en=f9def3de7bd31af1be96170fd11a295d -->

<!-- pgdoc-cn_start sig_en=6094803e9f1fd83fcbfca563eda454c4 sig_cn_org=fabb7c9b0f161127afc6601a8cf6f0fd source=15.7 
     <para>
      <literal>SELECT</literal> privilege would be required in all
      practical cases anyway, but require it even if the query reads no
      columns of the target table.  This avoids an edge case in
      which <command>MERGE</command> would require no privileges whatever,
      which seems undesirable even when it's a do-nothing command.
     </para>
________________________________________________________-->
     <para>
      <literal>SELECT</literal>权限在所有实际情况下都是必需的，但即使查询不读取目标表的任何列，也需要该权限。
      这样可以避免一个边缘情况，即<command>MERGE</command>不需要任何权限，即使它是一个无操作的命令，这似乎也是不可取的。
</para>
<!-- pgdoc-cn_end sig_en=6094803e9f1fd83fcbfca563eda454c4 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [29ef1dd19] 2024-03-07 09:57:02 +0000
Branch: REL_16_STABLE [dd73d10ad] 2024-03-07 09:55:39 +0000
Branch: REL_15_STABLE [b5c645d2a] 2024-03-07 09:53:31 +0000
-->
<!-- pgdoc-cn_start sig_en=924d2500a78e542f8b1d169c6156b5b2 sig_cn_org=f1b3eefb2c343de3cc46ac752608d0dd source=15.7 
     <para>
      Fix handling of self-modified tuples in <command>MERGE</command>
      (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复<command>MERGE</command>中自修改元组的处理（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=924d2500a78e542f8b1d169c6156b5b2 -->

<!-- pgdoc-cn_start sig_en=4c615777e424549428fa24b3b2dd0d99 sig_cn_org=10931d4d9c25542d0a2009bd78a155f8 source=15.7 
     <para>
      Throw an error if a target row joins to more than one source row, as
      required by the SQL standard.  (The previous coding could silently
      ignore this condition if a concurrent update was involved.)  Also,
      throw a non-misleading error if a target row is already updated by a
      later command in the current transaction, thanks to
      a <literal>BEFORE</literal> trigger or a volatile function used in
      the query.
     </para>
________________________________________________________-->
     <para>
      如果目标行与多个源行连接，根据SQL标准要求抛出错误。(如果涉及并发更新，以前的编码可能会悄悄忽略此条件。)
      此外，如果目标行已经被当前事务中的后续命令更新，由于<literal>BEFORE</literal>触发器或查询中使用的
      一个易失性函数，抛出一个非误导性的错误。
     </para>
<!-- pgdoc-cn_end sig_en=4c615777e424549428fa24b3b2dd0d99 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [4c2369ac5] 2024-02-20 12:49:37 +1300
Branch: REL_16_STABLE [fb95cc72b] 2024-02-20 12:50:09 +1300
Branch: REL_15_STABLE [1b3495e29] 2024-02-20 12:50:34 +1300
Branch: REL_14_STABLE [f9c8f7ccd] 2024-02-20 12:50:57 +1300
Branch: REL_13_STABLE [3850fcca6] 2024-02-20 12:51:17 +1300
Branch: REL_12_STABLE [3ffcd24c2] 2024-02-20 12:51:38 +1300
-->
<!-- pgdoc-cn_start sig_en=caed78daf368965c211324d5c8cc5cad sig_cn_org=4d29e4d0091a4ee34b351e46c3236fdd source=15.7 
     <para>
      Fix incorrect pruning of NULL partition when a table is partitioned
      on a boolean column and the query has a boolean <literal>IS
      NOT</literal> clause (David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复了在表以布尔列分区且查询中有布尔<literal>IS NOT</literal>子句时错误修剪NULL分区的问题（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=caed78daf368965c211324d5c8cc5cad -->

<!-- pgdoc-cn_start sig_en=e9dcc03e350b3efe651b798068f656ec sig_cn_org=b5abbbac3edfb8a05ac56bd152350072 source=15.7 
     <para>
      A NULL value satisfies a clause such
      as <literal><replaceable>boolcol</replaceable> IS NOT
      FALSE</literal>, so pruning away a partition containing NULLs
      yielded incorrect answers.
     </para>
________________________________________________________-->
     <para>
      一个NULL值满足一个子句，比如<literal><replaceable>boolcol</replaceable>不是
      FALSE</literal>，因此去除包含NULL的分区会导致错误的答案。
     </para>
<!-- pgdoc-cn_end sig_en=e9dcc03e350b3efe651b798068f656ec -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fad3b5b5a] 2024-03-26 15:28:31 -0400
Branch: REL_16_STABLE [7445f0928] 2024-03-26 15:28:16 -0400
Branch: REL_15_STABLE [b48eda4e5] 2024-03-26 15:28:16 -0400
Branch: REL_14_STABLE [66bbad581] 2024-03-26 15:28:16 -0400
Branch: REL_13_STABLE [97de2a159] 2024-03-26 15:28:16 -0400
Branch: REL_12_STABLE [a8b740868] 2024-03-26 15:28:16 -0400
-->
<!-- pgdoc-cn_start sig_en=06a8d807870c075e981aed9c39534d99 sig_cn_org=4fc2130a39368d96dc28c14d3392cad8 source=15.7 
     <para>
      Make <command>ALTER FOREIGN TABLE SET SCHEMA</command> move any
      owned sequences into the new schema (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      使<command>ALTER FOREIGN TABLE SET SCHEMA</command>命令将所有拥有的序列移动到新模式中（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=06a8d807870c075e981aed9c39534d99 -->

<!-- pgdoc-cn_start sig_en=b5ce391201efe30d890cb13b29d6b20f sig_cn_org=e857bf62461cd91f9eb573a957028aae source=15.7 
     <para>
      Moving a regular table to a new schema causes any sequences owned by
      the table to be moved to that schema too (along with indexes and
      constraints).  This was overlooked for foreign tables, however.
     </para>
________________________________________________________-->
     <para>
      将常规表移动到新模式会导致表拥有的任何序列也移动到该模式（以及索引和约束）。
      然而，对于外部表，这一点被忽略了。
     </para>
<!-- pgdoc-cn_end sig_en=b5ce391201efe30d890cb13b29d6b20f -->
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [6743c5ae6] 2024-02-09 08:09:22 +0100
Branch: REL_16_STABLE [86d2b434c] 2024-02-09 08:09:59 +0100
Branch: REL_15_STABLE [d17a3a4c6] 2024-02-09 08:15:27 +0100
-->
<!-- pgdoc-cn_start sig_en=a51f5b4e34dd4906afd2e079404d2201 sig_cn_org=eaf39a8d777bd774be216f8e5b0a048c source=15.7 
     <para>
      Make <command>ALTER TABLE ... ADD COLUMN</command> create
      identity/serial sequences with the same persistence as their owning
      tables (Peter Eisentraut)
     </para>
________________________________________________________-->
     <para>
      使<command>ALTER TABLE ... ADD COLUMN</command>创建与其所属表具有相同持久性的身份/序列(Peter Eisentraut)
     </para>
<!-- pgdoc-cn_end sig_en=a51f5b4e34dd4906afd2e079404d2201 -->

<!-- pgdoc-cn_start sig_en=3410a0f63ad31ff6d5a31cadd86a297a sig_cn_org=33401f2387f9f1e247d5d4c50eb57f87 source=15.7 
     <para>
      <command>CREATE UNLOGGED TABLE</command> will make any owned
      sequences be unlogged too.  <command>ALTER TABLE</command> missed
      that consideration, so that an added identity column would have a
      logged sequence, which seems pointless.
     </para>
________________________________________________________-->
     <para>
      <command>CREATE UNLOGGED TABLE</command>将使任何拥有的序列也变为非记录。 
      <command>ALTER TABLE</command>忽略了这一点，因此添加的标识列将具有记录的序列，这似乎是没有意义的。
</para>
<!-- pgdoc-cn_end sig_en=3410a0f63ad31ff6d5a31cadd86a297a -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [91e7115b1] 2024-05-02 17:36:31 -0400
Branch: REL_16_STABLE [11d40a44b] 2024-05-02 17:36:31 -0400
Branch: REL_15_STABLE [5f4a1a0a7] 2024-05-02 17:36:31 -0400
Branch: master [42b041243] 2024-04-28 14:34:21 -0400
Branch: REL_16_STABLE [b19255ca6] 2024-04-28 14:34:21 -0400
Branch: REL_15_STABLE [9b41d1d63] 2024-04-28 14:34:21 -0400
Branch: REL_14_STABLE [617a23927] 2024-04-28 14:34:21 -0400
-->
<!-- pgdoc-cn_start sig_en=9e064064402201449f188bc9ad65b38a sig_cn_org=014d989a936db0fc7506c7eb78485407 source=15.7 
     <para>
      Improve <command>ALTER TABLE ... ALTER COLUMN TYPE</command>'s error
      message when there is a dependent function or publication (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      改进<command>ALTER TABLE ... ALTER COLUMN TYPE</command>在存在依赖函数或发布时的错误消息（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=9e064064402201449f188bc9ad65b38a -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [8c239ee15] 2024-04-21 21:21:26 +0200
Branch: REL_16_STABLE [9e6faeb32] 2024-04-21 21:21:55 +0200
Branch: REL_15_STABLE [276b7888f] 2024-04-21 21:22:11 +0200
-->
<!-- pgdoc-cn_start sig_en=e6d66c8744b01f378c10b44c961aafd6 sig_cn_org=546401a8b30f36b3d7d9347080d4f652 source=15.7 
     <para>
      In <command>CREATE DATABASE</command>, recognize strategy keywords
      case-insensitively for consistency with other options (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      在<command>CREATE DATABASE</command>中，识别策略关键字时不区分大小写，以保持与其他选项的一致性（Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=e6d66c8744b01f378c10b44c961aafd6 -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [0960ae196] 2024-03-18 14:03:58 +0200
Branch: REL_16_STABLE [1f4eb7342] 2024-03-18 14:04:13 +0200
Branch: REL_15_STABLE [d3d95f583] 2024-03-18 14:04:17 +0200
Branch: REL_14_STABLE [262757b73] 2024-03-18 14:04:19 +0200
Branch: REL_13_STABLE [992189a3e] 2024-03-18 14:04:24 +0200
Branch: REL_12_STABLE [f3e4581ac] 2024-03-18 14:04:28 +0200
-->
<!-- pgdoc-cn_start sig_en=770cdb6b96b3205d2597038d84f93451 sig_cn_org=6781629af42b6317f6d50692d1ffdadf source=15.7 
     <para>
      Fix <command>EXPLAIN</command>'s counting of heap pages accessed by
      a bitmap heap scan (Melanie Plageman)
     </para>
________________________________________________________-->
     <para>
      修复<command>EXPLAIN</command>对由位图堆扫描访问的堆页的计数（Melanie Plageman）
     </para>
<!-- pgdoc-cn_end sig_en=770cdb6b96b3205d2597038d84f93451 -->

<!-- pgdoc-cn_start sig_en=95c09bad40d021d18286a233b9486bcd sig_cn_org=7a22e608555aa9cecabe67403a9547d5 source=15.7 
     <para>
      Previously, heap pages that contain no visible tuples were not
      counted; but it seems more consistent to count all pages returned by
      the bitmap index scan.
     </para>
________________________________________________________-->
     <para>
      以前，不包含可见元组的堆页面没有被计算在内；但更一致的做法是计算位图索引扫描返回的所有页面。
     </para>
<!-- pgdoc-cn_end sig_en=95c09bad40d021d18286a233b9486bcd -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [33e729c51] 2024-03-17 10:17:11 +0000
Branch: REL_16_STABLE [34c854b93] 2024-03-17 10:19:31 +0000
Branch: REL_15_STABLE [89ee14a2f] 2024-03-17 10:20:20 +0000
-->
<!-- pgdoc-cn_start sig_en=a767a6118d404653ceb28a1a0abcc2e5 sig_cn_org=683ef237611ec995ec3f384bd46c1204 source=15.7 
     <para>
      Fix <command>EXPLAIN</command>'s output for subplans
      in <command>MERGE</command> (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复<command>EXPLAIN</command>在<command>MERGE</command>中子计划的输出（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=a767a6118d404653ceb28a1a0abcc2e5 -->

<!-- pgdoc-cn_start sig_en=66be3b5bdd7019401136c017812d4783 sig_cn_org=18e55a37de0d8258a808a00490087a64 source=15.7 
     <para>
      <command>EXPLAIN</command> would sometimes fail to properly display
      subplan Params referencing variables in other parts of the plan tree.
     </para>
________________________________________________________-->
     <para>
      <command>EXPLAIN</command>有时无法正确显示引用计划树其他部分变量的子计划参数。
     </para>
<!-- pgdoc-cn_end sig_en=66be3b5bdd7019401136c017812d4783 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6faca9ae2] 2024-04-02 14:59:32 -0400
Branch: REL_16_STABLE [cbfbb14bd] 2024-04-02 14:59:04 -0400
Branch: REL_15_STABLE [4fb56a734] 2024-04-02 14:59:04 -0400
Branch: REL_14_STABLE [ca392df8d] 2024-04-02 14:59:04 -0400
Branch: REL_13_STABLE [4afc2c219] 2024-04-02 14:59:04 -0400
Branch: REL_12_STABLE [f5d9212e5] 2024-04-02 14:59:04 -0400
-->
<!-- pgdoc-cn_start sig_en=46bddc7b93c3b48b8de0ea8cb7e390a6 sig_cn_org=6cb9d2df0a96d2acbdb51593105675ba source=15.7 
     <para>
      Avoid deadlock during removal of orphaned temporary tables
      (Mikhail Zhilin)
     </para>
________________________________________________________-->
     <para>
      避免在删除孤立的临时表时发生死锁（Mikhail Zhilin）
     </para>
<!-- pgdoc-cn_end sig_en=46bddc7b93c3b48b8de0ea8cb7e390a6 -->

<!-- pgdoc-cn_start sig_en=ff15e9935647863a06bf9b900122a014 sig_cn_org=bedc015beb9090bf39e7841873ac9827 source=15.7 
     <para>
      If the session that creates a temporary table crashes without
      removing the table, autovacuum will eventually try to remove the
      orphaned table.  However, an incoming session that's been assigned
      the same temporary namespace will do that too.  If a temporary table
      has a dependency (such as an owned sequence) then a deadlock could
      result between these two cleanup attempts.
     </para>
________________________________________________________-->
     <para>
      如果创建临时表的会话崩溃而没有删除表，自动清理将最终尝试删除孤立的表。
      然而，分配了相同临时命名空间的传入会话也会这样做。
      如果临时表有依赖关系（如拥有的序列），那么在这两次清理尝试之间可能会发生死锁。
     </para>
<!-- pgdoc-cn_end sig_en=ff15e9935647863a06bf9b900122a014 -->
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [f65ab862e] 2024-04-29 10:24:56 -0700
Branch: REL_16_STABLE [92685c389] 2024-04-29 10:24:59 -0700
Branch: REL_15_STABLE [7c5915c4b] 2024-04-29 10:24:59 -0700
Branch: REL_14_STABLE [2ca19aa81] 2024-04-29 10:25:00 -0700
Branch: REL_13_STABLE [70cadfba0] 2024-04-29 10:25:00 -0700
Branch: REL_12_STABLE [f222349c4] 2024-04-29 10:25:00 -0700
-->
<!-- pgdoc-cn_start sig_en=d11a4cc6cb441c6530a82be6c7b2c09e sig_cn_org=0c955f4069fc02750fd818f002e1b360 source=15.7 
     <para>
      Avoid race condition while examining per-relation frozen-XID values
      (Noah Misch)
     </para>
________________________________________________________-->
     <para>
      在检查每个关系的冻结XID值时避免竞争条件（Noah Misch）
     </para>
<!-- pgdoc-cn_end sig_en=d11a4cc6cb441c6530a82be6c7b2c09e -->

<!-- pgdoc-cn_start sig_en=0b56e59cb4abe6f6e76b4f684abb7800 sig_cn_org=db7b5d3f60e574e354bb90676f4bb511 source=15.7 
     <para>
      <command>VACUUM</command>'s computation of per-database frozen-XID
      values from per-relation values could get confused by a concurrent
      update of those values by another <command>VACUUM</command>.
     </para>
________________________________________________________-->
     <para>
      <command>VACUUM</command>对每个数据库的冻结XID值的计算，可能会因为另一个<command>VACUUM</command>对这些值的并发更新而混淆。
     </para>
<!-- pgdoc-cn_end sig_en=0b56e59cb4abe6f6e76b4f684abb7800 -->
    </listitem>

    <listitem>
<!--
Author: Masahiko Sawada <msawada@postgresql.org>
Branch: master [5cd72cc0c] 2024-05-01 12:34:06 +0900
Branch: REL_16_STABLE [f199436c1] 2024-05-01 12:34:04 +0900
Branch: REL_15_STABLE [faba2f8f3] 2024-05-01 12:34:01 +0900
-->
<!-- pgdoc-cn_start sig_en=c5f8e47b6ca2f998873da938e1ae83c4 sig_cn_org=86c62b63b6f7562eeb23e4a20439fcfd source=15.7 
     <para>
      Fix buffer usage reporting for parallel vacuuming (Anthonin Bonnefoy)
     </para>
________________________________________________________-->
     <para>
      修复并行清理时的缓冲区使用报告（Anthonin Bonnefoy）
     </para>
<!-- pgdoc-cn_end sig_en=c5f8e47b6ca2f998873da938e1ae83c4 -->

<!-- pgdoc-cn_start sig_en=f040f1ababce6284dd6f60a41e5f58cc sig_cn_org=b9240093c3bea9b1b77bfc4bf65944dc source=15.7 
     <para>
      Buffer accesses performed by parallel workers were not getting
      counted in the statistics reported in <literal>VERBOSE</literal>
      mode.
     </para>
________________________________________________________-->
     <para>
      并行工作者执行的缓冲区访问未计入在<literal>VERBOSE</literal>模式中报告的统计数据中。
     </para>
<!-- pgdoc-cn_end sig_en=f040f1ababce6284dd6f60a41e5f58cc -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_15_STABLE [bf379b555] 2024-04-30 15:22:55 -0400
Branch: REL_14_STABLE [51189f98a] 2024-04-30 15:22:55 -0400
Branch: REL_13_STABLE [1ee22d1e8] 2024-04-30 15:22:55 -0400
Branch: REL_12_STABLE [56d30fb10] 2024-04-30 15:22:56 -0400
-->
<!-- pgdoc-cn_start sig_en=e055b344cda7836ec3c23401849089fe sig_cn_org=fa653c9ac9c9f018525644a038f63a8f source=15.7 
     <para>
      Disallow converting a table to a view within an outer SQL command
      that is using that table (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      不允许在使用该表的外部SQL命令中将表转换为视图（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=e055b344cda7836ec3c23401849089fe -->

<!-- pgdoc-cn_start sig_en=146e676e77d28e6c77ee2cc76071504b sig_cn_org=e3365b4eb8ec9f4801b756881305bcb3 source=15.7 
     <para>
      This avoids possible crashes.
     </para>
________________________________________________________-->
     <para>
      避免可能的崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=146e676e77d28e6c77ee2cc76071504b -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [03107b4ed] 2024-04-16 11:22:51 -0400
Branch: REL_16_STABLE [91800af13] 2024-04-16 11:03:43 -0400
Branch: REL_15_STABLE [5aacfa64e] 2024-04-16 11:22:39 -0400
Branch: REL_14_STABLE [ab2402268] 2024-04-16 11:22:39 -0400
Branch: REL_13_STABLE [d9e4ee74f] 2024-04-16 11:22:39 -0400
Branch: REL_12_STABLE [f502849d4] 2024-04-16 11:22:39 -0400
-->
<!-- pgdoc-cn_start sig_en=21529e9b80f726b199c7acdfbd486609 sig_cn_org=c750ce3264e2fed6a4fbc109a3da58b7 source=15.7 
     <para>
      Ensure that join conditions generated from equivalence classes are
      applied at the correct plan level (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      确保从等价类生成的连接条件在正确的计划级别应用（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=21529e9b80f726b199c7acdfbd486609 -->

<!-- pgdoc-cn_start sig_en=6cbc2ab563c2a8d2d12aa1dbb5fb89e6 sig_cn_org=b4fc3eb3cab4c4c7d490b17f9f35d4ec source=15.7 
     <para>
      In versions before <productname>PostgreSQL</productname> 16, it was
      possible for generated conditions to be evaluated below outer joins
      when they should be evaluated above (after) the outer join, leading
      to incorrect query results.  All versions have a similar hazard when
      considering joins to <command>UNION ALL</command> trees that have
      constant outputs for the join column in
      some <command>SELECT </command> arms.
     </para>
________________________________________________________-->
     <para>
      在<productname>PostgreSQL</productname> 16之前的版本中，生成的条件可能会在应该在外连接之上（之后）评估时被评估在外连接之下，导致查询结果不正确。在考虑连接到具有某些<command>SELECT </command>分支中连接列的常量输出的<command>UNION ALL</command>树时，所有版本都存在类似的风险。
     </para>
<!-- pgdoc-cn_end sig_en=6cbc2ab563c2a8d2d12aa1dbb5fb89e6 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: REL_16_STABLE [9d36b883b] 2024-05-01 16:35:05 +1200
Branch: REL_15_STABLE [7e5d20bbd] 2024-05-01 16:35:37 +1200
-->
<!-- pgdoc-cn_start sig_en=618ff8145e819ed0cf1c0246a4a9731d sig_cn_org=ff1145e033eb16e83fa230d0fe555e8d source=15.7 
     <para>
      Prevent potentially-incorrect optimization of some window functions
      (David Rowley)
     </para>
________________________________________________________-->
     <para>
      防止一些窗口函数的潜在不正确优化（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=618ff8145e819ed0cf1c0246a4a9731d -->

<!-- pgdoc-cn_start sig_en=2741bb5e62ca6df78e2e25edcb0e36dd sig_cn_org=d0dc73ffb4e5939a978d765eb82a2bde source=15.7 
     <para>
      Disable <quote>run condition</quote> optimization
      of <function>ntile()</function> and <function>count()</function>
      with non-constant arguments.  This avoids possible misbehavior with
      sub-selects, typically leading to errors like <quote>WindowFunc not
      found in subplan target lists</quote>.
     </para>
________________________________________________________-->
     <para>
      禁用<quote>运行条件</quote>优化<function>ntile()</function>和<function>count()</function>
      的非常量参数。这样可以避免与子选择相关的可能的错误行为，通常导致类似于
      <quote>在子计划目标列表中找不到WindowFunc</quote>的错误。
     </para>
<!-- pgdoc-cn_end sig_en=2741bb5e62ca6df78e2e25edcb0e36dd -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a767cdc84] 2024-03-27 13:39:03 -0400
Branch: REL_16_STABLE [a94f51a7b] 2024-03-27 13:39:03 -0400
Branch: REL_15_STABLE [03561a6c7] 2024-03-27 13:39:03 -0400
Branch: REL_14_STABLE [0d30e48c2] 2024-03-27 13:39:03 -0400
Branch: REL_13_STABLE [de3c5b187] 2024-03-27 13:39:03 -0400
Branch: REL_12_STABLE [25675c474] 2024-03-27 13:39:03 -0400
-->
<!-- pgdoc-cn_start sig_en=47d6d4bfc0f306b390c09c786b6199ac sig_cn_org=800473f9bf6bc7fcba928e97a0111a84 source=15.7 
     <para>
      Avoid unnecessary use of moving-aggregate mode with a non-moving
      window frame (Vallimaharajan G)
     </para>
________________________________________________________-->
     <para>
      避免在非移动窗口帧上不必要地使用移动聚合模式（Vallimaharajan G）
     </para>
<!-- pgdoc-cn_end sig_en=47d6d4bfc0f306b390c09c786b6199ac -->

<!-- pgdoc-cn_start sig_en=4f91afec5bb8c7a952f81e46e0adc7c3 sig_cn_org=2dc2d32b736b8769ca50443af32a7906 source=15.7 
     <para>
      When a plain aggregate is used as a window function, and the window
      frame start is specified as <literal>UNBOUNDED PRECEDING</literal>,
      the frame's head cannot move so we do not need to use the special
      (and more expensive) moving-aggregate mode.  This optimization was
      intended all along, but due to a coding error it never triggered.
     </para>
________________________________________________________-->
     <para>
      当一个普通的聚合函数被用作窗口函数时，且窗口帧的起始位置被指定为<literal>UNBOUNDED PRECEDING</literal>时，
      帧的头部不会移动，因此我们不需要使用特殊的（更昂贵的）移动聚合模式。这种优化一直是有意的，但由于编码错误，它从未触发过。
</para>
<!-- pgdoc-cn_end sig_en=4f91afec5bb8c7a952f81e46e0adc7c3 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a6b2a51e1] 2024-02-23 15:21:53 -0500
Branch: REL_16_STABLE [ef0333e67] 2024-02-23 15:21:53 -0500
Branch: REL_15_STABLE [37bbe3d3a] 2024-02-23 15:21:53 -0500
Branch: REL_14_STABLE [cbeb45527] 2024-02-23 15:21:53 -0500
Branch: REL_13_STABLE [9061fd23c] 2024-02-23 15:21:53 -0500
Branch: REL_12_STABLE [cf807eba5] 2024-02-23 15:21:53 -0500
-->
<!-- pgdoc-cn_start sig_en=48f36c089a24cca8807cd72fead7432c sig_cn_org=7d5e6efaedf6ee64fe78f8298c9531bd source=15.7 
     <para>
      Avoid use of already-freed data while planning partition-wise joins
      under GEQO (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免在规划分区连接时使用已释放的数据（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=48f36c089a24cca8807cd72fead7432c -->

<!-- pgdoc-cn_start sig_en=0eba252506f28c49cab06a7f8a8d7d56 sig_cn_org=77162c5727817a2115e3487e5bbe8673 source=15.7 
     <para>
      This would typically end in a crash or unexpected error message.
     </para>
________________________________________________________-->
     <para>
      这通常会以崩溃或意外错误消息结束。
     </para>
<!-- pgdoc-cn_end sig_en=0eba252506f28c49cab06a7f8a8d7d56 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [e62984647] 2024-03-11 18:19:56 +1300
Branch: REL_16_STABLE [348233cb1] 2024-03-11 18:20:39 +1300
Branch: REL_15_STABLE [74530804f] 2024-03-11 18:21:23 +1300
Branch: REL_14_STABLE [72b8507db] 2024-03-11 18:21:48 +1300
-->
<!-- pgdoc-cn_start sig_en=0afce1a3773b127f935feac120b6e091 sig_cn_org=c497c87eecef205890b71300480cea61 source=15.7 
     <para>
      Avoid freeing still-in-use data in Memoize (Tender Wang, Andrei
      Lepikhov)
     </para>
________________________________________________________-->
     <para>
      避免在Memoize中释放仍在使用的数据（Tender Wang，Andrei Lepikhov）
     </para>
<!-- pgdoc-cn_end sig_en=0afce1a3773b127f935feac120b6e091 -->

<!-- pgdoc-cn_start sig_en=324564c2dad1f0c47d95f54717c64064 sig_cn_org=434fb0a9be546d41f7bed1da4e3f5941 source=15.7 
     <para>
      In production builds this error frequently didn't cause any
      problems, as the freed data would most likely not get overwritten
      before it was used.
     </para>
________________________________________________________-->
     <para>
      在生产版本中，这个错误通常不会引起任何问题，因为释放的数据在被使用之前很可能不会被覆盖。
     </para>
<!-- pgdoc-cn_end sig_en=324564c2dad1f0c47d95f54717c64064 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [a37a3e2b3] 2024-03-05 16:17:02 +1300
Branch: REL_16_STABLE [ac7e6a01c] 2024-03-05 16:17:53 +1300
Branch: REL_15_STABLE [164fe7a6e] 2024-03-05 16:18:19 +1300
Branch: REL_14_STABLE [0c2dda109] 2024-03-05 16:18:42 +1300
Branch: REL_13_STABLE [421dfb41a] 2024-03-05 16:19:05 +1300
Branch: REL_12_STABLE [94246405d] 2024-03-05 16:19:26 +1300
-->
<!-- pgdoc-cn_start sig_en=d5a28687875e71c1d6f5fdf44e451b61 sig_cn_org=091d9b1217d6b3869d351da3437e48c2 source=15.7 
     <para>
      Fix incorrectly-reported statistics kind codes in <quote>requested
      statistics kind <replaceable>X</replaceable> is not yet
      built</quote> error messages (David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复<quote>请求的统计种类<replaceable>X</replaceable>尚未构建</quote>错误消息中不正确报告的统计种类代码（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=d5a28687875e71c1d6f5fdf44e451b61 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e0df80828] 2024-04-15 12:56:56 -0400
Branch: REL_16_STABLE [cc1eb6a3c] 2024-04-15 12:56:56 -0400
Branch: REL_15_STABLE [09989ba84] 2024-04-15 12:56:56 -0400
Branch: REL_14_STABLE [78e81e14d] 2024-04-15 12:56:56 -0400
Branch: REL_13_STABLE [b6e21cef7] 2024-04-15 12:56:56 -0400
Branch: REL_12_STABLE [e0970862e] 2024-04-15 12:56:56 -0400
Branch: master [2ed8f9a01] 2024-03-06 14:41:13 -0500
Branch: REL_16_STABLE [1b3029be5] 2024-03-06 14:41:13 -0500
Branch: REL_15_STABLE [3b671dcf5] 2024-03-06 14:41:13 -0500
Branch: REL_14_STABLE [a595c3075] 2024-03-06 14:41:13 -0500
Branch: REL_13_STABLE [d769f9d97] 2024-03-06 14:41:13 -0500
Branch: REL_12_STABLE [466376c9f] 2024-03-06 14:41:13 -0500
-->
<!-- pgdoc-cn_start sig_en=0c5a1a5cca812abcdb53ec8e5e35b20e sig_cn_org=6e7dc3246e88e18917870097bec76ec5 source=15.7 
     <para>
      Be more careful with <type>RECORD</type>-returning functions
      in <literal>FROM</literal> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在<literal>FROM</literal>中更加小心处理返回<type>RECORD</type>的函数（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=0c5a1a5cca812abcdb53ec8e5e35b20e -->

<!-- pgdoc-cn_start sig_en=3f06782c6d1bce4b219d4f305a1bdf20 sig_cn_org=cf49438cedcaaefb8d92aeab5e1f6791 source=15.7 
     <para>
      The output columns of such a function call must be defined by
      an <literal>AS</literal> clause that specifies the column names and
      data types.  If the actual function output value doesn't match that,
      an error is supposed to be thrown at runtime.  However, some code
      paths would examine the actual value prematurely, and potentially
      issue strange errors or suffer assertion failures if it doesn't
      match expectations.
     </para>
________________________________________________________-->
     <para>
      这样的函数调用的输出列必须由<literal>AS</literal>子句定义，该子句指定列名和数据类型。
      如果实际函数输出值与之不匹配，则应在运行时抛出错误。然而，一些代码路径可能会过早地检查实际值，
      如果不符合预期，可能会发出奇怪的错误或遭受断言失败。
     </para>
<!-- pgdoc-cn_end sig_en=3f06782c6d1bce4b219d4f305a1bdf20 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6ee3261e9] 2024-03-12 18:16:25 -0400
Branch: REL_16_STABLE [40d1bdeb7] 2024-03-12 18:16:10 -0400
Branch: REL_15_STABLE [6f66fadad] 2024-03-12 18:16:10 -0400
Branch: REL_14_STABLE [649bbba11] 2024-03-12 18:16:10 -0400
Branch: REL_13_STABLE [28184f039] 2024-03-12 18:16:10 -0400
Branch: REL_12_STABLE [dc1503d5b] 2024-03-12 18:16:10 -0400
-->
<!-- pgdoc-cn_start sig_en=7d502dfd9a9bfc65aac04607693f08bf sig_cn_org=b45c3c2b7a0bb2188137af240b665a74 source=15.7 
     <para>
      Fix confusion about the return rowtype of SQL-language procedures
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复关于SQL语言过程返回行类型的混淆（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=7d502dfd9a9bfc65aac04607693f08bf -->

<!-- pgdoc-cn_start sig_en=7d5eb1b90854e45cd87a41bbfdf947a5 sig_cn_org=c15060b0eafb3e33697bce01d9cc93ac source=15.7 
     <para>
      A procedure implemented in SQL language that returns a single
      composite-type column would cause an assertion failure or core dump.
     </para>
________________________________________________________-->
     <para>
      使用SQL语言实现的一个返回单个复合类型列的过程会导致断言失败或核心转储。
     </para>
<!-- pgdoc-cn_end sig_en=7d5eb1b90854e45cd87a41bbfdf947a5 -->
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [d57b7cc33] 2024-02-16 16:02:00 +0200
Branch: master [75bcba6cb] 2024-02-21 02:51:41 +0200
Branch: REL_16_STABLE [760767182] 2024-03-11 03:06:55 +0200
Branch: REL_15_STABLE [84788ee5b] 2024-03-11 03:06:45 +0200
Branch: REL_14_STABLE [84cc1a552] 2024-03-11 03:06:15 +0200
Branch: REL_13_STABLE [445c7e38f] 2024-03-11 03:06:10 +0200
Branch: REL_12_STABLE [98bfb7558] 2024-03-11 02:53:07 +0200
-->
<!-- pgdoc-cn_start sig_en=3fed3858693590f3571033bcf6c8a721 sig_cn_org=384071b8539629a6a38c9ef5b7f5d726 source=15.7 
     <para>
      Add protective stack depth checks to some recursive functions
      (Egor Chindyaskin)
     </para>
________________________________________________________-->
     <para>
      为一些递归函数添加保护性堆栈深度检查（Egor Chindyaskin）
     </para>
<!-- pgdoc-cn_end sig_en=3fed3858693590f3571033bcf6c8a721 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d163fdbfe] 2024-02-28 14:00:30 -0500
Branch: REL_16_STABLE [17db5436e] 2024-02-28 14:00:30 -0500
Branch: REL_15_STABLE [db8855b66] 2024-02-28 14:00:30 -0500
Branch: REL_14_STABLE [fe3b1b575] 2024-02-28 14:00:30 -0500
-->
<!-- pgdoc-cn_start sig_en=d59ef3b64ac2e3fabb66ce7a91318bbb sig_cn_org=ae76e5499c64694ab9c387bb55fce631 source=15.7 
     <para>
      Fix mis-rounding and overflow hazards
      in <function>date_bin()</function> (Moaaz Assali)
     </para>
________________________________________________________-->
     <para>
      修复<function>date_bin()</function>中的四舍五入和溢出风险（Moaaz Assali）
     </para>
<!-- pgdoc-cn_end sig_en=d59ef3b64ac2e3fabb66ce7a91318bbb -->

<!-- pgdoc-cn_start sig_en=625db5e768b10a6b1b2e479f0764ef7a sig_cn_org=ff7bed1beee8e4bc3ce93a08085130eb source=15.7 
     <para>
      In the case where the source timestamp is before the origin
      timestamp and their difference is already an exact multiple of the
      stride, the code incorrectly subtracted the stride anyway.  Also,
      detect some integer-overflow cases that would have produced
      incorrect results.
     </para>
________________________________________________________-->
     <para>
      在源时间戳早于原始时间戳且它们的差值已经是步长的整数倍的情况下，代码错误地仍然减去了步长。
	  同时，检测一些可能导致产生错误结果的整数溢出情况。
     </para>
<!-- pgdoc-cn_end sig_en=625db5e768b10a6b1b2e479f0764ef7a -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4019285c0] 2024-04-28 13:42:13 -0400
Branch: REL_16_STABLE [3752e3d21] 2024-04-28 13:42:13 -0400
Branch: REL_15_STABLE [e6e3ee5b7] 2024-04-28 13:42:13 -0400
Branch: REL_14_STABLE [1748379b6] 2024-04-28 13:42:13 -0400
Branch: REL_13_STABLE [440b6251b] 2024-04-28 13:42:13 -0400
Branch: REL_12_STABLE [cb0ccefa0] 2024-04-28 13:42:13 -0400
-->
<!-- pgdoc-cn_start sig_en=575f894e9edce3bb82ed25d4e12f104a sig_cn_org=df17493e4cf041ccd54cbe5c949e2996 source=15.7 
     <para>
      Detect integer overflow when adding or subtracting
      an <type>interval</type> to/from a <type>timestamp</type>
      (Joseph Koshakow)
     </para>
________________________________________________________-->
     <para>
      当将<type>时间间隔</type>加到/从<type>时间戳</type>中时，检测整数溢出（Joseph Koshakow）
     </para>
<!-- pgdoc-cn_end sig_en=575f894e9edce3bb82ed25d4e12f104a -->

<!-- pgdoc-cn_start sig_en=eaeedcc133c3c2abf346f23a7a77e669 sig_cn_org=3f7e23df3d401a30f98b91e05e0266c7 source=15.7 
     <para>
      Some cases that should cause an out-of-range error produced an
      incorrect result instead.
     </para>
________________________________________________________-->
     <para>
      一些应该引起超出范围错误的情况，却产生了错误的结果。
     </para>
<!-- pgdoc-cn_end sig_en=eaeedcc133c3c2abf346f23a7a77e669 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ce571434a] 2024-02-09 12:29:41 -0500
Branch: REL_16_STABLE [4eb261165] 2024-02-09 12:29:41 -0500
Branch: REL_15_STABLE [26c89d105] 2024-02-09 12:29:41 -0500
Branch: REL_14_STABLE [d21690edb] 2024-02-09 12:29:41 -0500
Branch: REL_13_STABLE [ceb224b62] 2024-02-09 12:29:41 -0500
Branch: REL_12_STABLE [f38903d1e] 2024-02-09 12:29:41 -0500
-->
<!-- pgdoc-cn_start sig_en=eecccf9573b6f862b09dfd4b06cb87d1 sig_cn_org=f8749eff74da444baa5e42cdd7bc55a3 source=15.7 
     <para>
      Avoid race condition in <function>pg_get_expr()</function>
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免<function>pg_get_expr()</function>中的竞争条件（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=eecccf9573b6f862b09dfd4b06cb87d1 -->

<!-- pgdoc-cn_start sig_en=62aef04d36acdf9a1c3d967a6754709d sig_cn_org=9670f91baf20779cd281a45ed34b8d28 source=15.7 
     <para>
      If the relation referenced by the argument is dropped concurrently,
      the function's intention is to return NULL, but sometimes it failed
      instead.
     </para>
________________________________________________________-->
     <para>
      如果参数引用的关系同时被删除，函数的意图是返回NULL，但有时会失败。
     </para>
<!-- pgdoc-cn_end sig_en=62aef04d36acdf9a1c3d967a6754709d -->
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [165d921c9] 2024-02-08 12:45:26 +0200
Branch: REL_16_STABLE [e3e05adde] 2024-02-09 12:37:21 +0200
Branch: REL_15_STABLE [503299b7f] 2024-02-09 12:38:32 +0200
Branch: REL_14_STABLE [18388291a] 2024-02-09 12:39:42 +0200
Branch: REL_13_STABLE [4efaf4b09] 2024-02-09 12:39:54 +0200
Branch: REL_12_STABLE [d44060cfc] 2024-02-09 12:55:43 +0200
-->
<!-- pgdoc-cn_start sig_en=6326619d876f6a09eda2e41541702080 sig_cn_org=fbdc8401512cb4a991f7763d98e53980 source=15.7 
     <para>
      Fix detection of old transaction IDs in XID status functions
      (Karina Litskevich)
     </para>
________________________________________________________-->
     <para>
      修复XID状态函数中对旧事务ID的检测（Karina Litskevich）
     </para>
<!-- pgdoc-cn_end sig_en=6326619d876f6a09eda2e41541702080 -->

<!-- pgdoc-cn_start sig_en=18afe0ff11494cd77bbafab5b924b22a sig_cn_org=14bc74ac853a8c4db327dd009c8b7769 source=15.7 
     <para>
      Transaction IDs more than 2<superscript>31</superscript>
      transactions in the past could be misidentified as recent,
      leading to misbehavior of <function>pg_xact_status()</function>
      or <function>txid_status()</function>.
     </para>
________________________________________________________-->
     <para>
      过去超过2<superscript>31</superscript>个事务的事务ID可能被误认为是最近的，
      导致<function>pg_xact_status()</function>或<function>txid_status()</function>的异常行为。
     </para>
<!-- pgdoc-cn_end sig_en=18afe0ff11494cd77bbafab5b924b22a -->
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [935829743] 2024-04-13 08:34:20 -0700
Branch: REL_16_STABLE [4e62ba21a] 2024-04-13 08:35:06 -0700
Branch: REL_15_STABLE [7c490a18b] 2024-04-13 08:35:20 -0700
Branch: REL_14_STABLE [08059fc04] 2024-04-13 08:35:32 -0700
-->
<!-- pgdoc-cn_start sig_en=57b1e41775970d785a6375436066248d sig_cn_org=c7143ada5c011044a1a283fd28e16180 source=15.7 
     <para>
      Ensure that a table's freespace map won't return a page that's past
      the end of the table (Ronan Dunklau)
     </para>
________________________________________________________-->
     <para>
      确保表的空闲空间映射不会返回超出表末端的页面（Ronan Dunklau）
     </para>
<!-- pgdoc-cn_end sig_en=57b1e41775970d785a6375436066248d -->

<!-- pgdoc-cn_start sig_en=fbbf52d859ae0b0d9f35fb850f71f39f sig_cn_org=ab093b7b02964b4e55d032e41a0e07d5 source=15.7 
     <para>
      Because the freespace map isn't WAL-logged, this was possible in
      edge cases involving an OS crash, a replica promote, or a PITR
      restore.  The result would be a <quote>could not read block</quote>
      error.
     </para>
________________________________________________________-->
     <para>
      由于freespace map没有进行WAL日志记录，在涉及操作系统崩溃、副本提升或PITR恢复的边缘情况下，这是可能的。结果将是一个<quote>无法读取块</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=fbbf52d859ae0b0d9f35fb850f71f39f -->
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: REL_16_STABLE [e79ceafe9] 2024-04-11 19:05:00 +0900
Branch: REL_15_STABLE [b82dca2a5] 2024-04-11 19:05:02 +0900
Branch: REL_14_STABLE [b714bc40c] 2024-04-11 19:05:04 +0900
Branch: REL_13_STABLE [01b01a77f] 2024-04-11 19:05:05 +0900
Branch: REL_12_STABLE [0341d4b10] 2024-04-11 19:05:07 +0900
-->
<!-- pgdoc-cn_start sig_en=83a145c3202d91a3ebd9ec4b82c1e47a sig_cn_org=d0c537c3f3c818d8e0ea70b22744e648 source=15.7 
     <para>
      Fix file descriptor leakage when an error is thrown while waiting
      in <function>WaitEventSetWait</function> (Etsuro Fujita)
     </para>
________________________________________________________-->
     <para>
      在<function>WaitEventSetWait</function>中等待时发生错误时修复文件描述符泄漏（藤田悦郎）
     </para>
<!-- pgdoc-cn_end sig_en=83a145c3202d91a3ebd9ec4b82c1e47a -->
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: REL_16_STABLE [f6f61a4bd] 2024-04-04 17:25:00 +0900
Branch: REL_15_STABLE [3f96d113f] 2024-04-04 17:25:02 +0900
Branch: REL_14_STABLE [e10ca95ff] 2024-04-04 17:25:04 +0900
-->
<!-- pgdoc-cn_start sig_en=e607186706c21e746011b3598774ea4c sig_cn_org=a16d8b4b9b3e5660fd4f8c2f069dd187 source=15.7 
     <para>
      Avoid corrupting exception stack if an FDW implements async append
      but doesn't configure any wait conditions for the Append plan node
      to wait for (Alexander Pyhalov)
     </para>
________________________________________________________-->
     <para>
      避免在FDW实现异步追加但没有为Append计划节点配置任何等待条件时破坏异常堆栈（Alexander Pyhalov）
     </para>
<!-- pgdoc-cn_end sig_en=e607186706c21e746011b3598774ea4c -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f5a465f1a] 2024-02-25 16:15:07 -0500
Branch: REL_16_STABLE [8c785d354] 2024-02-25 16:15:07 -0500
Branch: REL_15_STABLE [940489b46] 2024-02-25 16:15:07 -0500
Branch: REL_14_STABLE [09f09884c] 2024-02-25 16:15:07 -0500
Branch: REL_13_STABLE [43cca9de9] 2024-02-25 16:15:07 -0500
Branch: REL_12_STABLE [c0b4dad38] 2024-02-25 16:15:07 -0500
-->
<!-- pgdoc-cn_start sig_en=89aa0f44cd875115b43f59361bdc1375 sig_cn_org=e34478e7db14c14ccb5eb30cae96b825 source=15.7 
     <para>
      Throw an error if an index is accessed while it is being reindexed
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      当正在重新索引时访问索引会抛出错误(Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=89aa0f44cd875115b43f59361bdc1375 -->

<!-- pgdoc-cn_start sig_en=8fb7468f6bddb426d9d76ebd5d863dbd sig_cn_org=8e8ae446c54889b4ea54370afc3a7aaf source=15.7 
     <para>
      Previously this was just an assertion check, but promote it into a
      regular runtime error.  This will provide a more on-point error
      message when reindexing a user-defined index expression that
      attempts to access its own table.
     </para>
________________________________________________________-->
     <para>
      以前这只是一个断言检查，但将其提升为常规运行时错误。当重新索引用户定义的索引表达式尝试访问自己的表时，这将提供一个更准确的错误消息。
     </para>
<!-- pgdoc-cn_end sig_en=8fb7468f6bddb426d9d76ebd5d863dbd -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [a63224be4] 2024-05-01 13:21:21 +1200
Branch: REL_16_STABLE [68d358545] 2024-05-01 13:21:50 +1200
Branch: REL_15_STABLE [52f21f928] 2024-05-01 13:22:16 +1200
Branch: REL_14_STABLE [e6b0efc65] 2024-05-01 13:22:41 +1200
Branch: REL_13_STABLE [0a34bcd0c] 2024-05-01 13:23:05 +1200
Branch: REL_12_STABLE [e3f9dcabd] 2024-05-01 13:23:25 +1200
-->
<!-- pgdoc-cn_start sig_en=0a4680a48e9e06dce68ce8688dc0ce0b sig_cn_org=7561f4d592d7b7d62ec347330bc6ccab source=15.7 
     <para>
      Ensure that index-only scans on <type>name</type> columns return a
      fully-padded value (David Rowley)
     </para>
________________________________________________________-->
     <para>
      确保对<type>name</type>列进行的仅索引扫描返回完全填充的值（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=0a4680a48e9e06dce68ce8688dc0ce0b -->

<!-- pgdoc-cn_start sig_en=4ed466e6f6975021fd8067fa28b0c824 sig_cn_org=ce63ba73fb137376d1b78dac331acb96 source=15.7 
     <para>
      The value physically stored in the index is truncated, and
      previously a pointer to that value was returned to callers.  This
      provoked complaints when testing under valgrind.  In theory it could
      result in crashes, though none have been reported.
     </para>
________________________________________________________-->
     <para>
      索引中物理存储的值被截断，以前将该值的指针返回给调用者。在valgrind下测试时引发了投诉。
      理论上可能导致崩溃，尽管没有报告过。
     </para>
<!-- pgdoc-cn_end sig_en=4ed466e6f6975021fd8067fa28b0c824 -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [aa79bde72] 2024-04-25 10:40:52 +0530
Branch: REL_16_STABLE [a9155efc7] 2024-04-25 10:52:34 +0530
Branch: REL_15_STABLE [28a8cc457] 2024-04-25 10:33:04 +0530
-->
<!-- pgdoc-cn_start sig_en=5dc07490408abe2da2ac59ef8209fa3f sig_cn_org=2fcf3404243d517a24e5d205ca29c971 source=15.7 
     <para>
      Fix race condition in deciding whether a table sync operation is
      needed in logical replication (Vignesh C)
     </para>
________________________________________________________-->
     <para>
      修复逻辑复制中决定是否需要表同步操作的竞争条件（Vignesh C）
     </para>
<!-- pgdoc-cn_end sig_en=5dc07490408abe2da2ac59ef8209fa3f -->

<!-- pgdoc-cn_start sig_en=7954c5c9f1da1f9e2167a0db50130ab9 sig_cn_org=1366de6dce93be8c3fdf588f26318aef source=15.7 
     <para>
      An invalidation event arriving while a subscriber identifies which
      tables need to be synced would be forgotten about, so that any
      tables newly in need of syncing might not get processed in a timely
      fashion.
     </para>
________________________________________________________-->
     <para>
      当订阅者确定需要同步哪些表时，如果发生失效事件，则可能会被忘记，导致一些新需要同步的表可能无法及时处理。
     </para>
<!-- pgdoc-cn_end sig_en=7954c5c9f1da1f9e2167a0db50130ab9 -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [fbf9a7ac4] 2024-02-13 21:23:41 +0200
Branch: REL_16_STABLE [f2f09b825] 2024-02-13 21:24:45 +0200
Branch: REL_15_STABLE [d46c26961] 2024-02-13 21:25:27 +0200
Branch: REL_14_STABLE [9b8550fbd] 2024-02-13 21:25:39 +0200
Branch: REL_13_STABLE [e92375692] 2024-02-13 21:25:48 +0200
Branch: REL_12_STABLE [95cc48ca0] 2024-02-13 21:25:59 +0200
-->
<!-- pgdoc-cn_start sig_en=895abfc05d4338cc457b64c0898e137e sig_cn_org=1e168f3a62a08769c359d59ea1836671 source=15.7 
     <para>
      Fix crash with DSM allocations larger than 4GB (Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      修复了DSM分配大于4GB时的崩溃（Heikki Linnakangas）
     </para>
<!-- pgdoc-cn_end sig_en=895abfc05d4338cc457b64c0898e137e -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [f8c5317d0] 2024-03-12 10:18:32 +0200
Branch: REL_16_STABLE [539e328b1] 2024-03-12 10:18:44 +0200
Branch: REL_15_STABLE [4fce5f970] 2024-03-12 10:18:50 +0200
Branch: REL_14_STABLE [bf1f593e8] 2024-03-12 10:18:51 +0200
Branch: REL_13_STABLE [ad5cd55e6] 2024-03-12 10:18:53 +0200
Branch: REL_12_STABLE [df27d76d3] 2024-03-12 10:18:54 +0200
-->
<!-- pgdoc-cn_start sig_en=817473370c69618e4508dce0a10196b2 sig_cn_org=728667e1ff1405820598a69d1be11b7c source=15.7 
     <para>
      Disconnect if a new server session's client socket cannot be put
      into non-blocking mode (Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      如果无法将新服务器会话的客户端套接字设置为非阻塞模式，则断开连接（Heikki Linnakangas）
     </para>
<!-- pgdoc-cn_end sig_en=817473370c69618e4508dce0a10196b2 -->

<!-- pgdoc-cn_start sig_en=55214c97eb5ade1325994768693ffaf9 sig_cn_org=b19c99c9e0a82c37eedc1a8d5f3cf833 source=15.7 
     <para>
      It was once theoretically possible for us to operate with a socket
      that's in blocking mode; but that hasn't worked fully in a long
      time, so fail at connection start rather than misbehave later.
     </para>
________________________________________________________-->
     <para>
      曾经在理论上我们可以使用阻塞模式的套接字；但长期以来这种方式并没有完全起作用，所以在连接开始时失败，而不是之后出现问题。
     </para>
<!-- pgdoc-cn_end sig_en=55214c97eb5ade1325994768693ffaf9 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [453c46873] 2024-03-07 19:38:17 -0500
Branch: REL_16_STABLE [6a2c80e95] 2024-03-07 19:37:51 -0500
Branch: REL_15_STABLE [0fe82e45c] 2024-03-07 19:37:51 -0500
Branch: REL_14_STABLE [473babd42] 2024-03-07 19:37:51 -0500
Branch: REL_13_STABLE [9fbe07275] 2024-03-07 19:37:51 -0500
Branch: REL_12_STABLE [c42e5fdcf] 2024-03-07 19:37:51 -0500
-->
<!-- pgdoc-cn_start sig_en=3439dceeed850a161ba192329385ce4d sig_cn_org=bb6ee7f6d8ddbc95b3cf27136069b914 source=15.7 
     <para>
      Fix inadequate error reporting
      with <application>OpenSSL</application> 3.0.0 and later (Heikki
      Linnakangas, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<application>OpenSSL</application> 3.0.0及更高版本的错误报告不足问题（Heikki
      Linnakangas, Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=3439dceeed850a161ba192329385ce4d -->

<!-- pgdoc-cn_start sig_en=d911f1749a350683af4686094edef20e sig_cn_org=d84021361f5f3bf8d8c61c5e6df08b01 source=15.7 
     <para>
      System-reported errors passed through by OpenSSL were reported with
      a numeric error code rather than anything readable.
     </para>
________________________________________________________-->
     <para>
      OpenSSL传递的系统报告的错误是用数字错误代码而不是可读内容报告的。
     </para>
<!-- pgdoc-cn_end sig_en=d911f1749a350683af4686094edef20e -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a584d03ce] 2024-02-09 11:21:08 -0500
Branch: REL_16_STABLE [52afe5632] 2024-02-09 11:21:08 -0500
Branch: REL_15_STABLE [806f98951] 2024-02-09 11:21:08 -0500
Branch: REL_14_STABLE [8ead39e38] 2024-02-09 11:21:08 -0500
Branch: REL_13_STABLE [8c5da20db] 2024-02-09 11:21:08 -0500
Branch: REL_12_STABLE [9fb1396a9] 2024-02-09 11:21:08 -0500
Branch: master [0028b55bc] 2024-02-09 11:11:39 -0500
Branch: REL_16_STABLE [9440d23a0] 2024-02-09 11:11:39 -0500
Branch: REL_15_STABLE [9f041b041] 2024-02-09 11:11:39 -0500
Branch: REL_14_STABLE [7d7cc7fd6] 2024-02-09 11:11:39 -0500
Branch: REL_13_STABLE [67f8cf0f0] 2024-02-09 11:11:39 -0500
Branch: REL_12_STABLE [95e960e81] 2024-02-09 11:11:39 -0500
-->
<!-- pgdoc-cn_start sig_en=084cff234bcbc73aa6fd7ea71b463580 sig_cn_org=b7071ce230e36f552634d560349ca1c7 source=15.7 
     <para>
      Avoid concurrent calls to <function>bindtextdomain()</function>
      in <application>libpq</application>
      and <application>ecpglib</application> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免在<application>libpq</application>和<application>ecpglib</application>中同时调用<function>bindtextdomain()</function>（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=084cff234bcbc73aa6fd7ea71b463580 -->

<!-- pgdoc-cn_start sig_en=993e387fff81d6b9aebef10ae67cf68e sig_cn_org=666058c730eea1ddb50ff7cab7674b40 source=15.7 
     <para>
      Although GNU <application>gettext</application>'s implementation
      seems to be fine with concurrent calls, the version available on
      Windows is not.
     </para>
________________________________________________________-->
     <para>
      虽然GNU <application>gettext</application>的实现似乎可以处理并发调用，但在Windows上可用的版本不行。
     </para>
<!-- pgdoc-cn_end sig_en=993e387fff81d6b9aebef10ae67cf68e -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6f0cef935] 2024-04-16 12:31:42 -0400
Branch: REL_16_STABLE [392e6e9e6] 2024-04-16 12:31:32 -0400
Branch: REL_15_STABLE [25f937217] 2024-04-16 12:31:32 -0400
Branch: REL_14_STABLE [463164639] 2024-04-16 12:31:32 -0400
Branch: REL_13_STABLE [02531e8ca] 2024-04-16 12:31:32 -0400
Branch: REL_12_STABLE [2b6a74afe] 2024-04-16 12:31:32 -0400
Branch: REL_16_STABLE [0018f0af5] 2024-04-18 20:47:37 -0400
Branch: REL_15_STABLE [1e7b1b026] 2024-04-18 20:47:37 -0400
Branch: REL_14_STABLE [df66319f7] 2024-04-18 20:47:37 -0400
Branch: REL_13_STABLE [481597fc6] 2024-04-18 20:47:37 -0400
Branch: REL_12_STABLE [61dd815e0] 2024-04-18 20:47:37 -0400
Branch: REL_16_STABLE [dd3fddc85] 2024-04-19 01:07:16 -0400
Branch: REL_15_STABLE [f7e891748] 2024-04-19 01:07:32 -0400
Branch: REL_14_STABLE [de84608e2] 2024-04-19 01:07:41 -0400
Branch: REL_13_STABLE [c6bfeab42] 2024-04-19 01:07:47 -0400
Branch: REL_12_STABLE [cd26f08e4] 2024-04-19 01:07:52 -0400
-->
<!-- pgdoc-cn_start sig_en=016e987fa68daa9273d30a1ea3ef7170 sig_cn_org=64a98f52934c0627eb5024ac9dcaf101 source=15.7 
     <para>
      Fix crash in <application>ecpg</application>'s preprocessor if
      the program tries to redefine a macro that was defined on the
      preprocessor command line (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<application>ecpg</application>的预处理器在程序尝试重新定义在预处理器命令行上定义的宏时崩溃（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=016e987fa68daa9273d30a1ea3ef7170 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [096a761d6] 2024-04-04 15:31:53 -0400
Branch: REL_16_STABLE [118558e6d] 2024-04-04 15:31:53 -0400
Branch: REL_15_STABLE [f159f1814] 2024-04-04 15:31:53 -0400
Branch: REL_14_STABLE [d3167ed3f] 2024-04-04 15:31:53 -0400
Branch: REL_13_STABLE [5ba29e945] 2024-04-04 15:31:53 -0400
Branch: REL_12_STABLE [360d007e3] 2024-04-04 15:31:53 -0400
-->
<!-- pgdoc-cn_start sig_en=bbe2ce8dbf15b0a916e7cc848fe0eb9c sig_cn_org=d5b45ab8dfe02bd009d1846a627b2736 source=15.7 
     <para>
      In <application>ecpg</application>, avoid issuing
      false <quote>unsupported feature will be passed to server</quote>
      warnings (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在<application>ecpg</application>中，避免发出错误的<quote>不支持的功能将被传递给服务器</quote>警告（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=bbe2ce8dbf15b0a916e7cc848fe0eb9c -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e77a1c58e] 2024-02-19 11:38:18 +0900
Branch: REL_16_STABLE [88e03d055] 2024-02-19 11:38:44 +0900
Branch: REL_15_STABLE [b5cb6022b] 2024-02-19 11:38:47 +0900
Branch: REL_14_STABLE [a05bb9add] 2024-02-19 11:38:49 +0900
Branch: REL_13_STABLE [c031ce97b] 2024-02-19 11:38:52 +0900
Branch: REL_12_STABLE [771240f97] 2024-02-19 11:38:54 +0900
-->
<!-- pgdoc-cn_start sig_en=2bd1d447fa0111335df295b2e6c8fcf8 sig_cn_org=3b2b4eaf4b7b0c6a4f547e4899fcf66b source=15.7 
     <para>
      Ensure that the string result
      of <application>ecpg</application>'s <function>intoasc()</function>
      function is correctly zero-terminated (Oleg Tselebrovskiy)
     </para>
________________________________________________________-->
     <para>
      确保<application>ecpg</application>的<function>intoasc()</function>函数的字符串结果正确地以零结尾（Oleg Tselebrovskiy）
     </para>
<!-- pgdoc-cn_end sig_en=2bd1d447fa0111335df295b2e6c8fcf8 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f463de59d] 2024-04-08 17:00:07 -0400
Branch: REL_16_STABLE [a85e3ba1c] 2024-04-08 17:00:07 -0400
Branch: REL_15_STABLE [4f1d33d70] 2024-04-08 17:00:07 -0400
-->
<!-- pgdoc-cn_start sig_en=70126f42dea72690ca05a72276f58d79 sig_cn_org=33bf9fa99c7a4bdcaf6c480698a2a824 source=15.7 
     <para>
      In <application>psql</application>, avoid leaking a query result
      after the query is cancelled (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在<application>psql</application>中，在查询被取消后避免泄漏查询结果（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=70126f42dea72690ca05a72276f58d79 -->

<!-- pgdoc-cn_start sig_en=9e488e5facc6e9668efbe0ad0b02342a sig_cn_org=c9e8c8a4033f10d1b7d3bbf8a95bbd9f source=15.7 
     <para>
      This happened only when cancelling a non-last query in a query
      string made with <literal>\;</literal> separators.
     </para>
________________________________________________________-->
     <para>
      这种情况仅在取消一个使用<literal>\;</literal>分隔符组成的查询字符串中的非最后一个查询时发生。
     </para>
<!-- pgdoc-cn_end sig_en=9e488e5facc6e9668efbe0ad0b02342a -->
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [7e65ad197] 2024-03-21 23:31:57 +0100
Branch: REL_16_STABLE [5863bacb8] 2024-03-21 23:31:57 +0100
Branch: REL_15_STABLE [12128be62] 2024-03-21 23:31:57 +0100
Branch: REL_14_STABLE [be01c8c34] 2024-03-21 23:31:57 +0100
Branch: REL_13_STABLE [affc46b76] 2024-03-21 23:31:57 +0100
Branch: REL_12_STABLE [d82cb467b] 2024-03-21 23:31:57 +0100
Branch: REL_14_STABLE [6ebd43725] 2024-03-22 01:01:30 +0100
Branch: REL_13_STABLE [d5c6affb8] 2024-03-22 01:01:30 +0100
Branch: REL_12_STABLE [82c2192d9] 2024-03-22 01:01:30 +0100
-->
<!-- pgdoc-cn_start sig_en=10d5bad1199b6d804cf473179faf0cf9 sig_cn_org=a41d898982fcdea52604d34d9eee0009 source=15.7 
     <para>
      Fix <application>pg_dumpall</application> so that role comments, if
      present, will be dumped regardless of the setting
      of <option>-&minus;no-role-passwords</option> (Daniel Gustafsson,
      &Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      修复<application>pg_dumpall</application>，使得角色注释（如果存在）将被转储，无论
      <option>--no-role-passwords</option>的设置如何（Daniel Gustafsson，
      &Aacute;lvaro Herrera）
</para>
<!-- pgdoc-cn_end sig_en=10d5bad1199b6d804cf473179faf0cf9 -->
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [c1fc502f5] 2024-02-13 13:47:12 +0100
Branch: REL_16_STABLE [103235888] 2024-02-13 13:47:12 +0100
Branch: REL_15_STABLE [29f005238] 2024-02-13 13:47:12 +0100
-->
<!-- pgdoc-cn_start sig_en=f14c7bb6bb965c820bb83f891f97c506 sig_cn_org=190905451456d8abb20690721aa2ace2 source=15.7 
     <para>
      Skip files named <filename>.DS_Store</filename>
      in <application>pg_basebackup</application>,
      <application>pg_checksums</application>,
      and <application>pg_rewind</application> (Daniel Gustafsson)
     </para>
________________________________________________________-->
     <para>
      跳过名为<filename>.DS_Store</filename>的文件，
      在<application>pg_basebackup</application>，
      <application>pg_checksums</application>，
      和<application>pg_rewind</application>中（Daniel Gustafsson）
</para>
<!-- pgdoc-cn_end sig_en=f14c7bb6bb965c820bb83f891f97c506 -->

<!-- pgdoc-cn_start sig_en=e8f658a0849030026b0706f21b5a8bb2 sig_cn_org=e1b26a1067e6bdac33a9aca295f8469e source=15.7 
     <para>
      This avoids problems on macOS, where the Finder may create such
      files.
     </para>
________________________________________________________-->
     <para>
      这样可以避免在macOS上出现问题，因为Finder可能会创建这样的文件。
     </para>
<!-- pgdoc-cn_end sig_en=e8f658a0849030026b0706f21b5a8bb2 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5392dd3d2] 2024-04-10 15:45:58 -0400
Branch: REL_16_STABLE [48f216dc6] 2024-04-10 15:45:58 -0400
Branch: REL_15_STABLE [d85db0a8e] 2024-04-10 15:45:59 -0400
Branch: REL_14_STABLE [dc5824a06] 2024-04-10 15:45:59 -0400
Branch: REL_13_STABLE [f5cee411a] 2024-04-10 15:45:59 -0400
Branch: REL_12_STABLE [5e9d8bed0] 2024-04-10 15:45:59 -0400
-->
<!-- pgdoc-cn_start sig_en=1ede55a024da226e9e2b77ea88cb237f sig_cn_org=101620fc559f7ef78eab0534efe763da source=15.7 
     <para>
      Fix <application>PL/pgSQL</application>'s parsing of single-line
      comments (<literal>-&minus;</literal>-style comments) following
      expressions (Erik Wienhold, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<application>PL/pgSQL</application>对表达式后面的单行注释（<literal>--</literal>风格注释）的解析（Erik Wienhold, Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=1ede55a024da226e9e2b77ea88cb237f -->

<!-- pgdoc-cn_start sig_en=b62bac4f900db43f02961841c00fe1ca sig_cn_org=bf5e1054fe11b1ce01430d9cd60c4744 source=15.7 
     <para>
      This mistake caused parse errors if such a comment followed
      a <literal>WHEN</literal> expression in
      a <application>PL/pgSQL</application> <command>CASE</command>
      statement.
     </para>
________________________________________________________-->
     <para>
      这个错误导致在<literal>WHEN</literal>表达式后面跟着一个注释时出现解析错误，
      在<application>PL/pgSQL</application> <command>CASE</command>语句中。
</para>
<!-- pgdoc-cn_end sig_en=b62bac4f900db43f02961841c00fe1ca -->
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [b1fe8efdf] 2024-03-24 00:09:24 +0200
Branch: REL_16_STABLE [3676b846b] 2024-03-23 23:02:30 +0200
Branch: REL_15_STABLE [0d466bce9] 2024-03-23 23:02:43 +0200
Branch: REL_14_STABLE [4e8529da4] 2024-03-23 23:03:10 +0200
Branch: REL_13_STABLE [5cc1f2626] 2024-03-23 23:03:12 +0200
Branch: REL_12_STABLE [d603e6744] 2024-03-24 00:08:13 +0200
Branch: master [ab65dfb0f] 2024-03-24 00:09:24 +0200
Branch: REL_16_STABLE [a6ddb8ad0] 2024-03-23 23:02:30 +0200
Branch: REL_15_STABLE [54e6184db] 2024-03-23 23:02:43 +0200
Branch: REL_14_STABLE [5df5d9cd7] 2024-03-23 23:03:10 +0200
Branch: REL_13_STABLE [e2c241416] 2024-03-23 23:03:12 +0200
Branch: REL_12_STABLE [50f8611d0] 2024-03-23 23:03:14 +0200
-->
<!-- pgdoc-cn_start sig_en=df8787c1ea4449d08bc9abf33625be42 sig_cn_org=a49b219e2806b7e7e928104186b4dc06 source=15.7 
     <para>
      In <filename>contrib/amcheck</filename>, don't report false match
      failures due to short- versus long-header values (Andrey Borodin,
      Michael Zhilin)
     </para>
________________________________________________________-->
     <para>
      在<filename>contrib/amcheck</filename>中，不要报告由于短头部与长头部值不匹配而导致的假匹配失败（Andrey Borodin，Michael Zhilin）
     </para>
<!-- pgdoc-cn_end sig_en=df8787c1ea4449d08bc9abf33625be42 -->

<!-- pgdoc-cn_start sig_en=15680ef9ac78b67abe778745dcbade18 sig_cn_org=96217c62408d337143e158c5d8659376 source=15.7 
     <para>
      A variable-length datum in a heap tuple or index tuple could have
      either a short or a long header, depending on compression parameters
      that applied when it was made.  Treat these cases as equivalent
      rather than complaining if there's a difference.
     </para>
________________________________________________________-->
     <para>
      在堆元组或索引元组中，变长数据可以有短头部或长头部，这取决于制作时应用的压缩参数。
      将这些情况视为等效，而不是在存在差异时报错。
</para>
<!-- pgdoc-cn_end sig_en=15680ef9ac78b67abe778745dcbade18 -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [bb616ed3e] 2024-04-14 18:19:58 +0200
Branch: REL_16_STABLE [8cea358b1] 2024-04-14 18:24:38 +0200
Branch: master [2f20ced1e] 2024-04-14 18:07:15 +0200
Branch: REL_16_STABLE [ccd8f0fa1] 2024-04-14 18:17:09 +0200
Branch: REL_15_STABLE [3cd413511] 2024-04-14 18:17:29 +0200
Branch: REL_14_STABLE [ad23af83d] 2024-04-14 18:18:07 +0200
-->
<!-- pgdoc-cn_start sig_en=0d0ef8e9367c1a925c16854fb5530b47 sig_cn_org=225707965e828d1f575ad91952eb77ac source=15.7 
     <para>
      Fix bugs in BRIN output functions (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      修复BRIN输出函数中的错误（Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=0d0ef8e9367c1a925c16854fb5530b47 -->

<!-- pgdoc-cn_start sig_en=0ac526879545a1a9acb0aca9bf4aaffc sig_cn_org=addcd565168e3d4d672af121936c619c source=15.7 
     <para>
      These output functions are only used for displaying index entries
      in <filename>contrib/pageinspect</filename>, so the errors are of
      limited practical concern.
     </para>
________________________________________________________-->
     <para>
      这些输出函数仅用于在<filename>contrib/pageinspect</filename>中显示索引条目，因此错误的实际影响有限。
     </para>
<!-- pgdoc-cn_end sig_en=0ac526879545a1a9acb0aca9bf4aaffc -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [c399248b3] 2024-03-11 12:27:11 +1300
Branch: REL_16_STABLE [6a9e2cb2b] 2024-03-11 12:27:46 +1300
Branch: REL_15_STABLE [ab64b275a] 2024-03-11 12:28:11 +1300
Branch: REL_14_STABLE [628c3f2e1] 2024-03-11 12:28:40 +1300
Branch: REL_13_STABLE [20b85b3da] 2024-03-11 12:29:03 +1300
Branch: REL_12_STABLE [9301e0f41] 2024-03-11 12:29:24 +1300
-->
<!-- pgdoc-cn_start sig_en=63edd1aa2a8a86e20ac862b54874aad4 sig_cn_org=eed8db9cb98968268cb2be2b98255e89 source=15.7 
     <para>
      In <filename>contrib/postgres_fdw</filename>, avoid emitting
      requests to sort by a constant (David Rowley)
     </para>
________________________________________________________-->
     <para>
      在<filename>contrib/postgres_fdw</filename>中，避免发出按常数排序的请求（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=63edd1aa2a8a86e20ac862b54874aad4 -->

<!-- pgdoc-cn_start sig_en=1f3d21a9a3286ba3d7782e5489c4ff3e sig_cn_org=6fd70abec4aacbae8b527bacc7ebc319 source=15.7 
     <para>
      This could occur in cases involving <literal>UNION ALL</literal>
      with constant-emitting subqueries.  Sorting by a constant is useless
      of course, but it also risks being misinterpreted by the remote
      server, leading to <quote>ORDER BY
      position <replaceable>N</replaceable> is not in select list</quote>
      errors.
     </para>
________________________________________________________-->
     <para>
      这可能发生在涉及<literal>UNION ALL</literal>和发出常量的子查询的情况下。按常量排序当然是无用的，
      但也有被远程服务器误解的风险，导致<quote>ORDER BY position <replaceable>N</replaceable> is not in select list</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=1f3d21a9a3286ba3d7782e5489c4ff3e -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a3021aafc] 2024-04-21 13:46:20 -0400
Branch: REL_16_STABLE [75929b6cf] 2024-04-21 13:46:20 -0400
Branch: REL_15_STABLE [6c85e3359] 2024-04-21 13:46:20 -0400
Branch: REL_14_STABLE [3ed6e1698] 2024-04-21 13:46:20 -0400
Branch: REL_13_STABLE [0e56b2b94] 2024-04-21 13:46:20 -0400
Branch: REL_12_STABLE [ce1c30ece] 2024-04-21 13:46:20 -0400
-->
<!-- pgdoc-cn_start sig_en=3800ac862fb9c7be97765d3fc7d6998e sig_cn_org=591d63fc41290b35c09ef0c5917e5076 source=15.7 
     <para>
      Make <filename>contrib/postgres_fdw</filename> set the remote
      session's time zone to <literal>GMT</literal>
      not <literal>UTC</literal> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      使<filename>contrib/postgres_fdw</filename>设置远程会话的时区为<literal>GMT</literal>而不是<literal>UTC</literal>（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=3800ac862fb9c7be97765d3fc7d6998e -->

<!-- pgdoc-cn_start sig_en=54f3e9e3d66355b226e4c95f72284257 sig_cn_org=a7fbea79ebb26fcf8a8fbde0b9d9ceba source=15.7 
     <para>
      This should have the same results for practical purposes.
      However, <literal>GMT</literal> is recognized by hard-wired code in
      the server, while <literal>UTC</literal> is looked up in the
      timezone database.  So the old code could fail in the unlikely event
      that the remote server's timezone database is missing entries.
     </para>
________________________________________________________-->
     <para>
      这在实际目的上应该有相同的结果。
      然而，<literal>GMT</literal>被服务器中的硬编码识别，
      而<literal>UTC</literal>在时区数据库中查找。
      因此，在极少数情况下，旧代码可能会失败，
      如果远程服务器的时区数据库缺少条目。
</para>
<!-- pgdoc-cn_end sig_en=54f3e9e3d66355b226e4c95f72284257 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: REL_16_STABLE [7c93f31de] 2024-04-16 12:25:48 +0900
Branch: REL_15_STABLE [689ba4f1c] 2024-04-16 12:26:10 +0900
Branch: REL_14_STABLE [6fa5e67e8] 2024-04-16 12:26:15 +0900
Branch: REL_13_STABLE [bb418aeee] 2024-04-16 12:26:17 +0900
Branch: REL_12_STABLE [4b0e5d601] 2024-04-16 12:26:21 +0900
-->
<!-- pgdoc-cn_start sig_en=044d3a22b010f5365bd7418efb3af1ff sig_cn_org=08a0216c8b4bde885023a1c96f0946c4 source=15.7 
     <para>
      In <filename>contrib/xml2</filename>, avoid use of library functions
      that have been deprecated in recent versions
      of <application>libxml2</application> (Dmitry Koval)
     </para>
________________________________________________________-->
     <para>
      在<filename>contrib/xml2</filename>中，避免使用在最近版本的<application>libxml2</application>中已被弃用的库函数（Dmitry Koval）
     </para>
<!-- pgdoc-cn_end sig_en=044d3a22b010f5365bd7418efb3af1ff -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [53c8d6c9f] 2024-04-10 12:13:46 +1200
Branch: REL_16_STABLE [bf1cfe77e] 2024-04-10 10:46:15 +1200
Branch: REL_15_STABLE [74992929a] 2024-04-10 12:14:04 +1200
Branch: REL_14_STABLE [7fe32eaa4] 2024-04-10 12:15:07 +1200
Branch: REL_13_STABLE [4f90750b5] 2024-04-10 12:15:41 +1200
Branch: REL_12_STABLE [01b55203a] 2024-04-10 12:15:59 +1200
-->
<!-- pgdoc-cn_start sig_en=114a1866c8f6674ff676cee4738f6591 sig_cn_org=ea31083108aeeaf57800a817bb2bd693 source=15.7 
     <para>
      Fix incompatibility with LLVM 18 (Thomas Munro, Dmitry Dolgov)
     </para>
________________________________________________________-->
     <para>
      修复与LLVM 18的不兼容性（Thomas Munro，Dmitry Dolgov）
     </para>
<!-- pgdoc-cn_end sig_en=114a1866c8f6674ff676cee4738f6591 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8a92b70c1] 2024-03-26 11:44:49 -0400
Branch: REL_16_STABLE [7651fd387] 2024-03-26 11:44:49 -0400
Branch: REL_15_STABLE [3c3f4fd74] 2024-03-26 11:44:49 -0400
Branch: REL_14_STABLE [d82605bcd] 2024-03-26 11:44:49 -0400
Branch: REL_13_STABLE [243e99532] 2024-03-26 11:44:49 -0400
Branch: REL_12_STABLE [7124e7d52] 2024-03-26 11:44:49 -0400
-->
<!-- pgdoc-cn_start sig_en=62c0f29acaefbb02f8ebb1430d6f8c1a sig_cn_org=daf6f1dbf5fab1720593831055ff60a4 source=15.7 
     <para>
      Allow <literal>make check</literal> to work with
      the <application>musl</application> C library (Thomas Munro, Bruce
      Momjian, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      允许<literal>make check</literal>与<application>musl</application> C库一起工作（Thomas Munro, Bruce
      Momjian, Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=62c0f29acaefbb02f8ebb1430d6f8c1a -->
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-6">
<!-- pgdoc-cn_start sig_en=5d6d27432817fcf8d845967765d4dc71 sig_cn_org=aa32f5c6fbd8be2d7946a5a8c2d85179 source=15.7 
  <title>Release 15.6</title>
________________________________________________________-->
  <title>发布版本 15.6</title>
<!-- pgdoc-cn_end sig_en=5d6d27432817fcf8d845967765d4dc71 -->

  <formalpara>
<!-- pgdoc-cn_start sig_en=c45e8127eac45f2347bf1713afaeffda sig_cn_org=253305b4c6dff5b87ef36e3c2d95e52e source=15.7 
  <title>Release date:</title>
________________________________________________________-->
  <title>发布日期：</title>
<!-- pgdoc-cn_end sig_en=c45e8127eac45f2347bf1713afaeffda -->
<!-- pgdoc-cn_start sig_en=12886d7f25cc4b09bf7d171c9f47cb86 sig_cn_org=ef130e0e1b61feb4035c63b4e0c9255c source=15.7 
  <para>2024-02-08</para>
________________________________________________________-->
  <para>2024年2月8日</para>
<!-- pgdoc-cn_end sig_en=12886d7f25cc4b09bf7d171c9f47cb86 -->
  </formalpara>

<!-- pgdoc-cn_start sig_en=cc776eb0072f79f4017f897ad674547a sig_cn_org=af569d3e0d889eed2dc895f08146537c source=15.7 
  <para>
   This release contains a variety of fixes from 15.5.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>
________________________________________________________-->
  <para>
   这个版本包含了从15.5版本中的各种修复。
   有关主要版本15中新功能的信息，请参见<xref linkend="release-15"/>。
</para>
<!-- pgdoc-cn_end sig_en=cc776eb0072f79f4017f897ad674547a -->

  <sect2>
<!-- pgdoc-cn_start sig_en=71822fdb073de595131bbb6a71f8a903 sig_cn_org=469a995a0697453a324d7dd410c308bf source=15.7 
   <title>Migration to Version 15.6</title>
________________________________________________________-->
   <title>升级到版本15.6</title>
<!-- pgdoc-cn_end sig_en=71822fdb073de595131bbb6a71f8a903 -->

<!-- pgdoc-cn_start sig_en=036ed5117c7b85420fc61cc5e5b99f8b sig_cn_org=992c4bf77211ba6013c0d564cef911c0 source=15.7 
   <para>
    A dump/restore is not required for those running 15.X.
   </para>
________________________________________________________-->
   <para>
    对于运行15.X版本的用户，不需要进行dump/restore操作。
   </para>
<!-- pgdoc-cn_end sig_en=036ed5117c7b85420fc61cc5e5b99f8b -->

<!-- pgdoc-cn_start sig_en=04345c515d08abdbcd532a0ad30f98d1 sig_cn_org=514dd86cf3f6c21c826c23fb0d69f0a1 source=15.7 
   <para>
    However, one bug was fixed that could have resulted in corruption of
    GIN indexes during concurrent updates.  If you suspect such
    corruption, reindex affected indexes after installing this update.
   </para>
________________________________________________________-->
   <para>
    然而，修复了一个bug，可能导致在并发更新期间对GIN索引的损坏。如果您怀疑存在这种损坏，
    在安装此更新后重新索引受影响的索引。
</para>
<!-- pgdoc-cn_end sig_en=04345c515d08abdbcd532a0ad30f98d1 -->

<!-- pgdoc-cn_start sig_en=05250e0ba0342a334cc1f8ab33ef4299 sig_cn_org=28eba0625afe46baf72edc5f9457ffa3 source=15.7 
   <para>
    Also, if you are upgrading from a version earlier than 15.5,
    see <xref linkend="release-15-5"/>.
   </para>
________________________________________________________-->
   <para>
    另外，如果您正在从15.5之前的版本升级，请参阅<xref linkend="release-15-5"/>。
   </para>
<!-- pgdoc-cn_end sig_en=05250e0ba0342a334cc1f8ab33ef4299 -->
  </sect2>

  <sect2>
<!-- pgdoc-cn_start sig_en=e161fef38e54e54458e215e5f978ef9b sig_cn_org=f104d50dd9d4dd802f94229ebe5bc097 source=15.7 
   <title>Changes</title>
________________________________________________________-->
   <title>变更</title>
<!-- pgdoc-cn_end sig_en=e161fef38e54e54458e215e5f978ef9b -->

   <itemizedlist>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [5a9167c39] 2024-02-05 11:01:23 +0200
Branch: REL_16_STABLE [d6a61cb3b] 2024-02-05 11:02:56 +0200
Branch: REL_15_STABLE [f2fdea198] 2024-02-05 11:03:26 +0200
Branch: REL_14_STABLE [f4f288352] 2024-02-05 11:03:43 +0200
Branch: REL_13_STABLE [d541ce3b6] 2024-02-05 11:04:08 +0200
Branch: REL_12_STABLE [2699fc035] 2024-02-05 11:04:22 +0200
Branch: master [b96115acb] 2024-02-05 11:01:30 +0200
Branch: REL_16_STABLE [fb3836855] 2024-02-05 11:03:03 +0200
Branch: REL_15_STABLE [06f36bc01] 2024-02-05 11:03:28 +0200
Branch: REL_14_STABLE [a45c950ae] 2024-02-05 11:03:43 +0200
Branch: REL_13_STABLE [b73d21648] 2024-02-05 11:04:10 +0200
Branch: REL_12_STABLE [add8bc9b8] 2024-02-05 11:04:23 +0200
-->
<!-- pgdoc-cn_start sig_en=6ec96e2db03dad612f1ffc669c47901c sig_cn_org=44e6cbaa5a2395f143b83a4012060197 source=15.7 
     <para>
      Tighten security restrictions within <command>REFRESH MATERIALIZED
      VIEW CONCURRENTLY</command> (Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      在<command>REFRESH MATERIALIZED VIEW CONCURRENTLY</command>（Heikki Linnakangas）中加强安全限制。
     </para>
<!-- pgdoc-cn_end sig_en=6ec96e2db03dad612f1ffc669c47901c -->

<!-- pgdoc-cn_start sig_en=69b09b0097fbb945b7a36ec70798a267 sig_cn_org=83f433d082687692d922c8f083253658 source=15.7 
     <para>
      One step of a concurrent refresh command was run under weak security
      restrictions.  If a materialized view's owner could persuade a
      superuser or other high-privileged user to perform a concurrent
      refresh on that view, the view's owner could control code executed
      with the privileges of the user running <command>REFRESH</command>.
      Fix things so that all user-determined code is run as the view's
      owner, as expected.
     </para>
________________________________________________________-->
     <para>
      并发刷新命令的一个步骤在弱安全限制下运行。如果一个物化视图的所有者能说服一个超级用户或其他高特权用户对该视图执行并发刷新，
	  那么该视图的所有者可以控制以运行<command>REFRESH</command>的用户特权执行的代码。修复问题，使所有用户确定的代码按照预期以视图所有者身份运行。
     </para>
<!-- pgdoc-cn_end sig_en=69b09b0097fbb945b7a36ec70798a267 -->

<!-- pgdoc-cn_start sig_en=0108a367587f3a770b0196198f581f94 sig_cn_org=3b77803d3f8544b20239344e19251dea source=15.7 
     <para>
      The only known exploit for this error does not work
      in <productname>PostgreSQL</productname> 16.0 and later, so it may
      be that v16 is not vulnerable in practice.
     </para>
________________________________________________________-->
     <para>
      这个错误的唯一已知利用在<productname>PostgreSQL</productname> 16.0及更高版本中不起作用，
      因此在实践中v16可能不会受到影响。
     </para>
<!-- pgdoc-cn_end sig_en=0108a367587f3a770b0196198f581f94 -->

<!-- pgdoc-cn_start sig_en=794e828834e195143a77563de0c54839 sig_cn_org=65a7c04e9ff00ce4b5d1629b8d9fe1c2 source=15.7 
     <para>
      The <productname>PostgreSQL</productname> Project thanks Pedro
      Gallegos for reporting this problem.
      (CVE-2024-0985) <!-&minus; not CVE-2023-5869 as claimed in commit msg -&minus;>
     </para>
________________________________________________________-->
     <para>
      <productname>PostgreSQL</productname>项目感谢Pedro Gallegos报告了这个问题。
      (CVE-2024-0985) <!-- 提交消息中声称不是CVE-2023-5869 -->
</para>
<!-- pgdoc-cn_end sig_en=794e828834e195143a77563de0c54839 -->
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [9dce22033] 2023-09-27 13:02:21 +0200
Branch: REL_16_STABLE [2cf50585e] 2023-11-17 10:18:38 +0100
Branch: REL_15_STABLE [aef521849] 2023-11-17 10:21:34 +0100
Branch: REL_14_STABLE [75a20a4b4] 2023-11-17 10:27:45 +0100
Branch: REL_13_STABLE [10912f7d4] 2023-11-17 11:46:31 +0100
Branch: REL_12_STABLE [3b991f81c] 2023-11-17 11:47:17 +0100
Branch: REL_12_STABLE [c922b2410] 2023-12-11 12:02:01 +0100
-->
<!-- pgdoc-cn_start sig_en=fd42c659fb0b1a93ece93f802915c726 sig_cn_org=1d439d4ada71adf55b6e8ac0da179dc4 source=15.7 
     <para>
      Fix memory leak when performing JIT inlining (Andres Freund,
      Daniel Gustafsson)
     </para>
________________________________________________________-->
     <para>
      修复在执行JIT内联时的内存泄漏（Andres Freund，Daniel Gustafsson）
     </para>
<!-- pgdoc-cn_end sig_en=fd42c659fb0b1a93ece93f802915c726 -->

<!-- pgdoc-cn_start sig_en=81057fcb4dab2d1f7ce3ce29517a3886 sig_cn_org=98340ccb44f293bb032e40c34325a3a2 source=15.7 
     <para>
      There have been multiple reports of backend processes suffering
      out-of-memory conditions after sufficiently many JIT compilations.
      This fix should resolve that.
     </para>
________________________________________________________-->
     <para>
      有多份报告显示，在经过足够多的JIT编译后，后端进程出现了内存不足的情况。这个修复应该解决这个问题。
     </para>
<!-- pgdoc-cn_end sig_en=81057fcb4dab2d1f7ce3ce29517a3886 -->
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: REL_15_STABLE [f374fb4aa] 2024-01-18 11:12:31 +0900
Branch: REL_14_STABLE [5f6ec27a6] 2024-01-18 11:12:38 +0900
Branch: REL_13_STABLE [dc9d424cf] 2024-01-18 11:12:43 +0900
Branch: REL_12_STABLE [810382285] 2024-01-18 11:12:48 +0900
-->
<!-- pgdoc-cn_start sig_en=952619556ef26e3307050dee184adc79 sig_cn_org=24071424af90b0d0c5ead0395deca6da source=15.7 
     <para>
      When dequeueing from an LWLock, avoid needing to search the list of
      waiting processes (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      当从LWLock中出队时，避免需要搜索等待进程列表（Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=952619556ef26e3307050dee184adc79 -->

<!-- pgdoc-cn_start sig_en=b8886be71368a3dd68c404fafae9772d sig_cn_org=2ce66641d3eda68e8731eb2560e61bed source=15.7 
     <para>
      This fixes O(N^2) behavior when the list of waiters is long.  In
      some use-cases this results in substantial throughput improvements.
     </para>
________________________________________________________-->
     <para>
      这修复了当等待者列表很长时O(N^2)的行为。在某些用例中，这会导致
      显著的吞吐量改进。
     </para>
<!-- pgdoc-cn_end sig_en=b8886be71368a3dd68c404fafae9772d -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_16_STABLE [62f120203] 2024-02-01 12:34:21 -0500
Branch: REL_15_STABLE [12ec16d11] 2024-02-01 12:34:21 -0500
Branch: REL_14_STABLE [e031995d5] 2024-02-01 12:34:21 -0500
Branch: REL_13_STABLE [7af96a66f] 2024-02-01 12:34:21 -0500
Branch: REL_12_STABLE [2e822a1d6] 2024-02-01 12:34:21 -0500
-->
<!-- pgdoc-cn_start sig_en=ce7d62fe96b77d117a9bf3faf3a9fb87 sig_cn_org=645de2439a3ec01233fef5d199b68c35 source=15.7 
     <para>
      Avoid generating incorrect partitioned-join plans (Richard Guo)
     </para>
________________________________________________________-->
     <para>
      避免生成不正确的分区连接计划（Richard Guo）
     </para>
<!-- pgdoc-cn_end sig_en=ce7d62fe96b77d117a9bf3faf3a9fb87 -->

<!-- pgdoc-cn_start sig_en=26fbb1b9975191b9a30a36012352416a sig_cn_org=58cfd468ea6ac505bc3c4057c4c7982c source=15.7 
     <para>
      Some uncommon situations involving lateral references could create
      incorrect plans.  Affected queries could produce wrong answers, or
      odd failures such as <quote>variable not found in subplan target
      list</quote>, or executor crashes.
     </para>
________________________________________________________-->
     <para>
      涉及横向引用的一些不常见情况可能导致不正确的计划。受影响的查询可能产生错误的答案，
      或者出现奇怪的故障，比如<quote>子计划目标列表中找不到变量</quote>，或执行器崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=26fbb1b9975191b9a30a36012352416a -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [29f114b6f] 2024-01-11 15:28:22 -0500
Branch: REL_16_STABLE [80bece312] 2024-01-11 15:28:13 -0500
Branch: REL_15_STABLE [a0b4fda44] 2024-01-11 15:28:13 -0500
Branch: REL_14_STABLE [ea1d54288] 2024-01-11 15:28:13 -0500
Branch: REL_13_STABLE [bfd28bb07] 2024-01-11 15:28:13 -0500
Branch: REL_12_STABLE [69c12c417] 2024-01-11 15:28:13 -0500
-->
<!-- pgdoc-cn_start sig_en=83a9c9d778918cd54d125dc8c7582427 sig_cn_org=e6c64a1e8f341c6266fe551a13a9a944 source=15.7 
     <para>
      Fix incorrect wrapping of subquery output expressions in
      PlaceHolderVars (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复PlaceHolderVars中子查询输出表达式的错误换行(Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=83a9c9d778918cd54d125dc8c7582427 -->

<!-- pgdoc-cn_start sig_en=e78521da15e87f53ef35629dd5b2e921 sig_cn_org=5f5fae479bb0d26f2e7a45d6d377a70f source=15.7 
     <para>
      This fixes incorrect results when a subquery is underneath an outer
      join and has an output column that laterally references something
      outside the outer join's scope.  The output column might not appear
      as NULL when it should do so due to the action of the outer join.
     </para>
________________________________________________________-->
     <para>
      这个修复了当一个子查询位于外连接下面，并且具有一个输出列横向引用了外连接范围之外的内容时产生的不正确结果。
      由于外连接的作用，输出列可能不会出现为NULL，而实际上应该是NULL。
</para>
<!-- pgdoc-cn_end sig_en=e78521da15e87f53ef35629dd5b2e921 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d641b827a] 2024-01-10 13:36:33 -0500
Branch: REL_16_STABLE [ee9553218] 2024-01-10 13:36:34 -0500
Branch: REL_15_STABLE [c3f52fd5d] 2024-01-10 13:36:34 -0500
-->
<!-- pgdoc-cn_start sig_en=3baedcbfde48d229bb28244f9554dca8 sig_cn_org=21e434d45050ad6b17ffd1f226b2bab1 source=15.7 
     <para>
      Fix misprocessing of window function run conditions (Richard Guo)
     </para>
________________________________________________________-->
     <para>
      修复窗口函数运行条件的错误处理（Richard Guo）
     </para>
<!-- pgdoc-cn_end sig_en=3baedcbfde48d229bb28244f9554dca8 -->

<!-- pgdoc-cn_start sig_en=6c08a87d7d7159037543894c264f1f69 sig_cn_org=ab8dc8030c9246a07426b30e51ac3037 source=15.7 
     <para>
      This oversight could lead to <quote>WindowFunc not found in subplan
      target lists</quote> errors.
     </para>
________________________________________________________-->
     <para>
      这个疏忽可能导致<quote>在子计划目标列表中找不到WindowFunc</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=6c08a87d7d7159037543894c264f1f69 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [a4f7d33a9] 2023-11-09 11:23:42 +0000
Branch: REL_16_STABLE [06a546382] 2023-11-09 11:27:04 +0000
Branch: REL_15_STABLE [c0bfdaf2b] 2023-11-09 11:28:25 +0000
-->
<!-- pgdoc-cn_start sig_en=1e00ace5124af1603bde6cffcb0a9d31 sig_cn_org=63ecc3e8fddb4bdc29898cf79c325f9d source=15.7 
     <para>
      Skip inappropriate actions when <command>MERGE</command> causes a
      cross-partition update (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      当<command>MERGE</command>导致跨分区更新时，跳过不合适的操作（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=1e00ace5124af1603bde6cffcb0a9d31 -->

<!-- pgdoc-cn_start sig_en=80a76dad61ace555a840605e8b1e129f sig_cn_org=0a6109c8143e56d4bc93b61a01a1b4b5 source=15.7 
     <para>
      When executing a <literal>MERGE UPDATE</literal> action on a
      partitioned table, if the <literal>UPDATE</literal> is turned into
      a <literal>DELETE</literal> and <literal>INSERT</literal> due to
      changing a partition key column, skip firing <literal>AFTER
      UPDATE ROW</literal> triggers, as well as other post-update actions
      such as RLS checks.  These actions would typically fail, which is
      why a regular <literal>UPDATE</literal> doesn't do them in such
      cases; <literal>MERGE</literal> shouldn't either.
     </para>
________________________________________________________-->
     <para>
      在对分区表执行<literal>MERGE UPDATE</literal>操作时，如果由于更改分区键列而将<literal>UPDATE</literal>转换为<literal>DELETE</literal>和<literal>INSERT</literal>，则跳过触发<literal>AFTER UPDATE ROW</literal>触发器，以及其他后续更新操作，如RLS检查。这些操作通常会失败，这就是为什么在这种情况下常规<literal>UPDATE</literal>不会执行它们；<literal>MERGE</literal>也不应该执行。
     </para>
<!-- pgdoc-cn_end sig_en=80a76dad61ace555a840605e8b1e129f -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [a0ff37173] 2023-12-21 12:55:22 +0000
Branch: REL_16_STABLE [7f07384dc] 2023-12-21 12:53:48 +0000
Branch: REL_15_STABLE [7e8c6d7af] 2023-12-21 12:51:55 +0000
-->
<!-- pgdoc-cn_start sig_en=6b2b475820bae8098641b898ee300d33 sig_cn_org=46c37e5fc13d0c855e9a486578e000bb source=15.7 
     <para>
      Cope with <literal>BEFORE ROW DELETE</literal> triggers in
      cross-partition <command>MERGE</command> updates (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      处理跨分区<literal>BEFORE ROW DELETE</literal>触发器中的<command>MERGE</command>更新（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=6b2b475820bae8098641b898ee300d33 -->

<!-- pgdoc-cn_start sig_en=f81f386a231705eaa8f5da1d8482b43d sig_cn_org=2fda4bc06fd758117742d41175724fcf source=15.7 
     <para>
      If such a trigger attempted to prevent the update by returning
      NULL, <command>MERGE</command> would suffer an error or assertion
      failure.
     </para>
________________________________________________________-->
     <para>
      如果这样一个触发器试图通过返回NULL来阻止更新，<command>MERGE</command>将会出现错误或断言失败。
     </para>
<!-- pgdoc-cn_end sig_en=f81f386a231705eaa8f5da1d8482b43d -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6545ba96c] 2024-01-14 12:38:41 -0500
Branch: REL_16_STABLE [23e0ba59c] 2024-01-14 12:38:41 -0500
Branch: REL_15_STABLE [1a4e54617] 2024-01-14 12:38:41 -0500
Branch: REL_14_STABLE [c7edaeec5] 2024-01-14 12:38:41 -0500
-->
<!-- pgdoc-cn_start sig_en=bee60be1b01b03b01a8ba49673f09563 sig_cn_org=306701b2288b82f7c31374e25506aecb source=15.7 
     <para>
      Prevent access to a no-longer-pinned buffer in <literal>BEFORE ROW
      UPDATE</literal> triggers (Alexander Lakhin, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      防止在<literal>BEFORE ROW UPDATE</literal>触发器中访问不再固定的缓冲区（Alexander Lakhin，Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=bee60be1b01b03b01a8ba49673f09563 -->

<!-- pgdoc-cn_start sig_en=6173d951d15a1325ba3f96c2b558d074 sig_cn_org=26a2acb3f03dd2d91e06587d90fcefda source=15.7 
     <para>
      If the tuple being updated had just been updated and moved to
      another page by another session, there was a narrow window where
      we would attempt to fetch data from the new tuple version without
      any pin on its buffer.  In principle this could result in garbage
      data appearing in non-updated columns of the proposed new tuple.
      The odds of problems in practice seem rather low, however.
     </para>
________________________________________________________-->
     <para>
      如果正在更新的元组刚刚被另一个会话更新并移动到另一页，那么在一个狭窄的时间窗口内，
      我们会尝试从新元组版本获取数据，而没有对其缓冲区进行任何锁定。原则上，这可能导致
      更新的新元组的非更新列中出现垃圾数据。然而，实际上出现问题的几率似乎相当低。
     </para>
<!-- pgdoc-cn_end sig_en=6173d951d15a1325ba3f96c2b558d074 -->
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [2a67b5a60] 2024-01-07 09:10:19 +0200
Branch: REL_16_STABLE [714a987bc] 2024-01-07 09:32:58 +0200
Branch: REL_15_STABLE [1a7c03e6f] 2024-01-07 09:10:40 +0200
Branch: REL_14_STABLE [3bdaa8fc6] 2024-01-07 09:10:49 +0200
Branch: REL_13_STABLE [60de25c6e] 2024-01-07 09:11:00 +0200
Branch: REL_12_STABLE [72d5b2776] 2024-01-07 09:18:43 +0200
Branch: master [6d94cc6ca] 2024-01-08 20:00:20 +0200
Branch: REL_16_STABLE [20a566cd4] 2024-01-08 19:57:09 +0200
Branch: REL_15_STABLE [6eecc3a62] 2024-01-08 19:57:03 +0200
Branch: REL_14_STABLE [97e64911d] 2024-01-08 19:57:58 +0200
Branch: REL_13_STABLE [17b6f39f1] 2024-01-08 19:58:38 +0200
Branch: REL_12_STABLE [a5e2853c3] 2024-01-08 19:58:51 +0200
-->
<!-- pgdoc-cn_start sig_en=ca47f8d5656e23b1ccbc4441086c69d1 sig_cn_org=1fa6e5fc7f762521ec3d387806ea93a7 source=15.7 
     <para>
      Avoid requesting an oversize shared-memory area in parallel hash
      join (Thomas Munro, Andrei Lepikhov, Alexander Korotkov)
     </para>
________________________________________________________-->
     <para>
      避免在并行哈希连接中请求过大的共享内存区域（Thomas Munro，Andrei Lepikhov，Alexander Korotkov）
     </para>
<!-- pgdoc-cn_end sig_en=ca47f8d5656e23b1ccbc4441086c69d1 -->

<!-- pgdoc-cn_start sig_en=7adefe91a48d61558bd246b2c1af5b37 sig_cn_org=ccbdad5f50d5edea8d32759418154b23 source=15.7 
     <para>
      The limiting value was too large, allowing <quote>invalid DSA memory
      alloc request size</quote> errors to occur with sufficiently large
      expected hash table sizes.
     </para>
________________________________________________________-->
     <para>
      限制值过大，导致期望的哈希表大小足够大时发生<quote>无效的DSA内存分配请求大小</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=7adefe91a48d61558bd246b2c1af5b37 -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [60f227316] 2023-11-28 12:00:14 +0200
Branch: REL_16_STABLE [9fee3232a] 2023-11-28 11:59:45 +0200
Branch: REL_15_STABLE [2873fbfe0] 2023-11-28 11:59:50 +0200
Branch: REL_14_STABLE [59c62a21f] 2023-11-28 11:59:51 +0200
Branch: REL_13_STABLE [e434d3620] 2023-11-28 11:59:52 +0200
Branch: REL_12_STABLE [b8a606e21] 2023-11-28 11:59:53 +0200
-->
<!-- pgdoc-cn_start sig_en=383352a04fd9f20b00c06846cf06b735 sig_cn_org=6ef88719cd8604c778f773782a4d82de source=15.7 
     <para>
      Avoid assertion failures in <function>heap_update()</function>
      and <function>heap_delete()</function> when a tuple to be updated by
      a foreign-key enforcement trigger fails the extra visibility
      crosscheck (Alexander Lakhin)
     </para>
________________________________________________________-->
     <para>
      避免在<function>heap_update()</function>和<function>heap_delete()</function>中出现断言失败，
	  当一个元组由外键强制触发器更新失败时，额外的可见性交叉检查失败（Alexander Lakhin）
     </para>
<!-- pgdoc-cn_end sig_en=383352a04fd9f20b00c06846cf06b735 -->

<!-- pgdoc-cn_start sig_en=4a17d426633dee52899ebe9113a47bbc sig_cn_org=bfc18e1253d878184d5d45268b53b2bc source=15.7 
     <para>
      This error had no impact in non-assert builds.
     </para>
________________________________________________________-->
     <para>
      这个错误在非断言构建中没有影响。
     </para>
<!-- pgdoc-cn_end sig_en=4a17d426633dee52899ebe9113a47bbc -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [1b2c6b756] 2023-11-08 14:06:26 +0900
Branch: REL_16_STABLE [4dccf9575] 2023-11-08 14:06:36 +0900
Branch: REL_15_STABLE [7e18c0bd6] 2023-11-08 14:06:39 +0900
Branch: REL_14_STABLE [59fc39c0d] 2023-11-08 14:06:42 +0900
-->
<!-- pgdoc-cn_start sig_en=e39aee06504abcc6dc076d64fefc0045 sig_cn_org=6a06b394acb4ded4ba7d6e265a2e9097 source=15.7 
     <para>
      Fix overly tight assertion
      about <varname>false_positive_rate</varname> parameter of
      BRIN bloom operator classes (Alexander Lakhin)
     </para>
________________________________________________________-->
     <para>
      修复BRIN布隆运算符类的<varname>false_positive_rate</varname>参数的过于严格的断言（Alexander Lakhin）
     </para>
<!-- pgdoc-cn_end sig_en=e39aee06504abcc6dc076d64fefc0045 -->

<!-- pgdoc-cn_start sig_en=09f836c6203e5425d427292ff9e1c68a sig_cn_org=e8d8c7ad274c1b378ec44ba0e03e7b17 source=15.7 
     <para>
      This error had no impact in non-assert builds, either.
     </para>
________________________________________________________-->
     <para>
      这个错误在非断言构建中没有任何影响。
     </para>
<!-- pgdoc-cn_end sig_en=09f836c6203e5425d427292ff9e1c68a -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [bb812ab09] 2024-01-24 14:20:01 +0900
Branch: REL_16_STABLE [51193e7a7] 2024-01-24 14:20:08 +0900
Branch: REL_15_STABLE [ad6fbbeeb] 2024-01-24 14:20:10 +0900
Branch: REL_14_STABLE [5a7833f49] 2024-01-24 14:20:11 +0900
Branch: REL_13_STABLE [bfec14d06] 2024-01-24 14:20:13 +0900
Branch: REL_12_STABLE [2f7242837] 2024-01-24 14:20:14 +0900
-->
<!-- pgdoc-cn_start sig_en=d81e44ccb96b9b368d14a89cccd89b3b sig_cn_org=91463b5c568578e1ac8ebb3c3bf3fbe4 source=15.7 
     <para>
      Fix possible failure during <command>ALTER TABLE ADD
      COLUMN</command> on a complex inheritance tree (Tender Wang)
     </para>
________________________________________________________-->
     <para>
      修复在复杂继承树上进行<command>ALTER TABLE ADD COLUMN</command>可能失败的问题（Tender Wang）
     </para>
<!-- pgdoc-cn_end sig_en=d81e44ccb96b9b368d14a89cccd89b3b -->

<!-- pgdoc-cn_start sig_en=1742bcd6b671e7e3acf1d93b017712ac sig_cn_org=3416f8c6a1c7dadb08502f4a8209c8a2 source=15.7 
     <para>
      If a grandchild table would inherit the new column via multiple
      intermediate parents, the command failed with <quote>tuple already
      updated by self</quote>.
     </para>
________________________________________________________-->
     <para>
      如果一个孙表通过多个中间父表继承新列，该命令将失败，显示<quote>tuple already
      updated by self</quote>。
     </para>
<!-- pgdoc-cn_end sig_en=1742bcd6b671e7e3acf1d93b017712ac -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [3e91dba8b] 2024-01-31 13:15:21 +0900
Branch: REL_16_STABLE [f33e83285] 2024-01-31 13:16:43 +0900
Branch: REL_15_STABLE [41fa4b31c] 2024-01-31 13:16:46 +0900
Branch: REL_14_STABLE [dde5b01c3] 2024-01-31 13:16:47 +0900
Branch: REL_13_STABLE [4d0e8a008] 2024-01-31 13:16:49 +0900
Branch: REL_12_STABLE [056109782] 2024-01-31 13:16:50 +0900
-->
<!-- pgdoc-cn_start sig_en=b708a4fe5174a238b3381bf389b7381a sig_cn_org=dd1ec8defbe5fc3282ee4390930053cd source=15.7 
     <para>
      Fix problems with duplicate token names in <command>ALTER TEXT
      SEARCH CONFIGURATION ... MAPPING</command> commands (Tender Wang,
      Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      修复<command>ALTER TEXT SEARCH CONFIGURATION ... MAPPING</command>命令中重复标记名称的问题（Tender Wang，Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=b708a4fe5174a238b3381bf389b7381a -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [28f84f72f] 2023-11-19 21:03:38 +0100
Branch: REL_16_STABLE [ee32b824d] 2023-11-19 21:03:50 +0100
Branch: REL_15_STABLE [0177fc773] 2023-11-19 21:04:16 +0100
Branch: REL_14_STABLE [9dd50e92e] 2023-11-19 21:04:28 +0100
Branch: REL_13_STABLE [1e468ea4e] 2023-11-19 21:04:39 +0100
Branch: REL_12_STABLE [4f8d3c5b5] 2023-11-19 21:04:47 +0100
-->
<!-- pgdoc-cn_start sig_en=dd9a87426bc1b3bbc5fd2d1a40f79780 sig_cn_org=1643c725826bf354041eb35099b4146c source=15.7 
     <para>
      Properly lock the associated table during <command>DROP
      STATISTICS</command> (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      在<command>DROP STATISTICS</command>期间正确锁定相关表（Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=dd9a87426bc1b3bbc5fd2d1a40f79780 -->

<!-- pgdoc-cn_start sig_en=f1bbc63335fd9ee94657cd80a8e40ea3 sig_cn_org=b2b44cebda3c2873a66ab72b24073b2d source=15.7 
     <para>
      Failure to acquire the lock could result in <quote>tuple
      concurrently deleted</quote> errors if the <command>DROP</command>
      executes concurrently with <command>ANALYZE</command>.
     </para>
________________________________________________________-->
     <para>
      未能获取锁可能导致<quote>元组同时被删除</quote>错误，如果<command>DROP</command>
      与<command>ANALYZE</command>并发执行。
     </para>
<!-- pgdoc-cn_end sig_en=f1bbc63335fd9ee94657cd80a8e40ea3 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [743ddafc7] 2023-11-16 10:05:14 -0500
Branch: REL_16_STABLE [f07a3039c] 2023-11-16 10:05:14 -0500
Branch: REL_15_STABLE [9057ddbef] 2023-11-16 10:05:14 -0500
Branch: REL_14_STABLE [9bd0f74ea] 2023-11-16 10:05:14 -0500
Branch: REL_13_STABLE [5c11104c7] 2023-11-16 10:05:14 -0500
Branch: REL_12_STABLE [abd1b1325] 2023-11-16 10:05:14 -0500
-->
<!-- pgdoc-cn_start sig_en=baa81cf731b18aaaf4fa010fa08d655d sig_cn_org=ce918471e4e29e9fb525511d0c2bc073 source=15.7 
     <para>
      Fix function volatility checking for <literal>GENERATED</literal>
      and <literal>DEFAULT</literal> expressions (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复函数波动性检查对<literal>GENERATED</literal>和<literal>DEFAULT</literal>表达式的处理（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=baa81cf731b18aaaf4fa010fa08d655d -->

<!-- pgdoc-cn_start sig_en=9ff5372340c70988e69cdcde72d8cde6 sig_cn_org=079775a31a39c3f50fe3270d5e00407a source=15.7 
     <para>
      These places could fail to detect insertion of a volatile function
      default-argument expression, or decide that a polymorphic function
      is volatile although it is actually immutable on the datatype of
      interest.  This could lead to improperly rejecting or accepting
      a <literal>GENERATED</literal> clause, or to mistakenly applying the
      constant-default-value optimization in <command>ALTER TABLE ADD
      COLUMN</command>.
     </para>
________________________________________________________-->
     <para>
      这些地方可能无法检测插入易失函数默认参数表达式，或者认为多态函数是易失的，尽管在感兴趣的数据类型上实际上是不可变的。
      这可能导致错误地拒绝或接受<literal>GENERATED</literal>子句，或者错误地应用常量默认值优化在<command>ALTER TABLE ADD
      COLUMN</command>中。
     </para>
<!-- pgdoc-cn_end sig_en=9ff5372340c70988e69cdcde72d8cde6 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ad98fb142] 2024-01-13 13:46:27 -0500
Branch: REL_16_STABLE [7e2561e1a] 2024-01-13 13:46:27 -0500
Branch: REL_15_STABLE [2a46a0df4] 2024-01-13 13:46:27 -0500
Branch: REL_14_STABLE [db122d426] 2024-01-13 13:46:27 -0500
Branch: REL_13_STABLE [98e03f957] 2024-01-13 13:46:27 -0500
Branch: REL_12_STABLE [3b4d85cf1] 2024-01-13 13:46:27 -0500
Branch: master [96c019ffa] 2024-01-13 13:54:11 -0500
Branch: REL_16_STABLE [56dcd71de] 2024-01-13 13:54:11 -0500
Branch: REL_15_STABLE [d41358f4b] 2024-01-13 13:54:11 -0500
Branch: REL_14_STABLE [7ceeb57ba] 2024-01-13 13:54:11 -0500
Branch: REL_13_STABLE [475b3ea3c] 2024-01-13 13:54:11 -0500
Branch: REL_12_STABLE [d29a4fbac] 2024-01-13 13:54:11 -0500
-->
<!-- pgdoc-cn_start sig_en=658c6ec9cbddf00610c02bfe46d13365 sig_cn_org=b03267e41433e1ec2e2b58aefab72467 source=15.7 
     <para>
      Detect that a new catalog cache entry became stale while detoasting
      its fields (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      检测到一个新的目录缓存条目在解除toast时变得过时（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=658c6ec9cbddf00610c02bfe46d13365 -->

<!-- pgdoc-cn_start sig_en=44b94bb923c48688d96390e6e8512c86 sig_cn_org=c0466fa3227ea8671e7b767a61582805 source=15.7 
     <para>
      We expand any out-of-line fields in a catalog tuple before inserting
      it into the catalog caches.  That involves database access which
      might cause invalidation of catalog cache entries &mdash; but the
      new entry isn't in the cache yet, so we would miss noticing that it
      should get invalidated.  The result is a race condition in which an
      already-stale cache entry could get made, and then persist
      indefinitely.  This would lead to hard-to-predict misbehavior.
      Fix by rechecking the tuple's visibility after detoasting.
     </para>
________________________________________________________-->
     <para>
      在将目录元组插入目录缓存之前，我们会扩展目录元组中的任何离线字段。这涉及到数据库访问，可能会导致目录缓存条目失效&mdash;但新条目尚未在缓存中，因此我们可能会错过应该使其失效的通知。结果是一种竞争条件，其中一个已经过时的缓存条目可能会被创建，然后持续存在。这将导致难以预测的错误行为。通过在解压后重新检查元组的可见性来修复。
     </para>
<!-- pgdoc-cn_end sig_en=44b94bb923c48688d96390e6e8512c86 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [0e3e8fbd3] 2023-11-09 09:50:23 +0000
Branch: REL_16_STABLE [c396aca2b] 2023-11-09 09:53:05 +0000
Branch: REL_15_STABLE [308a69a98] 2023-11-09 09:54:22 +0000
Branch: REL_14_STABLE [dea12b40d] 2023-11-09 09:55:39 +0000
Branch: REL_13_STABLE [4f4a0010a] 2023-11-09 09:56:31 +0000
Branch: REL_12_STABLE [b17a02be2] 2023-11-09 09:57:52 +0000
-->
<!-- pgdoc-cn_start sig_en=1874d4f4ca6a2546bbda52ce80fc21a6 sig_cn_org=c72c826f05e87937d3fea29976b23055 source=15.7 
     <para>
      Fix edge-case integer overflow detection bug on some platforms (Dean
      Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复一些平台上的边缘情况整数溢出检测bug（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=1874d4f4ca6a2546bbda52ce80fc21a6 -->

<!-- pgdoc-cn_start sig_en=987f559b37e600b57bfa87bc5a1c6916 sig_cn_org=e11e4133b81e2415f3cb8741d37bc9f2 source=15.7 
     <para>
      Computing <literal>0 - INT64_MIN</literal> should result in an
      overflow error, and did on most platforms.  However, platforms with
      neither integer overflow builtins nor 128-bit integers would fail to
      spot the overflow, instead returning <literal>INT64_MIN</literal>.
     </para>
________________________________________________________-->
     <para>
      计算<literal>0 - INT64_MIN</literal>应该导致溢出错误，在大多数平台上确实如此。
      然而，既没有整数溢出内置函数也没有128位整数的平台会无法发现溢出，而是返回<literal>INT64_MIN</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=987f559b37e600b57bfa87bc5a1c6916 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [25cd2d640] 2024-01-26 13:39:45 -0500
Branch: REL_16_STABLE [7204aea83] 2024-01-26 13:39:37 -0500
Branch: REL_15_STABLE [86b6243a8] 2024-01-26 13:39:37 -0500
Branch: REL_14_STABLE [3eb8a87f6] 2024-01-26 13:39:37 -0500
Branch: REL_13_STABLE [425127bed] 2024-01-26 13:39:37 -0500
Branch: REL_12_STABLE [c3bdb25fb] 2024-01-26 13:39:37 -0500
-->
<!-- pgdoc-cn_start sig_en=965b90c26a1c8e066fc47dc6b73e0169 sig_cn_org=8457c525d4b896b99eea35a5306464bb source=15.7 
     <para>
      Detect Julian-date overflow when adding or subtracting
      an <type>interval</type> to/from a <type>timestamp</type> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      当将<type>interval</type>添加到/从<type>时间戳</type>时，检测儒略日期溢出（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=965b90c26a1c8e066fc47dc6b73e0169 -->

<!-- pgdoc-cn_start sig_en=eaeedcc133c3c2abf346f23a7a77e669 sig_cn_org=3f7e23df3d401a30f98b91e05e0266c7 source=15.7 
     <para>
      Some cases that should cause an out-of-range error produced an
      incorrect result instead.
     </para>
________________________________________________________-->
     <para>
      一些应该引起超出范围错误的情况，却产生了错误的结果。
     </para>
<!-- pgdoc-cn_end sig_en=eaeedcc133c3c2abf346f23a7a77e669 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [b218fbb7a] 2023-11-18 14:41:20 +0000
Branch: REL_16_STABLE [72d0c135b] 2023-11-18 14:46:02 +0000
Branch: REL_15_STABLE [2851aa7d1] 2023-11-18 14:47:04 +0000
Branch: REL_14_STABLE [2ffcebdba] 2023-11-18 14:48:10 +0000
Branch: REL_13_STABLE [428770aad] 2023-11-18 14:49:18 +0000
Branch: REL_12_STABLE [f499d2b20] 2023-11-18 14:50:00 +0000
-->
<!-- pgdoc-cn_start sig_en=786a2261f8c56755633d9ba746d27b2a sig_cn_org=d24307e22b1aae422e29eaad1a6b4153 source=15.7 
     <para>
      Add more checks for overflow in <function>interval_mul()</function>
      and <function>interval_div()</function> (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      为<function>interval_mul()</function>和<function>interval_div()</function>添加更多的溢出检查（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=786a2261f8c56755633d9ba746d27b2a -->

<!-- pgdoc-cn_start sig_en=eaeedcc133c3c2abf346f23a7a77e669 sig_cn_org=3f7e23df3d401a30f98b91e05e0266c7 source=15.7 
     <para>
      Some cases that should cause an out-of-range error produced an
      incorrect result instead.
     </para>
________________________________________________________-->
     <para>
      一些应该引起超出范围错误的情况，却产生了错误的结果。
     </para>
<!-- pgdoc-cn_end sig_en=eaeedcc133c3c2abf346f23a7a77e669 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [235c09efb] 2024-02-01 17:12:50 +0900
Branch: REL_16_STABLE [781bc121d] 2024-02-01 17:13:09 +0900
Branch: REL_15_STABLE [171d21f50] 2024-02-01 17:13:11 +0900
-->
<!-- pgdoc-cn_start sig_en=672c67c2acca7f96ffd8132eb72d3ad5 sig_cn_org=87e560e51772d6b584299fec517c42da source=15.7 
     <para>
      Ensure cached statistics are discarded after a change
      to <varname>stats_fetch_consistency</varname> (Shinya Kato)
     </para>
________________________________________________________-->
     <para>
      确保在更改<varname>stats_fetch_consistency</varname>后丢弃缓存的统计信息（加藤真也）
     </para>
<!-- pgdoc-cn_end sig_en=672c67c2acca7f96ffd8132eb72d3ad5 -->

<!-- pgdoc-cn_start sig_en=fbf0d06566bbc2bcea5107156f4af312 sig_cn_org=d55f8abd95bb924613388ea3b101369b source=15.7 
     <para>
      In some code paths, it was possible for stale statistics to be
      returned.
     </para>
________________________________________________________-->
     <para>
      在某些代码路径中，可能会返回过时的统计信息。
     </para>
<!-- pgdoc-cn_end sig_en=fbf0d06566bbc2bcea5107156f4af312 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [059de3ca4] 2023-12-26 17:57:48 -0500
Branch: REL_16_STABLE [e87252ceb] 2023-12-26 17:57:48 -0500
Branch: REL_15_STABLE [76dd3d94a] 2023-12-26 17:57:48 -0500
Branch: REL_14_STABLE [bf4f30a0f] 2023-12-26 17:57:48 -0500
Branch: REL_13_STABLE [cb88f44ec] 2023-12-26 17:57:48 -0500
Branch: REL_12_STABLE [ea61b1cf6] 2023-12-26 17:57:48 -0500
-->
<!-- pgdoc-cn_start sig_en=3ff6f00fe5e2e7dec9ebcd8748140f17 sig_cn_org=a553f36bd8618738a48ca30d4062ec3b source=15.7 
     <para>
      Make the <structname>pg_file_settings</structname> view check
      validity of unapplied values for settings
      with <literal>backend</literal>
      or <literal>superuser-backend</literal> context (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      使<structname>pg_file_settings</structname>视图检查未应用值的有效性，
      具有<literal>backend</literal>或<literal>superuser-backend</literal>上下文的设置
      （Tom Lane）
</para>
<!-- pgdoc-cn_end sig_en=3ff6f00fe5e2e7dec9ebcd8748140f17 -->

<!-- pgdoc-cn_start sig_en=09c72e926f633812f5adc42519a969c1 sig_cn_org=9b41ab48c7d8c5333e2eff4459d687f1 source=15.7 
     <para>
      Invalid values were not noted in the view as intended.  This escaped
      detection because there are very few settings in these groups.
     </para>
________________________________________________________-->
     <para>
      无效值未如预期那样在视图中被记录。这是因为这些组中的设置非常少。
     </para>
<!-- pgdoc-cn_end sig_en=09c72e926f633812f5adc42519a969c1 -->
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [a11c9c42e] 2023-12-01 16:05:41 +0100
Branch: REL_16_STABLE [267f33f68] 2023-12-01 16:09:54 +0100
Branch: REL_15_STABLE [15d485921] 2023-12-01 16:14:22 +0100
Branch: REL_14_STABLE [e846fc491] 2023-12-01 16:17:38 +0100
Branch: REL_13_STABLE [3c49fa2af] 2023-12-01 16:23:18 +0100
Branch: REL_12_STABLE [5d40b3c4f] 2023-12-01 16:27:18 +0100
-->
<!-- pgdoc-cn_start sig_en=51bd9d8e09a6fe3fc33b9e4333c19a98 sig_cn_org=f68083bea09f9d136cc9f73f1803ecac source=15.7 
     <para>
      Match collation too when matching an existing index to a new
      partitioned index (Peter Eisentraut)
     </para>
________________________________________________________-->
     <para>
      在将现有索引与新的分区索引匹配时，也要匹配排序规则（Peter Eisentraut）
     </para>
<!-- pgdoc-cn_end sig_en=51bd9d8e09a6fe3fc33b9e4333c19a98 -->

<!-- pgdoc-cn_start sig_en=5dc8714d2c4f11481e83684895b89a7f sig_cn_org=df50637656a5275a0c7f72121686d19f source=15.7 
     <para>
      Previously we could accept an index that has a different collation
      from the corresponding element of the partition key, possibly
      leading to misbehavior.
     </para>
________________________________________________________-->
     <para>
      以前，我们可以接受一个索引，其排序与分区键的对应元素不同，可能导致不正确的行为。
     </para>
<!-- pgdoc-cn_end sig_en=5dc8714d2c4f11481e83684895b89a7f -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [0ae3b4662] 2024-01-18 16:30:11 +0900
Branch: REL_16_STABLE [c030e263e] 2024-01-18 16:31:38 +0900
Branch: REL_15_STABLE [a0c19de11] 2024-01-18 16:31:46 +0900
Branch: REL_14_STABLE [b6f2e019d] 2024-01-18 16:31:50 +0900
Branch: master [8013850c8] 2024-01-18 15:04:24 +0900
Branch: REL_16_STABLE [7ce65c6f7] 2024-01-18 15:04:31 +0900
Branch: REL_15_STABLE [1cf2dba84] 2024-01-18 15:04:35 +0900
Branch: REL_14_STABLE [b685b41cf] 2024-01-18 15:04:39 +0900
-->
<!-- pgdoc-cn_start sig_en=4b550f3c83ea0c59673c705b6201fe97 sig_cn_org=844992c3c1123ceb74576cc4ba37761b source=15.7 
     <para>
      Avoid failure if a child index is dropped concurrently
      with <command>REINDEX INDEX</command> on a partitioned index
      (Fei Changhong)
     </para>
________________________________________________________-->
     <para>
      避免在分区索引上同时与<command>REINDEX INDEX</command>并发删除子索引时出现故障
      (Fei Changhong)
     </para>
<!-- pgdoc-cn_end sig_en=4b550f3c83ea0c59673c705b6201fe97 -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [6a1ea02c4] 2024-01-29 13:46:22 +0200
Branch: REL_16_STABLE [b899e00e7] 2024-01-29 13:46:30 +0200
Branch: REL_15_STABLE [e43425f48] 2024-01-29 13:46:42 +0200
Branch: REL_14_STABLE [f120c0872] 2024-01-29 13:46:43 +0200
Branch: REL_13_STABLE [e74c91665] 2024-01-29 13:46:45 +0200
Branch: REL_12_STABLE [e6511fe64] 2024-01-29 13:46:48 +0200
-->
<!-- pgdoc-cn_start sig_en=e8c54ec4ae540ede13ed04e635350b62 sig_cn_org=e4efa6aac823f32189266f03ab27a6be source=15.7 
     <para>
      Fix insufficient locking when cleaning up an incomplete split of
      a GIN index's internal page (Fei Changhong, Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      修复了在清理GIN索引内部页面的不完整拆分时锁定不足的问题（Fei Changhong，Heikki Linnakangas）
     </para>
<!-- pgdoc-cn_end sig_en=e8c54ec4ae540ede13ed04e635350b62 -->

<!-- pgdoc-cn_start sig_en=11fbfef47a67e8d316486fa6cd774796 sig_cn_org=18c547819fb2ae01395ede963004b774 source=15.7 
     <para>
      The code tried to do this with shared rather than exclusive lock on
      the buffer.  This could lead to index corruption if two processes
      attempted the cleanup concurrently.
     </para>
________________________________________________________-->
     <para>
      该代码尝试在缓冲区上使用共享锁而不是独占锁。如果两个进程同时尝试清理，
	  这可能导致索引损坏。
     </para>
<!-- pgdoc-cn_end sig_en=11fbfef47a67e8d316486fa6cd774796 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5c62ecf6e] 2023-11-13 11:44:35 -0500
Branch: REL_16_STABLE [f76b975d5] 2023-11-13 11:44:48 -0500
Branch: REL_15_STABLE [4c73ec604] 2023-11-13 11:44:57 -0500
Branch: REL_14_STABLE [d900e74e0] 2023-11-13 11:45:04 -0500
Branch: REL_13_STABLE [c859d688b] 2023-11-13 11:45:09 -0500
Branch: REL_12_STABLE [5a6937ec9] 2023-11-13 11:45:13 -0500
-->
<!-- pgdoc-cn_start sig_en=caae7f53eae648c3b6389195c064183b sig_cn_org=77c3f2fe9f4ac55d6c9a89de4bb05782 source=15.7 
     <para>
      Avoid premature release of buffer pin in GIN index insertion
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免在GIN索引插入中过早释放缓冲区引用（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=caae7f53eae648c3b6389195c064183b -->

<!-- pgdoc-cn_start sig_en=7ad5a5e04ee2cf599dfc3635ca8ac173 sig_cn_org=9d31fa9a4cb04ae8e927c89f68ab0a15 source=15.7 
     <para>
      If an index root page split occurs concurrently with our own
      insertion, the code could fail with <quote>buffer NNNN is not owned
      by resource owner</quote>.
     </para>
________________________________________________________-->
     <para>
      如果索引根页面分裂与我们自己的插入同时发生，代码可能会出现失败，显示<quote>缓冲区NNNN不是资源所有者拥有</quote>。
     </para>
<!-- pgdoc-cn_end sig_en=7ad5a5e04ee2cf599dfc3635ca8ac173 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [903737c5b] 2023-12-21 12:43:36 -0500
Branch: REL_16_STABLE [0977bd64e] 2023-12-21 12:43:36 -0500
Branch: REL_15_STABLE [ab04c1901] 2023-12-21 12:43:36 -0500
Branch: REL_14_STABLE [375f441bd] 2023-12-21 12:43:36 -0500
Branch: REL_13_STABLE [cc3865150] 2023-12-21 12:43:36 -0500
Branch: REL_12_STABLE [1771ec9a8] 2023-12-21 12:43:36 -0500
-->
<!-- pgdoc-cn_start sig_en=bc86212488b25c7bc43d8ed5a375631f sig_cn_org=2539e80986379470209c045b4f6f7bbb source=15.7 
     <para>
      Avoid failure with partitioned SP-GiST indexes (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免使用分区SP-GiST索引失败（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=bc86212488b25c7bc43d8ed5a375631f -->

<!-- pgdoc-cn_start sig_en=14c320b746794beb95f8292690684f97 sig_cn_org=5f6b2645c7baaaeeeb108911883e186c source=15.7 
     <para>
      Trying to use an index of this kind could lead to <quote>No such
      file or directory</quote> errors.
     </para>
________________________________________________________-->
     <para>
      尝试使用这种索引可能导致<quote>没有这样的文件或目录</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=14c320b746794beb95f8292690684f97 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [59bd34c2f] 2023-12-15 13:55:05 -0500
Branch: REL_16_STABLE [152bfc0af] 2023-12-15 13:55:05 -0500
Branch: REL_15_STABLE [7a99fb6e1] 2023-12-15 13:55:05 -0500
Branch: REL_14_STABLE [f552f2be2] 2023-12-15 13:55:05 -0500
Branch: REL_13_STABLE [55b5c67da] 2023-12-15 13:55:05 -0500
Branch: REL_12_STABLE [ba66f2533] 2023-12-15 13:55:05 -0500
-->
<!-- pgdoc-cn_start sig_en=3529d0aaaec03a42d39e4bb7125016c9 sig_cn_org=bddd69f6a41c8c48c78f3fe02b47241c source=15.7 
     <para>
      Fix ownership change reporting for large objects (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复大对象所有权更改报告（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=3529d0aaaec03a42d39e4bb7125016c9 -->

<!-- pgdoc-cn_start sig_en=f33649aeed735067264dfe1b4b1964b4 sig_cn_org=8faeeb1b76c3cfb0e318175e7a35ee30 source=15.7 
     <para>
      A no-op <command>ALTER LARGE OBJECT OWNER</command> command (that
      is, one selecting the existing owner) passed the wrong class ID to
      the <varname>PostAlterHook</varname>, probably confusing any
      extension using that hook.
     </para>
________________________________________________________-->
     <para>
      一个无操作的<command>ALTER LARGE OBJECT OWNER</command>命令（即选择现有所有者）传递了错误的类ID给<varname>PostAlterHook</varname>，
	  可能会混淆任何使用该钩子的扩展。
     </para>
<!-- pgdoc-cn_end sig_en=f33649aeed735067264dfe1b4b1964b4 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: REL_16_STABLE [db69101a1] 2023-12-14 09:59:47 +0100
Branch: REL_15_STABLE [8dd70828b] 2023-12-14 09:59:52 +0100
-->
<!-- pgdoc-cn_start sig_en=ac020e1a4b250d1d7b6ed34bc5a19ec4 sig_cn_org=4a928f17ab70b85edf908c23ebd924ac source=15.7 
     <para>
      Fix reporting of I/O timing data in <literal>EXPLAIN
      (BUFFERS)</literal> (Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      修复<literal>EXPLAIN (BUFFERS)</literal>中I/O定时数据的报告（Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=ac020e1a4b250d1d7b6ed34bc5a19ec4 -->

<!-- pgdoc-cn_start sig_en=cb1238e9a6b23b620fa8f18f8e72e447 sig_cn_org=d32b03054d6da046706c8db64a5af095 source=15.7 
     <para>
      The numbers labeled as <quote>shared/local</quote> actually refer
      only to shared buffers, so change that label
      to <quote>shared</quote>.
     </para>
________________________________________________________-->
     <para>
      标记为<quote>shared/local</quote>的数字实际上只是指共享缓冲区，所以将该标签更改为<quote>shared</quote>。
     </para>
<!-- pgdoc-cn_end sig_en=cb1238e9a6b23b620fa8f18f8e72e447 -->
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [df220714e] 2024-02-01 13:44:19 -0800
Branch: REL_16_STABLE [6d423e9ff] 2024-02-01 13:44:22 -0800
Branch: REL_15_STABLE [d493bed28] 2024-02-01 13:44:22 -0800
Branch: master [0b6517a3b] 2024-02-01 13:44:19 -0800
Branch: REL_16_STABLE [48a6bf5c4] 2024-02-01 13:44:22 -0800
Branch: REL_15_STABLE [8fa4a1ac6] 2024-02-01 13:44:23 -0800
-->
<!-- pgdoc-cn_start sig_en=614be117b1c0d304d2f90485536b1bfa sig_cn_org=c0a54c657cc31786979cd689b078bb79 source=15.7 
     <para>
      Ensure durability of <command>CREATE DATABASE</command> (Noah Misch)
     </para>
________________________________________________________-->
     <para>
      确保<command>CREATE DATABASE</command>的耐久性（Noah Misch）
     </para>
<!-- pgdoc-cn_end sig_en=614be117b1c0d304d2f90485536b1bfa -->

<!-- pgdoc-cn_start sig_en=f2a6ddae1737e91b7c9ed9676c299ae1 sig_cn_org=44310d9de3f7f5a63c441bd0186e3528 source=15.7 
     <para>
      If an operating system crash occurred during or shortly
      after <command>CREATE DATABASE</command>, recovery could fail, or
      subsequent connections to the new database could fail.  If a base
      backup was taken in that window, similar problems could be observed
      when trying to use the backup.  The symptom would be that the
      database directory, <filename>PG_VERSION</filename> file, or
      <filename>pg_filenode.map</filename> file was missing or empty.
     </para>
________________________________________________________-->
     <para>
      如果在<command>CREATE DATABASE</command>期间或之后发生操作系统崩溃，
      可能会导致恢复失败，或者新数据库的后续连接失败。如果在该时间窗口内进行了基本备份，
      则在尝试使用备份时可能会观察到类似的问题。症状将是数据库目录、
      <filename>PG_VERSION</filename>文件或<filename>pg_filenode.map</filename>文件
      丢失或为空。
</para>
<!-- pgdoc-cn_end sig_en=f2a6ddae1737e91b7c9ed9676c299ae1 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [1d35f705e] 2024-01-25 17:07:56 +0900
Branch: REL_16_STABLE [edbd1b41a] 2024-01-29 09:04:51 +0900
Branch: REL_15_STABLE [8b34cff33] 2024-01-29 09:04:55 +0900
-->
<!-- pgdoc-cn_start sig_en=9aacca772eb7f867a004d9c58664b7b5 sig_cn_org=d2dd04cbc3c8d6cbea0b61dbdcb97caf source=15.7 
     <para>
      Add more <literal>LOG</literal> messages when starting and ending
      recovery from a backup (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      在从备份中开始和结束恢复时添加更多<literal>LOG</literal>消息（Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=9aacca772eb7f867a004d9c58664b7b5 -->

<!-- pgdoc-cn_start sig_en=949d4f4057bf578ccde78816b4421740 sig_cn_org=a88eab6bd5614a60e9dd13de68ffa7ae source=15.7 
     <para>
      This change provides additional information in the postmaster log
      that may be useful for diagnosing recovery problems.
     </para>
________________________________________________________-->
     <para>
      这个改变在postmaster日志中提供了额外的信息，这些信息可能对诊断恢复问题有用。
     </para>
<!-- pgdoc-cn_end sig_en=949d4f4057bf578ccde78816b4421740 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [8a7cbfce1] 2023-12-12 17:05:18 +0100
Branch: REL_16_STABLE [0e2c05af9] 2023-12-12 17:05:27 +0100
Branch: REL_15_STABLE [f5d8f59ca] 2023-12-12 17:05:29 +0100
Branch: REL_14_STABLE [0cfd3ddfe] 2023-12-12 17:05:33 +0100
Branch: REL_13_STABLE [d99294e77] 2023-12-12 17:05:34 +0100
Branch: REL_12_STABLE [4d45ecc92] 2023-12-12 17:05:36 +0100
-->
<!-- pgdoc-cn_start sig_en=245450db75d070d5432635468772da7a sig_cn_org=b0632fd9f9ea38c6746610af5805b4f4 source=15.7 
     <para>
      Prevent standby servers from incorrectly processing dead index
      tuples during subtransactions (Fei Changhong)
     </para>
________________________________________________________-->
     <para>
      防止待机服务器在子事务期间错误地处理死索引元组（费昌宏）
     </para>
<!-- pgdoc-cn_end sig_en=245450db75d070d5432635468772da7a -->

<!-- pgdoc-cn_start sig_en=d65cec10c4e2c1b48806af698b0ee74f sig_cn_org=a748362b47b72e41cc1db6aff7d67ec1 source=15.7 
     <para>
      The <structfield>startedInRecovery</structfield> flag was not
      correctly set for a subtransaction.  This affects only processing of
      dead index tuples.  It could allow a query in a subtransaction to
      ignore index entries that it should return (if they are already dead
      on the primary server, but not dead to the standby transaction), or
      to prematurely mark index entries as dead that are not yet dead on
      the primary.  It is not clear that the latter case has any serious
      consequences, but it's not the intended behavior.
     </para>
________________________________________________________-->
     <para>
      <structfield>startedInRecovery</structfield>标志未正确设置为子事务。
      这仅影响死索引元组的处理。这可能导致子事务中的查询忽略应返回的索引条目
      （如果它们在主服务器上已经死亡，但对于备用事务尚未死亡），或过早地标记
      尚未在主服务器上死亡的索引条目为死亡。目前尚不清楚后一种情况是否会产生严重
      后果，但这不是预期的行为。
     </para>
<!-- pgdoc-cn_end sig_en=d65cec10c4e2c1b48806af698b0ee74f -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [cd7f19da3] 2023-12-08 16:09:03 +1300
Branch: REL_16_STABLE [8ca56620c] 2023-12-08 16:10:23 +1300
Branch: REL_15_STABLE [b9f687f5a] 2023-12-08 16:11:12 +1300
-->
<!-- pgdoc-cn_start sig_en=8950590bc5cbd441e854a221cdafc217 sig_cn_org=0a0c82479ecb9f719352e2561b4f7882 source=15.7 
     <para>
      Fix integer overflow hazard in checking whether a record will fit
      into the WAL decoding buffer (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      修复整数溢出风险，检查记录是否适合WAL解码缓冲区（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=8950590bc5cbd441e854a221cdafc217 -->

<!-- pgdoc-cn_start sig_en=c19f41d99bfec4e06b5fdb88e319b6dd sig_cn_org=f785a441e8f8045f35c356543c89f014 source=15.7 
     <para>
      This bug appears to be only latent except when running a
      32-bit <productname>PostgreSQL</productname> build on a 64-bit
      platform.
     </para>
________________________________________________________-->
     <para>
      这个bug似乎只在64位平台上运行32位<productname>PostgreSQL</productname>构建时才会显现。
     </para>
<!-- pgdoc-cn_end sig_en=c19f41d99bfec4e06b5fdb88e319b6dd -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [8d7d2197f] 2023-12-11 08:50:43 +0530
Branch: REL_16_STABLE [01cc92fa6] 2023-12-11 08:36:17 +0530
Branch: REL_15_STABLE [332b43063] 2023-12-11 08:23:33 +0530
Branch: REL_14_STABLE [3f86867d5] 2023-12-11 08:10:46 +0530
Branch: REL_13_STABLE [b47ea4f3d] 2023-12-11 07:57:50 +0530
Branch: REL_12_STABLE [e81e617f3] 2023-12-11 07:45:45 +0530
-->
<!-- pgdoc-cn_start sig_en=87c1fd5097ce60491175e1c8f1a1db37 sig_cn_org=cd6b2fe60f319e5af95f17afd1a9cfa9 source=15.7 
     <para>
      Fix deadlock between a logical replication apply worker, its
      tablesync worker, and a session process trying to alter the
      subscription (Shlok Kyal)
     </para>
________________________________________________________-->
     <para>
      修复逻辑复制应用程序工作者、其表同步工作者和尝试更改订阅的会话进程之间的死锁（Shlok Kyal）
     </para>
<!-- pgdoc-cn_end sig_en=87c1fd5097ce60491175e1c8f1a1db37 -->

<!-- pgdoc-cn_start sig_en=790d957128d71b2c07f321a1d2631949 sig_cn_org=e178be9c2062a86513bc3134910a0989 source=15.7 
     <para>
      One edge of the deadlock loop did not involve a lock wait, so the
      deadlock went undetected and would persist until manual
      intervention.
     </para>
________________________________________________________-->
     <para>
      死锁循环的一个边缘没有涉及到锁等待，因此死锁未被检测到，将持续到手动干预。
     </para>
<!-- pgdoc-cn_end sig_en=790d957128d71b2c07f321a1d2631949 -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [360392fa2] 2023-11-27 08:49:55 +0530
Branch: REL_16_STABLE [d7ca9209c] 2023-11-27 08:59:12 +0530
Branch: REL_15_STABLE [a77fb8c68] 2023-11-27 09:14:17 +0530
-->
<!-- pgdoc-cn_start sig_en=9b9bdb6ef74ca634f6eefe87c97b93b4 sig_cn_org=11326a8550a24de7bb24632b50704cb5 source=15.7 
     <para>
      Ensure that column default values are correctly transmitted by
      the <application>pgoutput</application> logical replication plugin
      (Nikhil Benesch)
     </para>
________________________________________________________-->
     <para>
      确保列默认值由<application>pgoutput</application>逻辑复制插件正确传输（Nikhil Benesch）
     </para>
<!-- pgdoc-cn_end sig_en=9b9bdb6ef74ca634f6eefe87c97b93b4 -->

<!-- pgdoc-cn_start sig_en=eadf1fafac71e650ec4d7f7248bb09c4 sig_cn_org=d09511b99e0500ed59118926190ba2da source=15.7 
     <para>
      <command>ALTER TABLE ADD COLUMN</command> with a constant default
      value for the new column avoids rewriting existing tuples, instead
      expecting that reading code will insert the correct default into a
      tuple that lacks that column.  If replication was subsequently
      initiated on the table, <application>pgoutput</application> would
      transmit NULL instead of the correct default for such a column,
      causing incorrect replication on the subscriber.
     </para>
________________________________________________________-->
     <para>
      使用<command>ALTER TABLE ADD COLUMN</command>命令为新列设置一个常量默认值，
      避免重写现有元组，而是期望读取代码将正确的默认值插入缺少该列的元组中。
      如果随后在表上启动了复制，<application>pgoutput</application>将传输NULL，
      而不是该列的正确默认值，导致订阅者上的错误复制。
</para>
<!-- pgdoc-cn_end sig_en=eadf1fafac71e650ec4d7f7248bb09c4 -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [eeb0ebad7] 2023-11-22 11:44:14 +0530
Branch: REL_16_STABLE [1b6da28e0] 2023-11-22 11:27:38 +0530
Branch: REL_15_STABLE [57aae65ae] 2023-11-22 11:14:35 +0530
-->
<!-- pgdoc-cn_start sig_en=8644674cb0dfef6fa572e4ebc732a097 sig_cn_org=87947d36b045cd91e49b9a5515393366 source=15.7 
     <para>
      Fix failure of logical replication's initial sync for a table with
      no columns (Vignesh C)
     </para>
________________________________________________________-->
     <para>
      修复逻辑复制对没有列的表进行初始同步的失败（Vignesh C）
     </para>
<!-- pgdoc-cn_end sig_en=8644674cb0dfef6fa572e4ebc732a097 -->

<!-- pgdoc-cn_start sig_en=4b3808db6357d2a0cccb049f9c4b554d sig_cn_org=42dc23460877bc82132fec3fe935c4ea source=15.7 
     <para>
      This case generated an improperly-formatted <command>COPY</command>
      command.
     </para>
________________________________________________________-->
     <para>
      这个案例生成了一个格式不正确的<command>COPY</command>命令。
     </para>
<!-- pgdoc-cn_end sig_en=4b3808db6357d2a0cccb049f9c4b554d -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: REL_15_STABLE [b793a416b] 2024-01-29 10:42:41 +0530
Branch: REL_14_STABLE [6b77048e5] 2024-01-29 10:34:03 +0530
-->
<!-- pgdoc-cn_start sig_en=9c2920a8a6656c369a2328f3977be2e7 sig_cn_org=fb6b52db010c1ac84524b6dc63905822 source=15.7 
     <para>
      Prevent examining system catalogs with the wrong snapshot during
      logical decoding (Fei Changhong)
     </para>
________________________________________________________-->
     <para>
      防止在逻辑解码期间使用错误的快照检查系统目录（Fei Changhong）
     </para>
<!-- pgdoc-cn_end sig_en=9c2920a8a6656c369a2328f3977be2e7 -->

<!-- pgdoc-cn_start sig_en=af5f632b0ecc536313848ef6e32be4dc sig_cn_org=9eb31e7b0e0d3563f3a99133937f8313 source=15.7 
     <para>
      If decoding begins partway through a transaction that modifies
      system catalogs, the decoder may not recognize that, causing it to
      fail to treat that transaction as in-progress for catalog lookups.
      This fix deals with the case that a top-level transaction is already
      marked as containing catalog changes, but its subtransaction(s) are
      not.
     </para>
________________________________________________________-->
     <para>
      如果解码在修改系统目录的事务进行过程中开始，解码器可能无法识别，导致它无法将该事务视为进行中以进行目录查找。
      此修复处理了顶层事务已标记为包含目录更改的情况，但其子事务未标记。
</para>
<!-- pgdoc-cn_end sig_en=af5f632b0ecc536313848ef6e32be4dc -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [aaf09c592] 2024-01-03 17:40:41 -0500
Branch: REL_16_STABLE [fb464a1ae] 2024-01-03 17:40:38 -0500
Branch: REL_15_STABLE [a0d016393] 2024-01-03 17:40:38 -0500
Branch: REL_14_STABLE [9b042e27e] 2024-01-03 17:40:38 -0500
Branch: REL_13_STABLE [5810888c5] 2024-01-03 17:40:38 -0500
Branch: REL_12_STABLE [c20f2aab6] 2024-01-03 17:40:38 -0500
-->
<!-- pgdoc-cn_start sig_en=fa8fb3ce82aaae534fa1b458ce7ccb75 sig_cn_org=a11b8f4de28eab17361ca7574f8de57d source=15.7 
     <para>
      Return the correct status code when a new client disconnects without
      responding to the server's password challenge (Liu Lang, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      当一个新的客户端在不回应服务器的密码挑战而断开连接时，返回正确的状态码（刘浪，汤姆·莱恩）
     </para>
<!-- pgdoc-cn_end sig_en=fa8fb3ce82aaae534fa1b458ce7ccb75 -->

<!-- pgdoc-cn_start sig_en=4c46215c635279d4709158335c5e3585 sig_cn_org=804f6d03f20e627aca68d400b4451a53 source=15.7 
     <para>
      In some cases we'd treat this as a loggable error, which was not the
      intention and tends to create log spam, since common clients
      like <application>psql</application> frequently do this.  It may
      also confuse extensions that
      use <varname>ClientAuthentication_hook</varname>.
     </para>
________________________________________________________-->
     <para>
      在某些情况下，我们会将这视为可记录的错误，这并不是本意，而且往往会产生日志垃圾，因为常见的客户端
      如<application>psql</application>经常这样做。这也可能会让使用<varname>ClientAuthentication_hook</varname>的扩展程序感到困惑。
     </para>
<!-- pgdoc-cn_end sig_en=4c46215c635279d4709158335c5e3585 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c82207a54] 2023-11-28 12:34:03 -0500
Branch: REL_16_STABLE [efa8f6064] 2023-11-28 12:34:03 -0500
Branch: REL_15_STABLE [5dd30bb54] 2023-11-28 12:34:03 -0500
Branch: REL_14_STABLE [b2b1f1288] 2023-11-28 12:34:03 -0500
Branch: REL_13_STABLE [efb804682] 2023-11-28 12:34:03 -0500
Branch: REL_12_STABLE [0bd682246] 2023-11-28 12:34:03 -0500
-->
<!-- pgdoc-cn_start sig_en=cfc5e8fb3aaeaaaf274c139d8c308c40 sig_cn_org=c7f7b74138128fcb4f3d21aa2b4164f3 source=15.7 
     <para>
      Fix incompatibility with <application>OpenSSL</application> 3.2
      (Tristan Partin, Bo Andreson)
     </para>
________________________________________________________-->
     <para>
      修复与<application>OpenSSL</application> 3.2的不兼容性（Tristan Partin，Bo Andreson）
     </para>
<!-- pgdoc-cn_end sig_en=cfc5e8fb3aaeaaaf274c139d8c308c40 -->

<!-- pgdoc-cn_start sig_en=85cac1d0fc77b7660afb77c944ffb677 sig_cn_org=2f081e1f83f53bfdd039d4266c4eb768 source=15.7 
     <para>
      Use the BIO <quote>app_data</quote> field for our private storage,
      instead of assuming it's okay to use the <quote>data</quote> field.
      This mistake didn't cause problems before, but with 3.2 it leads
      to crashes and complaints about double frees.
     </para>
________________________________________________________-->
     <para>
      使用BIO <quote>app_data</quote>字段来存储私有数据，而不是假设可以使用<quote>data</quote>字段。
      这个错误以前没有引起问题，但在3.2版本中导致崩溃和关于双重释放的投诉。
     </para>
<!-- pgdoc-cn_end sig_en=85cac1d0fc77b7660afb77c944ffb677 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0a5c46a7a] 2023-12-11 11:51:56 -0500
Branch: REL_16_STABLE [ebbd499d4] 2023-12-11 11:51:56 -0500
Branch: REL_15_STABLE [551d4b28e] 2023-12-11 11:51:56 -0500
Branch: REL_14_STABLE [07ce24326] 2023-12-11 11:51:56 -0500
Branch: REL_13_STABLE [87b46ad90] 2023-12-11 11:51:56 -0500
Branch: REL_12_STABLE [271d24f31] 2023-12-11 11:51:56 -0500
-->
<!-- pgdoc-cn_start sig_en=46916eeb398e7be2e5d1d6b6fa017f21 sig_cn_org=b84be212f6d031e8e7ed4477c485283e source=15.7 
     <para>
      Be more wary about <application>OpenSSL</application> not
      setting <varname>errno</varname> on error (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      对<application>OpenSSL</application>在错误时未设置<varname>errno</varname>要更加警惕（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=46916eeb398e7be2e5d1d6b6fa017f21 -->

<!-- pgdoc-cn_start sig_en=1ce38e866e268db0b6295a8e5a792171 sig_cn_org=5f6f8f07efeef553d31986c1369562c8 source=15.7 
     <para>
      If <varname>errno</varname> isn't set, assume the cause of the
      reported failure is read EOF.  This fixes rare cases of strange
      error reports like <quote>could not accept SSL connection:
      Success</quote>.
     </para>
________________________________________________________-->
     <para>
      如果<varname>errno</varname>没有设置，则假定报告的失败原因是读取EOF。这样可以修复一些罕见情况下出现的奇怪错误报告，比如<quote>无法接受SSL连接：成功</quote>。
     </para>
<!-- pgdoc-cn_end sig_en=1ce38e866e268db0b6295a8e5a792171 -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: REL_16_STABLE [501cfd07d] 2023-11-23 13:30:13 +0200
Branch: REL_15_STABLE [481d7d1c0] 2023-11-23 13:31:51 +0200
Branch: REL_14_STABLE [555276f85] 2023-11-23 13:31:57 +0200
-->
<!-- pgdoc-cn_start sig_en=106132b7db0cd804a3f4f6637c07e08e sig_cn_org=e9f1456c694fff77baf2c6125998e5a7 source=15.7 
     <para>
      Fix file descriptor leakage when a foreign data
      wrapper's <function>ForeignAsyncRequest</function> function fails
      (Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      修复了外部数据包装器的<function>ForeignAsyncRequest</function>函数失败时的文件描述符泄漏问题
      (Heikki Linnakangas)
     </para>
<!-- pgdoc-cn_end sig_en=106132b7db0cd804a3f4f6637c07e08e -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e4e63cd98] 2024-02-02 15:34:29 -0500
Branch: REL_16_STABLE [a15378100] 2024-02-02 15:34:29 -0500
Branch: REL_15_STABLE [3766b8b64] 2024-02-02 15:34:29 -0500
Branch: REL_14_STABLE [329b96882] 2024-02-02 15:34:29 -0500
Branch: REL_13_STABLE [29df29dad] 2024-02-02 15:34:29 -0500
Branch: REL_12_STABLE [4493bfb70] 2024-02-02 15:34:29 -0500
-->
<!-- pgdoc-cn_start sig_en=66b61a5ab3ad237b220e6781781ccaa0 sig_cn_org=47b4407c44309a2f209dd43bd5695d82 source=15.7 
     <para>
      Report <systemitem>ENOMEM</systemitem> errors from file-related system
      calls as <literal>ERRCODE_OUT_OF_MEMORY</literal>,
      not <literal>ERRCODE_INTERNAL_ERROR</literal> (Alexander Kuzmenkov)
     </para>
________________________________________________________-->
     <para>
      报告文件相关系统调用的<systemitem>ENOMEM</systemitem>错误为<literal>ERRCODE_OUT_OF_MEMORY</literal>，
      而不是<literal>ERRCODE_INTERNAL_ERROR</literal>（Alexander Kuzmenkov）
     </para>
<!-- pgdoc-cn_end sig_en=66b61a5ab3ad237b220e6781781ccaa0 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [57b440ec1] 2024-01-18 16:11:16 -0500
Branch: REL_16_STABLE [00f941356] 2024-01-18 16:10:57 -0500
Branch: REL_15_STABLE [de2d393a8] 2024-01-18 16:10:57 -0500
Branch: REL_14_STABLE [b7e8f27d1] 2024-01-18 16:10:57 -0500
-->
<!-- pgdoc-cn_start sig_en=57e5601104d0f76bcb43134c175bb1fa sig_cn_org=5282d7c6dba76a587f8d70c237b3052a source=15.7 
     <para>
      In <application>PL/pgSQL</application>, support SQL commands that
      are <command>CREATE FUNCTION</command>/<command>CREATE
      PROCEDURE</command> with SQL-standard bodies (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在<application>PL/pgSQL</application>中，支持具有SQL标准体的<command>CREATE FUNCTION</command>/<command>CREATE PROCEDURE</command>命令（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=57e5601104d0f76bcb43134c175bb1fa -->

<!-- pgdoc-cn_start sig_en=0186fc750d53fbcd24711f39ac9e5a77 sig_cn_org=a81c529c7483944d9f72a0af7e24b738 source=15.7 
     <para>
      Previously, such cases failed with parsing errors due to the
      semicolon(s) appearing in the function body.
     </para>
________________________________________________________-->
     <para>
      以前，这种情况由于函数体中出现分号而导致解析错误。
     </para>
<!-- pgdoc-cn_end sig_en=0186fc750d53fbcd24711f39ac9e5a77 -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b8ba7344e] 2023-12-05 12:43:24 +0100
Branch: REL_16_STABLE [878aa41f8] 2023-12-05 12:43:24 +0100
Branch: REL_15_STABLE [1171c6e74] 2023-12-05 12:43:24 +0100
Branch: REL_14_STABLE [f89681816] 2023-12-05 12:43:24 +0100
Branch: master [c6605c1bd] 2024-01-16 12:27:52 +0100
Branch: REL_16_STABLE [39aab1108] 2024-01-16 12:27:52 +0100
Branch: REL_15_STABLE [2b656cbd2] 2024-01-16 12:27:52 +0100
Branch: REL_14_STABLE [7a7c8c98a] 2024-01-16 12:27:52 +0100
-->
<!-- pgdoc-cn_start sig_en=6bb3abb35250c61c7763c50aa957acad sig_cn_org=318d0400397baaeda1fd620203036da5 source=15.7 
     <para>
      Fix <application>libpq</application>'s
      handling of errors in pipelines (&Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      修复<application>libpq</application>在管道中处理错误的问题（&Aacute;lvaro Herrera）
     </para>
<!-- pgdoc-cn_end sig_en=6bb3abb35250c61c7763c50aa957acad -->

<!-- pgdoc-cn_start sig_en=b6c27f42f63fcda30b6e74bcb623c5cc sig_cn_org=c7be449a5628d293771527f4cc600a9c source=15.7 
     <para>
      The pipeline state could get out of sync if an error is returned
      for reasons other than a query problem (for example, if the
      connection is lost).  Potentially this would lead to a busy-loop in
      the calling application.
     </para>
________________________________________________________-->
     <para>
      如果除了查询问题之外的其他原因导致错误返回（例如，连接丢失），则管道状态可能会不同步。潜在地，这可能导致调用应用程序中的忙循环。
     </para>
<!-- pgdoc-cn_end sig_en=b6c27f42f63fcda30b6e74bcb623c5cc -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [1a5594b95] 2023-11-08 16:44:08 +0100
Branch: REL_16_STABLE [42f832685] 2023-11-08 16:44:08 +0100
Branch: REL_15_STABLE [0e28091d5] 2023-11-08 16:44:08 +0100
Branch: REL_14_STABLE [99fa98766] 2023-11-08 16:44:08 +0100
-->
<!-- pgdoc-cn_start sig_en=0cc97f2484e6ca193b5a5c37786e9c7c sig_cn_org=fcde7e1ee5a58fe22f7d865a99a5ee6d source=15.7 
     <para>
      Make <application>libpq</application>'s
      <function>PQsendFlushRequest()</function> function flush the client
      output buffer under the same rules as
      other <literal>PQsend</literal> functions (Jelte Fennema-Nio)
     </para>
________________________________________________________-->
     <para>
      使<application>libpq</application>的<function>PQsendFlushRequest()</function>函数在相同规则下刷新客户端输出缓冲区，就像其他<literal>PQsend</literal>函数一样（Jelte Fennema-Nio）
     </para>
<!-- pgdoc-cn_end sig_en=0cc97f2484e6ca193b5a5c37786e9c7c -->

<!-- pgdoc-cn_start sig_en=d23b59e5b4912467d410a8ed840d517c sig_cn_org=5dffb69e34116c2fefe218dc6b2453b7 source=15.7 
     <para>
      In pipeline mode, it may still be necessary to
      call <function>PQflush()</function> as well; but this change removes
      some inconsistency.
     </para>
________________________________________________________-->
     <para>
      在管道模式下，可能仍然需要调用<function>PQflush()</function>; 但这个改变消除了一些不一致性。
     </para>
<!-- pgdoc-cn_end sig_en=d23b59e5b4912467d410a8ed840d517c -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [01eca6a91] 2023-11-27 09:40:44 +0900
Branch: REL_16_STABLE [8984480b5] 2023-11-27 09:40:49 +0900
Branch: REL_15_STABLE [b97226815] 2023-11-27 09:40:50 +0900
Branch: REL_14_STABLE [c3b79223f] 2023-11-27 09:40:52 +0900
Branch: REL_13_STABLE [09f680d11] 2023-11-27 09:40:55 +0900
Branch: REL_12_STABLE [0217a7444] 2023-11-27 09:40:57 +0900
-->
<!-- pgdoc-cn_start sig_en=9ffd3a20792ddf92427bb964c979628b sig_cn_org=ff7260a0d7246c2dc6950e3cf99421f3 source=15.7 
     <para>
      Avoid race condition when <application>libpq</application>
      initializes OpenSSL support concurrently in two different threads
      (Willi Mann, Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      避免在两个不同的线程同时初始化OpenSSL支持时出现竞态条件
      (<application>libpq</application>，Willi Mann，Michael Paquier)
     </para>
<!-- pgdoc-cn_end sig_en=9ffd3a20792ddf92427bb964c979628b -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d053a879b] 2023-11-23 13:30:18 -0500
Branch: REL_16_STABLE [85eb77185] 2023-11-23 13:30:18 -0500
Branch: REL_15_STABLE [a50053777] 2023-11-23 13:30:18 -0500
Branch: REL_14_STABLE [8f23e6a45] 2023-11-23 13:30:18 -0500
Branch: REL_13_STABLE [5abdfd88f] 2023-11-23 13:30:18 -0500
Branch: REL_12_STABLE [18fad508b] 2023-11-23 13:30:19 -0500
-->
<!-- pgdoc-cn_start sig_en=cf6a95c8743a3170983a8d193ed1da80 sig_cn_org=0182bd10d191c7a9dddd9fba961dbf73 source=15.7 
     <para>
      Fix timing-dependent failure in GSSAPI data transmission (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复GSSAPI数据传输中的时间依赖性故障（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=cf6a95c8743a3170983a8d193ed1da80 -->

<!-- pgdoc-cn_start sig_en=5a919d6d132a3ccd60beb782f0e1d267 sig_cn_org=1e76db1a8b54faf6e793cd24ef19b758 source=15.7 
     <para>
      When using GSSAPI encryption in non-blocking
      mode, <application>libpq</application> sometimes failed
      with <quote>GSSAPI caller failed to retransmit all data needing to
      be retried</quote>.
     </para>
________________________________________________________-->
     <para>
      当在非阻塞模式下使用GSSAPI加密时，<application>libpq</application>有时会失败，
      出现<quote>GSSAPI调用方未能重新传输所有需要重试的数据</quote>。
     </para>
<!-- pgdoc-cn_end sig_en=5a919d6d132a3ccd60beb782f0e1d267 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a70f2a57f] 2023-11-13 17:04:26 -0500
Branch: REL_16_STABLE [64d2467fc] 2023-11-13 17:04:26 -0500
Branch: REL_15_STABLE [f15147df6] 2023-11-13 17:04:10 -0500
Branch: REL_14_STABLE [15439205d] 2023-11-13 17:04:10 -0500
Branch: REL_13_STABLE [9e08789d4] 2023-11-13 17:04:10 -0500
Branch: REL_12_STABLE [891afa84c] 2023-11-13 17:04:10 -0500
Branch: master [1e3f461e8] 2023-11-14 00:31:39 -0500
Branch: REL_16_STABLE [f1674ac6b] 2023-11-14 00:31:39 -0500
Branch: REL_15_STABLE [63c1b4d88] 2023-11-14 00:31:39 -0500
Branch: REL_14_STABLE [c532be99d] 2023-11-14 00:31:39 -0500
Branch: REL_13_STABLE [7836f6838] 2023-11-14 00:31:39 -0500
Branch: REL_12_STABLE [e43790342] 2023-11-14 00:31:39 -0500
-->
<!-- pgdoc-cn_start sig_en=0e7515eb11f556e1ac57ee3f4d811015 sig_cn_org=3cffefbd0b895f1754f2899793f38058 source=15.7 
     <para>
      In <application>pg_dump</application>, don't dump RLS policies or
      security labels for extension member objects (Tom Lane, Jacob
      Champion)
     </para>
________________________________________________________-->
     <para>
      在<application>pg_dump</application>中，不要为扩展成员对象转储RLS策略或安全标签（Tom Lane，Jacob Champion）
     </para>
<!-- pgdoc-cn_end sig_en=0e7515eb11f556e1ac57ee3f4d811015 -->

<!-- pgdoc-cn_start sig_en=fbe20629d2c7ea7ffb8ffe05cc84f522 sig_cn_org=7499ad4dfeb4f8ab2f3f1911ea54a3e1 source=15.7 
     <para>
      Previously, commands would be included in the dump to set these
      properties, which is really incorrect since they should be
      considered as internal affairs of the extension.  Moreover, the
      restoring user might not have adequate privilege to set them, and
      indeed the dumping user might not have enough privilege to dump them
      (since dumping RLS policies requires acquiring lock on their table).
     </para>
________________________________________________________-->
     <para>
      以前，命令会被包含在转储中以设置这些属性，这实际上是不正确的，因为它们应该被视为扩展的内部事务。
      而且，恢复用户可能没有足够的特权来设置它们，实际上，转储用户可能没有足够的特权来转储它们
      （因为转储 RLS 策略需要在它们的表上获取锁）。
     </para>
<!-- pgdoc-cn_end sig_en=fbe20629d2c7ea7ffb8ffe05cc84f522 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7418767f1] 2023-12-29 10:57:11 -0500
Branch: REL_16_STABLE [b2c9936a7] 2023-12-29 10:57:11 -0500
Branch: REL_15_STABLE [1e0841426] 2023-12-29 10:57:11 -0500
Branch: REL_14_STABLE [aa2e323ee] 2023-12-29 10:57:11 -0500
Branch: REL_13_STABLE [8d4e8b746] 2023-12-29 10:57:11 -0500
Branch: REL_12_STABLE [69d7edb06] 2023-12-29 10:57:11 -0500
-->
<!-- pgdoc-cn_start sig_en=c524d780a4f5b2f24bba07400769a42d sig_cn_org=836bd0aa753eda4fbf50e8503e42d288 source=15.7 
     <para>
      In <application>pg_dump</application>, don't dump an extended
      statistics object if its underlying table isn't being dumped
      (Rian McGuire, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在<application>pg_dump</application>中，如果底层表没有被dump，则不要dump扩展统计对象
      (Rian McGuire, Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=c524d780a4f5b2f24bba07400769a42d -->

<!-- pgdoc-cn_start sig_en=9923534838a48d8073e563c46ebce4dd sig_cn_org=2feb5b44f54b9a408a3d5d6d58685810 source=15.7 
     <para>
      This conforms to the behavior for other dependent objects such as
      indexes.
     </para>
________________________________________________________-->
     <para>
      这符合其他依赖对象（如索引）的行为。
     </para>
<!-- pgdoc-cn_end sig_en=9923534838a48d8073e563c46ebce4dd -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [49f7c6c44] 2024-01-22 17:48:30 +0100
Branch: REL_16_STABLE [07b53de70] 2024-01-22 17:48:30 +0100
Branch: REL_15_STABLE [3fd36be52] 2024-01-22 17:48:30 +0100
Branch: REL_14_STABLE [85ecff891] 2024-01-22 17:48:30 +0100
-->
<!-- pgdoc-cn_start sig_en=3e8cff346877671124b087458cd11a2e sig_cn_org=639d061f7da9d7b9d95e683b8f4d7466 source=15.7 
     <para>
      Make it an error for a <application>pgbench</application> script to
      end with an open pipeline (Anthonin Bonnefoy)
     </para>
________________________________________________________-->
     <para>
      使得<application>pgbench</application>脚本以开放的管道结束是一个错误（Anthonin Bonnefoy）
     </para>
<!-- pgdoc-cn_end sig_en=3e8cff346877671124b087458cd11a2e -->

<!-- pgdoc-cn_start sig_en=3f0f2e611db036812c8d544dc97add50 sig_cn_org=da6449b132665d126f206f5e10cf9ab4 source=15.7 
     <para>
      Previously, <application>pgbench</application> would behave oddly if
      a <command>\startpipeline</command> command lacked a
      matching <command>\endpipeline</command>.  This seems like a
      scripting mistake rather than a case
      that <application>pgbench</application> needs to handle nicely, so
      throw an error.
     </para>
________________________________________________________-->
     <para>
      以前，如果<application>pgbench</application>在<command>\startpipeline</command>命令缺少匹配的<command>\endpipeline</command>时表现异常。
      这似乎是一个脚本错误，而不是<application>pgbench</application>需要处理的情况，所以会抛出错误。
     </para>
<!-- pgdoc-cn_end sig_en=3f0f2e611db036812c8d544dc97add50 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9034a2d51] 2024-01-07 15:19:50 -0500
Branch: REL_16_STABLE [cf6f802bf] 2024-01-07 15:19:50 -0500
Branch: REL_15_STABLE [940ab02b5] 2024-01-07 15:19:50 -0500
Branch: REL_14_STABLE [90e8b86fc] 2024-01-07 15:19:50 -0500
Branch: REL_13_STABLE [9e7432faf] 2024-01-07 15:19:50 -0500
Branch: REL_12_STABLE [1c7443521] 2024-01-07 15:19:50 -0500
-->
<!-- pgdoc-cn_start sig_en=95acbe1880209df30c058bdfd83eb806 sig_cn_org=3df343713aa9b098e84a88b69928f2e7 source=15.7 
     <para>
      Fix crash in <filename>contrib/intarray</filename> if an array with
      an element equal to <literal>INT_MAX</literal> is inserted into
      a <literal>gist__int_ops</literal> index
      (Alexander Lakhin, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复了在<filename>contrib/intarray</filename>中的崩溃，如果插入一个元素等于<literal>INT_MAX</literal>的数组到<literal>gist__int_ops</literal>索引中
      (Alexander Lakhin, Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=95acbe1880209df30c058bdfd83eb806 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [208470136] 2023-12-19 18:19:05 +0900
Branch: REL_16_STABLE [7f68b1462] 2023-12-19 18:19:15 +0900
Branch: REL_15_STABLE [2e08440d6] 2023-12-19 18:19:16 +0900
Branch: REL_14_STABLE [bfbe4a146] 2023-12-19 18:19:18 +0900
Branch: REL_13_STABLE [586c6a091] 2023-12-19 18:19:19 +0900
Branch: REL_12_STABLE [f610d4f11] 2023-12-19 18:19:21 +0900
-->
<!-- pgdoc-cn_start sig_en=60bddfc4fa717c0a9796a93082a23016 sig_cn_org=b4cb3daa80fc0d358c2b0a07ab646d46 source=15.7 
     <para>
      Report a better error
      when <filename>contrib/pageinspect</filename>'s
      <function>hash_bitmap_info()</function> function is applied to a
      partitioned hash index (Alexander Lakhin, Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      在将<filename>contrib/pageinspect</filename>的
      <function>hash_bitmap_info()</function>函数应用于分区哈希索引时，报告更好的错误（Alexander Lakhin，Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=60bddfc4fa717c0a9796a93082a23016 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a8dd62ef4] 2023-12-19 15:20:39 +0900
Branch: REL_16_STABLE [b4948ed66] 2023-12-19 15:20:48 +0900
Branch: REL_15_STABLE [b745f1680] 2023-12-19 15:20:50 +0900
Branch: REL_14_STABLE [f729fdab4] 2023-12-19 15:20:52 +0900
Branch: REL_13_STABLE [b4c1d255c] 2023-12-19 15:20:53 +0900
Branch: REL_12_STABLE [bd2d3c928] 2023-12-19 15:20:55 +0900
-->
<!-- pgdoc-cn_start sig_en=4430cc9dc7faa4c79f7b87ddd78803da sig_cn_org=b61484dc39c9af12f8390f5879daf2cd source=15.7 
     <para>
      Report a better error
      when <filename>contrib/pgstattuple</filename>'s
      <function>pgstathashindex()</function> function is applied to a
      partitioned hash index (Alexander Lakhin)
     </para>
________________________________________________________-->
     <para>
      当将<filename>contrib/pgstattuple</filename>的<function>pgstathashindex()</function>函数应用于分区哈希索引时，报告更好的错误（Alexander Lakhin）
     </para>
<!-- pgdoc-cn_end sig_en=4430cc9dc7faa4c79f7b87ddd78803da -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [9886744a3] 2024-01-10 10:41:57 +0900
Branch: REL_16_STABLE [714bfb781] 2024-01-12 13:53:07 +0900
Branch: REL_15_STABLE [33d1be06a] 2024-01-12 13:53:10 +0900
Branch: REL_14_STABLE [4c6944223] 2024-01-12 13:53:12 +0900
Branch: REL_13_STABLE [c8aab699e] 2024-01-12 13:53:13 +0900
Branch: REL_12_STABLE [9e70e6564] 2024-01-12 13:53:14 +0900
Branch: master [b83747a8a] 2024-01-11 10:39:58 +0900
Branch: REL_16_STABLE [506c77f9b] 2024-01-12 13:59:51 +0900
Branch: REL_15_STABLE [7e7d827f5] 2024-01-12 13:59:58 +0900
Branch: REL_14_STABLE [4a7475e9a] 2024-01-12 14:00:00 +0900
Branch: REL_13_STABLE [2a0eb80ae] 2024-01-12 14:00:01 +0900
Branch: REL_12_STABLE [e50a52b2b] 2024-01-12 14:00:02 +0900
-->
<!-- pgdoc-cn_start sig_en=74e61c600ffc286110009616d4fff2f3 sig_cn_org=adc93441272d88cbcbb73bafebb1022b source=15.7 
     <para>
      On Windows, suppress autorun options when launching subprocesses
      in <application>pg_ctl</application>
      and <application>pg_regress</application> (Kyotaro Horiguchi)
     </para>
________________________________________________________-->
     <para>
      在Windows上，在<application>pg_ctl</application>和<application>pg_regress</application>中启动子进程时抑制自动运行选项
      （Kyotaro Horiguchi）
     </para>
<!-- pgdoc-cn_end sig_en=74e61c600ffc286110009616d4fff2f3 -->

<!-- pgdoc-cn_start sig_en=4d887f2fa206b7c1beecd35e5cc6f041 sig_cn_org=6b07d081283f0e5c18676b7a6c1d4ad4 source=15.7 
     <para>
      When launching a child process via <filename>cmd.exe</filename>,
      pass the <option>/D</option> flag to prevent executing any autorun
      commands specified in the registry.  This avoids possibly-surprising
      side effects.
     </para>
________________________________________________________-->
     <para>
      当通过<filename>cmd.exe</filename>启动子进程时，传递<option>/D</option>标志以防止执行注册表中指定的任何自动运行命令。这样可以避免可能令人惊讶的副作用。
     </para>
<!-- pgdoc-cn_end sig_en=4d887f2fa206b7c1beecd35e5cc6f041 -->
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [97287bdfa] 2024-01-29 12:08:57 -0600
Branch: REL_16_STABLE [1b924a86e] 2024-01-29 12:09:03 -0600
Branch: REL_15_STABLE [3726c1cb0] 2024-01-29 12:09:08 -0600
-->
<!-- pgdoc-cn_start sig_en=1997309ad105f75841181101eca3c232 sig_cn_org=36e4a9679bbb59cea1aaba7c2b0c6f67 source=15.7 
     <para>
      Move <function>is_valid_ascii()</function>
      from <filename>mb/pg_wchar.h</filename>
      to <filename>utils/ascii.h</filename> (Jubilee Young)
     </para>
________________________________________________________-->
     <para>
      将<function>is_valid_ascii()</function>从<filename>mb/pg_wchar.h</filename>
      移动到<filename>utils/ascii.h</filename>（Jubilee Young）
</para>
<!-- pgdoc-cn_end sig_en=1997309ad105f75841181101eca3c232 -->

<!-- pgdoc-cn_start sig_en=c6bccfc6e13def0a18fed8b40d643adf sig_cn_org=1be72e969d59fe67fb850bd252667bd9 source=15.7 
     <para>
      This change avoids the need to
      include <filename>&lt;simd.h&gt;</filename>
      in <filename>pg_wchar.h</filename>, which was causing problems for
      some third-party code.
     </para>
________________________________________________________-->
     <para>
      这个改变避免了在<filename>pg_wchar.h</filename>中包含<filename>&lt;simd.h&gt;</filename>，
      这导致一些第三方代码出现问题。
     </para>
<!-- pgdoc-cn_end sig_en=c6bccfc6e13def0a18fed8b40d643adf -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [400928b83] 2024-01-29 12:06:13 -0500
Branch: REL_16_STABLE [e02fea093] 2024-01-29 12:06:07 -0500
Branch: REL_15_STABLE [3f8ac13b1] 2024-01-29 12:06:07 -0500
Branch: REL_14_STABLE [29e25a6b1] 2024-01-29 12:06:08 -0500
Branch: REL_13_STABLE [7c53b1977] 2024-01-29 12:06:08 -0500
Branch: REL_12_STABLE [b2fd1dab9] 2024-01-29 12:06:08 -0500
-->
<!-- pgdoc-cn_start sig_en=9d1fae82cb699b2ba33a3821e0725be8 sig_cn_org=046c306f0e8d1df9c0ad011164eed0af source=15.7 
     <para>
      Fix compilation failures with <application>libxml2</application>
      version 2.12.0 and later (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复与<application>libxml2</application>版本2.12.0及更高版本的编译失败（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=9d1fae82cb699b2ba33a3821e0725be8 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [7636725b9] 2023-12-06 14:10:39 +0900
Branch: REL_16_STABLE [6248a2bb9] 2023-12-06 14:11:41 +0900
Branch: REL_15_STABLE [87ed81a87] 2023-12-06 14:11:44 +0900
Branch: REL_14_STABLE [c49b6cab1] 2023-12-06 14:11:46 +0900
Branch: REL_13_STABLE [7d5a74033] 2023-12-06 14:11:47 +0900
-->
<!-- pgdoc-cn_start sig_en=b48faa21e3d3027af2bd9f88a6833639 sig_cn_org=3a9f19f0416addc309311becc6f3b017 source=15.7 
     <para>
      Fix compilation failure of <literal>WAL_DEBUG</literal> code on
      Windows (Bharath Rupireddy)
     </para>
________________________________________________________-->
     <para>
      修复了在Windows上编译<literal>WAL_DEBUG</literal>代码失败的问题（Bharath Rupireddy）
     </para>
<!-- pgdoc-cn_end sig_en=b48faa21e3d3027af2bd9f88a6833639 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [58c3151bb] 2023-12-26 16:16:37 -0500
Branch: REL_16_STABLE [b0115e7e2] 2023-12-26 16:16:29 -0500
Branch: REL_15_STABLE [5f8d6d709] 2023-12-26 16:16:29 -0500
Branch: REL_14_STABLE [7978eee02] 2023-12-26 16:16:29 -0500
Branch: REL_13_STABLE [48e797164] 2023-12-26 16:16:29 -0500
Branch: REL_12_STABLE [1613e2fae] 2023-12-26 16:16:29 -0500
Branch: master [a46972e30] 2023-12-26 17:03:02 -0500
Branch: REL_16_STABLE [c72049dbc] 2023-12-26 17:03:24 -0500
-->
<!-- pgdoc-cn_start sig_en=795ecd9d95a485a198619f6afdfc7bc6 sig_cn_org=a861f28921736af967eb48652eabe532 source=15.7 
     <para>
      Suppress compiler warnings from Python's header files
      (Peter Eisentraut, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      抑制Python头文件中的编译器警告
      (Peter Eisentraut, Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=795ecd9d95a485a198619f6afdfc7bc6 -->

<!-- pgdoc-cn_start sig_en=218e690424806d30e47dbc824be274d5 sig_cn_org=ef25dda85a64c8672a2051326ce9b0b5 source=15.7 
     <para>
      Our preferred compiler options provoke warnings about constructs
      appearing in recent versions of Python's header files.  When using
      <application>gcc</application>, we can suppress these warnings with
      a pragma.
     </para>
________________________________________________________-->
     <para>
      我们首选的编译器选项会引发关于最近版本Python头文件中出现的结构的警告。
      当使用<application>gcc</application>时，我们可以通过一个编译指示来抑制这些警告。
     </para>
<!-- pgdoc-cn_end sig_en=218e690424806d30e47dbc824be274d5 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [d282e88e5] 2024-01-25 13:44:54 +1300
Branch: REL_16_STABLE [60ba7cae7] 2024-01-25 13:45:22 +1300
Branch: REL_15_STABLE [67f7aaa38] 2024-01-25 13:46:07 +1300
Branch: REL_14_STABLE [364283c92] 2024-01-25 13:46:38 +1300
Branch: REL_13_STABLE [70a82f40a] 2024-01-25 13:47:20 +1300
Branch: REL_12_STABLE [d060cb658] 2024-01-25 13:47:35 +1300
-->
<!-- pgdoc-cn_start sig_en=46fd18b9e1763f4b7851c77509bf334d sig_cn_org=a7e6e79e14bee95303b31ff1346d590b source=15.7 
     <para>
      Avoid deprecation warning when compiling with LLVM 18 (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      避免在使用LLVM 18编译时出现弃用警告（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=46fd18b9e1763f4b7851c77509bf334d -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [272a7c303] 2024-02-01 15:57:53 -0500
Branch: REL_16_STABLE [b4fb76fb5] 2024-02-01 15:57:53 -0500
Branch: REL_15_STABLE [970b1aeeb] 2024-02-01 15:57:53 -0500
Branch: REL_14_STABLE [35b8b2c4a] 2024-02-01 15:57:53 -0500
Branch: REL_13_STABLE [ac3afc3f7] 2024-02-01 15:57:53 -0500
Branch: REL_12_STABLE [b59ae79b7] 2024-02-01 15:57:53 -0500
-->
<!-- pgdoc-cn_start sig_en=f61bea4801822134beec17bf0d1bc42a sig_cn_org=540c6d37af7fd111205fcf57399f00af source=15.7 
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2024a for DST law changes in Greenland, Kazakhstan, and
      Palestine, plus corrections for the Antarctic stations Casey and
      Vostok.  Also historical corrections for Vietnam, Toronto, and
      Miquelon.
     </para>
________________________________________________________-->
     <para>
      更新时区数据文件至<application>tzdata</application>
      发布2024a版本，以适应格陵兰、哈萨克斯坦和巴勒斯坦的夏令时法律变化，以及南极洲Casey和Vostok站的更正。还有越南、多伦多和密克隆的历史更正。
     </para>
<!-- pgdoc-cn_end sig_en=f61bea4801822134beec17bf0d1bc42a -->
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-5">
<!-- pgdoc-cn_start sig_en=fa81479496d9f6279159726833881ccc sig_cn_org=74dba310d5dcc0048eaaca63fb858c4a source=15.7 
  <title>Release 15.5</title>
________________________________________________________-->
  <title>发布版本 15.5</title>
<!-- pgdoc-cn_end sig_en=fa81479496d9f6279159726833881ccc -->

  <formalpara>
<!-- pgdoc-cn_start sig_en=c45e8127eac45f2347bf1713afaeffda sig_cn_org=253305b4c6dff5b87ef36e3c2d95e52e source=15.7 
  <title>Release date:</title>
________________________________________________________-->
  <title>发布日期：</title>
<!-- pgdoc-cn_end sig_en=c45e8127eac45f2347bf1713afaeffda -->
<!-- pgdoc-cn_start sig_en=7f3aa7eb2b5b49db08df68657d3aaaa7 sig_cn_org=2970d5de651d346720c2471cbe2e7c68 source=15.7 
  <para>2023-11-09</para>
________________________________________________________-->
  <para>2023年11月9日</para>
<!-- pgdoc-cn_end sig_en=7f3aa7eb2b5b49db08df68657d3aaaa7 -->
  </formalpara>

<!-- pgdoc-cn_start sig_en=252b29c1f192ed86a2aa426faaa598f7 sig_cn_org=1fb88c6c910cb0eec11a045c7239fed2 source=15.7 
  <para>
   This release contains a variety of fixes from 15.4.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>
________________________________________________________-->
  <para>
   这个版本包含了从15.4版本中的各种修复。
   有关主要版本15中新功能的信息，请参见<xref linkend="release-15"/>。
</para>
<!-- pgdoc-cn_end sig_en=252b29c1f192ed86a2aa426faaa598f7 -->

  <sect2>
<!-- pgdoc-cn_start sig_en=5a352de8d49d99d1e2c730707a42d71a sig_cn_org=9494e802ad209d2391e025ab57c60088 source=15.7 
   <title>Migration to Version 15.5</title>
________________________________________________________-->
   <title>升级到版本15.5</title>
<!-- pgdoc-cn_end sig_en=5a352de8d49d99d1e2c730707a42d71a -->

<!-- pgdoc-cn_start sig_en=036ed5117c7b85420fc61cc5e5b99f8b sig_cn_org=992c4bf77211ba6013c0d564cef911c0 source=15.7 
   <para>
    A dump/restore is not required for those running 15.X.
   </para>
________________________________________________________-->
   <para>
    对于运行15.X版本的用户，不需要进行dump/restore操作。
   </para>
<!-- pgdoc-cn_end sig_en=036ed5117c7b85420fc61cc5e5b99f8b -->

<!-- pgdoc-cn_start sig_en=d81a2ffbf71f72726cfd05da3e926ae5 sig_cn_org=e45cba760b3873d85c904b07ee96e1bc source=15.7 
   <para>
    However, several mistakes have been discovered that could lead to
    certain types of indexes yielding wrong search results or being
    unnecessarily inefficient.  It is advisable
    to <command>REINDEX</command> potentially-affected indexes after
    installing this update.  See the fourth through seventh changelog
    entries below.
   </para>
________________________________________________________-->
   <para>
    然而，已经发现了几个错误，可能导致某些类型的索引产生错误的搜索结果或者效率低下。
    建议在安装此更新后对可能受影响的索引进行<command>REINDEX</command>。
    请参阅下面的第四至第七个变更日志条目。
   </para>
<!-- pgdoc-cn_end sig_en=d81a2ffbf71f72726cfd05da3e926ae5 -->

<!-- pgdoc-cn_start sig_en=9d2e9c3a98bbe58bb1f7bff3a6e8afca sig_cn_org=82139168083620ad2d30343344e9f7e2 source=15.7 
   <para>
    Also, if you are upgrading from a version earlier than 15.4,
    see <xref linkend="release-15-4"/>.
   </para>
________________________________________________________-->
   <para>
    另外，如果您正在从早于15.4版本升级，请参见<xref linkend="release-15-4"/>。
   </para>
<!-- pgdoc-cn_end sig_en=9d2e9c3a98bbe58bb1f7bff3a6e8afca -->
  </sect2>

  <sect2>
<!-- pgdoc-cn_start sig_en=e161fef38e54e54458e215e5f978ef9b sig_cn_org=f104d50dd9d4dd802f94229ebe5bc097 source=15.7 
   <title>Changes</title>
________________________________________________________-->
   <title>变更</title>
<!-- pgdoc-cn_end sig_en=e161fef38e54e54458e215e5f978ef9b -->

   <itemizedlist>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3b0776fde] 2023-11-06 10:38:00 -0500
Branch: REL_16_STABLE [d3d1e2509] 2023-11-06 10:38:00 -0500
Branch: REL_15_STABLE [4f4a422fb] 2023-11-06 10:38:00 -0500
Branch: REL_14_STABLE [9146d0d65] 2023-11-06 10:38:00 -0500
Branch: REL_13_STABLE [d3de70fdb] 2023-11-06 10:38:00 -0500
Branch: REL_12_STABLE [e911afd09] 2023-11-06 10:38:00 -0500
Branch: REL_11_STABLE [8c6633f4d] 2023-11-06 10:38:00 -0500
-->
<!-- pgdoc-cn_start sig_en=f3b98bd4df2e3540320a83c0b9cdf721 sig_cn_org=56666db73154e1f3ead3e35809dda7ed source=15.7 
     <para>
      Fix handling of unknown-type arguments
      in <literal>DISTINCT</literal> <type>"any"</type> aggregate
      functions (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复在<literal>DISTINCT</literal> <type>"any"</type> 聚合函数中处理未知类型参数的问题（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=f3b98bd4df2e3540320a83c0b9cdf721 -->

<!-- pgdoc-cn_start sig_en=42070d11df05595f9d730428a675a6ad sig_cn_org=9521f40d102e4d2941529e1353e14537 source=15.7 
     <para>
      This error led to a <type>text</type>-type value being interpreted
      as an <type>unknown</type>-type value (that is, a zero-terminated
      string) at runtime.  This could result in disclosure of server
      memory following the <type>text</type> value.
     </para>
________________________________________________________-->
     <para>
      这个错误导致一个<type>text</type>类型的值在运行时被解释为一个<type>unknown</type>类型的值（即一个以零结尾的字符串）。
      这可能导致在<type>text</type>值之后泄露服务器内存。
     </para>
<!-- pgdoc-cn_end sig_en=42070d11df05595f9d730428a675a6ad -->

<!-- pgdoc-cn_start sig_en=0f447f8a8d8439b26e84bbc909b1e3c0 sig_cn_org=88723ff19c99f44d32eb2c17a1bcd26b source=15.7 
     <para>
      The <productname>PostgreSQL</productname> Project thanks Jingzhou Fu
      for reporting this problem.
      (CVE-2023-5868)
     </para>
________________________________________________________-->
     <para>
      <productname>PostgreSQL</productname>项目感谢Jingzhou Fu报告了这个问题。
      (CVE-2023-5868)
</para>
<!-- pgdoc-cn_end sig_en=0f447f8a8d8439b26e84bbc909b1e3c0 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [18b585155] 2023-11-06 10:56:43 -0500
Branch: REL_16_STABLE [e24daa94b] 2023-11-06 10:56:43 -0500
Branch: REL_15_STABLE [3bc6bc3ee] 2023-11-06 10:56:43 -0500
Branch: REL_14_STABLE [edc0a8d82] 2023-11-06 10:56:43 -0500
Branch: REL_13_STABLE [26c599beb] 2023-11-06 10:56:43 -0500
Branch: REL_12_STABLE [d267cea24] 2023-11-06 10:56:43 -0500
Branch: REL_11_STABLE [c48008f59] 2023-11-06 10:56:43 -0500
-->
<!-- pgdoc-cn_start sig_en=68b887a2df1f8757a4979fe73ab10841 sig_cn_org=8bc642b818e3339f6c5d0c403a30be3c source=15.7 
     <para>
      Detect integer overflow while computing new array dimensions
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在计算新数组维度时检测整数溢出（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=68b887a2df1f8757a4979fe73ab10841 -->

<!-- pgdoc-cn_start sig_en=675a1bf84c2b673325349fd6588571fd sig_cn_org=22abf5996fdf184033c9c2fdbcd46148 source=15.7 
     <para>
      When assigning new elements to array subscripts that are outside the
      current array bounds, an undetected integer overflow could occur in
      edge cases.  Memory stomps that are potentially exploitable for
      arbitrary code execution are possible, and so is disclosure of
      server memory.
     </para>
________________________________________________________-->
     <para>
      当将新元素分配给超出当前数组边界的数组下标时，在边缘情况下可能会发生未检测到的整数溢出。
      可能会发生潜在可利用于任意代码执行的内存破坏，以及服务器内存的泄露。
</para>
<!-- pgdoc-cn_end sig_en=675a1bf84c2b673325349fd6588571fd -->

<!-- pgdoc-cn_start sig_en=7a8739296685124e8368862f73a96b30 sig_cn_org=db8f8657e39ed6d7bb5991f407476bc4 source=15.7 
     <para>
      The <productname>PostgreSQL</productname> Project thanks Pedro
      Gallegos for reporting this problem.
      (CVE-2023-5869)
     </para>
________________________________________________________-->
     <para>
      <productname>PostgreSQL</productname>项目感谢Pedro Gallegos报告了这个问题。
      (CVE-2023-5869)
     </para>
<!-- pgdoc-cn_end sig_en=7a8739296685124e8368862f73a96b30 -->
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [3a9b18b30] 2023-11-06 06:14:13 -0800
Branch: REL_16_STABLE [785412731] 2023-11-06 06:14:16 -0800
Branch: REL_15_STABLE [595c988c9] 2023-11-06 06:14:16 -0800
Branch: REL_14_STABLE [508acb901] 2023-11-06 06:14:17 -0800
Branch: REL_13_STABLE [28b609550] 2023-11-06 06:14:17 -0800
Branch: REL_12_STABLE [2893f2f40] 2023-11-06 06:14:17 -0800
Branch: REL_11_STABLE [e082734c8] 2023-11-06 06:14:18 -0800
Author: Noah Misch <noah@leadboat.com>
Branch: master [b72de09a1] 2023-11-06 06:14:13 -0800
Branch: REL_16_STABLE [2c3c5ec49] 2023-11-06 06:14:16 -0800
Branch: REL_15_STABLE [fbc371909] 2023-11-06 06:14:16 -0800
Branch: REL_14_STABLE [ecd5d240c] 2023-11-06 06:14:17 -0800
Branch: REL_13_STABLE [2c7a2a00a] 2023-11-06 06:14:17 -0800
Branch: REL_12_STABLE [7bbf4d037] 2023-11-06 06:14:17 -0800
Branch: REL_11_STABLE [a27be40c1] 2023-11-06 06:14:18 -0800
-->
<!-- pgdoc-cn_start sig_en=e04718cf8d3c2bf54a963dc84df9baf4 sig_cn_org=33d3e153c1e1cc161b352303b8df8590 source=15.7 
     <para>
      Prevent the <literal>pg_signal_backend</literal> role from
      signalling background workers and autovacuum processes
      (Noah Misch, Jelte Fennema-Nio)
     </para>
________________________________________________________-->
     <para>
      防止<literal>pg_signal_backend</literal>角色向后台工作者和自动清理进程发送信号
      (Noah Misch, Jelte Fennema-Nio)
     </para>
<!-- pgdoc-cn_end sig_en=e04718cf8d3c2bf54a963dc84df9baf4 -->

<!-- pgdoc-cn_start sig_en=fe1b28bcec3ca15cf9c7f140f173a17c sig_cn_org=c215faf5442139919837e4233e1d6bbb source=15.7 
     <para>
      The documentation says that <literal>pg_signal_backend</literal>
      cannot issue signals to superuser-owned processes.  It was able to
      signal these background processes, though, because they advertise a
      role OID of zero.  Treat that as indicating superuser ownership.
      The security implications of cancelling one of these process types
      are fairly small so far as the core code goes (we'll just start
      another one), but extensions might add background workers that are
      more vulnerable.
     </para>
________________________________________________________-->
     <para>
      文档中指出<literal>pg_signal_backend</literal>不能向超级用户拥有的进程发出信号。
      但是，它能够向这些后台进程发出信号，因为它们宣传的角色OID为零。
      将其视为指示超级用户所有权。取消这些进程类型之一的安全性影响在核心代码方面
      相对较小（我们只会启动另一个），但扩展可能会添加更容易受攻击的后台工作者。
     </para>
<!-- pgdoc-cn_end sig_en=fe1b28bcec3ca15cf9c7f140f173a17c -->

<!-- pgdoc-cn_start sig_en=2c9c24b18e271380826ff504741e8618 sig_cn_org=aef3e158eb9a4fd959dbc7a8d60e3449 source=15.7 
     <para>
      Also ensure that the <varname>is_superuser</varname> parameter is
      set correctly in such processes.  No specific security consequences
      are known for that oversight, but it might be significant for some
      extensions.
     </para>
________________________________________________________-->
     <para>
      同时确保在这些过程中正确设置<varname>is_superuser</varname>参数。对于这种疏忽，目前没有已知的具体安全后果，但对于一些扩展可能会很重要。
     </para>
<!-- pgdoc-cn_end sig_en=2c9c24b18e271380826ff504741e8618 -->

<!-- pgdoc-cn_start sig_en=33c67375cfd300e49016903d9f989ab3 sig_cn_org=2bc9adee20e4f76fc7fc2bb576cfd28c source=15.7 
     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Hemanth Sandrana and Mahendrakar Srinivasarao
      for reporting this problem.
      (CVE-2023-5870)
     </para>
________________________________________________________-->
     <para>
      <productname>PostgreSQL</productname>项目感谢Hemanth Sandrana和Mahendrakar Srinivasarao报告此问题。
      (CVE-2023-5870)
     </para>
<!-- pgdoc-cn_end sig_en=33c67375cfd300e49016903d9f989ab3 -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [28d3c2ddc] 2023-09-26 14:14:49 +0300
Branch: REL_16_STABLE [d7f521325] 2023-09-26 14:15:01 +0300
Branch: REL_15_STABLE [c3c284b37] 2023-09-26 14:15:19 +0300
Branch: REL_14_STABLE [747cef5a5] 2023-09-26 14:15:28 +0300
Branch: REL_13_STABLE [db7394d4d] 2023-09-26 14:15:35 +0300
Branch: REL_12_STABLE [26917ebea] 2023-09-26 15:41:44 +0300
-->
<!-- pgdoc-cn_start sig_en=0cb010d857e7152f765a3e0f10b528c4 sig_cn_org=7f53e3f83d6879dcc5a23459994ed4a7 source=15.7 
     <para>
      Fix misbehavior during recursive page split in GiST index build
      (Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      修复GiST索引构建中递归页面拆分时的错误行为
      (Heikki Linnakangas)
     </para>
<!-- pgdoc-cn_end sig_en=0cb010d857e7152f765a3e0f10b528c4 -->

<!-- pgdoc-cn_start sig_en=7bacdb218dc3be3cc1ed972a4ff95bc0 sig_cn_org=ee724edced8a56a706391ae009566428 source=15.7 
     <para>
      Fix a case where the location of a page downlink was incorrectly
      tracked, and introduce some logic to allow recovering from such
      situations rather than silently doing the wrong thing.  This error
      could result in incorrect answers from subsequent index searches.
      It may be advisable to reindex all GiST indexes after installing
      this update.
     </para>
________________________________________________________-->
     <para>
      修复了页面下链接位置错误跟踪的情况，并引入了一些逻辑，允许从这种情况中恢复，而不是默默地做错事。
      这个错误可能导致后续索引搜索得到错误的答案。建议在安装此更新后重新索引所有GiST索引。
     </para>
<!-- pgdoc-cn_end sig_en=7bacdb218dc3be3cc1ed972a4ff95bc0 -->
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [5f27b5f84] 2023-10-14 16:33:51 -0700
Branch: REL_16_STABLE [bf1c21c4f] 2023-10-14 16:33:54 -0700
Branch: REL_15_STABLE [782be0f71] 2023-10-14 16:33:54 -0700
Branch: REL_14_STABLE [0834df909] 2023-10-14 16:33:54 -0700
Branch: REL_13_STABLE [6fd1dbdb2] 2023-10-14 16:33:54 -0700
-->
<!-- pgdoc-cn_start sig_en=13d545d4ecb04e5830dad017c1451a95 sig_cn_org=994dd4e2ebd9ce570c61a38de0eeccfb source=15.7 
     <para>
      Prevent de-duplication of btree index entries
      for <type>interval</type> columns (Noah Misch)
     </para>
________________________________________________________-->
     <para>
      防止为<type>interval</type>列的btree索引条目进行去重（Noah Misch）
     </para>
<!-- pgdoc-cn_end sig_en=13d545d4ecb04e5830dad017c1451a95 -->

<!-- pgdoc-cn_start sig_en=83ab7609a629b70fbda71a439172cd8a sig_cn_org=b425604664dfa4b584044f1e8ad89954 source=15.7 
     <para>
      There are <type>interval</type> values that are distinguishable but
      compare equal, for example <literal>24:00:00</literal>
      and <literal>1 day</literal>.  This breaks assumptions made by btree
      de-duplication, so <type>interval</type> columns need to be excluded
      from de-duplication.  This oversight can cause incorrect results
      from index-only scans.  Moreover, after
      updating <application>amcheck</application> will report an error for
      almost all such indexes.  Users should reindex any btree indexes
      on <type>interval</type> columns.
     </para>
________________________________________________________-->
     <para>
      有一些可区分但比较相等的<type>interval</type>值，例如<literal>24:00:00</literal>
      和<literal>1 day</literal>。这会破坏btree去重的假设，因此需要排除<type>interval</type>列
      以避免去重。这个疏忽可能导致索引只扫描出现错误结果。此外，在更新后，
      <application>amcheck</application>会报告几乎所有这类索引的错误。用户应该重新为
      <type>interval</type>列上的所有btree索引重建索引。
     </para>
<!-- pgdoc-cn_end sig_en=83ab7609a629b70fbda71a439172cd8a -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [394d51731] 2023-10-27 18:15:37 +0200
Branch: REL_16_STABLE [e7965226d] 2023-10-27 18:28:19 +0200
Branch: REL_15_STABLE [088233f8d] 2023-10-27 18:37:59 +0200
Branch: REL_14_STABLE [d1740e169] 2023-10-27 18:46:49 +0200
-->
<!-- pgdoc-cn_start sig_en=f428e1dd9c7ee2901be1d9d1255e1dab sig_cn_org=d444456969ae06b4f7dd206c4aef2932 source=15.7 
     <para>
      Process <type>date</type> values more sanely in
      BRIN <literal>datetime_minmax_multi_ops</literal> indexes
      (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      在BRIN <literal>datetime_minmax_multi_ops</literal>索引中更加合理地处理<type>date</type>值
      （Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=f428e1dd9c7ee2901be1d9d1255e1dab -->

<!-- pgdoc-cn_start sig_en=321da64c57b9775c5c6c8fa104e9d3a2 sig_cn_org=96a978afd7bec7b63cc25cdad797e950 source=15.7 
     <para>
      The distance calculation for dates was backward, causing poor
      decisions about which entries to merge.  The index still produces
      correct results, but is much less efficient than it should be.
      Reindexing BRIN <literal>minmax_multi</literal> indexes
      on <type>date</type> columns is advisable.
     </para>
________________________________________________________-->
     <para>
      日期的距离计算是反向的，导致对于哪些条目合并做出错误决定。索引仍然产生
      正确的结果，但效率远低于应有的水平。建议重新为<literal>minmax_multi</literal>
      BRIN索引在<type>date</type>列上进行重新索引。
     </para>
<!-- pgdoc-cn_end sig_en=321da64c57b9775c5c6c8fa104e9d3a2 -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [8da86d62a] 2023-10-27 18:15:37 +0200
Branch: REL_16_STABLE [497fc9208] 2023-10-27 18:28:28 +0200
Branch: REL_15_STABLE [d04a9283b] 2023-10-27 18:38:02 +0200
Branch: REL_14_STABLE [52c934cc1] 2023-10-27 18:46:53 +0200
Branch: master [b5489b75c] 2023-10-27 18:15:37 +0200
Branch: REL_16_STABLE [0635fe02b] 2023-10-27 18:28:04 +0200
Branch: REL_15_STABLE [daa7b0d7c] 2023-10-27 18:37:56 +0200
Branch: REL_14_STABLE [90c4da6d4] 2023-10-27 18:46:46 +0200
-->
<!-- pgdoc-cn_start sig_en=2c809b17c6ebc6956ca7b00aa49fbbd6 sig_cn_org=508433256c68d0f93bcafa34f1d53ead source=15.7 
     <para>
      Process large <type>timestamp</type> and <type>timestamptz</type>
      values more sanely in
      BRIN <literal>datetime_minmax_multi_ops</literal> indexes
      (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      在BRIN <literal>datetime_minmax_multi_ops</literal>索引中更加合理地处理大型<type>timestamp</type>和<type>timestamptz</type>值
      （Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=2c809b17c6ebc6956ca7b00aa49fbbd6 -->

<!-- pgdoc-cn_start sig_en=c3f566782a8f807e92210bf68b070348 sig_cn_org=e446b91311a9b68adfdad80ba435fbc9 source=15.7 
     <para>
      Infinities were mistakenly treated as having distance zero rather
      than a large distance from other values, causing poor decisions
      about which entries to merge.  Also, finite-but-very-large values
      (near the endpoints of the representable timestamp range) could
      result in internal overflows, again causing poor decisions.  The
      index still produces correct results, but is much less efficient
      than it should be.  Reindexing BRIN <literal>minmax_multi</literal>
      indexes on <type>timestamp</type> and <type>timestamptz</type>
      columns is advisable if the column contains, or has contained,
      infinities or large finite values.
     </para>
________________________________________________________-->
     <para>
      无穷大被错误地视为与其他值的距离为零，而不是一个很大的距离，导致对要合并的条目做出错误决策。
      此外，有限但非常大的值（接近可表示的时间戳范围的端点）可能导致内部溢出，再次导致错误决策。
      索引仍然可以产生正确的结果，但效率远低于应有的水平。
      如果列包含或曾包含无穷大或大的有限值，则建议重新索引<literal>minmax_multi</literal>索引，
      该索引适用于<type>timestamp</type>和<type>timestamptz</type>列。
     </para>
<!-- pgdoc-cn_end sig_en=c3f566782a8f807e92210bf68b070348 -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [c6cf6d353] 2023-10-27 18:15:37 +0200
Branch: REL_16_STABLE [924e0e2ee] 2023-10-27 18:28:37 +0200
Branch: REL_15_STABLE [2fbb2fcb0] 2023-10-27 18:38:05 +0200
Branch: REL_14_STABLE [0fa73c5cd] 2023-10-27 18:46:56 +0200
-->
<!-- pgdoc-cn_start sig_en=5200e6d9d963a441d808322cf47490af sig_cn_org=04ec435f1d1338ccf470d2c02c128842 source=15.7 
     <para>
      Avoid calculation overflows in
      BRIN <literal>interval_minmax_multi_ops</literal> indexes with
      extreme interval values (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      避免在BRIN <literal>interval_minmax_multi_ops</literal>索引中出现计算溢出，
      特别是在极端区间值的情况下（Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=5200e6d9d963a441d808322cf47490af -->

<!-- pgdoc-cn_start sig_en=89a6c97bd84fb0c2bd67b400d18969d9 sig_cn_org=ea4475dac43d73dcc9477980fe53ebd2 source=15.7 
     <para>
      This bug might have caused unexpected failures while trying to
      insert large interval values into such an index.
     </para>
________________________________________________________-->
     <para>
      这个错误可能导致在尝试将大间隔值插入到这样一个索引时出现意外的失败。
     </para>
<!-- pgdoc-cn_end sig_en=89a6c97bd84fb0c2bd67b400d18969d9 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [d9e46dfb7] 2023-10-13 01:12:31 +1300
Branch: REL_16_STABLE [595db9e9c] 2023-10-13 01:13:07 +1300
Branch: REL_15_STABLE [1e81d3e6e] 2023-10-13 01:13:36 +1300
Branch: REL_14_STABLE [d26f33c32] 2023-10-13 01:13:59 +1300
Branch: REL_13_STABLE [890a73ba3] 2023-10-13 01:14:22 +1300
Branch: REL_12_STABLE [3cc0c2517] 2023-10-13 01:14:46 +1300
Branch: REL_11_STABLE [2759924f3] 2023-10-13 01:15:12 +1300
Author: David Rowley <drowley@postgresql.org>
Branch: master [f0c409d9c] 2023-10-12 19:50:38 +1300
Branch: REL_16_STABLE [6352f1627] 2023-10-12 19:51:26 +1300
Branch: REL_15_STABLE [916adc7c5] 2023-10-12 19:52:05 +1300
Branch: REL_14_STABLE [cd15bff48] 2023-10-12 19:52:31 +1300
Branch: REL_13_STABLE [45c4b2a3a] 2023-10-12 19:52:58 +1300
Branch: REL_12_STABLE [cd259de50] 2023-10-12 19:53:23 +1300
Branch: REL_11_STABLE [07f261b31] 2023-10-12 19:53:50 +1300
-->
<!-- pgdoc-cn_start sig_en=4f1872749dc922801a12c7e481e30a14 sig_cn_org=32853c716fb86bb22c6da9b7b5886593 source=15.7 
     <para>
      Fix partition step generation and runtime partition pruning for
      hash-partitioned tables with multiple partition keys (David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复具有多个分区键的哈希分区表的分区步骤生成和运行时分区修剪（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=4f1872749dc922801a12c7e481e30a14 -->

<!-- pgdoc-cn_start sig_en=618a28f84208af674b306b03faa1c487 sig_cn_org=af01c71b118d606b97b442cf9a33c588 source=15.7 
     <para>
      Some cases involving an <literal>IS NULL</literal> condition on one
      of the partition keys could result in a crash.
     </para>
________________________________________________________-->
     <para>
      一些涉及到在一个分区键上使用<literal>IS NULL</literal>条件的情况可能导致崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=618a28f84208af674b306b03faa1c487 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [1d5caec22] 2023-09-30 10:52:21 +0100
Branch: REL_16_STABLE [6d2de076c] 2023-09-30 10:54:29 +0100
Branch: REL_15_STABLE [3c1a1af91] 2023-09-30 10:55:24 +0100
-->
<!-- pgdoc-cn_start sig_en=eb8453cc7066bae03670c8b34b630f3d sig_cn_org=2ec27c956584551ebc09301f8001cc0f source=15.7 
     <para>
      Fix inconsistent rechecking of concurrently-updated rows
      during <command>MERGE</command> (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复在<command>MERGE</command>期间对同时更新的行重新检查时的不一致性（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=eb8453cc7066bae03670c8b34b630f3d -->

<!-- pgdoc-cn_start sig_en=c6ddde7cf52c6412343040c596f5ba85 sig_cn_org=b1fb5bb7e803d9e9f68fe8c970e0b508 source=15.7 
     <para>
      In <literal>READ COMMITTED</literal> mode, an update that finds that
      its target row was just updated by a concurrent transaction will
      recheck the query's <literal>WHERE</literal> conditions on the
      updated row.  <command>MERGE</command> failed to ensure that the
      proper rows of other joined tables were used during this recheck,
      possibly resulting in incorrect decisions about whether the
      newly-updated row should be updated again
      by <command>MERGE</command>.
     </para>
________________________________________________________-->
     <para>
      在<literal>READ COMMITTED</literal>模式下，如果一个更新操作发现目标行刚刚被并发事务更新，
      将重新检查更新行的<literal>WHERE</literal>条件。 <command>MERGE</command>未能确保在此重新检查期间使用其他连接表的正确行，
      可能导致对于新更新的行是否应再次被<command>MERGE</command>更新的错误决定。
     </para>
<!-- pgdoc-cn_end sig_en=c6ddde7cf52c6412343040c596f5ba85 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [387f9ed0a] 2023-10-24 14:48:33 -0400
Branch: REL_16_STABLE [b1444a09d] 2023-10-24 14:48:34 -0400
Branch: REL_15_STABLE [1268e7378] 2023-10-24 14:48:34 -0400
Branch: REL_14_STABLE [8f4a6b9e4] 2023-10-24 14:48:34 -0400
Author: Amit Langote <amitlan@postgresql.org>
Branch: master [01575ad78] 2023-10-26 11:53:56 +0900
Branch: REL_16_STABLE [178ee1d85] 2023-10-26 11:53:41 +0900
Author: Amit Langote <amitlan@postgresql.org>
Branch: master [1f06b7fc6] 2023-10-26 17:32:38 +0900
Branch: REL_16_STABLE [2bf99b48d] 2023-10-26 17:29:32 +0900
-->
<!-- pgdoc-cn_start sig_en=0f34c2d7762f1f9dae6fbbed4d27b9fe sig_cn_org=e6291ae123cc3a7fdcfd95bc90ff322a source=15.7 
     <para>
      Correctly identify the target table in an
      inherited <command>UPDATE</command>/<command>DELETE</command>/<command>MERGE</command>
      even when the parent table is excluded by constraints (Amit Langote,
      Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在继承的<command>UPDATE</command>/<command>DELETE</command>/<command>MERGE</command>中正确识别目标表，
      即使父表被约束排除（Amit Langote，Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=0f34c2d7762f1f9dae6fbbed4d27b9fe -->

<!-- pgdoc-cn_start sig_en=b7da3b6c2d280097d21024ca6d566d8e sig_cn_org=877c9acd0c3547f10df02e4f048e99a1 source=15.7 
     <para>
      If the initially-named table is excluded by constraints, but not all
      its inheritance descendants are, the first non-excluded descendant
      was identified as the primary target table.  This would lead to
      firing statement-level triggers associated with that table, rather
      than the initially-named table as should happen.  In v16, the same
      oversight could also lead to <quote>invalid perminfoindex 0 in RTE
      with relid NNNN</quote> errors.
     </para>
________________________________________________________-->
     <para>
      如果最初命名的表被约束排除，但并非所有其继承后代都被排除，那么第一个非排除的后代将被确定为主目标表。
      这将导致触发与该表相关联的语句级触发器，而不是应该发生在最初命名的表上。在v16中，同样的疏忽也可能导致<quote>在RTE中的无效perminfoindex 0与relid NNNN</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=b7da3b6c2d280097d21024ca6d566d8e -->
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [714780dcd] 2023-09-28 16:29:37 -0700
Branch: REL_16_STABLE [3fa81b62e] 2023-09-28 16:29:35 -0700
Branch: REL_15_STABLE [cac37c1a1] 2023-09-28 16:29:32 -0700
Branch: REL_14_STABLE [41486c4aa] 2023-09-28 16:29:29 -0700
Branch: REL_13_STABLE [d4724e94a] 2023-09-28 16:29:27 -0700
Branch: REL_12_STABLE [b36d72cbc] 2023-09-28 16:29:24 -0700
Branch: REL_11_STABLE [7c07305e6] 2023-09-28 16:29:22 -0700
-->
<!-- pgdoc-cn_start sig_en=c38fad4012084e48f56fb757f3f712ee sig_cn_org=7c795f62dd73b9a0490e02a4e6f9877f source=15.7 
     <para>
      Fix edge case in btree mark/restore processing of ScalarArrayOpExpr
      clauses (Peter Geoghegan)
     </para>
________________________________________________________-->
     <para>
      修复标量数组操作表达式中btree标记/恢复处理的边缘情况（Peter Geoghegan）
     </para>
<!-- pgdoc-cn_end sig_en=c38fad4012084e48f56fb757f3f712ee -->

<!-- pgdoc-cn_start sig_en=75ff575472a926016a58f118d5788afb sig_cn_org=3475b6f1291af72766f170fffd0ad39f source=15.7 
     <para>
      When restoring an indexscan to a previously marked position, the
      code could miss required setup steps if the scan had advanced
      exactly to the end of the matches for a ScalarArrayOpExpr (that is,
      an <literal>indexcol = ANY(ARRAY[])</literal>) clause.  This could
      result in missing some rows that should have been fetched.
     </para>
________________________________________________________-->
     <para>
      当将索引扫描恢复到先前标记的位置时，如果扫描恰好在ScalarArrayOpExpr（即，<literal>indexcol = ANY(ARRAY[])</literal>）子句的匹配项的末尾，代码可能会错过所需的设置步骤。这可能导致漏掉应该被获取的一些行。
     </para>
<!-- pgdoc-cn_end sig_en=75ff575472a926016a58f118d5788afb -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [0b053e78b] 2023-10-05 20:30:47 +1300
Branch: REL_16_STABLE [31b2b2d72] 2023-10-05 20:31:25 +1300
Branch: REL_15_STABLE [689af6db6] 2023-10-05 20:31:51 +1300
Branch: REL_14_STABLE [e4b95b9b0] 2023-10-05 20:32:14 +1300
-->
<!-- pgdoc-cn_start sig_en=978891f63ead472f0f16676a90fb0115 sig_cn_org=8d204f473cc4789d4acc0e1d8fc03863 source=15.7 
     <para>
      Fix intra-query memory leak in Memoize execution
      (Orlov Aleksej, David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复Memoize执行中的查询内存泄漏
      (Orlov Aleksej, David Rowley)
     </para>
<!-- pgdoc-cn_end sig_en=978891f63ead472f0f16676a90fb0115 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [237f8765d] 2023-10-28 14:05:01 -0400
Branch: REL_16_STABLE [07494a0df] 2023-10-28 14:04:43 -0400
Branch: REL_15_STABLE [592cb11fb] 2023-10-28 14:04:43 -0400
Branch: REL_14_STABLE [5d7515d7d] 2023-10-28 14:04:43 -0400
Branch: REL_13_STABLE [b7684473d] 2023-10-28 14:04:43 -0400
Branch: REL_12_STABLE [d8d7f282f] 2023-10-28 14:04:43 -0400
Branch: REL_11_STABLE [7ab6971c6] 2023-10-28 14:04:43 -0400
-->
<!-- pgdoc-cn_start sig_en=e9e917e8ef870d1229a5066615b8d2ae sig_cn_org=9815a7b3d19b4e1b79300631e2071d2e source=15.7 
     <para>
      Fix intra-query memory leak when a set-returning function repeatedly
      returns zero rows (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复了当一个返回集合的函数重复返回零行时的内部查询内存泄漏(Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=e9e917e8ef870d1229a5066615b8d2ae -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f73fa5a47] 2023-09-18 14:28:17 -0400
Branch: REL_16_STABLE [ec693a3f3] 2023-09-18 14:27:47 -0400
Branch: REL_15_STABLE [95f54f0d0] 2023-09-18 14:27:47 -0400
Branch: REL_14_STABLE [9baabfa38] 2023-09-18 14:27:47 -0400
Branch: REL_13_STABLE [e6e50ada0] 2023-09-18 14:27:47 -0400
Branch: REL_12_STABLE [123337079] 2023-09-18 14:27:47 -0400
Branch: REL_11_STABLE [db00be6d7] 2023-09-18 14:27:47 -0400
-->
<!-- pgdoc-cn_start sig_en=d14e75b6de07b006c7053149a5734540 sig_cn_org=4142fe8f56f3f388f23d5b84f9439125 source=15.7 
     <para>
      Don't crash if <function>cursor_to_xmlschema()</function> is applied
      to a non-data-returning Portal (Boyu Yang)
     </para>
________________________________________________________-->
     <para>
      如果将<function>cursor_to_xmlschema()</function>应用于非数据返回的Portal，不要崩溃 (Boyu Yang)
     </para>
<!-- pgdoc-cn_end sig_en=d14e75b6de07b006c7053149a5734540 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [73635b6d6] 2023-10-31 16:42:08 +1300
Branch: REL_16_STABLE [a98f01c93] 2023-10-31 16:42:35 +1300
Branch: REL_15_STABLE [136068353] 2023-10-31 16:43:01 +1300
Branch: REL_14_STABLE [c5988e69f] 2023-10-31 16:43:28 +1300
Branch: REL_13_STABLE [b3c8d1d0e] 2023-10-31 16:44:00 +1300
Branch: REL_12_STABLE [efcb601d2] 2023-10-31 16:44:27 +1300
-->
<!-- pgdoc-cn_start sig_en=2e16e45103280ec6dcaa21b4677c419d sig_cn_org=526e03564a9b4dfbf9324c80d1c6ad7a source=15.7 
     <para>
      Throw the intended error if <function>pgrowlocks()</function> is
      applied to a partitioned table (David Rowley)
     </para>
________________________________________________________-->
     <para>
      如果将<function>pgrowlocks()</function>应用于分区表，则抛出预期的错误（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=2e16e45103280ec6dcaa21b4677c419d -->

<!-- pgdoc-cn_start sig_en=8d29e81ffe49e30a950f7e99ed24b7b1 sig_cn_org=1a942bc9735b9573071f188f30a1adb4 source=15.7 
     <para>
      Previously, a not-on-point complaint <quote>only heap AM is
      supported</quote> would be raised.
     </para>
________________________________________________________-->
     <para>
      以前，一个不相关的投诉<quote>只支持堆AM</quote>会被提出。
     </para>
<!-- pgdoc-cn_end sig_en=8d29e81ffe49e30a950f7e99ed24b7b1 -->
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [13503eb59] 2023-10-30 14:46:05 -0700
Branch: REL_16_STABLE [1a368dd3e] 2023-10-30 14:46:08 -0700
Branch: REL_15_STABLE [e633e9b13] 2023-10-30 14:46:08 -0700
Branch: REL_14_STABLE [0a7b183fd] 2023-10-30 14:46:09 -0700
Branch: REL_13_STABLE [123b0d111] 2023-10-30 14:46:09 -0700
Branch: REL_12_STABLE [975ae0553] 2023-10-30 14:46:09 -0700
Branch: REL_11_STABLE [bae063db4] 2023-10-30 14:46:09 -0700
-->
<!-- pgdoc-cn_start sig_en=cf2b4f906e7849d0004b3bf90c7d4967 sig_cn_org=4322e19c2fb6ffa64020b1a30dc93fd5 source=15.7 
     <para>
      Handle invalid indexes more cleanly in assorted SQL functions
      (Noah Misch)
     </para>
________________________________________________________-->
     <para>
      在各种SQL函数中更清晰地处理无效的索引（Noah Misch）
     </para>
<!-- pgdoc-cn_end sig_en=cf2b4f906e7849d0004b3bf90c7d4967 -->

<!-- pgdoc-cn_start sig_en=15a3cdc205cd9cf014fc6797caac4040 sig_cn_org=1f1bc80358469f0cc5b9616cef76ab17 source=15.7 
     <para>
      Report an error if <function>pgstatindex()</function>,
      <function>pgstatginindex()</function>,
      <function>pgstathashindex()</function>,
      or <function>pgstattuple()</function> is applied to an invalid
      index.  If <function>brin_desummarize_range()</function>,
      <function>brin_summarize_new_values()</function>,
      <function>brin_summarize_range()</function>,
      or <function>gin_clean_pending_list()</function> is applied to an
      invalid index, do nothing except to report a debug-level message.
      Formerly these functions attempted to process the index, and might
      fail in strange ways depending on what the failed <command>CREATE
      INDEX</command> had left behind.
     </para>
________________________________________________________-->
     <para>
      如果对无效的索引应用<function>pgstatindex()</function>、
      <function>pgstatginindex()</function>、
      <function>pgstathashindex()</function>或
      <function>pgstattuple()</function>，则报告错误。
      如果对无效的索引应用<function>brin_desummarize_range()</function>、
      <function>brin_summarize_new_values()</function>、
      <function>brin_summarize_range()</function>或
      <function>gin_clean_pending_list()</function>，则除了报告调试级别消息外，不执行任何操作。
      以前，这些函数尝试处理索引，可能会以奇怪的方式失败，具体取决于失败的<command>CREATE INDEX</command>留下了什么。
     </para>
<!-- pgdoc-cn_end sig_en=15a3cdc205cd9cf014fc6797caac4040 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [6fde2d9a0] 2023-08-21 13:32:14 +0900
Branch: REL_16_STABLE Release: REL_16_0 [d6af45052] 2023-08-21 13:33:04 +0900
Branch: REL_15_STABLE [ad8753a3a] 2023-08-21 13:33:08 +0900
-->
<!-- pgdoc-cn_start sig_en=5685ee3ed91c753770194723b7b4fb69 sig_cn_org=00833731c8983ce6d41bd5f9552c50aa source=15.7 
     <para>
      Fix <function>pg_stat_reset_single_table_counters()</function> to do
      the right thing for a shared catalog (Masahiro Ikeda)
     </para>
________________________________________________________-->
     <para>
      修复<function>pg_stat_reset_single_table_counters()</function>函数，使其在共享目录上执行正确操作（Masahiro Ikeda）
     </para>
<!-- pgdoc-cn_end sig_en=5685ee3ed91c753770194723b7b4fb69 -->

<!-- pgdoc-cn_start sig_en=3befad0ae863e15db4beba175b4e2be7 sig_cn_org=bf426504bf4e18f14af661d4b576d5dc source=15.7 
     <para>
      Previously the reset would be ineffective.
     </para>
________________________________________________________-->
     <para>
      以前的重置是无效的。
     </para>
<!-- pgdoc-cn_end sig_en=3befad0ae863e15db4beba175b4e2be7 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [cf1c65070] 2023-09-25 11:50:28 -0400
Branch: REL_16_STABLE [8465efc1a] 2023-09-25 11:50:28 -0400
Branch: REL_15_STABLE [71bb73f60] 2023-09-25 11:50:28 -0400
Branch: REL_14_STABLE [a2799f53d] 2023-09-25 11:50:28 -0400
Branch: REL_13_STABLE [52a676ef4] 2023-09-25 11:50:28 -0400
Branch: REL_12_STABLE [4a81ed29d] 2023-09-25 11:50:28 -0400
Branch: REL_11_STABLE [0fb91ed2b] 2023-09-25 11:50:28 -0400
-->
<!-- pgdoc-cn_start sig_en=920aa62d173ed98aab8d10cb996a6f50 sig_cn_org=af1ad1c0bb9af93e46963493418d2b6c source=15.7 
     <para>
      Avoid premature memory allocation failure with long inputs
      to <function>to_tsvector()</function> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免在向<function>to_tsvector()</function>函数输入长字符串时出现过早的内存分配失败(Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=920aa62d173ed98aab8d10cb996a6f50 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5b7b38246] 2023-10-01 13:16:47 -0400
Branch: REL_16_STABLE [5c34a7374] 2023-10-01 13:16:59 -0400
Branch: REL_15_STABLE [55e188a15] 2023-10-01 13:17:06 -0400
Branch: REL_14_STABLE [cf12c4fd2] 2023-10-01 13:17:11 -0400
Branch: REL_13_STABLE [9da153846] 2023-10-01 13:17:15 -0400
Branch: REL_12_STABLE [2296bc362] 2023-10-01 13:17:20 -0400
Branch: REL_11_STABLE [7a310cae0] 2023-10-01 13:17:25 -0400
-->
<!-- pgdoc-cn_start sig_en=926f50f5cffd31ad97a02a25995d58c3 sig_cn_org=fbb1c9f661e7e6406adad797d9be7a91 source=15.7 
     <para>
      Fix over-allocation of the constructed <type>tsvector</type>
      in <function>tsvectorrecv()</function> (Denis Erokhin)
     </para>
________________________________________________________-->
     <para>
      修复了<type>tsvector</type>在<function>tsvectorrecv()</function>中的过度分配问题（Denis Erokhin）
     </para>
<!-- pgdoc-cn_end sig_en=926f50f5cffd31ad97a02a25995d58c3 -->

<!-- pgdoc-cn_start sig_en=d1323d646dbc5674688038d052213b35 sig_cn_org=a30d1657c171a88f7e0eccb774dd2e6c source=15.7 
     <para>
      If the incoming vector includes position data, the binary receive
      function left wasted space (roughly equal to the size of the
      position data) in the finished <type>tsvector</type>.  In extreme
      cases this could lead to <quote>maximum total lexeme length
      exceeded</quote> failures for vectors that were under the length
      limit when emitted.  In any case it could lead to wasted space
      on-disk.
     </para>
________________________________________________________-->
     <para>
      如果传入的向量包含位置数据，则二进制接收函数在生成的<type>tsvector</type>中留下了浪费的空间（大致等于位置数据的大小）。
      在极端情况下，这可能导致在发出时长度未达到限制的向量出现<quote>超过最大总词元长度</quote>的失败。
      无论如何，这可能导致磁盘上的空间浪费。
     </para>
<!-- pgdoc-cn_end sig_en=d1323d646dbc5674688038d052213b35 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [ae10dbb0c] 2023-09-04 14:55:37 +0900
Branch: REL_16_STABLE Release: REL_16_0 [fac3fa0d5] 2023-09-04 14:55:49 +0900
Branch: REL_15_STABLE [88aa4a049] 2023-09-04 14:55:51 +0900
Branch: REL_14_STABLE [df11421d8] 2023-09-04 14:55:53 +0900
Branch: REL_13_STABLE [82fa8ae5f] 2023-09-04 14:55:55 +0900
Branch: REL_12_STABLE [40ddb8db9] 2023-09-04 14:55:57 +0900
Branch: REL_11_STABLE [358cd2b25] 2023-09-04 14:55:58 +0900
-->
<!-- pgdoc-cn_start sig_en=b0c6f2e72c11c9014fe4c942a95e277d sig_cn_org=d4d4ffe281d0728dc48d79fad068641c source=15.7 
     <para>
      Fix incorrect coding in <function>gtsvector_picksplit()</function>
      (Alexander Lakhin)
     </para>
________________________________________________________-->
     <para>
      修复<function>gtsvector_picksplit()</function>中的错误编码（Alexander Lakhin）
     </para>
<!-- pgdoc-cn_end sig_en=b0c6f2e72c11c9014fe4c942a95e277d -->

<!-- pgdoc-cn_start sig_en=2d5add3d2bfb632ce7beba8873cede9e sig_cn_org=fbdd952cf13cdc40377b899bda2555c7 source=15.7 
     <para>
      This could lead to poor page-split decisions in GiST indexes
      on <type>tsvector</type> columns.
     </para>
________________________________________________________-->
     <para>
      这可能导致在<type>tsvector</type>列上的GiST索引中做出不良的页面拆分决策。
     </para>
<!-- pgdoc-cn_end sig_en=2d5add3d2bfb632ce7beba8873cede9e -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9b103f861] 2023-10-18 20:43:27 -0400
Branch: REL_16_STABLE [cfa4eba02] 2023-10-18 20:43:17 -0400
Branch: REL_15_STABLE [985ac5ce2] 2023-10-18 20:43:17 -0400
Branch: REL_14_STABLE [2c63dc035] 2023-10-18 20:43:17 -0400
Branch: REL_13_STABLE [817669ea2] 2023-10-18 20:43:17 -0400
-->
<!-- pgdoc-cn_start sig_en=06ba0ed6b5a8cf19cfb6e47839f0816e sig_cn_org=7d68437bc93aead38330230c6a4b594e source=15.7 
     <para>
      Improve checks for corrupt PGLZ compressed data (Flavien Guedez)
     </para>
________________________________________________________-->
     <para>
      改进对损坏的PGLZ压缩数据的检查（Flavien Guedez）
     </para>
<!-- pgdoc-cn_end sig_en=06ba0ed6b5a8cf19cfb6e47839f0816e -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d8a09939a] 2023-10-01 12:09:26 -0400
Branch: REL_16_STABLE [ea0e7cd6b] 2023-10-01 12:09:26 -0400
Branch: REL_15_STABLE [95fd5c89f] 2023-10-01 12:09:26 -0400
Branch: REL_14_STABLE [a715c0212] 2023-10-01 12:09:26 -0400
-->
<!-- pgdoc-cn_start sig_en=367782d3ca5145966758ea4023ec86d3 sig_cn_org=ac64f9897bb8d90f950a9ae80fb6559f source=15.7 
     <para>
      In <command>COPY FROM</command>, fail cleanly when an unsupported
      encoding conversion is needed (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在<command>COPY FROM</command>中，当需要不支持的编码转换时，进行干净的失败处理（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=367782d3ca5145966758ea4023ec86d3 -->

<!-- pgdoc-cn_start sig_en=19586d1cfb445cdc48a4c76783b6f912 sig_cn_org=efaf9d7b88401d351c9d8fbc6a0ff0cf source=15.7 
     <para>
      Recent refactoring accidentally removed the intended error check for
      this, such that it ended in <quote>cache lookup failed for function
      0</quote> instead of a useful error message.
     </para>
________________________________________________________-->
     <para>
      最近的重构意外地删除了对此的预期错误检查，导致它以<quote>函数0的缓存查找失败</quote>结束，而不是一个有用的错误消息。
     </para>
<!-- pgdoc-cn_end sig_en=19586d1cfb445cdc48a4c76783b6f912 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7704a1a72] 2023-11-02 11:47:33 -0400
Branch: REL_16_STABLE [82063edd4] 2023-11-02 11:47:33 -0400
Branch: REL_15_STABLE [ae33659d4] 2023-11-02 11:47:33 -0400
Branch: REL_14_STABLE [47c0f00cf] 2023-11-02 11:47:33 -0400
Branch: REL_13_STABLE [137227c6d] 2023-11-02 11:47:33 -0400
Branch: REL_12_STABLE [65810fc6d] 2023-11-02 11:47:33 -0400
Branch: REL_11_STABLE [6e1cca511] 2023-11-02 11:47:33 -0400 !! no live bug
-->
<!-- pgdoc-cn_start sig_en=e822215af8a52ffe0b452a6867901935 sig_cn_org=5f55842f368485d8a765db3a8e9a08f9 source=15.7 
     <para>
      Avoid crash in <command>EXPLAIN</command> if a parameter marked to
      be displayed by <command>EXPLAIN</command> has a NULL boot-time
      value (Xing Guo, Aleksander Alekseev, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免在<command>EXPLAIN</command>中崩溃，如果一个参数被标记为由<command>EXPLAIN</command>显示，
      其中一个参数具有空的启动时间值（Xing Guo，Aleksander Alekseev，Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=e822215af8a52ffe0b452a6867901935 -->

<!-- pgdoc-cn_start sig_en=a005fcceac482c5ad0ec023a12104bef sig_cn_org=b447eb0f28d672b696c106d5f7e5d2dc source=15.7 
     <para>
      No built-in parameter fits this description, but an extension could
      define such a parameter.
     </para>
________________________________________________________-->
     <para>
      没有内置参数符合这个描述，但是可以通过扩展来定义这样的参数。
     </para>
<!-- pgdoc-cn_end sig_en=a005fcceac482c5ad0ec023a12104bef -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [54b208f90] 2023-10-16 14:06:14 -0400
Branch: REL_16_STABLE [57e6e861d] 2023-10-16 14:06:15 -0400
Branch: REL_15_STABLE [0d1a7cd14] 2023-10-16 14:06:15 -0400
Branch: REL_14_STABLE [f6e1ee3cf] 2023-10-16 14:06:11 -0400
Branch: REL_13_STABLE [1e678175c] 2023-10-16 14:06:11 -0400
Branch: REL_12_STABLE [07eb22a77] 2023-10-16 14:06:11 -0400
Branch: REL_11_STABLE [a295684b8] 2023-10-16 14:06:12 -0400
-->
<!-- pgdoc-cn_start sig_en=15a6046299241e7f3b25a616fc837660 sig_cn_org=b98328c62d7267381670382acca77a5b source=15.7 
     <para>
      Ensure we have a snapshot while dropping <literal>ON COMMIT
      DROP</literal> temp tables (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      确保在删除<literal>ON COMMIT DROP</literal>临时表时拥有一个快照（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=15a6046299241e7f3b25a616fc837660 -->

<!-- pgdoc-cn_start sig_en=0ae602f08e3fa3a853c0198e310cc559 sig_cn_org=28c0fb6b79dd29e8a71e21a0bcb2667b source=15.7 
     <para>
      This prevents possible misbehavior if any catalog entries for the
      temp tables have fields wide enough to require toasting (such as a
      very complex <literal>CHECK</literal> condition).
     </para>
________________________________________________________-->
     <para>
      这样可以防止可能的错误行为，如果临时表的目录条目有足够宽的字段需要进行TOAST处理（比如一个非常复杂的<literal>CHECK</literal>条件）。
     </para>
<!-- pgdoc-cn_end sig_en=0ae602f08e3fa3a853c0198e310cc559 -->
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [97550c071] 2023-10-17 10:41:48 -0500
Branch: REL_16_STABLE [ee06199fc] 2023-10-17 10:41:58 -0500
Branch: REL_15_STABLE [c9265ae80] 2023-10-17 10:42:06 -0500
Branch: REL_14_STABLE [54fc9dca5] 2023-10-17 10:42:12 -0500
Branch: REL_13_STABLE [ac1dfc303] 2023-10-17 10:42:17 -0500
Branch: REL_12_STABLE [e2e169042] 2023-10-17 10:42:22 -0500
Branch: REL_11_STABLE [d0e7f95b4] 2023-10-17 10:42:28 -0500
Author: Nathan Bossart <nathan@postgresql.org>
Branch: REL_14_STABLE [555bc89c9] 2023-10-17 16:11:03 -0500
Branch: REL_13_STABLE [ebc093fa6] 2023-10-17 16:11:08 -0500
Branch: REL_12_STABLE [0e32652a7] 2023-10-17 16:11:13 -0500
Branch: REL_11_STABLE [bc322c73c] 2023-10-17 16:11:18 -0500
-->
<!-- pgdoc-cn_start sig_en=658a29523f73b2b5496652a56c0105cf sig_cn_org=72c096626ee7b4eb7ee308962ab9e9a2 source=15.7 
     <para>
      Avoid improper response to shutdown signals in child processes
      just forked by <function>system()</function> (Nathan Bossart)
     </para>
________________________________________________________-->
     <para>
      避免在由<function>system()</function>刚刚fork出的子进程中对关闭信号做出不当响应
      (Nathan Bossart)
     </para>
<!-- pgdoc-cn_end sig_en=658a29523f73b2b5496652a56c0105cf -->

<!-- pgdoc-cn_start sig_en=08d9ec374de72456d6c5e66cb362e4b2 sig_cn_org=790ae19d6a8fce93c7edca324b0c7920 source=15.7 
     <para>
      This fix avoids a race condition in which a child process that has
      been forked off by <function>system()</function>, but hasn't yet
      exec'd the intended child program, might receive and act on a signal
      intended for the parent server process.  That would lead to
      duplicate cleanup actions being performed, which will not end well.
     </para>
________________________________________________________-->
     <para>
      这个修复方案避免了一个竞态条件，即由<function>system()</function>分叉出的子进程，
	  但尚未执行预期的子程序，可能会接收并对父服务器进程的信号做出反应。
	  这将导致执行重复的清理操作，结果将不尽如人意。
</para>
<!-- pgdoc-cn_end sig_en=08d9ec374de72456d6c5e66cb362e4b2 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [63a582222] 2023-10-16 17:33:08 +1300
Branch: REL_16_STABLE [5725e4ebe] 2023-10-16 17:21:41 +1300
Branch: REL_15_STABLE [5e39884d3] 2023-10-16 17:23:02 +1300
Branch: REL_14_STABLE [dc75748a9] 2023-10-16 17:23:25 +1300
Branch: REL_13_STABLE [67060be3d] 2023-10-16 17:24:35 +1300
Branch: REL_12_STABLE [43c979086] 2023-10-16 17:25:43 +1300
-->
<!-- pgdoc-cn_start sig_en=df7a59df183cacaa03b5e91a76fc3c16 sig_cn_org=cd8dbdd6b03662d8f086086afc58b279 source=15.7 
     <para>
      Cope with torn reads of <filename>pg_control</filename> in frontend
      programs (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      处理前端程序中<filename>pg_control</filename>的损坏读取（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=df7a59df183cacaa03b5e91a76fc3c16 -->

<!-- pgdoc-cn_start sig_en=683b0d213732a7aeef7d9ebdd395dd0b sig_cn_org=118416501e65067a6c61d3b6d5e927cc source=15.7 
     <para>
      On some file systems, reading <filename>pg_control</filename> may
      not be an atomic action when the server concurrently writes that
      file.  This is detectable via a bad CRC.  Retry a few times to see
      if the file becomes valid before we report error.
     </para>
________________________________________________________-->
     <para>
      在某些文件系统上，当服务器同时写入<filename>pg_control</filename>文件时，读取操作可能不是原子操作。这可以通过坏的CRC来检测。在报告错误之前，尝试几次重试以查看文件是否变为有效。
     </para>
<!-- pgdoc-cn_end sig_en=683b0d213732a7aeef7d9ebdd395dd0b -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [c558e6fd9] 2023-10-16 10:43:47 +1300
Branch: REL_16_STABLE [2371432cd] 2023-10-16 10:45:05 +1300
Branch: REL_15_STABLE [606be8a35] 2023-10-16 10:45:18 +1300
Branch: REL_14_STABLE [a56fe5cf0] 2023-10-16 10:47:01 +1300
Branch: REL_13_STABLE [ae9da357b] 2023-10-16 10:47:10 +1300
Branch: REL_12_STABLE [637e86ecc] 2023-10-16 10:47:33 +1300
Branch: REL_11_STABLE [f1634c968] 2023-10-16 10:52:40 +1300
-->
<!-- pgdoc-cn_start sig_en=3405da342cc5222cf90773674f6d613b sig_cn_org=d46567b5a5e04dd27cf3718066c30820 source=15.7 
     <para>
      Avoid torn reads of <filename>pg_control</filename> in relevant SQL
      functions (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      避免在相关的SQL函数中对<filename>pg_control</filename>进行破损读取（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=3405da342cc5222cf90773674f6d613b -->

<!-- pgdoc-cn_start sig_en=0a2d3f2336a730c384afb0495606b605 sig_cn_org=02f875437beb70abea58326c6ff44123 source=15.7 
     <para>
      Acquire the appropriate lock before
      reading <filename>pg_control</filename>, to ensure we get a
      consistent view of that file.
     </para>
________________________________________________________-->
     <para>
      在读取<filename>pg_control</filename>之前获取适当的锁定，以确保我们获得该文件的一致视图。
     </para>
<!-- pgdoc-cn_end sig_en=0a2d3f2336a730c384afb0495606b605 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a956bd3fa] 2023-10-03 15:37:00 +0900
Branch: REL_16_STABLE [75f31a3f2] 2023-10-03 15:37:18 +0900
Branch: REL_15_STABLE [95e91da66] 2023-10-03 15:37:19 +0900
Branch: REL_14_STABLE [f91c87b31] 2023-10-03 15:37:21 +0900
Branch: REL_13_STABLE [a0b013625] 2023-10-03 15:37:23 +0900
Branch: REL_12_STABLE [9b3900cdb] 2023-10-03 15:37:24 +0900
-->
<!-- pgdoc-cn_start sig_en=7a19c9167281120e720d38a1dbddfa89 sig_cn_org=0bb1a104bad349bf1c85a403f9117e66 source=15.7 
     <para>
      Avoid integer overflow when computing size of backend activity
      string array (Jakub Wartak)
     </para>
________________________________________________________-->
     <para>
      避免在计算后端活动字符串数组大小时发生整数溢出（Jakub Wartak）
     </para>
<!-- pgdoc-cn_end sig_en=7a19c9167281120e720d38a1dbddfa89 -->

<!-- pgdoc-cn_start sig_en=404fea3270aeef704d2c93e8f687006f sig_cn_org=2b0e8994a9e98fb4c17ca57053a3ccb8 source=15.7 
     <para>
      On 64-bit machines we will allow values
      of <varname>track_activity_query_size</varname> large enough to
      cause 32-bit overflow when multiplied by the allowed number of
      connections.  The code actually allocating the per-backend local
      array was careless about this though, and allocated the array
      incorrectly.
     </para>
________________________________________________________-->
     <para>
      在64位机器上，我们将允许<varname>track_activity_query_size</varname>的值足够大，
      以致在乘以允许的连接数时会发生32位溢出。然而，实际分配每个后端本地数组的代码对此并不在意，
      并且错误地分配了数组。
     </para>
<!-- pgdoc-cn_end sig_en=404fea3270aeef704d2c93e8f687006f -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [c181f2e2b] 2023-09-30 17:03:50 +0300
Branch: REL_16_STABLE [992d2ca81] 2023-09-30 17:07:24 +0300
Branch: REL_15_STABLE [5ae245664] 2023-09-30 17:07:32 +0300
Branch: REL_14_STABLE [2d4f99bc6] 2023-09-30 17:07:37 +0300
Branch: REL_13_STABLE [ed9247cd7] 2023-09-30 17:07:41 +0300
-->
<!-- pgdoc-cn_start sig_en=bf5a7dba0044ca3c1ef1ac918cb5d866 sig_cn_org=bb2df361d868f153f81bbe10626055df source=15.7 
     <para>
      Fix briefly showing inconsistent progress statistics
      for <command>ANALYZE</command> on inherited tables
      (Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      修复了在继承表上对<command>ANALYZE</command>显示不一致的进度统计信息
      （Heikki Linnakangas）
     </para>
<!-- pgdoc-cn_end sig_en=bf5a7dba0044ca3c1ef1ac918cb5d866 -->

<!-- pgdoc-cn_start sig_en=7a0a1f9418a810e9cb54eeb9b246971b sig_cn_org=536a8a50418d4fd1f0dfa3d742100bfd source=15.7 
     <para>
      The block-level counters should be reset to zero at the same time we
      update the current-relation field.
     </para>
________________________________________________________-->
     <para>
      块级计数器应在更新current-relation字段时重置为零。
     </para>
<!-- pgdoc-cn_end sig_en=7a0a1f9418a810e9cb54eeb9b246971b -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [e64c733bb] 2023-10-02 12:39:35 +0300
Branch: REL_16_STABLE [4a97a43a7] 2023-10-02 12:49:25 +0300
Branch: REL_15_STABLE [0684d1949] 2023-10-02 12:49:29 +0300
Branch: REL_14_STABLE [594001864] 2023-10-02 12:50:32 +0300
-->
<!-- pgdoc-cn_start sig_en=efb150bb9fc08932336f44a9e0bdbbff sig_cn_org=a5e8fc13b9bbe977678ed80773bd2dbf source=15.7 
     <para>
      Fix the background writer to report any WAL writes it makes to the
      statistics counters (Nazir Bilal Yavuz)
     </para>
________________________________________________________-->
     <para>
      修复后台写入程序，使其将任何写入WAL的操作报告给统计计数器（Nazir Bilal Yavuz）
     </para>
<!-- pgdoc-cn_end sig_en=efb150bb9fc08932336f44a9e0bdbbff -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e221c0bef] 2023-09-26 09:29:47 +0900
Branch: REL_16_STABLE [280f70221] 2023-09-26 09:30:36 +0900
Branch: REL_15_STABLE [802fcb9ed] 2023-09-26 09:30:39 +0900
-->
<!-- pgdoc-cn_start sig_en=a0a72a77389d4dd90536dcead687dfcb sig_cn_org=d559b6d24690c6d62ef12b1c156bbf43 source=15.7 
     <para>
      Fix confusion about forced-flush behavior
      in <function>pgstat_report_wal()</function>
      (Ryoga Yoshida, Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      修复<function>pgstat_report_wal()</function>中关于强制刷新行为的混淆
      (Ryoga Yoshida, Michael Paquier)
     </para>
<!-- pgdoc-cn_end sig_en=a0a72a77389d4dd90536dcead687dfcb -->

<!-- pgdoc-cn_start sig_en=c21a219faa1565f209f9519d189008a4 sig_cn_org=d8e0ea5ad5f2280610fa0c06ca425c82 source=15.7 
     <para>
      This could result in some statistics about WAL I/O being forgotten
      in a shutdown.
     </para>
________________________________________________________-->
     <para>
      这可能导致在关闭时忘记一些关于WAL I/O的统计信息。
     </para>
<!-- pgdoc-cn_end sig_en=c21a219faa1565f209f9519d189008a4 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [dc8d72c1c] 2023-09-25 14:42:17 -0400
Branch: REL_16_STABLE [055f786ea] 2023-09-25 14:42:17 -0400
Branch: REL_15_STABLE [0e59266a5] 2023-09-25 14:41:57 -0400
Branch: REL_14_STABLE [5cff431bc] 2023-09-25 14:41:57 -0400
Branch: REL_13_STABLE [8cfc3e80b] 2023-09-25 14:41:57 -0400
Branch: REL_12_STABLE [4435a8d5d] 2023-09-25 14:41:57 -0400
Branch: REL_11_STABLE [fdc7cf73b] 2023-09-25 14:41:57 -0400
-->
<!-- pgdoc-cn_start sig_en=ade1d5b67efea996627004b2a21f2311 sig_cn_org=963e0ff520d8b576f739ca659125a209 source=15.7 
     <para>
      Track the dependencies of cached <command>CALL</command> statements,
      and re-plan them when needed (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      跟踪缓存的<command>CALL</command>语句的依赖关系，并在需要时重新计划它们（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=ade1d5b67efea996627004b2a21f2311 -->

<!-- pgdoc-cn_start sig_en=ce922d15e38b292de8d5f9ca6fea6884 sig_cn_org=aa8aa7788e47fb6f25c467501c76b7ed source=15.7 
     <para>
      DDL commands, such as replacement of a function that has been
      inlined into a <command>CALL</command> argument, can create the need
      to re-plan a <command>CALL</command> that has been cached by
      PL/pgSQL.  That was not happening, leading to misbehavior or strange
      errors such as <quote>cache lookup failed</quote>.
     </para>
________________________________________________________-->
     <para>
      DDL命令，比如替换已经内联到<command>CALL</command>参数中的函数，可能会导致需要重新计划已被PL/pgSQL缓存的<command>CALL</command>。
      这种情况并没有发生，导致出现异常行为或诸如<quote>缓存查找失败</quote>等奇怪错误。
     </para>
<!-- pgdoc-cn_end sig_en=ce922d15e38b292de8d5f9ca6fea6884 -->
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [5f3aa309a] 2023-09-22 11:18:25 +0200
Branch: REL_16_STABLE [f720875a4] 2023-09-22 11:18:25 +0200
Branch: REL_15_STABLE [9dc85806d] 2023-09-22 11:18:25 +0200
-->
<!-- pgdoc-cn_start sig_en=f95791e1353e561733db4be116576cb9 sig_cn_org=7b8b9491025d568d2e26eaabefd0e340 source=15.7 
     <para>
      Avoid a possible pfree-a-NULL-pointer crash after an error in
      OpenSSL connection setup (Sergey Shinderuk)
     </para>
________________________________________________________-->
     <para>
      避免在OpenSSL连接设置中发生错误后出现可能的pfree-a-NULL-pointer崩溃（Sergey Shinderuk）
     </para>
<!-- pgdoc-cn_end sig_en=f95791e1353e561733db4be116576cb9 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e0e492e5a] 2023-09-15 17:01:52 -0400
Branch: REL_16_STABLE [53630f12d] 2023-09-15 17:01:26 -0400
Branch: REL_15_STABLE [2679a107a] 2023-09-15 17:01:26 -0400
Branch: REL_14_STABLE [ae13f8166] 2023-09-15 17:01:26 -0400
Branch: REL_13_STABLE [c5b7f791d] 2023-09-15 17:01:26 -0400
Branch: REL_12_STABLE [d29812c0c] 2023-09-15 17:01:26 -0400
Branch: REL_11_STABLE [a374f6c61] 2023-09-15 17:01:26 -0400
-->
<!-- pgdoc-cn_start sig_en=b75a54e1ec6cde116c51e8e3b38a1d0e sig_cn_org=ded8bdaf22e558a6f2d0a553b9b6428b source=15.7 
     <para>
      Track nesting depth correctly when
      inspecting <type>RECORD</type>-type Vars from outer query levels
      (Richard Guo)
     </para>
________________________________________________________-->
     <para>
      在检查外部查询级别的<type>RECORD</type>类型变量时，正确跟踪嵌套深度（Richard Guo）
     </para>
<!-- pgdoc-cn_end sig_en=b75a54e1ec6cde116c51e8e3b38a1d0e -->

<!-- pgdoc-cn_start sig_en=c869f3ee4411d4bf7ef6f3eb2bb1f694 sig_cn_org=43b0e9eb93eaaf6abd16a3cf3a35514a source=15.7 
     <para>
      This oversight could lead to assertion failures, core dumps,
      or <quote>bogus varno</quote> errors.
     </para>
________________________________________________________-->
     <para>
      这个疏忽可能导致断言失败，核心转储，或<quote>虚假的varno</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=c869f3ee4411d4bf7ef6f3eb2bb1f694 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [ee3a551e9] 2023-09-14 11:27:29 +1200
Branch: REL_16_STABLE [1a6900e58] 2023-09-14 11:27:16 +1200
Branch: REL_15_STABLE [17a3f1c34] 2023-09-14 11:27:00 +1200
Branch: REL_14_STABLE [6341cb0b0] 2023-09-14 11:27:43 +1200
-->
<!-- pgdoc-cn_start sig_en=a2e847787d958b75a8404ce31352ea61 sig_cn_org=58edce873e3659a04d02a183bee2ab7b source=15.7 
     <para>
      Track hash function and negator function dependencies of
      ScalarArrayOpExpr plan nodes (David Rowley)
     </para>
________________________________________________________-->
     <para>
      跟踪ScalarArrayOpExpr计划节点的哈希函数和否定函数依赖关系（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=a2e847787d958b75a8404ce31352ea61 -->

<!-- pgdoc-cn_start sig_en=b997b6fb3a0f58b90264118f0ca7a294 sig_cn_org=f7416e5cd8f97af01b3c39cbd16be9da source=15.7 
     <para>
      In most cases this oversight was harmless, since these functions
      would be unlikely to disappear while the node's original operator
      remains present.
     </para>
________________________________________________________-->
     <para>
      在大多数情况下，这种疏忽是无害的，因为这些函数在节点的原始操作符仍然存在时不太可能消失。
     </para>
<!-- pgdoc-cn_end sig_en=b997b6fb3a0f58b90264118f0ca7a294 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [3acd0599b] 2023-09-13 14:58:22 +1200
Branch: REL_16_STABLE [f899c7f1e] 2023-09-13 15:06:07 +1200
Branch: REL_15_STABLE [a26cc0334] 2023-09-13 14:43:04 +1200
Branch: REL_14_STABLE [e2452c2a6] 2023-09-13 14:46:16 +1200
Branch: REL_13_STABLE [189097db8] 2023-09-13 14:48:00 +1200
Branch: REL_12_STABLE [012b80ad2] 2023-09-13 14:50:14 +1200
Branch: REL_11_STABLE [6ae57f190] 2023-09-13 14:52:34 +1200
-->
<!-- pgdoc-cn_start sig_en=258bd19d1d86352b370dfe3be4f35dea sig_cn_org=2d1aeebfb35cfce68d770abace684927 source=15.7 
     <para>
      Fix error-handling bug in <type>RECORD</type> type cache management
      (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      修复<type>RECORD</type>类型缓存管理中的错误处理bug（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=258bd19d1d86352b370dfe3be4f35dea -->

<!-- pgdoc-cn_start sig_en=fb313a4fd8974cc2992272cc938f7fb5 sig_cn_org=0f4c2ced537d16cb7a0c9fe7969029e7 source=15.7 
     <para>
      An out-of-memory error occurring at just the wrong point could leave
      behind inconsistent state that would lead to an infinite loop.
     </para>
________________________________________________________-->
     <para>
      在恰到好处的时候发生的内存不足错误可能会留下不一致的状态，导致无限循环。
     </para>
<!-- pgdoc-cn_end sig_en=fb313a4fd8974cc2992272cc938f7fb5 -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: REL_15_STABLE [c7256e656] 2023-09-12 10:23:17 +0530
Branch: REL_14_STABLE [f7d25117b] 2023-09-12 10:12:51 +0530
Branch: REL_13_STABLE [c570bb4d6] 2023-09-12 09:58:50 +0530
Branch: REL_12_STABLE [7e57208ed] 2023-09-12 09:44:37 +0530
Branch: REL_11_STABLE [feb4e218e] 2023-09-12 09:36:56 +0530
-->
<!-- pgdoc-cn_start sig_en=2b975f67145b2d04f1be3d52a76a706b sig_cn_org=0ac0c4ef32d465ba8408b620f0550f97 source=15.7 
     <para>
      Fix assertion failure when logical decoding is retried in the same
      session after an error (Hou Zhijie)
     </para>
________________________________________________________-->
     <para>
      在同一个会话中，当逻辑解码在错误后重试时修复断言失败（侯志杰）
     </para>
<!-- pgdoc-cn_end sig_en=2b975f67145b2d04f1be3d52a76a706b -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [6b18b3fe2] 2023-10-03 10:21:44 +0900
Branch: REL_16_STABLE [a06efbc3a] 2023-10-03 10:25:12 +0900
Branch: REL_15_STABLE [afc79591d] 2023-10-03 10:25:14 +0900
Branch: REL_14_STABLE [baeb8542c] 2023-10-03 10:25:15 +0900
Branch: REL_13_STABLE [6103d2cca] 2023-10-03 10:25:17 +0900
Branch: REL_12_STABLE [22b2e6e9d] 2023-10-03 10:25:19 +0900
-->
<!-- pgdoc-cn_start sig_en=ea418b223ce9e96caff8946a43cea9b4 sig_cn_org=bb0e052eb454a41ce53bfdb7fcf4bdcd source=15.7 
     <para>
      Treat out-of-memory failures as fatal while reading WAL
      (Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      将读取WAL时的内存不足故障视为致命错误（Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=ea418b223ce9e96caff8946a43cea9b4 -->

<!-- pgdoc-cn_start sig_en=5c3d55515d521330058595c220dcb2e8 sig_cn_org=72fe21aed5edda93f6395bd704ade7c7 source=15.7 
     <para>
      Previously this would be treated as a bogus-data condition, leading
      to the conclusion that we'd reached the end of WAL, which is
      incorrect and could lead to inconsistent WAL replay.
     </para>
________________________________________________________-->
     <para>
      以前，这将被视为虚假数据条件，导致我们得出了已经到达WAL结尾的结论，这是不正确的，
	  可能导致WAL重放不一致。
     </para>
<!-- pgdoc-cn_end sig_en=5c3d55515d521330058595c220dcb2e8 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [bae868caf] 2023-09-23 10:26:24 +1200
Branch: REL_16_STABLE [ce497f648] 2023-09-23 10:27:02 +1200
Branch: REL_15_STABLE [f4d152edd] 2023-09-23 10:28:12 +1200
Branch: REL_14_STABLE [3ce3b53d7] 2023-09-23 10:28:40 +1200
Branch: REL_13_STABLE [6606c5716] 2023-09-23 10:29:44 +1200
Branch: REL_12_STABLE [e8f3c0687] 2023-09-23 10:29:56 +1200
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [becfbdd6c] 2023-09-26 10:53:38 +1300
Branch: REL_16_STABLE [10d0591ea] 2023-09-26 10:53:52 +1300
Branch: REL_15_STABLE [99d334a18] 2023-09-26 10:54:02 +1300
Branch: REL_14_STABLE [3d413c5a7] 2023-09-26 10:54:24 +1300
Branch: REL_13_STABLE [45d1fe8b5] 2023-09-26 10:54:47 +1300
Branch: REL_12_STABLE [bde2f1847] 2023-09-26 10:59:49 +1300
-->
<!-- pgdoc-cn_start sig_en=35bbe7ed77c7137aef49889621a87fa7 sig_cn_org=7659445dd0138a25ebfec4d987d82f57 source=15.7 
     <para>
      Fix possible recovery failure due to trying to allocate memory based
      on a bogus WAL record length field (Thomas Munro, Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      修复由于尝试根据虚假的WAL记录长度字段分配内存而导致的可能恢复失败（Thomas Munro，Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=35bbe7ed77c7137aef49889621a87fa7 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [2b8e5273e] 2023-09-04 08:04:22 +0900
Branch: REL_16_STABLE Release: REL_16_0 [c397c98ae] 2023-09-04 08:04:40 +0900
Branch: REL_15_STABLE [5a9325fdd] 2023-09-04 08:04:43 +0900
-->
<!-- pgdoc-cn_start sig_en=78871aa8444efd2952b89b66a733dcf4 sig_cn_org=5bb019862133b88e48a5d00411b8d4d6 source=15.7 
     <para>
      Fix race condition in database dropping that could lead to the
      autovacuum launcher getting stuck (Andres Freund, Will Mortensen,
      Jacob Speidel)
     </para>
________________________________________________________-->
     <para>
      修复数据库删除中可能导致自动清理启动器卡住的竞争条件（Andres Freund，Will Mortensen，Jacob Speidel）
     </para>
<!-- pgdoc-cn_end sig_en=78871aa8444efd2952b89b66a733dcf4 -->

<!-- pgdoc-cn_start sig_en=543d153aee501660b25df3ef495b8513 sig_cn_org=8a59506a4c0c382eab9007dc823d425c source=15.7 
     <para>
      The race could lead to a statistics entry for the removed database
      remaining present, confusing the launcher's selection of which
      database to process.
     </para>
________________________________________________________-->
     <para>
      这场比赛可能导致已删除数据库的统计信息条目仍然存在，使启动器在选择要处理的数据库时感到困惑。
     </para>
<!-- pgdoc-cn_end sig_en=543d153aee501660b25df3ef495b8513 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [52c6c0f19] 2023-08-30 08:03:42 +0900
Branch: REL_16_STABLE Release: REL_16_0 [1d2939b6d] 2023-08-30 08:03:48 +0900
Branch: REL_15_STABLE [5180160c1] 2023-08-30 08:03:51 +0900
Branch: REL_14_STABLE [d2bd4ba30] 2023-08-30 08:03:52 +0900
Branch: REL_13_STABLE [420c8dc7e] 2023-08-30 08:03:54 +0900
-->
<!-- pgdoc-cn_start sig_en=fc273d98670b630d8ba218e4df513ce3 sig_cn_org=290e9f87e32b293dc319a80b92e7a5b9 source=15.7 
     <para>
      Fix datatype size confusion in logical tape management
      (Ranier Vilela)
     </para>
________________________________________________________-->
     <para>
      修复逻辑磁带管理中的数据类型大小混淆
      (Ranier Vilela)
     </para>
<!-- pgdoc-cn_end sig_en=fc273d98670b630d8ba218e4df513ce3 -->

<!-- pgdoc-cn_start sig_en=480b538eaf271e7e1bba646b24f61184 sig_cn_org=8832b16bc36f592b264ce5ae03c032b1 source=15.7 
     <para>
      Integer overflow was possible on platforms where long is wider than
      int, although it would take a multiple-terabyte temporary file to
      cause a problem.
     </para>
________________________________________________________-->
     <para>
      整数溢出在长整型比整型宽的平台上是可能的，尽管需要一个多个
      太字节的临时文件才会引起问题。
     </para>
<!-- pgdoc-cn_end sig_en=480b538eaf271e7e1bba646b24f61184 -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [5fec3c870] 2023-08-29 09:09:40 +0300
Branch: REL_16_STABLE Release: REL_16_0 [5f38ff3d0] 2023-08-29 09:10:28 +0300
Branch: REL_15_STABLE [0c1024060] 2023-08-29 09:12:35 +0300
Branch: REL_14_STABLE [3d895f95a] 2023-08-29 09:12:24 +0300
Branch: REL_13_STABLE [a01e479e8] 2023-08-29 09:12:17 +0300
-->
<!-- pgdoc-cn_start sig_en=e456d999c44e5cf2dea7bcc65039382b sig_cn_org=025e738bbbd789a23ce6f89e8ed197ac source=15.7 
     <para>
      Avoid unintended close of syslogger process's stdin
      (Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      避免意外关闭syslogger进程的stdin（Heikki Linnakangas）
     </para>
<!-- pgdoc-cn_end sig_en=e456d999c44e5cf2dea7bcc65039382b -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d8b2fcc9d] 2023-08-24 12:02:46 -0400
Branch: REL_16_STABLE Release: REL_16_0 [ba0d737ca] 2023-08-24 12:02:40 -0400
Branch: REL_15_STABLE [870085135] 2023-08-24 12:02:40 -0400
Branch: REL_14_STABLE [9b2a41db1] 2023-08-24 12:02:40 -0400
Branch: REL_13_STABLE [27566bcf3] 2023-08-24 12:02:40 -0400
Branch: REL_12_STABLE [b808dbf90] 2023-08-24 12:02:40 -0400
Branch: REL_11_STABLE [9c59f3862] 2023-08-24 12:02:40 -0400
-->
<!-- pgdoc-cn_start sig_en=d8f679f8cf8111cb53bcc6fb869e6f66 sig_cn_org=83a6a20abbc0e39839338360f60a4d45 source=15.7 
     <para>
      Avoid doing plan cache revalidation of utility statements
      that do not receive interesting processing during parse analysis
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免对在解析分析期间未接收到有趣处理的实用程序语句进行计划缓存重新验证
      (Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=d8f679f8cf8111cb53bcc6fb869e6f66 -->

<!-- pgdoc-cn_start sig_en=959339ab1ada8fa7d80bef78cda67fcb sig_cn_org=b2b61404317215ab4a04fbdcad234d80 source=15.7 
     <para>
      Aside from saving a few cycles, this prevents failure after a cache
      invalidation for statements that must not set a snapshot, such
      as <command>SET TRANSACTION ISOLATION LEVEL</command>.
     </para>
________________________________________________________-->
     <para>
      除了节省一些循环之外，这还可以防止在缓存失效后失败，对于那些不得设置快照的语句，比如<command>SET TRANSACTION ISOLATION LEVEL</command>。
     </para>
<!-- pgdoc-cn_end sig_en=959339ab1ada8fa7d80bef78cda67fcb -->
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [a68458108] 2023-08-22 15:17:05 -0400
Branch: REL_16_STABLE Release: REL_16_0 [f938acd68] 2023-08-22 15:18:19 -0400
Branch: REL_15_STABLE [75f323aa1] 2023-08-22 15:16:01 -0400
Branch: REL_14_STABLE [7f4515a58] 2023-08-22 15:15:45 -0400
Branch: REL_13_STABLE [1bb619d4d] 2023-08-22 15:15:31 -0400
Branch: REL_12_STABLE [01993ac74] 2023-08-22 15:15:18 -0400
Branch: REL_11_STABLE [2d13dab04] 2023-08-23 17:22:16 -0400
Branch: REL_11_STABLE [b915bf495] 2023-08-24 16:14:26 -0400
-->
<!-- pgdoc-cn_start sig_en=9d060ecad666e6de03d82b74bbaf274b sig_cn_org=fd0e2a6bdc93f30994ae3f02d94cd267 source=15.7 
     <para>
      Keep by-reference <structfield>attmissingval</structfield> values in
      a long-lived context while they are being used (Andrew Dunstan)
     </para>
________________________________________________________-->
     <para>
      在使用时，将<structfield>attmissingval</structfield>的引用值保留在长期存在的上下文中（Andrew Dunstan）
     </para>
<!-- pgdoc-cn_end sig_en=9d060ecad666e6de03d82b74bbaf274b -->

<!-- pgdoc-cn_start sig_en=da1788339517b58fd781a04b00425bc6 sig_cn_org=0d72d8b86404270383e7ba728882fcc4 source=15.7 
     <para>
      This avoids possible use of dangling pointers when a tuple slot
      outlives the tuple descriptor with which its value was constructed.
     </para>
________________________________________________________-->
     <para>
      这样可以避免在元组插槽的值构造时，元组描述符已经过期时可能出现悬空指针的情况。
     </para>
<!-- pgdoc-cn_end sig_en=da1788339517b58fd781a04b00425bc6 -->
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [fa2e87494] 2023-08-09 13:09:25 -0700
Branch: REL_16_STABLE Release: REL_16_0 [0d56c32c8] 2023-08-09 13:09:01 -0700
Branch: REL_15_STABLE [9f3343e40] 2023-08-07 15:12:49 -0700
Branch: REL_14_STABLE [00953f1e2] 2023-08-07 15:12:33 -0700
Branch: REL_13_STABLE [90cadfd49] 2023-08-07 15:12:09 -0700
Branch: REL_12_STABLE [a86d40227] 2023-08-07 15:11:18 -0700
Branch: REL_11_STABLE [43ba5105a] 2023-08-07 15:09:11 -0700
Branch: master [bee263b08] 2023-08-10 10:20:54 -0700
Branch: REL_16_STABLE Release: REL_16_0 [7bed93a46] 2023-08-10 10:24:58 -0700
Branch: REL_15_STABLE [1bc19dfcf] 2023-08-10 10:25:47 -0700
Branch: REL_14_STABLE [5a32af3f2] 2023-08-10 10:26:12 -0700
Branch: REL_13_STABLE [4caa9e33e] 2023-08-10 10:26:46 -0700
Branch: REL_12_STABLE [01bc42634] 2023-08-10 10:27:00 -0700
Branch: REL_11_STABLE [ae1269295] 2023-08-10 10:27:24 -0700
-->
<!-- pgdoc-cn_start sig_en=d4a27b46d8cb7c8249e7ef2fd40a8f45 sig_cn_org=2c2da0d4d9eb1ddc3f7a9fe29da2fa13 source=15.7 
     <para>
      Recalculate the effective value of <varname>search_path</varname>
      after <command>ALTER ROLE</command> (Jeff Davis)
     </para>
________________________________________________________-->
     <para>
      在执行<command>ALTER ROLE</command>之后重新计算<varname>search_path</varname>的有效值（Jeff Davis）
     </para>
<!-- pgdoc-cn_end sig_en=d4a27b46d8cb7c8249e7ef2fd40a8f45 -->

<!-- pgdoc-cn_start sig_en=2236ab355720990d6f48dc4e2324cdad sig_cn_org=548feb1accf383a631a5418a5151dc8b source=15.7 
     <para>
      This ensures that after renaming a role, the meaning of the special
      string <literal>$user</literal> is re-determined.
     </para>
________________________________________________________-->
     <para>
      这样可以确保在重命名角色后，特殊字符串<literal>$user</literal>的含义被重新确定。
     </para>
<!-- pgdoc-cn_end sig_en=2236ab355720990d6f48dc4e2324cdad -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [dab889d60] 2023-10-22 10:04:55 +1300
Branch: REL_16_STABLE [174ccda5e] 2023-10-22 10:05:22 +1300
Branch: REL_15_STABLE [f72790b29] 2023-10-22 10:05:40 +1300
Branch: REL_14_STABLE [fb9a16a1a] 2023-10-22 10:05:59 +1300
-->
<!-- pgdoc-cn_start sig_en=0cd21ff826325f7b13e514a81180f879 sig_cn_org=771a694d9f24e6f5068db25def0d23fd source=15.7 
     <para>
      Fix <quote>could not duplicate handle</quote> error occurring on
      Windows when <varname>min_dynamic_shared_memory</varname> is set
      above zero (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      修复在Windows上当<varname>min_dynamic_shared_memory</varname>设置为大于零时出现的<quote>无法复制句柄</quote>错误（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=0cd21ff826325f7b13e514a81180f879 -->
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [ef74c7197] 2023-10-10 11:01:13 -0700
Branch: REL_16_STABLE [b8963e8a2] 2023-10-10 11:01:55 -0700
Branch: REL_15_STABLE [b9bb02620] 2023-10-10 11:02:45 -0700
Branch: REL_14_STABLE [6615bb95a] 2023-10-10 11:02:56 -0700
Branch: REL_13_STABLE [469d367be] 2023-10-10 11:03:03 -0700
Branch: REL_12_STABLE [6dbd01b9f] 2023-10-10 11:03:10 -0700
Branch: REL_11_STABLE [04f0baa85] 2023-10-10 11:03:20 -0700
-->
<!-- pgdoc-cn_start sig_en=218a7ba6d002b41b64a0b8b4e6058167 sig_cn_org=2cc0ab1d0593e39bd0073f62500afe34 source=15.7 
     <para>
      Fix order of operations in <function>GenericXLogFinish</function>
      (Jeff Davis)
     </para>
________________________________________________________-->
     <para>
      修复<function>GenericXLogFinish</function>中的操作顺序（Jeff Davis）
     </para>
<!-- pgdoc-cn_end sig_en=218a7ba6d002b41b64a0b8b4e6058167 -->

<!-- pgdoc-cn_start sig_en=d54977571c935d928c487a0c20ff361f sig_cn_org=53f65f38bd37f8c7918b752973e1f105 source=15.7 
     <para>
      This code violated the conditions required for crash safety by
      writing WAL before marking changed buffers dirty.  No core code uses
      this function, but extensions do (<filename>contrib/bloom</filename>
      does, for example).
     </para>
________________________________________________________-->
     <para>
      这段代码违反了崩溃安全所需的条件，通过在标记更改的缓冲区脏之前写入WAL。没有核心代码使用这个函数，但扩展程序使用（例如<filename>contrib/bloom</filename>）。
     </para>
<!-- pgdoc-cn_end sig_en=d54977571c935d928c487a0c20ff361f -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [af5b3c3d1] 2023-09-19 08:31:06 +0900
Branch: REL_16_STABLE [f171430f0] 2023-09-19 08:31:22 +0900
Branch: REL_15_STABLE [9e0ce80f3] 2023-09-19 08:31:24 +0900
Branch: REL_14_STABLE [bb65f3c1b] 2023-09-19 08:31:26 +0900
Branch: REL_13_STABLE [35e8ba3e5] 2023-09-19 08:31:27 +0900
Branch: REL_12_STABLE [99d27e55c] 2023-09-19 08:31:29 +0900
Branch: REL_11_STABLE [ddded779a] 2023-09-19 08:31:31 +0900
-->
<!-- pgdoc-cn_start sig_en=a44429bd686355a098953aa9e435bb22 sig_cn_org=a694a507556b7f5c408a5027af2385f6 source=15.7 
     <para>
      Remove incorrect assertion in PL/Python exception handling
      (Alexander Lakhin)
     </para>
________________________________________________________-->
     <para>
      删除PL/Python异常处理中的错误断言（Alexander Lakhin）
     </para>
<!-- pgdoc-cn_end sig_en=a44429bd686355a098953aa9e435bb22 -->
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [37188cea0] 2023-08-22 12:50:01 -0700
Branch: REL_16_STABLE Release: REL_16_0 [501704e82] 2023-08-22 12:49:40 -0700
Branch: REL_15_STABLE [1d9976d1b] 2023-08-22 12:49:17 -0700
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [f234b8cd1] 2023-09-05 11:39:27 +0200
Branch: REL_16_STABLE Release: REL_16_0 [9ddecd406] 2023-09-05 11:39:17 +0200
Branch: REL_15_STABLE [3a788447d] 2023-09-05 11:36:55 +0200
-->
<!-- pgdoc-cn_start sig_en=ff18baaddea9aca219b5d478ff8ff689 sig_cn_org=6da239d983d9551a6d1f8070c3255c33 source=15.7 
     <para>
      Fix assertion failure in <application>pg_dump</application> when
      it's asked to dump the <literal>pg_catalog</literal> schema (Peter
      Eisentraut)
     </para>
________________________________________________________-->
     <para>
      修复了<application>pg_dump</application>在被要求转储<literal>pg_catalog</literal>模式时出现断言失败的问题（Peter Eisentraut）
     </para>
<!-- pgdoc-cn_end sig_en=ff18baaddea9aca219b5d478ff8ff689 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [06c0c3688] 2023-10-02 13:27:58 -0400
Branch: REL_16_STABLE [aaaf8fbb6] 2023-10-02 13:27:51 -0400
Branch: REL_15_STABLE [10e705bd2] 2023-10-02 13:27:51 -0400
Branch: REL_14_STABLE [829d91cc6] 2023-10-02 13:27:51 -0400
Branch: REL_13_STABLE [295953f8b] 2023-10-02 13:27:51 -0400
Branch: REL_12_STABLE [c02f29758] 2023-10-02 13:27:51 -0400
Branch: REL_11_STABLE [4f16152d9] 2023-10-02 13:27:51 -0400
-->
<!-- pgdoc-cn_start sig_en=b99f3d87c88839588edaa6f2d4555e76 sig_cn_org=ec25da882fbafa5296dd398d887516eb source=15.7 
     <para>
      Fix <application>pg_restore</application> so that selective restores
      will include both table-level and column-level ACLs for selected
      tables (Euler Taveira, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<application>pg_restore</application>，使选择性恢复将包括所选表的表级和列级ACLs（Euler Taveira，Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=b99f3d87c88839588edaa6f2d4555e76 -->

<!-- pgdoc-cn_start sig_en=cb94ddbbc993126a2d1339a723d7ef7d sig_cn_org=2f71fb65dc4c07544798a8470b81ac3e source=15.7 
     <para>
      Formerly, only the table-level ACL would get restored if both types
      were present.
     </para>
________________________________________________________-->
     <para>
      以前，如果两种类型都存在，只有表级ACL会被恢复。
     </para>
<!-- pgdoc-cn_end sig_en=cb94ddbbc993126a2d1339a723d7ef7d -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [2e3dc8c14] 2023-09-25 14:27:33 +0200
Branch: REL_16_STABLE [fb9ddd0fa] 2023-09-25 14:34:06 +0200
Branch: REL_15_STABLE [8845d8597] 2023-09-25 14:34:06 +0200
Branch: REL_14_STABLE [26c291a15] 2023-09-25 14:34:06 +0200
Branch: REL_13_STABLE [d3946c4f6] 2023-09-25 14:34:05 +0200
Branch: REL_12_STABLE [af9f6cd1d] 2023-09-25 14:34:05 +0200
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: REL_15_STABLE [04d2d605f] 2023-11-03 12:07:11 -0400
Branch: REL_14_STABLE [f9280e77e] 2023-11-03 12:07:25 -0400
Branch: REL_13_STABLE [2f1f49975] 2023-11-03 12:07:35 -0400
Branch: REL_12_STABLE [d3246a2ad] 2023-11-03 12:07:40 -0400
-->
<!-- pgdoc-cn_start sig_en=1de46771ba74ce02aa5851f0fcac2e10 sig_cn_org=822c9d44a035b0ea79a6ec454d7b8c99 source=15.7 
     <para>
      Add logic to <application>pg_upgrade</application> to check for use
      of <type>abstime</type>, <type>reltime</type>,
      and <type>tinterval</type> data types (&Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      为<application>pg_upgrade</application>添加逻辑，检查是否使用了<type>abstime</type>、<type>reltime</type>和<type>tinterval</type>数据类型（&Aacute;lvaro Herrera）
     </para>
<!-- pgdoc-cn_end sig_en=1de46771ba74ce02aa5851f0fcac2e10 -->

<!-- pgdoc-cn_start sig_en=bd11ef99dfb91c23217c84b5ccdee662 sig_cn_org=eda3fd08e54de7bbeaf8b2c7a4265e8f source=15.7 
     <para>
      These obsolete data types were removed
      in <productname>PostgreSQL</productname> version 12, so check to
      make sure they aren't present in an older database before claiming
      it can be upgraded.
     </para>
________________________________________________________-->
     <para>
      这些已过时的数据类型在<productname>PostgreSQL</productname>版本12中被移除，
      因此在声称可以升级之前，请检查一下旧数据库中是否存在这些数据类型。
     </para>
<!-- pgdoc-cn_end sig_en=bd11ef99dfb91c23217c84b5ccdee662 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e1c6db630] 2023-09-07 14:12:18 +0900
Branch: REL_16_STABLE Release: REL_16_0 [105795843] 2023-09-07 14:12:25 +0900
Branch: REL_15_STABLE [574bff7bd] 2023-09-07 14:12:29 +0900
Branch: REL_14_STABLE [9de74ca70] 2023-09-07 14:12:31 +0900
Branch: REL_13_STABLE [6cdd7b805] 2023-09-07 14:12:33 +0900
Branch: REL_12_STABLE [2fe968ce9] 2023-09-07 14:12:34 +0900
Branch: REL_11_STABLE [dbd1a06c9] 2023-09-07 14:12:36 +0900
-->
<!-- pgdoc-cn_start sig_en=abfac3ce2254f9d4bb8f33beb9b9d218 sig_cn_org=7f6c4e5e42c3b716c8b5ab5cc01a942a source=15.7 
     <para>
      Avoid generating invalid temporary slot names
      in <application>pg_basebackup</application> (Jelte Fennema)
     </para>
________________________________________________________-->
     <para>
      避免在<application>pg_basebackup</application>中生成无效的临时插槽名称（Jelte Fennema）
     </para>
<!-- pgdoc-cn_end sig_en=abfac3ce2254f9d4bb8f33beb9b9d218 -->

<!-- pgdoc-cn_start sig_en=3b3d84983047e705d2b3709eafb86375 sig_cn_org=ad1ec595de5580c2c4054535195d0dae source=15.7 
     <para>
      This has only been seen to occur when the server connection runs
      through <application>pgbouncer</application>.
     </para>
________________________________________________________-->
     <para>
      这种情况只在服务器连接通过<application>pgbouncer</application>时发生过。
     </para>
<!-- pgdoc-cn_end sig_en=3b3d84983047e705d2b3709eafb86375 -->
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [90ebcc32d] 2023-10-14 15:54:46 -0700
Branch: REL_16_STABLE [06ff06484] 2023-10-14 15:54:49 -0700
Branch: REL_15_STABLE [1102f4ece] 2023-10-14 15:54:49 -0700
Branch: REL_14_STABLE [0df88a686] 2023-10-14 15:54:49 -0700
Branch: REL_13_STABLE [3895e9153] 2023-10-14 15:54:50 -0700
Branch: REL_12_STABLE [73cda80a3] 2023-10-14 15:54:50 -0700
-->
<!-- pgdoc-cn_start sig_en=c7e421a52a12df54984811627a6b91a7 sig_cn_org=a8a5d947634203ef7b5362b2a3044218 source=15.7 
     <para>
      Avoid false <quote>too many client connections</quote> errors
      in <application>pgbench</application> on Windows (Noah Misch)
     </para>
________________________________________________________-->
     <para>
      避免在Windows上<application>pgbench</application>中出现<quote>太多客户端连接</quote>错误（Noah Misch）
     </para>
<!-- pgdoc-cn_end sig_en=c7e421a52a12df54984811627a6b91a7 -->
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [6ec9e9975] 2023-10-30 14:46:05 -0700
Branch: REL_16_STABLE [3c6a05b80] 2023-10-30 14:46:08 -0700
Branch: REL_15_STABLE [6f81386a9] 2023-10-30 14:46:08 -0700
Branch: REL_14_STABLE [42496cba6] 2023-10-30 14:46:09 -0700
Branch: REL_13_STABLE [f31ccb575] 2023-10-30 14:46:09 -0700
Branch: REL_12_STABLE [3a205c916] 2023-10-30 14:46:09 -0700
Branch: REL_11_STABLE [e04509f32] 2023-10-30 14:46:09 -0700
-->
<!-- pgdoc-cn_start sig_en=37ba7eb0239e4197eec70e6e4e5e9072 sig_cn_org=d22a4095d00b280569890cac061c547b source=15.7 
     <para>
      In <filename>contrib/amcheck</filename>, do not report interrupted
      page deletion as corruption (Noah Misch)
     </para>
________________________________________________________-->
     <para>
      在<filename>contrib/amcheck</filename>中，不要将中断的页面删除报告为损坏（Noah Misch）
     </para>
<!-- pgdoc-cn_end sig_en=37ba7eb0239e4197eec70e6e4e5e9072 -->

<!-- pgdoc-cn_start sig_en=0d5f491c29925b50c745d65363ed029b sig_cn_org=e3c5c1b0354c4e0bd3092347f6c8470e source=15.7 
     <para>
      This fix prevents false-positive reports of <quote>the first child
      of leftmost target page is not leftmost of its
      level</quote>, <quote>block NNNN is not leftmost</quote>
      or <quote>left link/right link pair in index XXXX not in
      agreement</quote>.  They appeared
      if <application>amcheck</application> ran after an unfinished btree
      index page deletion and before <command>VACUUM</command> had cleaned
      things up.
     </para>
________________________________________________________-->
     <para>
      这个修复程序防止了关于<quote>最左目标页的第一个子页面不是其级别最左</quote>、
      <quote>块NNNN不是最左</quote>或<quote>索引XXXX中的左链接/右链接对不一致</quote>的
      误报。它们出现在<application>amcheck</application>在未完成的btree索引页删除后
      和<command>VACUUM</command>清理之前运行时。
     </para>
<!-- pgdoc-cn_end sig_en=0d5f491c29925b50c745d65363ed029b -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [849172ff4] 2023-10-29 11:14:37 +0000
Branch: REL_16_STABLE [ab73a37e9] 2023-10-29 11:14:36 +0000
Branch: REL_15_STABLE [5f0691839] 2023-10-29 11:14:35 +0000
Branch: REL_14_STABLE [162b38a06] 2023-10-29 11:14:34 +0000
Branch: REL_13_STABLE [35e6a5c20] 2023-10-29 11:14:34 +0000
Branch: REL_12_STABLE [f7cd7b265] 2023-10-29 11:14:33 +0000
Branch: REL_11_STABLE [c804ffb56] 2023-10-29 11:14:32 +0000
-->
<!-- pgdoc-cn_start sig_en=a0b886aac54d4b1e734010518889b593 sig_cn_org=a4ee3ff725740d2f1ca071d178656870 source=15.7 
     <para>
      Fix failure of <filename>contrib/btree_gin</filename> indexes
      on <type>interval</type> columns,
      when an indexscan using the <literal>&lt;</literal>
      or <literal>&lt;=</literal> operator is performed (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复<filename>contrib/btree_gin</filename>索引在<type>interval</type>列上的失败，
      当使用<literal>&lt;</literal>或<literal>&lt;=</literal>操作符进行索引扫描时（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=a0b886aac54d4b1e734010518889b593 -->

<!-- pgdoc-cn_start sig_en=1ded2aef2d534b9d8be2521788dd3d39 sig_cn_org=0d76362583b004e9dffc66ad9469f062 source=15.7 
     <para>
      Such an indexscan failed to return all the entries it should.
     </para>
________________________________________________________-->
     <para>
      这样的索引扫描未能返回所有应该返回的条目。
     </para>
<!-- pgdoc-cn_end sig_en=1ded2aef2d534b9d8be2521788dd3d39 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [76200e5ee] 2023-10-19 05:13:23 +1300
Branch: REL_16_STABLE [774185056] 2023-10-19 05:14:07 +1300
Branch: REL_15_STABLE [b60e3ac76] 2023-10-19 05:15:38 +1300
Branch: REL_14_STABLE [0a8b7d5c1] 2023-10-19 05:16:00 +1300
Branch: REL_13_STABLE [53c4dabe1] 2023-10-19 05:16:24 +1300
Branch: REL_12_STABLE [7da915e33] 2023-10-19 05:17:27 +1300
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [37d5babb5] 2023-10-18 22:47:23 +1300
Branch: REL_16_STABLE [74d19ec09] 2023-10-18 22:53:56 +1300
Branch: REL_15_STABLE [eed1feb3f] 2023-10-18 22:59:46 +1300
Branch: REL_14_STABLE [82d9a782a] 2023-10-18 23:04:09 +1300
Branch: REL_13_STABLE [f28956b23] 2023-10-18 23:16:48 +1300
Branch: REL_12_STABLE [15ddc9725] 2023-10-18 23:18:16 +1300
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [f90b4a846] 2023-10-19 03:01:55 +1300
Branch: REL_16_STABLE [60596f148] 2023-10-19 03:07:18 +1300
Branch: REL_15_STABLE [b2e097788] 2023-10-19 03:03:27 +1300
Branch: REL_14_STABLE [ee3e4c41f] 2023-10-19 03:03:46 +1300
Branch: REL_13_STABLE [981292c19] 2023-10-19 03:04:00 +1300
Branch: REL_12_STABLE [d701f0d1f] 2023-10-19 03:04:09 +1300
Author: Thomas Munro <tmunro@postgresql.org>
Branch: REL_13_STABLE [7c070e224] 2023-10-24 11:23:08 +1300
Branch: REL_12_STABLE [9ad986276] 2023-10-24 11:23:21 +1300
-->
<!-- pgdoc-cn_start sig_en=7940efe5583e22e2c7c0eab7ab7aa039 sig_cn_org=e2688e041bc5a390ac6cddbcd55dcdb5 source=15.7 
     <para>
      Add support for LLVM 16 and 17 (Thomas Munro, Dmitry Dolgov)
     </para>
________________________________________________________-->
     <para>
      添加对LLVM 16和17的支持（Thomas Munro，Dmitry Dolgov）
     </para>
<!-- pgdoc-cn_end sig_en=7940efe5583e22e2c7c0eab7ab7aa039 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [06843df4a] 2023-09-29 14:07:30 -0400
Branch: REL_16_STABLE [75c562653] 2023-09-29 14:07:30 -0400
Branch: REL_15_STABLE [be3398ea1] 2023-09-29 14:07:30 -0400
Branch: REL_14_STABLE [e9d1560d3] 2023-09-29 14:07:30 -0400
Branch: REL_13_STABLE [1b64e374c] 2023-09-29 14:07:30 -0400
Branch: REL_12_STABLE [d8ceb98e4] 2023-09-29 14:07:30 -0400
Branch: REL_11_STABLE [4d10fda52] 2023-09-29 14:07:30 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3aa021b29] 2023-09-26 21:06:21 -0400
Branch: REL_16_STABLE [e73d6a0df] 2023-09-26 21:06:21 -0400
Branch: REL_15_STABLE [78f17fb97] 2023-09-26 21:06:21 -0400
Branch: REL_14_STABLE [5d60e8ed3] 2023-09-26 21:06:21 -0400
Branch: REL_13_STABLE [53cc19bfa] 2023-09-26 21:06:21 -0400
Branch: REL_12_STABLE [abe423712] 2023-09-26 21:06:21 -0400
Branch: REL_11_STABLE [0e0de20c8] 2023-09-26 21:06:21 -0400
-->
<!-- pgdoc-cn_start sig_en=a4b9b8c934ac25d9a49c74822d66d55e sig_cn_org=2e27a75f57c301f0cf13f8fb7f44cb8a source=15.7 
     <para>
      Suppress assorted build-time warnings on
      recent <productname>macOS</productname> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      抑制最近<productname>macOS</productname>上的各种构建时警告(Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=a4b9b8c934ac25d9a49c74822d66d55e -->

<!-- pgdoc-cn_start sig_en=11974fcd2483573f3a0f7d8cf52b8e43 sig_cn_org=85d6138033477a834597ce3946ca0a84 source=15.7 
     <para>
      <productname>Xcode 15</productname> (released
      with <productname>macOS Sonoma</productname>) changed the linker's
      behavior in a way that causes many duplicate-library warnings while
      building <productname>PostgreSQL</productname>.  These were
      harmless, but they're annoying so avoid citing the same libraries
      twice.  Also remove use of the <option>-multiply_defined
      suppress</option> linker switch, which apparently has been a no-op
      for a long time, and is now actively complained of.
     </para>
________________________________________________________-->
     <para>
      <productname>Xcode 15</productname>（随 <productname>macOS Sonoma</productname> 发布）改变了链接器的行为，导致构建 <productname>PostgreSQL</productname> 时出现许多重复库警告。这些警告是无害的，但很烦人，因此避免引用相同的库两次。还要删除使用 <option>-multiply_defined suppress</option> 链接器开关，这个开关显然很长时间以来都是无效的，现在却被积极投诉。
     </para>
<!-- pgdoc-cn_end sig_en=11974fcd2483573f3a0f7d8cf52b8e43 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [6fc3a138b] 2023-09-27 14:40:23 +0900
Branch: REL_16_STABLE [641db601b] 2023-09-27 14:41:15 +0900
Branch: REL_15_STABLE [8a9e4e84e] 2023-09-27 14:41:21 +0900
Branch: REL_14_STABLE [e4d7ad30f] 2023-09-27 14:41:23 +0900
Branch: REL_13_STABLE [a64b8b035] 2023-09-27 14:41:26 +0900
-->
<!-- pgdoc-cn_start sig_en=16a0bfaa1da658956286f48aa0855d09 sig_cn_org=4336e8918802825cca85332ec3f3de14 source=15.7 
     <para>
      When building <filename>contrib/unaccent</filename>'s rules file,
      fall back to using <literal>python</literal>
      if <literal>-&minus;with-python</literal> was not given and make
      variable <literal>PYTHON</literal> was not set (Japin Li)
     </para>
________________________________________________________-->
     <para>
      在构建<filename>contrib/unaccent</filename>的规则文件时，
      如果没有提供<literal>--with-python</literal>并且未设置变量<literal>PYTHON</literal>，
      则回退到使用<literal>python</literal>（Japin Li）
     </para>
<!-- pgdoc-cn_end sig_en=16a0bfaa1da658956286f48aa0855d09 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5fd3e06f6] 2023-10-28 11:54:40 -0400
Branch: REL_16_STABLE [d1537afe3] 2023-10-28 11:54:51 -0400
Branch: REL_15_STABLE [85b98a70b] 2023-10-28 11:54:59 -0400
Branch: REL_14_STABLE [877e7b4b9] 2023-10-28 11:55:06 -0400
Branch: REL_13_STABLE [d94612873] 2023-10-28 11:55:14 -0400
Branch: REL_12_STABLE [7180bb827] 2023-10-28 11:55:22 -0400
Branch: REL_11_STABLE [64fc5e005] 2023-10-28 11:55:30 -0400
-->
<!-- pgdoc-cn_start sig_en=44150c99b5fe9fb3216dcacce8fbe3a8 sig_cn_org=7f7ce0293fd0d042919784ed69760e1e source=15.7 
     <para>
      Remove <literal>PHOT</literal> (Phoenix Islands Time) from the
      default timezone abbreviations list (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      从默认时区缩写列表中删除<literal>PHOT</literal>（Phoenix Islands Time）（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=44150c99b5fe9fb3216dcacce8fbe3a8 -->

<!-- pgdoc-cn_start sig_en=846a055d12175353d57c3ac3b27f66d0 sig_cn_org=e0c37e87724f69aa508d1a722b84ba3c source=15.7 
     <para>
      Presence of this abbreviation in the default list can cause failures
      on recent Debian and Ubuntu releases, as they no longer install the
      underlying tzdb entry by default.  Since this is a made-up
      abbreviation for a zone with a total human population of about two
      dozen, it seems unlikely that anyone will miss it.  If someone does,
      they can put it back via a custom abbreviations file.
     </para>
________________________________________________________-->
     <para>
      默认列表中存在这个缩写词可能会导致在最近的Debian和Ubuntu发行版上失败，
      因为它们不再默认安装底层的tzdb条目。由于这是一个为大约两打人口的区域
      捏造的缩写词，似乎不太可能有人会错过它。如果有人错过了，他们可以通
      过自定义缩写文件将其恢复。
     </para>
<!-- pgdoc-cn_end sig_en=846a055d12175353d57c3ac3b27f66d0 -->
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-4">
<!-- pgdoc-cn_start sig_en=c420af9a9295714dbf281df33382a482 sig_cn_org=b2324db17bcd12c7d3337958ebede75b source=15.7 
  <title>Release 15.4</title>
________________________________________________________-->
  <title>发布版本 15.4</title>
<!-- pgdoc-cn_end sig_en=c420af9a9295714dbf281df33382a482 -->

  <formalpara>
<!-- pgdoc-cn_start sig_en=c45e8127eac45f2347bf1713afaeffda sig_cn_org=253305b4c6dff5b87ef36e3c2d95e52e source=15.7 
  <title>Release date:</title>
________________________________________________________-->
  <title>发布日期：</title>
<!-- pgdoc-cn_end sig_en=c45e8127eac45f2347bf1713afaeffda -->
<!-- pgdoc-cn_start sig_en=5d5c94e7b9483641f9433e70c9a99880 sig_cn_org=16f31f71476fda82e16d839916e1be34 source=15.7 
  <para>2023-08-10</para>
________________________________________________________-->
  <para>2023年8月10日</para>
<!-- pgdoc-cn_end sig_en=5d5c94e7b9483641f9433e70c9a99880 -->
  </formalpara>

<!-- pgdoc-cn_start sig_en=526f4cac36f72794d4f7ae0d2854bd18 sig_cn_org=3c530815ea4829ef9154b8d5f50a0b08 source=15.7 
  <para>
   This release contains a variety of fixes from 15.3.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>
________________________________________________________-->
  <para>
   这个版本包含了从15.3中修复的各种问题。
   有关主要版本15中新功能的信息，请参见<xref linkend="release-15"/>。
</para>
<!-- pgdoc-cn_end sig_en=526f4cac36f72794d4f7ae0d2854bd18 -->

  <sect2>
<!-- pgdoc-cn_start sig_en=20809f1b7d48c7d9fd2bf2fa3d883995 sig_cn_org=460b628ed8b96233eed558e8a984de20 source=15.7 
   <title>Migration to Version 15.4</title>
________________________________________________________-->
   <title>升级到版本15.4</title>
<!-- pgdoc-cn_end sig_en=20809f1b7d48c7d9fd2bf2fa3d883995 -->

<!-- pgdoc-cn_start sig_en=036ed5117c7b85420fc61cc5e5b99f8b sig_cn_org=992c4bf77211ba6013c0d564cef911c0 source=15.7 
   <para>
    A dump/restore is not required for those running 15.X.
   </para>
________________________________________________________-->
   <para>
    对于运行15.X版本的用户，不需要进行dump/restore操作。
   </para>
<!-- pgdoc-cn_end sig_en=036ed5117c7b85420fc61cc5e5b99f8b -->

<!-- pgdoc-cn_start sig_en=8dd0cadce5039e7969ae5f10cb79dc41 sig_cn_org=2b6b79b639bbf5e358c4da2f9a69356d source=15.7 
   <para>
    However, if you use BRIN indexes, it may be advisable to reindex them;
    see the third changelog entry below.
   </para>
________________________________________________________-->
   <para>
    然而，如果您使用BRIN索引，可能建议重新索引它们；请参见下面的第三个变更日志条目。
   </para>
<!-- pgdoc-cn_end sig_en=8dd0cadce5039e7969ae5f10cb79dc41 -->

<!-- pgdoc-cn_start sig_en=1f19e2666ab7165163c6575073d89c47 sig_cn_org=478ff3bf2f835ebd2b3e2516252001e6 source=15.7 
   <para>
    Also, if you are upgrading from a version earlier than 15.1,
    see <xref linkend="release-15-1"/>.
   </para>
________________________________________________________-->
   <para>
    另外，如果您正在从早于15.1版本升级，请参阅<xref linkend="release-15-1"/>。
</para>
<!-- pgdoc-cn_end sig_en=1f19e2666ab7165163c6575073d89c47 -->
  </sect2>

  <sect2>
<!-- pgdoc-cn_start sig_en=e161fef38e54e54458e215e5f978ef9b sig_cn_org=f104d50dd9d4dd802f94229ebe5bc097 source=15.7 
   <title>Changes</title>
________________________________________________________-->
   <title>变更</title>
<!-- pgdoc-cn_end sig_en=e161fef38e54e54458e215e5f978ef9b -->

   <itemizedlist>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [cd5f2a357] 2023-08-07 06:05:56 -0700
Branch: REL_16_STABLE [f53511010] 2023-08-07 06:05:59 -0700
Branch: REL_15_STABLE [de494ec14] 2023-08-07 06:06:00 -0700
Branch: REL_14_STABLE [d4648a74b] 2023-08-07 06:06:00 -0700
Branch: REL_13_STABLE [b1b585e0f] 2023-08-07 06:06:00 -0700
Branch: REL_12_STABLE [eb044d8f0] 2023-08-07 06:06:00 -0700
Branch: REL_11_STABLE [919ebb023] 2023-08-07 06:06:01 -0700
-->
<!-- pgdoc-cn_start sig_en=37ae94b62e830e173a643433de5cb20d sig_cn_org=e74e0e9f2e0941bbdf4fd40a3ac78c8b source=15.7 
     <para>
      Disallow substituting a schema or owner name into an extension script
      if the name contains a quote, backslash, or dollar sign (Noah Misch)
     </para>
________________________________________________________-->
     <para>
      如果名称包含引号、反斜杠或美元符号，禁止在扩展脚本中将模式或所有者名称进行替换（Noah Misch）
     </para>
<!-- pgdoc-cn_end sig_en=37ae94b62e830e173a643433de5cb20d -->

<!-- pgdoc-cn_start sig_en=0081c7a2fd2f3ccf2155ec1da7f3f877 sig_cn_org=78b1e9bee0ab08f32a80004ad81f691d source=15.7 
     <para>
      This restriction guards against SQL-injection hazards for trusted
      extensions.
     </para>
________________________________________________________-->
     <para>
      这个限制可以防止SQL注入风险，适用于受信任的扩展。
     </para>
<!-- pgdoc-cn_end sig_en=0081c7a2fd2f3ccf2155ec1da7f3f877 -->

<!-- pgdoc-cn_start sig_en=b8a1a50b2288981b039ffa0833991356 sig_cn_org=b398e62d97d60cf355f2d83f241f8d65 source=15.7 
     <para>
      The <productname>PostgreSQL</productname> Project thanks Micah Gates,
      Valerie Woolard, Tim Carey-Smith, and Christoph Berg for reporting
      this problem.
      (CVE-2023-39417)
     </para>
________________________________________________________-->
     <para>
      <productname>PostgreSQL</productname>项目感谢Micah Gates、Valerie Woolard、
      Tim Carey-Smith和Christoph Berg报告了这个问题。
      (CVE-2023-39417)
     </para>
<!-- pgdoc-cn_end sig_en=b8a1a50b2288981b039ffa0833991356 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [c2e08b04c] 2023-08-07 09:28:47 +0100
Branch: REL_16_STABLE [67a007dc0] 2023-08-07 09:27:09 +0100
Branch: REL_15_STABLE [cb2ae5741] 2023-08-07 09:24:27 +0100
-->
<!-- pgdoc-cn_start sig_en=6202564f5f4382d3e375257ce541dd8c sig_cn_org=768f815135da0e12597c1c6fda075d55 source=15.7 
     <para>
      Fix <command>MERGE</command> to enforce row security policies
      properly (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复<command>MERGE</command>以正确执行行安全策略（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=6202564f5f4382d3e375257ce541dd8c -->

<!-- pgdoc-cn_start sig_en=f977bb71e2dd4096787a9c2963d43737 sig_cn_org=5b93190ea60cb094f7e3156546d9ae72 source=15.7 
     <para>
      When <command>MERGE</command> performs an <literal>UPDATE</literal>
      action, it should enforce any <literal>UPDATE</literal> or
      <literal>SELECT</literal> RLS policies defined on the target table,
      to be consistent with the way that a plain <command>UPDATE</command>
      with a <literal>WHERE</literal> clause works.  Instead it was
      enforcing <literal>INSERT</literal> RLS policies for both
      <literal>INSERT</literal> and <literal>UPDATE</literal> actions.
     </para>
________________________________________________________-->
     <para>
      当<command>MERGE</command>执行<literal>UPDATE</literal>操作时，它应该强制执行目标表上定义的任何<literal>UPDATE</literal>或<literal>SELECT</literal> RLS策略，以保持与普通带有<literal>WHERE</literal>子句的<command>UPDATE</command>操作方式一致。
      相反，它正在强制执行<literal>INSERT</literal> RLS策略，无论是<literal>INSERT</literal>还是<literal>UPDATE</literal>操作。
     </para>
<!-- pgdoc-cn_end sig_en=f977bb71e2dd4096787a9c2963d43737 -->

<!-- pgdoc-cn_start sig_en=68d92a873046e051bcbb99b9c27c772c sig_cn_org=bf0dd41c21e6595c6983d88e3ff3ad8b source=15.7 
     <para>
      In addition, when <command>MERGE</command> performs a <literal>DO
      NOTHING</literal> action, it applied the target table's
      <literal>DELETE</literal> RLS policies to existing rows, even though
      those rows are not being deleted.  While it's not a security
      problem, this could result in unwanted errors.
     </para>
________________________________________________________-->
     <para>
      此外，当<command>MERGE</command>执行<literal>DO NOTHING</literal>操作时，
      它会将目标表的<literal>DELETE</literal> RLS策略应用于现有行，即使这些行并未被删除。
      虽然这不是一个安全问题，但可能导致意外错误。
</para>
<!-- pgdoc-cn_end sig_en=68d92a873046e051bcbb99b9c27c772c -->

<!-- pgdoc-cn_start sig_en=474b4aed9c70acd66a975d74199a4d91 sig_cn_org=cb2c600020f7eb2dc48928a3ce360127 source=15.7 
     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Dean Rasheed for reporting this problem.
      (CVE-2023-39418)
     </para>
________________________________________________________-->
     <para>
      <productname>PostgreSQL</productname>项目感谢Dean Rasheed报告了这个问题。
      (CVE-2023-39418)
     </para>
<!-- pgdoc-cn_end sig_en=474b4aed9c70acd66a975d74199a4d91 -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master Release: REL_16_BR [3581cbdcd] 2023-05-19 01:29:44 +0200
Branch: REL_15_STABLE [e18769323] 2023-05-19 00:15:13 +0200
Branch: REL_14_STABLE [40d465caf] 2023-05-19 00:15:00 +0200
Branch: REL_13_STABLE [6c512fc6e] 2023-05-19 00:14:05 +0200
Branch: REL_12_STABLE [d78a66d92] 2023-05-19 00:16:13 +0200
Branch: REL_11_STABLE [fc7dc728d] 2023-05-19 00:21:05 +0200
Branch: master Release: REL_16_BR [3ec8a3bfb] 2023-05-18 23:33:23 +0200
Branch: REL_15_STABLE [80f64b900] 2023-05-18 23:33:45 +0200
Branch: REL_14_STABLE [3f1356e5d] 2023-05-18 23:34:10 +0200
Branch: REL_13_STABLE [2b1ab28b9] 2023-05-18 23:34:35 +0200
Branch: REL_12_STABLE [d42ffda68] 2023-05-18 23:34:56 +0200
Branch: REL_11_STABLE [b511d7323] 2023-05-18 23:35:16 +0200
-->
<!-- pgdoc-cn_start sig_en=5b57ae569ba6aba1a3f6497a6e00edfe sig_cn_org=90988e3c3204370ae3116d1c254a6b74 source=15.7 
     <para>
      Fix confusion between empty (no rows) ranges and all-NULL ranges in
      BRIN indexes, as well as incorrect merging of all-NULL summaries
      (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      修复BRIN索引中空范围（没有行）和所有NULL范围之间的混淆，以及所有NULL摘要的错误合并
      （Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=5b57ae569ba6aba1a3f6497a6e00edfe -->

<!-- pgdoc-cn_start sig_en=5894775045b7150da4b9465394d7573c sig_cn_org=ec4f12fc1bbee10868240395c6cda59a source=15.7 
     <para>
      Each of these oversights could result in forgetting that a BRIN
      index range contains any NULL values, potentially allowing
      subsequent queries that should return NULL values to miss doing so.
     </para>
________________________________________________________-->
     <para>
      这些疏忽中的每一个都可能导致忘记 BRIN 索引范围包含任何 NULL 值，从而可能导致后续查询应返回 NULL 值却未能这样做。
     </para>
<!-- pgdoc-cn_end sig_en=5894775045b7150da4b9465394d7573c -->

<!-- pgdoc-cn_start sig_en=057c350c539d94c34d3ac23e43331d96 sig_cn_org=ed62286a8b5b3ab1669df377f5ecadfa source=15.7 
     <para>
      This fix will not in itself correct faulty BRIN entries.
      It's recommended to <command>REINDEX</command> any BRIN indexes that
      may be used to search for nulls.
     </para>
________________________________________________________-->
     <para>
      这个修复本身不会纠正错误的BRIN条目。
      建议<command>REINDEX</command>任何可能用于搜索空值的BRIN索引。
     </para>
<!-- pgdoc-cn_end sig_en=057c350c539d94c34d3ac23e43331d96 -->
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [c66a7d75e] 2023-07-13 13:03:28 -0700
Branch: REL_16_STABLE [a4b4cc1d6] 2023-07-13 13:03:30 -0700
Branch: REL_15_STABLE [f66403749] 2023-07-13 13:04:45 -0700
Branch: REL_14_STABLE [d11efe830] 2023-07-13 13:03:33 -0700
Branch: REL_13_STABLE [81ce00006] 2023-07-13 13:03:34 -0700
Branch: REL_12_STABLE [034a9fcd2] 2023-07-13 13:03:36 -0700
Branch: REL_11_STABLE [1c38e7ae1] 2023-07-13 13:03:37 -0700
-->
<!-- pgdoc-cn_start sig_en=84cabd5d41d1f1f5587f7308a302d1d2 sig_cn_org=2104725fb6bdfe7d4d7621ec4a487ec7 source=15.7 
     <para>
      Avoid leaving a corrupted database behind when <command>DROP
      DATABASE</command> is interrupted (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      当<command>DROP DATABASE</command>被中断时，避免留下一个损坏的数据库（Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=84cabd5d41d1f1f5587f7308a302d1d2 -->

<!-- pgdoc-cn_start sig_en=7a969f6045dcfb8a7f5f6585eacb38c8 sig_cn_org=ea571b77799ebdd9f410b84fea74442d source=15.7 
     <para>
      If <command>DROP DATABASE</command> was interrupted after it had
      already begun taking irreversible steps, the target database
      remained accessible (because the removal of
      its <structname>pg_database</structname> row would roll back),
      but it would have corrupt contents.  Fix by marking the database
      as inaccessible before we begin to perform irreversible operations.
      A failure after that will leave the database still partially
      present, but nothing can be done with it except to issue
      another <command>DROP DATABASE</command>.
     </para>
________________________________________________________-->
     <para>
      如果<command>DROP DATABASE</command>在已经开始执行不可逆步骤后被中断，
      目标数据库仍然可访问（因为其<structname>pg_database</structname>行的删除会回滚），
      但其内容可能会损坏。在执行不可逆操作之前将数据库标记为不可访问以修复此问题。
      此后的失败将导致数据库仍然部分存在，但除了发出另一个<command>DROP DATABASE</command>命令外无法对其进行任何操作。
     </para>
<!-- pgdoc-cn_end sig_en=7a969f6045dcfb8a7f5f6585eacb38c8 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [cfc43aeb3] 2023-06-30 13:54:48 +0900
Branch: REL_16_STABLE [f4691e2e7] 2023-06-30 13:54:53 +0900
Branch: REL_15_STABLE [cb4ac3e56] 2023-06-30 13:54:55 +0900
Branch: REL_14_STABLE [663b35f2d] 2023-06-30 13:54:56 +0900
Branch: REL_13_STABLE [537b70b82] 2023-06-30 13:54:59 +0900
Branch: REL_12_STABLE [dbe0e5c56] 2023-06-30 13:55:02 +0900
Branch: REL_11_STABLE [c75c33de5] 2023-06-30 13:55:07 +0900
-->
<!-- pgdoc-cn_start sig_en=d5d5eb9507f44a0b40319b13e228d95f sig_cn_org=ce4b928895013ab963e385a3c3939f25 source=15.7 
     <para>
      Ensure that partitioned indexes are correctly marked as valid or not
      at creation (Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      确保分区索引在创建时正确标记为有效或无效（Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=d5d5eb9507f44a0b40319b13e228d95f -->

<!-- pgdoc-cn_start sig_en=066e6e643942c08415db75ab10154366 sig_cn_org=0132630777ba768ee580963b6fe38328 source=15.7 
     <para>
      If a new partitioned index matches an existing but invalid index on
      one of the partitions, the partitioned index could end up being
      marked valid prematurely.  This could lead to misbehavior or
      assertion failures in subsequent queries on the partitioned table.
     </para>
________________________________________________________-->
     <para>
      如果新的分区索引与现有但无效的索引在其中一个分区上匹配，那么分区索引可能会过早地被标记为有效。
      这可能导致在分区表上的后续查询中出现错误行为或断言失败。
     </para>
<!-- pgdoc-cn_end sig_en=066e6e643942c08415db75ab10154366 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [fc55c7ff8] 2023-06-28 15:57:31 +0900
Branch: REL_15_STABLE [7aa17b498] 2023-06-28 15:57:43 +0900
Branch: REL_14_STABLE [6160e221d] 2023-06-28 15:57:48 +0900
Branch: REL_13_STABLE [f42844069] 2023-06-28 15:57:51 +0900
Branch: REL_12_STABLE [63b292e73] 2023-06-28 15:57:53 +0900
Branch: REL_11_STABLE [e90e9275f] 2023-06-28 15:57:55 +0900
-->
<!-- pgdoc-cn_start sig_en=9cda2f6f595abb0c203de62a0b96830e sig_cn_org=ac654c04e111fb41b151f24fa47aee44 source=15.7 
     <para>
      Ignore invalid child indexes when matching partitioned indexes to
      child indexes during <command>ALTER TABLE ATTACH PARTITION</command>
      (Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      在<command>ALTER TABLE ATTACH PARTITION</command>期间，匹配分区索引和子索引时忽略无效的子索引（Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=9cda2f6f595abb0c203de62a0b96830e -->

<!-- pgdoc-cn_start sig_en=ba627a1ebceaaddd09450692c7406478 sig_cn_org=95b8a55657f767646e8a3778f78c324f source=15.7 
     <para>
      Such an index will now be ignored, and a new child index created
      instead.
     </para>
________________________________________________________-->
     <para>
      这样的索引现在将被忽略，而将创建一个新的子索引。
     </para>
<!-- pgdoc-cn_end sig_en=ba627a1ebceaaddd09450692c7406478 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [38ea6aa90] 2023-07-14 10:12:48 +0900
Branch: REL_16_STABLE [31f9d41d6] 2023-07-14 10:13:14 +0900
Branch: REL_15_STABLE [c0dc97c7b] 2023-07-14 10:13:15 +0900
Branch: REL_14_STABLE [954cc2139] 2023-07-14 10:13:17 +0900
Branch: REL_13_STABLE [c89d74c18] 2023-07-14 10:13:20 +0900
Branch: REL_12_STABLE [f1d6bcdd8] 2023-07-14 10:13:21 +0900
Branch: REL_11_STABLE [ed2b58c15] 2023-07-14 10:13:22 +0900
-->
<!-- pgdoc-cn_start sig_en=7f9fde74bf48d5660dd1d8bd5fb78e56 sig_cn_org=0067924ec7bf41e0545ce25022125744 source=15.7 
     <para>
      Fix possible failure when marking a partitioned index valid after
      all of its partitions have been attached (Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      修复在所有分区已附加后标记分区索引为有效时可能出现的失败（Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=7f9fde74bf48d5660dd1d8bd5fb78e56 -->

<!-- pgdoc-cn_start sig_en=de82b95793c86f040c1e1711fcc78217 sig_cn_org=73a035112d1eb00d5b943d030c4401b9 source=15.7 
     <para>
      The update of the index's <structname>pg_index</structname> entry
      could use stale data for other columns.  One reported symptom is
      an <quote>attempted to update invisible tuple</quote> error.
     </para>
________________________________________________________-->
     <para>
      更新索引的<structname>pg_index</structname>条目可能会使用其他列的旧数据。一个报告的症状是
      一个<quote>尝试更新不可见元组</quote>错误。
</para>
<!-- pgdoc-cn_end sig_en=de82b95793c86f040c1e1711fcc78217 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [bd5ddbe86] 2023-07-10 09:40:07 +0900
Branch: REL_16_STABLE [55c95f24c] 2023-07-10 09:40:12 +0900
Branch: REL_15_STABLE [d1e0f408c] 2023-07-10 09:40:14 +0900
Branch: REL_14_STABLE [235e716bc] 2023-07-10 09:40:15 +0900
Branch: REL_13_STABLE [f5b075adc] 2023-07-10 09:40:17 +0900
Branch: REL_12_STABLE [02021f1b2] 2023-07-10 09:40:22 +0900
Branch: REL_11_STABLE [914e72e6e] 2023-07-10 09:40:24 +0900
-->
<!-- pgdoc-cn_start sig_en=30a90a3d300cafeb24d9252ca5f9e1f7 sig_cn_org=21a94ab425271bd45a71650e7ce66ae9 source=15.7 
     <para>
      Fix <command>ALTER EXTENSION SET SCHEMA</command> to complain if the
      extension contains any objects outside the extension's schema
      (Michael Paquier, Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      修复<command>ALTER EXTENSION SET SCHEMA</command>，如果扩展包含扩展模式之外的任何对象，则发出警告
      (Michael Paquier, Heikki Linnakangas)
     </para>
<!-- pgdoc-cn_end sig_en=30a90a3d300cafeb24d9252ca5f9e1f7 -->

<!-- pgdoc-cn_start sig_en=f06ea3ddab096e7a6bb1c139247a0bdf sig_cn_org=e560cb04137f9ba45b291d5191fee522 source=15.7 
     <para>
      Erroring out if the extension contains objects in multiple schemas
      was always intended; but the check was mis-coded so that it would
      fail to detect some cases, leading to surprising behavior.
     </para>
________________________________________________________-->
     <para>
      如果扩展包含多个模式中的对象，则出错是始终有意的；但检查代码存在错误，
      无法检测到某些情况，导致出现意外行为。
     </para>
<!-- pgdoc-cn_end sig_en=f06ea3ddab096e7a6bb1c139247a0bdf -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [97d891010] 2023-06-30 07:49:01 +0900
Branch: REL_15_STABLE [93401ec02] 2023-06-30 07:49:07 +0900
-->
<!-- pgdoc-cn_start sig_en=ecf8d3e562667c1a15245ae7a35f10cc sig_cn_org=51277301f158daaca36b10b76efdbc3d source=15.7 
     <para>
      Fix tracking of tables' access method dependencies (Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      修复表的访问方法依赖跟踪（Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=ecf8d3e562667c1a15245ae7a35f10cc -->

<!-- pgdoc-cn_start sig_en=5a9057c1ea29130c70ed2c4c0fff96b8 sig_cn_org=eaf64e04dea649493b450d28e27ea9c5 source=15.7 
     <para>
      <command>ALTER TABLE ... SET ACCESS METHOD</command> failed to
      update relevant <structname>pg_depend</structname> entries when
      changing a table's access method.  When using non-built-in access
      methods, this creates a risk that an access method could be dropped
      even though tables still depend on it.  This fix corrects the logic
      in <command>ALTER TABLE</command>, but it will not adjust any
      already-missing <structname>pg_depend</structname> entries.
     </para>
________________________________________________________-->
     <para>
      <command>ALTER TABLE ... SET ACCESS METHOD</command>失败更新相关的<structname>pg_depend</structname>条目，
      当改变表的访问方法时。当使用非内置的访问方法时，这会导致一个风险，即一个访问方法可能被删除，
      即使表仍然依赖于它。这个修复程序纠正了<command>ALTER TABLE</command>中的逻辑，但不会调整任何已经丢失的
      <structname>pg_depend</structname>条目。
</para>
<!-- pgdoc-cn_end sig_en=5a9057c1ea29130c70ed2c4c0fff96b8 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master Release: REL_16_BR [7fcd7ef2a] 2023-06-19 13:00:42 +1200
Branch: REL_15_STABLE [8f2ec8cc7] 2023-06-19 13:01:29 +1200
Branch: REL_14_STABLE [73f1c17fc] 2023-06-19 13:01:58 +1200
Branch: REL_13_STABLE [06286f8a2] 2023-06-19 13:02:24 +1200
Branch: REL_12_STABLE [dcef5b052] 2023-06-19 13:02:52 +1200
Branch: REL_11_STABLE [f6345f03f] 2023-06-19 13:03:17 +1200
-->
<!-- pgdoc-cn_start sig_en=eefe1ad2b06e7ea041c514226a399a3b sig_cn_org=d0de5cea2c245c99718ceca79c61054a source=15.7 
     <para>
      Don't use partial unique indexes for uniqueness proofs in the
      planner (David Rowley)
     </para>
________________________________________________________-->
     <para>
      不要在规划器中使用部分唯一索引来证明唯一性（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=eefe1ad2b06e7ea041c514226a399a3b -->

<!-- pgdoc-cn_start sig_en=ad1bb73d8bf0d3d3d651939bce87bfd3 sig_cn_org=b977fb47002c38d25c1ee091a30f7805 source=15.7 
     <para>
      This could give rise to incorrect plans, since the presumed
      uniqueness of rows read from a table might not hold if the index in
      question isn't used to scan the table.
     </para>
________________________________________________________-->
     <para>
      这可能导致不正确的计划，因为假定从表中读取的行的唯一性可能不成立，
      如果涉及的索引未用于扫描表。
     </para>
<!-- pgdoc-cn_end sig_en=ad1bb73d8bf0d3d3d651939bce87bfd3 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [990c3650c] 2023-08-07 22:14:21 +1200
Branch: REL_16_STABLE [ae89129aa] 2023-08-07 22:14:54 +1200
Branch: REL_15_STABLE [71662373b] 2023-08-07 22:15:23 +1200
Branch: REL_14_STABLE [bf315354e] 2023-08-07 22:15:50 +1200
-->
<!-- pgdoc-cn_start sig_en=0804aa9c8832ebb144be26f77f0d812a sig_cn_org=9c7bf2fa7d220b8221406995f3b39ff6 source=15.7 
     <para>
      Don't Memoize lateral joins with volatile join conditions
      (Richard Guo)
     </para>
________________________________________________________-->
     <para>
      不要对具有易变连接条件的横向连接进行记忆化（Richard Guo）
     </para>
<!-- pgdoc-cn_end sig_en=0804aa9c8832ebb144be26f77f0d812a -->

<!-- pgdoc-cn_start sig_en=451982455a7dcf52c52e0dd08972962c sig_cn_org=3e64a75fb88790dccbbab17d8e32ccca source=15.7 
     <para>
      Applying Memoize to a sub-plan that contains volatile filter
      conditions is likely to lead to wrong answers.  The check to avoid
      doing this missed some cases that can arise when
      using <literal>LATERAL</literal>.
     </para>
________________________________________________________-->
     <para>
      对包含易变过滤条件的子计划应用Memoize可能导致错误答案。避免这样做的检查错过了一些情况，
      这些情况可能在使用<literal>LATERAL</literal>时出现。
     </para>
<!-- pgdoc-cn_end sig_en=451982455a7dcf52c52e0dd08972962c -->
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [6f80a8d9c] 2023-07-28 15:45:00 +0900
Branch: REL_16_STABLE [695f5deb7] 2023-07-28 15:45:01 +0900
Branch: REL_15_STABLE [d1ef5631e] 2023-07-28 15:45:02 +0900
Branch: REL_14_STABLE [b0e390e6d] 2023-07-28 15:45:04 +0900
Branch: REL_13_STABLE [730f983ef] 2023-07-28 15:45:06 +0900
Branch: REL_12_STABLE [9edf72aa7] 2023-07-28 15:45:08 +0900
Branch: REL_11_STABLE [db01f2696] 2023-07-28 15:45:09 +0900
-->
<!-- pgdoc-cn_start sig_en=26207849ee2b5a5926026921a5ad71cc sig_cn_org=5be50cef834c8eebb86b3ed404b767a6 source=15.7 
     <para>
      Avoid producing incorrect plans for foreign joins with
      pseudoconstant join clauses (Etsuro Fujita)
     </para>
________________________________________________________-->
     <para>
      避免在伪常量连接子句中为外部连接生成不正确的计划（藤田悦郎）
     </para>
<!-- pgdoc-cn_end sig_en=26207849ee2b5a5926026921a5ad71cc -->

<!-- pgdoc-cn_start sig_en=185123bed2320a01abf2c6b927d15453 sig_cn_org=46e9203b4d8c346c084d52afa158a76d source=15.7 
     <para>
      The planner currently lacks support for attaching pseudoconstant
      join clauses to a pushed-down remote join, so disable generation
      of remote joins in such cases.  (A better solution will require
      ABI-breaking changes of planner data structures, so it will have to
      wait for a future major release.)
     </para>
________________________________________________________-->
     <para>
      目前的规划器不支持将伪常量连接子句附加到推送到远程连接的连接，因此在这种情况下禁用远程连接的生成。
      （更好的解决方案将需要对规划器数据结构进行ABI破坏性更改，因此必须等待未来的主要发布版本。）
     </para>
<!-- pgdoc-cn_end sig_en=185123bed2320a01abf2c6b927d15453 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [792213f2e] 2023-06-13 15:58:43 -0400
Branch: REL_15_STABLE [cc6974df1] 2023-06-13 15:58:37 -0400
Branch: REL_14_STABLE [d1423c52e] 2023-06-13 15:58:37 -0400
Branch: REL_13_STABLE [a36d0014f] 2023-06-13 15:58:37 -0400
Branch: REL_12_STABLE [b4110bdbf] 2023-06-13 15:58:37 -0400
Branch: REL_11_STABLE [13192a324] 2023-06-13 15:58:37 -0400
-->
<!-- pgdoc-cn_start sig_en=3facba1783496b0a34c5413a448eae2e sig_cn_org=ceda53d8535e9a76d8ae2ce50469376a source=15.7 
     <para>
      Correctly handle sub-SELECTs in RLS policy expressions and
      security-barrier views when expanding rule actions (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在扩展规则操作时，正确处理RLS策略表达式和安全屏障视图中的子SELECT（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=3facba1783496b0a34c5413a448eae2e -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [126552c85] 2023-07-04 09:07:31 +1200
Branch: REL_16_STABLE [12529028a] 2023-07-04 09:04:35 +1200
Branch: REL_15_STABLE [d34aa0a2f] 2023-07-04 09:10:37 +1200
Branch: REL_14_STABLE [fb663f387] 2023-07-04 09:14:16 +1200
Branch: REL_13_STABLE [fc1547384] 2023-07-04 09:20:55 +1200
Branch: REL_12_STABLE [255a925d3] 2023-07-04 09:21:33 +1200
Branch: REL_11_STABLE [13f127800] 2023-07-04 09:40:30 +1200
Branch: master [bcc93a389] 2023-07-04 09:07:31 +1200
Branch: REL_16_STABLE [d03d9a261] 2023-07-04 09:04:35 +1200
Branch: REL_15_STABLE [ab265e985] 2023-07-04 09:10:37 +1200
Branch: REL_14_STABLE [3f7d3a77e] 2023-07-04 09:14:16 +1200
Branch: REL_13_STABLE [8976ac5c5] 2023-07-04 09:20:55 +1200
Branch: REL_12_STABLE [17b8887c2] 2023-07-04 09:21:33 +1200
Branch: REL_11_STABLE [814f3c8e4] 2023-07-04 09:40:30 +1200
Branch: master [f9b7fc651] 2023-07-04 09:07:31 +1200
Branch: REL_16_STABLE [0cb1fb2c9] 2023-07-04 09:04:35 +1200
Branch: REL_15_STABLE [0f275b0ee] 2023-07-04 09:10:37 +1200
Branch: REL_14_STABLE [ae6d536ed] 2023-07-04 09:14:16 +1200
Branch: REL_13_STABLE [8f705d7b9] 2023-07-04 09:20:55 +1200
Branch: REL_12_STABLE [fe88497b4] 2023-07-04 09:21:33 +1200
Branch: REL_11_STABLE [0048c3b51] 2023-07-04 09:27:00 +1200
-->
<!-- pgdoc-cn_start sig_en=a5b78e2919e3c6186ad185f9f7ee3c7d sig_cn_org=cb08629b9829edce678b1a5454339106 source=15.7 
     <para>
      Fix race conditions in conflict detection
      for <literal>SERIALIZABLE</literal> isolation mode
      (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      修复<literal>SERIALIZABLE</literal>隔离模式下的冲突检测中的竞争条件
      (Thomas Munro)
     </para>
<!-- pgdoc-cn_end sig_en=a5b78e2919e3c6186ad185f9f7ee3c7d -->

<!-- pgdoc-cn_start sig_en=5d1170df3f122108f6f01ec980c3c31a sig_cn_org=265fc0f1849aef76c1117fedf1f8010f source=15.7 
     <para>
      Conflicts could be missed when using bitmap heap scans, when using
      GIN indexes, and when examining an initially-empty btree index.
      All these cases could lead to serializability failures due to
      improperly allowing conflicting transactions to commit.
     </para>
________________________________________________________-->
     <para>
      使用位图堆扫描时，使用GIN索引时，以及在检查最初为空的btree索引时，可能会错过冲突。
      所有这些情况都可能导致由于不正确地允许冲突事务提交而导致可串行化失败。
</para>
<!-- pgdoc-cn_end sig_en=5d1170df3f122108f6f01ec980c3c31a -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [70b42f279] 2023-05-19 14:26:40 -0400
Branch: REL_15_STABLE [4729d1e8a] 2023-05-19 14:26:34 -0400
Branch: REL_14_STABLE [f8320cc72] 2023-05-19 14:26:34 -0400
-->
<!-- pgdoc-cn_start sig_en=35c702c9b5b6c816e4a97598cf60df8b sig_cn_org=91e51856d5d644476c72b7e3bc9d065b source=15.7 
     <para>
      Fix misbehavior of EvalPlanQual checks with inherited or partitioned
      target tables (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复EvalPlanQual检查在继承或分区目标表中的错误行为（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=35c702c9b5b6c816e4a97598cf60df8b -->

<!-- pgdoc-cn_start sig_en=63b5b4c65f8e9a89fff164514e47b52c sig_cn_org=48b410dab3f0bec80e102d169d3ec5ff source=15.7 
     <para>
      This oversight could lead to update or delete actions
      in <literal>READ COMMITTED</literal> isolation mode getting
      performed when they should have been skipped because of a
      conflicting concurrent update.
     </para>
________________________________________________________-->
     <para>
      这个疏忽可能导致在<literal>READ COMMITTED</literal>隔离模式下执行更新或删除操作，
      而这些操作本应该被跳过，因为存在冲突的并发更新。
     </para>
<!-- pgdoc-cn_end sig_en=63b5b4c65f8e9a89fff164514e47b52c -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [45392626c] 2023-06-20 17:47:53 -0400
Branch: REL_15_STABLE [c2f974fff] 2023-06-20 17:47:53 -0400
Branch: REL_14_STABLE [d911dce14] 2023-06-20 17:47:36 -0400
Branch: REL_13_STABLE [2f97105e9] 2023-06-20 17:47:36 -0400
Branch: REL_12_STABLE [9529b1eb1] 2023-06-20 17:47:36 -0400
-->
<!-- pgdoc-cn_start sig_en=d4990c4c9a970f54b129b7f487530d5d sig_cn_org=3da80322765c469f4e7968632840accb source=15.7 
     <para>
      Fix hash join with an inner-side hash key that contains Params
      coming from an outer nested loop (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复哈希连接，其中内部哈希键包含来自外部嵌套循环的参数（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=d4990c4c9a970f54b129b7f487530d5d -->

<!-- pgdoc-cn_start sig_en=8dba004ab4bf41f7c9fefe09947ba6b1 sig_cn_org=877a874ec7de21b3b3c09cfeb5acba65 source=15.7 
     <para>
      When rescanning the join after the values of such Params have
      changed, we must rebuild the hash table, but neglected to do so.
      This could result in missing join output rows.
     </para>
________________________________________________________-->
     <para>
      当这些参数的值发生变化后重新扫描连接时，我们必须重建哈希表，但却忽略了这一点。
      这可能导致连接输出行丢失。
     </para>
<!-- pgdoc-cn_end sig_en=8dba004ab4bf41f7c9fefe09947ba6b1 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [43af714de] 2023-06-29 10:19:10 -0400
Branch: REL_15_STABLE [cc8cca3c2] 2023-06-29 10:19:10 -0400
Branch: REL_14_STABLE [0789b82a9] 2023-06-29 10:19:10 -0400
Branch: REL_13_STABLE [d0ab203bc] 2023-06-29 10:19:10 -0400
Branch: REL_12_STABLE [53b93e853] 2023-06-29 10:19:10 -0400
Branch: REL_11_STABLE [7f11b7a9c] 2023-06-29 10:19:10 -0400
-->
<!-- pgdoc-cn_start sig_en=56d8a42bad8ad0938de1b19a2a57b08f sig_cn_org=c11c4ba15c7b5e3a2ea7c756a47fc61f source=15.7 
     <para>
      Fix intermittent failures when trying to update a field of a
      composite column (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复尝试更新复合列字段时出现的间歇性失败(Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=56d8a42bad8ad0938de1b19a2a57b08f -->

<!-- pgdoc-cn_start sig_en=f2f883637a6a78eeb4af14223c2bb011 sig_cn_org=8b33e9ea554c306afcd0287a565a0184 source=15.7 
     <para>
      If the overall value of the composite column is wide enough to
      require out-of-line toasting, then an unluckily-timed cache flush
      could cause errors or server crashes.
     </para>
________________________________________________________-->
     <para>
      如果复合列的整体值足够宽以至于需要离线TOAST，那么一个不幸时机的缓存刷新可能会导致错误或服务器崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=f2f883637a6a78eeb4af14223c2bb011 -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master Release: REL_16_BR [f24523672] 2023-06-07 18:54:34 +0200
Branch: REL_15_STABLE [ee87f8b63] 2023-06-07 18:52:21 +0200
Branch: REL_14_STABLE [7f528e96c] 2023-06-07 18:53:04 +0200
Branch: REL_13_STABLE [c504aa857] 2023-06-07 18:53:16 +0200
Branch: REL_12_STABLE [54e1b8587] 2023-06-07 18:53:30 +0200
Branch: master [ce5aaea8c] 2023-07-02 22:21:02 +0200
Branch: REL_16_STABLE [9cf85093b] 2023-07-02 22:22:31 +0200
Branch: REL_15_STABLE [7ae4e7868] 2023-07-02 22:22:50 +0200
Branch: REL_14_STABLE [260dbf19a] 2023-07-02 22:23:04 +0200
Branch: REL_13_STABLE [984c23f6f] 2023-07-02 22:23:20 +0200
-->
<!-- pgdoc-cn_start sig_en=a5d5a0928cc7337e4cc020f26e154818 sig_cn_org=56842bc515688fddd6e0ccb2a5f39e83 source=15.7 
     <para>
      Prevent query-lifespan memory leaks in some <command>UPDATE</command>
      queries with triggers (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      防止触发器中的一些<command>UPDATE</command>查询中的查询生命周期内存泄漏（Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=a5d5a0928cc7337e4cc020f26e154818 -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [98640f960] 2023-07-02 20:03:30 +0200
Branch: REL_16_STABLE [9ae7b5d1f] 2023-07-02 20:04:16 +0200
Branch: REL_15_STABLE [0c5fe4ff6] 2023-07-02 20:04:40 +0200
Branch: REL_14_STABLE [c1affa38c] 2023-07-02 20:05:14 +0200
Branch: REL_13_STABLE [3ce761d5c] 2023-07-02 20:05:35 +0200
-->
<!-- pgdoc-cn_start sig_en=bb77f726f6e0f41758b0389bff885eab sig_cn_org=0941bd36d300c6f91f2cfff18dd40f85 source=15.7 
     <para>
      Prevent query-lifespan memory leaks when an Incremental Sort plan
      node is rescanned (James Coleman, Laurenz Albe, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      当增量排序计划节点重新扫描时，防止查询生命周期内存泄漏（James Coleman，Laurenz Albe，Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=bb77f726f6e0f41758b0389bff885eab -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [7398e2722] 2023-06-12 10:54:44 -0400
Branch: REL_15_STABLE [bd590d1fe] 2023-06-12 10:54:28 -0400
Branch: REL_14_STABLE [5eaa05f63] 2023-06-12 10:54:28 -0400
Branch: REL_13_STABLE [6f23b5f74] 2023-06-12 10:54:28 -0400
-->
<!-- pgdoc-cn_start sig_en=79e0527fc078f06a37ca674dd6a26c92 sig_cn_org=9ac8056123c798f2836cf0f6cd9b64dc source=15.7 
     <para>
      Accept fractional seconds in the input to <type>jsonpath</type>'s
      <function>datetime()</function> method (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      接受输入中的小数秒到<type>jsonpath</type>的<function>datetime()</function>方法中（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=79e0527fc078f06a37ca674dd6a26c92 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [691594acd] 2023-06-24 17:18:08 -0400
Branch: REL_15_STABLE [a77d90171] 2023-06-24 17:18:08 -0400
Branch: REL_14_STABLE [4c61afa47] 2023-06-24 17:18:08 -0400
Branch: REL_13_STABLE [b6ab18a99] 2023-06-24 17:18:08 -0400
Branch: REL_12_STABLE [3b4580f5c] 2023-06-24 17:18:08 -0400
Branch: REL_11_STABLE [c7f33a197] 2023-06-24 17:18:08 -0400
-->
<!-- pgdoc-cn_start sig_en=2736a3fc71463aaaf3c1f54d59ec23d9 sig_cn_org=ee8d965a096a8821b9840a7a9f333712 source=15.7 
     <para>
      Prevent stack-overflow crashes with very complex text search
      patterns (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免使用非常复杂的文本搜索模式导致堆栈溢出崩溃（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=2736a3fc71463aaaf3c1f54d59ec23d9 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [38df84c65] 2023-07-27 11:56:35 -0400
Branch: REL_16_STABLE [de3f0e3fe] 2023-07-27 11:56:35 -0400
Branch: REL_15_STABLE [313ceda2f] 2023-07-27 12:07:48 -0400
Branch: REL_14_STABLE [341996248] 2023-07-27 12:07:48 -0400
Branch: REL_13_STABLE [288b4288c] 2023-07-27 12:07:48 -0400
Branch: REL_12_STABLE [0660f74e8] 2023-07-27 12:07:48 -0400
Branch: REL_11_STABLE [1d031ad54] 2023-07-27 12:07:48 -0400
-->
<!-- pgdoc-cn_start sig_en=4649d138083c9d5d851a419a988dbcc6 sig_cn_org=5cfeaec951a2ff37cdaacb90fca886ea source=15.7 
     <para>
      Allow tokens up to 10240 bytes long
      in <filename>pg_hba.conf</filename>
      and <filename>pg_ident.conf</filename> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      允许在<filename>pg_hba.conf</filename>和<filename>pg_ident.conf</filename>（Tom Lane）中使用长达10240字节的令牌
     </para>
<!-- pgdoc-cn_end sig_en=4649d138083c9d5d851a419a988dbcc6 -->

<!-- pgdoc-cn_start sig_en=4ad7ede9b4ae7a5e47cdf33c4c8cc037 sig_cn_org=fab8d7b2df9f9fd97003837ab7e0bb4a source=15.7 
     <para>
      The previous limit of 256 bytes has been found insufficient for some
      use-cases.
     </para>
________________________________________________________-->
     <para>
      先前的256字节限制被发现对某些用例不足够。
     </para>
<!-- pgdoc-cn_end sig_en=4ad7ede9b4ae7a5e47cdf33c4c8cc037 -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: REL_15_STABLE [a5f312c58] 2023-07-06 13:05:25 +0300
-->
<!-- pgdoc-cn_start sig_en=576b797ec9689a0e6f6707cf16137e8d sig_cn_org=0786eb74993d7c1ea8cf661989fbd166 source=15.7 
     <para>
      Ensure that all existing placeholders are checked for matches when
      an extension declares its GUC prefix to be reserved (Karina
      Litskevich, Ekaterina Sokolova)
     </para>
________________________________________________________-->
     <para>
      确保当一个扩展声明其GUC前缀被保留时，检查所有现有的占位符是否匹配
      (Karina Litskevich, Ekaterina Sokolova)
     </para>
<!-- pgdoc-cn_end sig_en=576b797ec9689a0e6f6707cf16137e8d -->

<!-- pgdoc-cn_start sig_en=f0dfba9f55f48e1aa213c7ea5a2fd354 sig_cn_org=fe77111b1a054b6cbfeed8f92a51149e source=15.7 
     <para>
      Faulty loop logic could cause some entries to be skipped.
     </para>
________________________________________________________-->
     <para>
      错误的循环逻辑可能导致一些条目被跳过。
     </para>
<!-- pgdoc-cn_end sig_en=f0dfba9f55f48e1aa213c7ea5a2fd354 -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [4f4d73466] 2023-07-05 13:13:13 +0300
Branch: REL_16_STABLE [dc0b58417] 2023-07-05 13:25:59 +0300
Branch: REL_15_STABLE [fa96a74a0] 2023-07-05 13:13:30 +0300
Branch: REL_14_STABLE [bfb493dba] 2023-07-05 13:13:35 +0300
Branch: REL_13_STABLE [59c2a6fe9] 2023-07-05 13:13:39 +0300
Branch: REL_12_STABLE [162aa47c3] 2023-07-05 13:14:24 +0300
Branch: REL_11_STABLE [2316ff1ae] 2023-07-05 13:14:33 +0300
-->
<!-- pgdoc-cn_start sig_en=3571a1f13767277d3f63444567295228 sig_cn_org=5bb73c2094826cdee942e98de78d825c source=15.7 
     <para>
      Fix mishandling of C++ out-of-memory conditions (Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      修复C++内存不足条件的处理问题（Heikki Linnakangas）
     </para>
<!-- pgdoc-cn_end sig_en=3571a1f13767277d3f63444567295228 -->

<!-- pgdoc-cn_start sig_en=c6ae6da9ae090b053787cb4fbe571375 sig_cn_org=9999646b4b7a964cfb96ad58fab9bb95 source=15.7 
     <para>
      If JIT is in use, running out of memory in a
      C++ <function>new</function> call would lead to
      a <productname>PostgreSQL</productname> FATAL error, instead of the
      expected C++ exception.
     </para>
________________________________________________________-->
     <para>
      如果使用了JIT，C++ <function>new</function>调用中内存耗尽会导致<productname>PostgreSQL</productname>致命错误，而不是预期的C++异常。
     </para>
<!-- pgdoc-cn_end sig_en=c6ae6da9ae090b053787cb4fbe571375 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9089287aa] 2023-07-20 14:23:46 -0400
Branch: REL_16_STABLE [c0f531396] 2023-07-20 14:23:46 -0400
Branch: REL_15_STABLE [fbaf65cd6] 2023-07-20 14:23:46 -0400
Branch: REL_14_STABLE [10fd061bb] 2023-07-20 14:23:46 -0400
Branch: REL_13_STABLE [291c02540] 2023-07-20 14:23:46 -0400
-->
<!-- pgdoc-cn_start sig_en=84e8c8593a5ba27c5bd0770a9cde2540 sig_cn_org=dcb177581a23a5c6b56316da31e4b49c source=15.7 
     <para>
      Fix rare null-pointer crash in <filename>plancache.c</filename>
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复了<filename>plancache.c</filename>中的罕见空指针崩溃(Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=84e8c8593a5ba27c5bd0770a9cde2540 -->
    </listitem>

    <listitem>
<!--
Author: Masahiko Sawada <msawada@postgresql.org>
Branch: master [68a59f9e9] 2023-07-05 14:49:46 +0900
Branch: REL_16_STABLE [be8cae7e2] 2023-07-05 14:49:58 +0900
Branch: REL_15_STABLE [66f8a1397] 2023-07-05 14:49:53 +0900
-->
<!-- pgdoc-cn_start sig_en=a28705b8d26a0e090af22b0219dfa8b8 sig_cn_org=e32c3741f8e88589ae52088422f22469 source=15.7 
     <para>
      Avoid leaking a stats entry for a subscription when it is dropped
      (Masahiko Sawada)
     </para>
________________________________________________________-->
     <para>
      避免在订阅被删除时泄漏统计条目（Masahiko Sawada）
     </para>
<!-- pgdoc-cn_end sig_en=a28705b8d26a0e090af22b0219dfa8b8 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [03f80daac] 2023-07-04 15:16:47 +1200
Branch: REL_16_STABLE [af8f9ec66] 2023-07-04 15:21:36 +1200
Branch: REL_15_STABLE [9ffb10f18] 2023-07-04 15:24:42 +1200
Branch: REL_14_STABLE [b7ec66731] 2023-07-04 15:26:42 +1200
Branch: REL_13_STABLE [a0003572f] 2023-07-04 15:28:29 +1200
Branch: REL_12_STABLE [74ad9b0d1] 2023-07-04 15:29:41 +1200
Branch: REL_11_STABLE [1605623ec] 2023-07-04 16:13:12 +1200
-->
<!-- pgdoc-cn_start sig_en=5c3f3b3a3d09f44e0f4c478cd5de206d sig_cn_org=a14d5c9d108d65424e078508bc7b255e source=15.7 
     <para>
      Avoid losing track of possibly-useful shared memory segments when a
      page free results in coalescing ranges of free space (Dongming Liu)
     </para>
________________________________________________________-->
     <para>
      当页面释放导致合并空闲空间范围时，避免丢失可能有用的共享内存段（Dongming Liu）
     </para>
<!-- pgdoc-cn_end sig_en=5c3f3b3a3d09f44e0f4c478cd5de206d -->

<!-- pgdoc-cn_start sig_en=d8edf4701306dfac535a196848293ee3 sig_cn_org=e79784950d81b7f4d0c302836dd5ecc1 source=15.7 
     <para>
      Ensure that the segment is moved into the
      appropriate <quote>bin</quote> for its new amount of free space, so
      that it will be found by subsequent searches.
     </para>
________________________________________________________-->
     <para>
      确保将该段移动到适当的<quote>bin</quote>中，以便其新的空闲空间量，这样它将被后续搜索找到。
     </para>
<!-- pgdoc-cn_end sig_en=d8edf4701306dfac535a196848293ee3 -->
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master Release: REL_16_BR [5f0762f14] 2023-06-21 17:41:58 -0700
Branch: REL_15_STABLE [642bec1f8] 2023-06-21 17:41:56 -0700
Branch: REL_14_STABLE [63fa0deb3] 2023-06-21 17:41:54 -0700
Branch: REL_13_STABLE [b6311824f] 2023-06-21 17:41:52 -0700
Branch: REL_12_STABLE [355917c07] 2023-06-21 17:41:50 -0700
Branch: REL_11_STABLE [7ddba19eb] 2023-06-21 17:41:48 -0700
Branch: master Release: REL_16_BR [5abff197c] 2023-05-25 15:33:00 -0700
Branch: REL_15_STABLE [6983a5112] 2023-05-25 15:32:57 -0700
Branch: REL_14_STABLE [322c9b340] 2023-05-25 15:32:53 -0700
Branch: REL_13_STABLE [8f876d15c] 2023-05-25 15:32:50 -0700
Branch: REL_12_STABLE [188dad680] 2023-05-25 15:32:48 -0700
Branch: REL_11_STABLE [a72b503ca] 2023-05-25 15:32:45 -0700
-->
<!-- pgdoc-cn_start sig_en=dc1f583e9de64979612d371dc73955b9 sig_cn_org=101bef61fce871d1cbe990546f3a5ae8 source=15.7 
     <para>
      Allow <command>VACUUM</command> to continue after detecting certain
      types of b-tree index corruption (Peter Geoghegan)
     </para>
________________________________________________________-->
     <para>
      允许在检测到某些类型的B树索引损坏后继续执行<command>VACUUM</command>（Peter Geoghegan）
     </para>
<!-- pgdoc-cn_end sig_en=dc1f583e9de64979612d371dc73955b9 -->

<!-- pgdoc-cn_start sig_en=3f65ff881b9d5404aa6cda086a2a2675 sig_cn_org=807c5ae4c06ef293f0f32feb9abb494e source=15.7 
     <para>
      If an invalid sibling-page link is detected, log the issue and press
      on, rather than throwing an error as before.  Nothing short
      of <command>REINDEX</command> will fix the broken index, but
      preventing <command>VACUUM</command> from completing until that is
      done risks making matters far worse.
     </para>
________________________________________________________-->
     <para>
      如果检测到无效的兄弟页面链接，请记录问题并继续，而不是像以前那样抛出错误。
      除了<command>REINDEX</command>之外，没有任何方法可以修复损坏的索引，
      但在完成之前阻止<command>VACUUM</command>可能会使情况变得更糟。
</para>
<!-- pgdoc-cn_end sig_en=3f65ff881b9d5404aa6cda086a2a2675 -->
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [83ecfa9fa] 2023-07-13 13:03:28 -0700
Branch: REL_16_STABLE [03ccc9569] 2023-07-13 13:03:30 -0700
Branch: REL_15_STABLE [82e97b864] 2023-07-13 13:03:31 -0700
Branch: REL_14_STABLE [e246fd423] 2023-07-13 13:03:33 -0700
Branch: REL_13_STABLE [53336e8f6] 2023-07-13 13:03:34 -0700
Branch: REL_12_STABLE [7aec84e4c] 2023-07-13 13:03:36 -0700
Branch: REL_11_STABLE [1386f0987] 2023-07-13 13:03:37 -0700
-->
<!-- pgdoc-cn_start sig_en=58f30ebd13f423dea25d2e0e6e863d0e sig_cn_org=59c276340e8ad782369299fb9ac655de source=15.7 
     <para>
      Ensure that <varname>WrapLimitsVacuumLock</varname> is released
      after <command>VACUUM</command> detects invalid data
      in <structname>pg_database</structname>.<structfield>datfrozenxid</structfield>
      or <structname>pg_database</structname>.<structfield>datminmxid</structfield>
      (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      确保在<varname>WrapLimitsVacuumLock</varname>在<command>VACUUM</command>检测到
	  <structname>pg_database</structname>.<structfield>datfrozenxid</structfield>或
	  <structname>pg_database</structname>.<structfield>datminmxid</structfield>上数据无效后释放。
     （Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=58f30ebd13f423dea25d2e0e6e863d0e -->

<!-- pgdoc-cn_start sig_en=4584a8c96a4899df8185adef5a57a25c sig_cn_org=8ecdc00b94d355f7571ab81565c3b807 source=15.7 
     <para>
      Failure to release this lock could lead to a deadlock later,
      although the lock would be cleaned up if the session exits or
      encounters some other error.
     </para>
________________________________________________________-->
     <para>
      未释放此锁可能导致稍后死锁，尽管如果会话退出或遇到其他错误，锁将被清理。
     </para>
<!-- pgdoc-cn_end sig_en=4584a8c96a4899df8185adef5a57a25c -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [cb0cca188] 2023-07-18 13:43:44 +0900
Branch: REL_16_STABLE [f88bc9f38] 2023-07-18 13:44:27 +0900
Branch: REL_15_STABLE [a878eff6b] 2023-07-18 13:44:29 +0900
Branch: REL_14_STABLE [442749100] 2023-07-18 13:44:31 +0900
Branch: REL_13_STABLE [db59108a2] 2023-07-18 13:44:33 +0900
Branch: REL_12_STABLE [d2ee542a2] 2023-07-18 13:44:34 +0900
Branch: REL_11_STABLE [bc0581f8f] 2023-07-18 13:44:35 +0900
Branch: master [4e465aac3] 2023-07-18 14:04:31 +0900
Branch: REL_16_STABLE [926aa6d11] 2023-07-18 14:04:46 +0900
Branch: REL_15_STABLE [f6ecd2622] 2023-07-18 14:04:48 +0900
Branch: REL_14_STABLE [763d26205] 2023-07-18 14:04:50 +0900
Branch: REL_13_STABLE [b3ca4f0a5] 2023-07-18 14:04:51 +0900
Branch: REL_12_STABLE [410a0d6bd] 2023-07-18 14:04:52 +0900
Branch: REL_11_STABLE [6c7bffc09] 2023-07-18 14:04:54 +0900
-->
<!-- pgdoc-cn_start sig_en=ac04efe2be921e4f7af1e569f8aa6f5c sig_cn_org=3ab50d35be0c1a13667be635a6800043 source=15.7 
     <para>
      Avoid double replay of prepared transactions during crash
      recovery (suyu.cmj, Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      避免在崩溃恢复期间重复回放准备好的事务（suyu.cmj，Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=ac04efe2be921e4f7af1e569f8aa6f5c -->

<!-- pgdoc-cn_start sig_en=096a8ebb0b1b2b4833e74114fc3761a2 sig_cn_org=4ade92088851c6bd9b1748d982cc9a8a source=15.7 
     <para>
      After a crash partway through a checkpoint with some two-phase
      transaction state data already flushed to disk by this checkpoint,
      crash recovery could attempt to replay the prepared transaction(s)
      twice, leading to a fatal error such as <quote>lock is already
      held</quote> in the startup process.
     </para>
________________________________________________________-->
     <para>
      在某个检查点中途崩溃后，由于该检查点已经将一些两阶段事务状态数据刷新到磁盘，
      崩溃恢复可能会尝试重放准备好的事务，导致致命错误，比如在启动过程中出现
      <quote>锁已被持有</quote>。
     </para>
<!-- pgdoc-cn_end sig_en=096a8ebb0b1b2b4833e74114fc3761a2 -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [4b4798e13] 2023-07-04 17:57:03 +0300
Branch: REL_16_STABLE [d431644b4] 2023-07-04 18:04:27 +0300
Branch: REL_15_STABLE [e24c02e4d] 2023-07-04 18:07:27 +0300
Branch: REL_14_STABLE [d85bf0719] 2023-07-04 18:07:46 +0300
Branch: REL_13_STABLE [acc8cdff4] 2023-07-04 18:08:08 +0300
Branch: REL_12_STABLE [1b4f1c6f8] 2023-07-04 18:08:26 +0300
Branch: REL_11_STABLE [6377f705c] 2023-07-04 18:08:40 +0300
-->
<!-- pgdoc-cn_start sig_en=eaa6d202c1cb7dad2f917b385bf73323 sig_cn_org=42e43c2938e79ba0815c83184b003dcd source=15.7 
     <para>
      Ensure that a newly created, but still empty table
      is <function>fsync</function>'ed at the next checkpoint (Heikki
      Linnakangas)
     </para>
________________________________________________________-->
     <para>
      确保在下一个检查点时，新创建的但仍为空的表被<function>fsync</function>（Heikki Linnakangas）
     </para>
<!-- pgdoc-cn_end sig_en=eaa6d202c1cb7dad2f917b385bf73323 -->

<!-- pgdoc-cn_start sig_en=55dd3b8218314293b0d2a95328a9dbac sig_cn_org=797ba1fef96f4abfea9e0fe8d35d0296 source=15.7 
     <para>
      Without this, if there is an operating system crash causing the
      empty file to disappear, subsequent operations on the table might
      fail with <quote>could not open file</quote> errors.
     </para>
________________________________________________________-->
     <para>
      没有这个选项，如果操作系统崩溃导致空文件消失，那么对表的后续操作可能会失败，出现<quote>无法打开文件</quote>的错误。
     </para>
<!-- pgdoc-cn_end sig_en=55dd3b8218314293b0d2a95328a9dbac -->
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [3142a8845] 2023-07-06 17:25:29 +0300
Branch: REL_16_STABLE [bf7b70e6b] 2023-07-06 17:28:50 +0300
Branch: REL_15_STABLE [25624c5d3] 2023-07-06 17:29:12 +0300
Branch: REL_14_STABLE [32f327f68] 2023-07-06 17:29:13 +0300
Branch: REL_13_STABLE [c50b869ed] 2023-07-06 17:29:14 +0300
Branch: REL_12_STABLE [80abec387] 2023-07-06 17:29:15 +0300
Branch: REL_11_STABLE [988719b88] 2023-07-06 17:29:16 +0300
-->
<!-- pgdoc-cn_start sig_en=b41443510a97c26d45ad4df6b33a7547 sig_cn_org=d4d94c3bb7d79fd4e662ffc244929e5e source=15.7 
     <para>
      Ensure that creation of the init fork of an unlogged index is
      WAL-logged (Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      确保创建未记录索引的init分支是WAL记录的（Heikki Linnakangas）
     </para>
<!-- pgdoc-cn_end sig_en=b41443510a97c26d45ad4df6b33a7547 -->

<!-- pgdoc-cn_start sig_en=1b61be61539d36a033df3410b7de7e54 sig_cn_org=069cca4638e2605ffc901d0f1c4dadd9 source=15.7 
     <para>
      While an unlogged index's main data fork is not WAL-logged, its init
      fork should be, to ensure that we have a consistent state to restore
      the index to after a crash.  This step was missed if the init fork
      contains no data, which is a case not used by any standard index AM;
      but perhaps some extension behaves that way.
     </para>
________________________________________________________-->
     <para>
      unlogged的索引的main data fork不记录WAL，但它的init fork会记录，以确保我们在崩溃后将索引恢复到一致的状态。
      如果init叉不包含任何数据，则可能会错过此步骤，这是任何标准索引AM都不使用的情况；但也许某些扩展会以这种方式行为。
     </para>
<!-- pgdoc-cn_end sig_en=1b61be61539d36a033df3410b7de7e54 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [4637a6ac0] 2023-07-03 11:16:27 +1200
Branch: REL_16_STABLE [76d5966b3] 2023-07-03 11:21:56 +1200
Branch: REL_15_STABLE [f50200c01] 2023-07-03 11:22:10 +1200
-->
<!-- pgdoc-cn_start sig_en=969777fa0f538f221a7abcb9aa51491c sig_cn_org=05e4d78cf74b816da27cb5075ac4667d source=15.7 
     <para>
      Silence bogus <quote>missing contrecord</quote> errors (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      静默虚假的<quote>缺少contrecord</quote>错误（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=969777fa0f538f221a7abcb9aa51491c -->

<!-- pgdoc-cn_start sig_en=a9d0de343ceebbdf2e79ed9c62633491 sig_cn_org=c0eb09d502e7c3b62ecdacdd52517d9b source=15.7 
     <para>
      Treat this case as plain end-of-WAL to avoid logging inaccurate
      complaints from <application>pg_waldump</application>
      and <application>walsender</application>.
     </para>
________________________________________________________-->
     <para>
      将此情况视为普通的WAL结束，以避免从<application>pg_waldump</application>
      和<application>walsender</application>中记录不准确的投诉。
     </para>
<!-- pgdoc-cn_end sig_en=a9d0de343ceebbdf2e79ed9c62633491 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [deae1657e] 2023-08-02 01:39:47 +1200
Branch: REL_16_STABLE [b25acc302] 2023-08-02 01:40:27 +1200
Branch: REL_15_STABLE [67f3a697b] 2023-08-02 01:40:56 +1200
Branch: REL_14_STABLE [f457f2ef1] 2023-08-02 01:41:21 +1200
Branch: REL_13_STABLE [74a5bf1b6] 2023-08-02 01:41:55 +1200
Branch: REL_12_STABLE [668990980] 2023-08-02 01:44:31 +1200
-->
<!-- pgdoc-cn_start sig_en=1d51c608dc4af1094bced7ffcdf151e3 sig_cn_org=52b29f8ff1a22fd7fe14b23d2b034729 source=15.7 
     <para>
      Fix overly strict assertion in <type>jsonpath</type> code
      (David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复<type>jsonpath</type>代码中过于严格的断言（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=1d51c608dc4af1094bced7ffcdf151e3 -->

<!-- pgdoc-cn_start sig_en=b1c4ea3f2bca9c23fdf178373a67f06a sig_cn_org=cddbedd0cdfd610e5cc4c3e2988358d0 source=15.7 
     <para>
      This assertion failed if a query applied
      the <literal>.type()</literal> operator to
      a <literal>like_regex</literal> result.
      There was no bug in non-assert builds.
     </para>
________________________________________________________-->
     <para>
      如果一个查询将<literal>.type()</literal>操作符应用于<literal>like_regex</literal>结果，
      则此断言失败。在非断言构建中没有错误。
</para>
<!-- pgdoc-cn_end sig_en=b1c4ea3f2bca9c23fdf178373a67f06a -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [555b929bb] 2023-06-21 11:07:24 -0400
Branch: REL_15_STABLE [cb74f7bec] 2023-06-21 11:07:11 -0400
Branch: REL_14_STABLE [120ea65b8] 2023-06-21 11:07:11 -0400
Branch: REL_13_STABLE [d1fc0f382] 2023-06-21 11:07:11 -0400
Branch: REL_12_STABLE [a98a04005] 2023-06-21 11:07:11 -0400
Branch: REL_11_STABLE [a8be2356c] 2023-06-21 11:07:11 -0400
-->
<!-- pgdoc-cn_start sig_en=49d45f6f6b06791a84a096d21e468947 sig_cn_org=34f51407c1c6ca66c84a866fcda09198 source=15.7 
     <para>
      Avoid assertion failure when processing an empty statement via the
      extended query protocol in an already-aborted transaction (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在已中止的事务中通过扩展查询协议处理空语句时避免断言失败（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=49d45f6f6b06791a84a096d21e468947 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [605994651] 2023-05-10 11:24:30 +0900
Branch: REL_15_STABLE [ccd21e1cf] 2023-05-10 11:24:40 +0900
-->
<!-- pgdoc-cn_start sig_en=1f6530699670df35a23da29f6fb1cc2a sig_cn_org=f4aec05d878a71ac1d6a49fdc4fd7cf6 source=15.7 
     <para>
      Avoid assertion failure when
      the <varname>stats_fetch_consistency</varname> setting is changed
      intra-transaction (Kyotaro Horiguchi)
     </para>
________________________________________________________-->
     <para>
      当<varname>stats_fetch_consistency</varname>设置在事务内被更改时，避免断言失败（Kyotaro Horiguchi）
     </para>
<!-- pgdoc-cn_end sig_en=1f6530699670df35a23da29f6fb1cc2a -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [1d369c9e9] 2023-05-16 10:53:42 -0400
Branch: REL_15_STABLE [eaf99e4c4] 2023-05-16 10:53:42 -0400
Branch: REL_14_STABLE [ccd362325] 2023-05-16 10:53:42 -0400
Branch: REL_13_STABLE [0409c7fc7] 2023-05-16 10:53:42 -0400
Branch: REL_12_STABLE [0966291a4] 2023-05-16 10:53:42 -0400
Branch: REL_11_STABLE [8084bf9a4] 2023-05-16 10:53:42 -0400
-->
<!-- pgdoc-cn_start sig_en=eafd74084cb840ee243fc591870986dc sig_cn_org=8b61aa3ba68ed9abb5b8e658884a9c7f source=15.7 
     <para>
      Fix <filename>contrib/fuzzystrmatch</filename>'s
      Soundex <function>difference()</function> function to handle empty
      input sanely (Alexander Lakhin, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<filename>contrib/fuzzystrmatch</filename>的Soundex <function>difference()</function>函数，
      使其能够合理处理空输入（Alexander Lakhin，Tom Lane）
</para>
<!-- pgdoc-cn_end sig_en=eafd74084cb840ee243fc591870986dc -->

<!-- pgdoc-cn_start sig_en=12712001dcfde0a39167c5c27278751e sig_cn_org=3d181b0022a610f20864938501f08590 source=15.7 
     <para>
      An input string containing no alphabetic characters resulted in
      unpredictable output.
     </para>
________________________________________________________-->
     <para>
      包含没有字母字符的输入字符串会导致不可预测的输出。
     </para>
<!-- pgdoc-cn_end sig_en=12712001dcfde0a39167c5c27278751e -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [d522b05c8] 2023-06-12 09:14:03 +0900
Branch: REL_15_STABLE [3a5222a43] 2023-06-12 09:14:13 +0900
Branch: REL_14_STABLE [e0e682945] 2023-06-12 09:14:14 +0900
Branch: REL_13_STABLE [78bf0a256] 2023-06-12 09:14:17 +0900
Branch: REL_12_STABLE [edf1de65e] 2023-06-12 09:14:19 +0900
Branch: REL_11_STABLE [bbfc26d86] 2023-06-12 09:14:20 +0900
-->
<!-- pgdoc-cn_start sig_en=a8f245111c9786c1df6fd05face4b501 sig_cn_org=5fbe18c4cf18336db4f5f2283f49c5c1 source=15.7 
     <para>
      Tighten whitespace checks in <filename>contrib/hstore</filename>
      input (Evan Jones)
     </para>
________________________________________________________-->
     <para>
      加强<filename>contrib/hstore</filename>输入中的空白检查（Evan Jones）
     </para>
<!-- pgdoc-cn_end sig_en=a8f245111c9786c1df6fd05face4b501 -->

<!-- pgdoc-cn_start sig_en=14fe6295660b4678607c5f1fc3439429 sig_cn_org=ad1b1c3d8d00c9f5e1b37c4420a94563 source=15.7 
     <para>
      In some cases, characters would be falsely recognized as whitespace
      and hence discarded.
     </para>
________________________________________________________-->
     <para>
      在某些情况下，字符可能会被错误地识别为空白字符，因此被丢弃。
     </para>
<!-- pgdoc-cn_end sig_en=14fe6295660b4678607c5f1fc3439429 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [c00fbe89d] 2023-06-15 13:45:34 +0900
Branch: REL_15_STABLE [4be308ede] 2023-06-15 13:45:38 +0900
Branch: REL_14_STABLE [019a40d61] 2023-06-15 13:45:40 +0900
Branch: REL_13_STABLE [ae9aac64a] 2023-06-15 13:45:41 +0900
Branch: REL_12_STABLE [6ecc1c02a] 2023-06-15 13:45:42 +0900
Branch: REL_11_STABLE [ab40b0395] 2023-06-15 13:45:44 +0900
-->
<!-- pgdoc-cn_start sig_en=f7069ccb5ec18c1a8f741fecd7db159c sig_cn_org=67bb353c9cea45a1d528c69eb0abcdb9 source=15.7 
     <para>
      Disallow oversize input arrays
      with <filename>contrib/intarray</filename>'s
      <literal>gist__int_ops</literal> index opclass (Ankit Kumar Pandey,
      Alexander Lakhin)
     </para>
________________________________________________________-->
     <para>
      禁止使用<filename>contrib/intarray</filename>的<literal>gist__int_ops</literal>索引操作类
      中的超大输入数组（Ankit Kumar Pandey，Alexander Lakhin）
     </para>
<!-- pgdoc-cn_end sig_en=f7069ccb5ec18c1a8f741fecd7db159c -->

<!-- pgdoc-cn_start sig_en=dd2eafb15513c6ce3eecea8bd8a9c412 sig_cn_org=c8ab11caaf93728dfb0b2c424ffb1823 source=15.7 
     <para>
      Previously this code would report a <literal>NOTICE</literal> but
      press on anyway, creating an invalid index entry that presents a
      risk of crashes when the index is read.
     </para>
________________________________________________________-->
     <para>
      以前，这段代码会报告一个<literal>NOTICE</literal>，但仍然继续执行，创建一个无效的索引条目，
	  当读取索引时存在崩溃风险。
     </para>
<!-- pgdoc-cn_end sig_en=dd2eafb15513c6ce3eecea8bd8a9c412 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8aac9759b] 2023-07-13 13:07:51 -0400
Branch: REL_16_STABLE [e27f3f52c] 2023-07-13 13:08:08 -0400
Branch: REL_15_STABLE [5cb461989] 2023-07-13 13:08:17 -0400
Branch: REL_14_STABLE [a6991f763] 2023-07-13 13:08:23 -0400
Branch: REL_13_STABLE [7fffcc2ee] 2023-07-13 13:08:28 -0400
Branch: REL_12_STABLE [8d8f37149] 2023-07-13 13:08:33 -0400
Branch: REL_11_STABLE [9f70f6d4c] 2023-07-13 13:08:40 -0400
-->
<!-- pgdoc-cn_start sig_en=e739edc379d9a96fb5e54ec69c00e0f1 sig_cn_org=e90d90b8536c12a67d2e5a7255ca802a source=15.7 
     <para>
      Avoid useless double decompression of GiST index entries
      in <filename>contrib/intarray</filename> (Konstantin Knizhnik,
      Matthias van de Meent, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免在<filename>contrib/intarray</filename>中对GiST索引条目进行无用的双重解压缩
      (Konstantin Knizhnik, Matthias van de Meent, Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=e739edc379d9a96fb5e54ec69c00e0f1 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [e7bff46e5] 2023-05-19 12:37:58 +0900
Branch: REL_15_STABLE [2dd778221] 2023-05-19 12:38:15 +0900
Branch: REL_14_STABLE [e72580232] 2023-05-19 12:38:18 +0900
-->
<!-- pgdoc-cn_start sig_en=6d588f9e082e8ab163d3a79a507f4f27 sig_cn_org=b6c30eda71f5c592c9611690e1edeafa source=15.7 
     <para>
      Fix <filename>contrib/pageinspect</filename>'s
      <function>gist_page_items()</function> function to work when there
      are included index columns (Alexander Lakhin, Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      修复<filename>contrib/pageinspect</filename>的
      <function>gist_page_items()</function>函数，在包含索引列时能够正常工作
      (Alexander Lakhin, Michael Paquier)
     </para>
<!-- pgdoc-cn_end sig_en=6d588f9e082e8ab163d3a79a507f4f27 -->

<!-- pgdoc-cn_start sig_en=cd84ea8a84eccfb179b3290c1caa7596 sig_cn_org=808c5fbfb29e2d87099da4bfcea18029 source=15.7 
     <para>
      Previously, if the index has included
      columns, <function>gist_page_items()</function> would fail to
      display those values on index leaf pages, or crash outright on
      non-leaf pages.
     </para>
________________________________________________________-->
     <para>
      以前，如果索引包含列，<function>gist_page_items()</function>将无法在索引叶页上显示这些值，或在非叶页上直接崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=cd84ea8a84eccfb179b3290c1caa7596 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [51b2c0879] 2023-05-12 16:11:14 -0400
Branch: REL_15_STABLE [bc478a0a8] 2023-05-12 16:11:14 -0400
-->
<!-- pgdoc-cn_start sig_en=f81eaf1198c1351f525f0623c6ff51b9 sig_cn_org=263bf77dcf7829a3571bf67f1683eff2 source=15.7 
     <para>
      In <application>psql</application>, ignore
      the <envar>PSQL_WATCH_PAGER</envar> environment variable when
      stdin/stdout are not a terminal (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在<application>psql</application>中，当标准输入/输出不是终端时，忽略<envar>PSQL_WATCH_PAGER</envar>环境变量（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=f81eaf1198c1351f525f0623c6ff51b9 -->

<!-- pgdoc-cn_start sig_en=be005b7fe6ec62fc50ba1bd85e57de0b sig_cn_org=5d04204397a2c0eecb723c0d967b56e5 source=15.7 
     <para>
      This corresponds to the treatment of <envar>PSQL_PAGER</envar> in
      commands besides <command>\watch</command>.
     </para>
________________________________________________________-->
     <para>
      这对于<envar>PSQL_PAGER</envar>在<command>\watch</command>之外的命令中的处理是相对应的。
     </para>
<!-- pgdoc-cn_end sig_en=be005b7fe6ec62fc50ba1bd85e57de0b -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [016107478] 2023-06-04 13:05:54 -0400
Branch: REL_15_STABLE [ca9e79274] 2023-06-04 13:05:54 -0400
Branch: REL_14_STABLE [d6f549d7a] 2023-06-04 13:05:54 -0400
-->
<!-- pgdoc-cn_start sig_en=1c7025d1837cd04224897054396059ae sig_cn_org=d625c6fa6a832df0d2fe1045cc8d0856 source=15.7 
     <para>
      Fix <application>pg_dump</application> to correctly handle new-style
      SQL-language functions whose bodies require parse-time dependencies
      on unique indexes (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<application>pg_dump</application>以正确处理需要在唯一索引上具有解析时依赖关系的新样式SQL语言函数（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=1c7025d1837cd04224897054396059ae -->

<!-- pgdoc-cn_start sig_en=3133f9fd0033dbf513d80abf13952ad5 sig_cn_org=6bb37a7ca5aadbfe6187b7f7b495d649 source=15.7 
     <para>
      Such cases can arise from <literal>GROUP BY</literal>
      and <literal>ON CONFLICT</literal> clauses, for example.  The
      function must then be postponed until after the unique index in the
      dump output, but <application>pg_dump</application> did not do that
      and instead printed a warning about <quote>could not resolve
      dependency loop</quote>.
     </para>
________________________________________________________-->
     <para>
      这种情况可能源自<literal>GROUP BY</literal>和<literal>ON CONFLICT</literal>子句，例如。
      然后函数必须延迟到唯一索引之后的dump输出中，但<application>pg_dump</application>没有这样做，
      而是打印了一个关于<quote>无法解析依赖循环</quote>的警告。
</para>
<!-- pgdoc-cn_end sig_en=3133f9fd0033dbf513d80abf13952ad5 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [b3f32a6c3] 2023-06-04 11:22:05 -0400
Branch: REL_15_STABLE [751ba1a7c] 2023-06-04 11:22:05 -0400
-->
<!-- pgdoc-cn_start sig_en=f04ce3c3e295724a747b16e9af08d24b sig_cn_org=2f2fa908a20fb9fef601cc8e65b09fa5 source=15.7 
     <para>
      Improve <application>pg_dump</application>'s display of details
      about dependency-loop problems (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      改进<application>pg_dump</application>对依赖循环问题的详细显示（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=f04ce3c3e295724a747b16e9af08d24b -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master Release: REL_16_BR [8f5e42d33] 2023-05-25 12:36:18 +0200
Branch: REL_15_STABLE [34f511965] 2023-05-25 12:36:18 +0200
-->
<!-- pgdoc-cn_start sig_en=bad82dbd285041e8b7da4c2d0652f0c8 sig_cn_org=7371cea5372208bcbf17576697e44bab source=15.7 
     <para>
      Avoid crash in <application>pgbench</application> with an empty
      pipeline and prepared mode (&Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      避免在空管道和准备模式下<application>pgbench</application>中崩溃（&Aacute;lvaro Herrera）
     </para>
<!-- pgdoc-cn_end sig_en=bad82dbd285041e8b7da4c2d0652f0c8 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a5ea825f9] 2023-07-14 11:15:34 +0900
Branch: REL_16_STABLE [27da47122] 2023-07-14 11:16:03 +0900
Branch: REL_15_STABLE [eb3abec4b] 2023-07-14 11:16:06 +0900
Branch: REL_14_STABLE [7af65523a] 2023-07-14 11:16:08 +0900
Branch: REL_13_STABLE [bdaaf1bf1] 2023-07-14 11:16:10 +0900
Branch: REL_12_STABLE [7d27493b7] 2023-07-14 11:16:11 +0900
Branch: REL_11_STABLE [db9813819] 2023-07-14 11:16:13 +0900
-->
<!-- pgdoc-cn_start sig_en=e043400750b9695ac922f431a615e083 sig_cn_org=1e271170791b12989f9fcd2755beff29 source=15.7 
     <para>
      Ensure
      that <structname>pg_index</structname>.<structfield>indisreplident</structfield>
      is kept up-to-date in relation cache entries (Shruthi Gowda)
     </para>
________________________________________________________-->
     <para>
      确保<structname>pg_index</structname>.<structfield>indisreplident</structfield>
      在关系缓存条目中保持最新（Shruthi Gowda）
     </para>
<!-- pgdoc-cn_end sig_en=e043400750b9695ac922f431a615e083 -->

<!-- pgdoc-cn_start sig_en=f1e23c117308e87bf0c68a55e35c2a82 sig_cn_org=2c9ee7ac2eaf4f8a6243ff2b86abae9c source=15.7 
     <para>
      This value could be stale in some cases.  There is no core code that
      relies on the relation cache's copy, so this is only a latent bug as
      far as Postgres itself is concerned; but there may be extensions for
      which it is a live bug.
     </para>
________________________________________________________-->
     <para>
      这个值在某些情况下可能是过时的。在核心代码中没有依赖于关系缓存副本的代码，
      所以就Postgres本身而言，这只是一个潜在的bug；但对于某些扩展来说，这可能是一个实际的bug。
     </para>
<!-- pgdoc-cn_end sig_en=f1e23c117308e87bf0c68a55e35c2a82 -->
    </listitem>

    <listitem>
<!--
Author: Tatsuo Ishii <ishii@postgresql.org>
Branch: master Release: REL_16_BR [ae66716bf] 2023-06-14 11:02:50 +0900
Branch: REL_15_STABLE [af26f28b9] 2023-06-14 11:11:18 +0900
-->
<!-- pgdoc-cn_start sig_en=215cd4e07f3daa867c6da0bd72893366 sig_cn_org=30e95fa1893ca497c3e6cef5d2b27362 source=15.7 
     <para>
      Fix <application>make_etags</application> script to work with
      non-Exuberant <application>ctags</application> (Masahiko Sawada)
     </para>
________________________________________________________-->
     <para>
      修复<application>make_etags</application>脚本，使其能够与非Exuberant <application>ctags</application>（Masahiko Sawada）一起工作
     </para>
<!-- pgdoc-cn_end sig_en=215cd4e07f3daa867c6da0bd72893366 -->
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-3">
<!-- pgdoc-cn_start sig_en=18818cf1a2a8de7d97871944cea04763 sig_cn_org=0bfdeea8c611971bdb64a6c1395d83e2 source=15.7 
  <title>Release 15.3</title>
________________________________________________________-->
  <title>发布版本 15.3</title>
<!-- pgdoc-cn_end sig_en=18818cf1a2a8de7d97871944cea04763 -->

  <formalpara>
<!-- pgdoc-cn_start sig_en=c45e8127eac45f2347bf1713afaeffda sig_cn_org=253305b4c6dff5b87ef36e3c2d95e52e source=15.7 
  <title>Release date:</title>
________________________________________________________-->
  <title>发布日期：</title>
<!-- pgdoc-cn_end sig_en=c45e8127eac45f2347bf1713afaeffda -->
<!-- pgdoc-cn_start sig_en=8115fe8b1001d6d50625bab0b6d300ec sig_cn_org=81a97ff64243299c6726a406f4e93237 source=15.7 
  <para>2023-05-11</para>
________________________________________________________-->
  <para>2023年5月11日</para>
<!-- pgdoc-cn_end sig_en=8115fe8b1001d6d50625bab0b6d300ec -->
  </formalpara>

<!-- pgdoc-cn_start sig_en=6a44ae9cd83ca042ad51295093211932 sig_cn_org=e009d9c3a9dc98085d8c07a9749f3ba0 source=15.7 
  <para>
   This release contains a variety of fixes from 15.2.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>
________________________________________________________-->
  <para>
   这个版本包含了从15.2版本中修复的各种问题。
   有关主要版本15中新功能的信息，请参见<xref linkend="release-15"/>。
</para>
<!-- pgdoc-cn_end sig_en=6a44ae9cd83ca042ad51295093211932 -->

  <sect2>
<!-- pgdoc-cn_start sig_en=372e79d3df914eff40c0d69a3d4f6055 sig_cn_org=b71e3a70b37c7e9bc8e2e61c76227dd1 source=15.7 
   <title>Migration to Version 15.3</title>
________________________________________________________-->
   <title>升级到版本15.3</title>
<!-- pgdoc-cn_end sig_en=372e79d3df914eff40c0d69a3d4f6055 -->

<!-- pgdoc-cn_start sig_en=036ed5117c7b85420fc61cc5e5b99f8b sig_cn_org=992c4bf77211ba6013c0d564cef911c0 source=15.7 
   <para>
    A dump/restore is not required for those running 15.X.
   </para>
________________________________________________________-->
   <para>
    对于运行15.X版本的用户，不需要进行dump/restore操作。
   </para>
<!-- pgdoc-cn_end sig_en=036ed5117c7b85420fc61cc5e5b99f8b -->

<!-- pgdoc-cn_start sig_en=84728392672595c430d9f275382bdd0b sig_cn_org=c6f8c5c8dd86e854c08d740ffdb0f10d source=15.7 
   <para>
    However, if you are upgrading from a version earlier than 15.1,
    see <xref linkend="release-15-1"/>.
   </para>
________________________________________________________-->
   <para>
    然而，如果您正在从早于15.1版本升级，
    请参见<xref linkend="release-15-1"/>。
   </para>
<!-- pgdoc-cn_end sig_en=84728392672595c430d9f275382bdd0b -->
  </sect2>

  <sect2>
<!-- pgdoc-cn_start sig_en=e161fef38e54e54458e215e5f978ef9b sig_cn_org=f104d50dd9d4dd802f94229ebe5bc097 source=15.7 
   <title>Changes</title>
________________________________________________________-->
   <title>变更</title>
<!-- pgdoc-cn_end sig_en=e161fef38e54e54458e215e5f978ef9b -->

   <itemizedlist>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [681d9e462] 2023-05-08 06:14:07 -0700
Branch: REL_15_STABLE [dbd5795e7] 2023-05-08 06:14:11 -0700
Branch: REL_14_STABLE [01e8182c7] 2023-05-08 06:14:11 -0700
Branch: REL_13_STABLE [2212f7db8] 2023-05-08 06:14:12 -0700
Branch: REL_12_STABLE [78119a0bf] 2023-05-08 06:14:12 -0700
Branch: REL_11_STABLE [23cb8eaeb] 2023-05-08 06:14:12 -0700
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8d525d7b9] 2023-05-08 11:24:47 -0400
Branch: REL_15_STABLE [1b761d896] 2023-05-08 11:24:47 -0400
Branch: REL_14_STABLE [1913f63dc] 2023-05-08 11:24:47 -0400
Branch: REL_13_STABLE [feb9e7fbb] 2023-05-08 11:24:47 -0400
Branch: REL_12_STABLE [2cd843cc9] 2023-05-08 11:24:47 -0400
Branch: REL_11_STABLE [766e06140] 2023-05-08 11:24:47 -0400
-->
<!-- pgdoc-cn_start sig_en=e6a7621e1c3fbad24333a1cb3ab8351d sig_cn_org=e4339562414cd2525a5242be97eb9a56 source=15.7 
     <para>
      Prevent <command>CREATE SCHEMA</command> from defeating changes
      in <varname>search_path</varname> (Alexander Lakhin)
     </para>
________________________________________________________-->
     <para>
      防止<command>CREATE SCHEMA</command>破坏<varname>search_path</varname>中的更改（Alexander Lakhin）
     </para>
<!-- pgdoc-cn_end sig_en=e6a7621e1c3fbad24333a1cb3ab8351d -->

<!-- pgdoc-cn_start sig_en=1e0d29bb79068ae56ab43ade505b7a6d sig_cn_org=2ae48bd1c9ff577b50460514e8b11083 source=15.7 
     <para>
      Within a <command>CREATE SCHEMA</command> command, objects in the
      prevailing <varname>search_path</varname>, as well as those in the
      newly-created schema, would be visible even within a called
      function or script that attempted to set a
      secure <varname>search_path</varname>.  This could allow any user
      having permission to create a schema to hijack the privileges of a
      security definer function or extension script.
     </para>
________________________________________________________-->
     <para>
      在<command>CREATE SCHEMA</command>命令中，当前<varname>search_path</varname>中的对象，
      以及新创建的模式中的对象，即使在尝试设置安全<varname>search_path</varname>的被调用函数或脚本中，
	  也会是可见的。这可能允许任何有权限创建模式的用户，接管安全定义者函数或扩展脚本的权限。
     </para>
<!-- pgdoc-cn_end sig_en=1e0d29bb79068ae56ab43ade505b7a6d -->

<!-- pgdoc-cn_start sig_en=2733d36dce7a4e0a12b50f3fd40df493 sig_cn_org=f7821fb818f89ff9f7afb0166de98083 source=15.7 
     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Alexander Lakhin for reporting this problem.
      (CVE-2023-2454)
     </para>
________________________________________________________-->
     <para>
      <productname>PostgreSQL</productname>项目感谢Alexander Lakhin报告了这个问题。
      (CVE-2023-2454)
     </para>
<!-- pgdoc-cn_end sig_en=2733d36dce7a4e0a12b50f3fd40df493 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ca73753b0] 2023-05-08 10:12:44 -0400
Branch: REL_15_STABLE [04e560604] 2023-05-08 10:12:44 -0400
Branch: REL_14_STABLE [f8d799eda] 2023-05-08 10:12:44 -0400
Branch: REL_13_STABLE [b8e28f04f] 2023-05-08 10:12:44 -0400
Branch: REL_12_STABLE [ee87b482c] 2023-05-08 10:12:45 -0400
Branch: REL_11_STABLE [473626cf0] 2023-05-08 10:12:45 -0400
-->
<!-- pgdoc-cn_start sig_en=ba052e434c3526231b6723982746d001 sig_cn_org=b9fcc507353a214343b8dbaef40b10ed source=15.7 
     <para>
      Enforce row-level security policies correctly after inlining a
      set-returning function (Stephen Frost, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在内联一个返回集合的函数后，正确执行行级安全策略（Stephen Frost，Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=ba052e434c3526231b6723982746d001 -->

<!-- pgdoc-cn_start sig_en=9ab52de701bd4d1037269019cb807e61 sig_cn_org=376521c666a4e81c42683fc2a7f90038 source=15.7 
     <para>
      If a set-returning SQL-language function refers to a table having
      row-level security policies, and it can be inlined into a calling
      query, those RLS policies would not get enforced properly in some
      cases involving re-using a cached plan under a different role.
      This could allow a user to see or modify rows that should have been
      invisible.
     </para>
________________________________________________________-->
     <para>
      如果一个返回集合的SQL语言函数引用了一个具有行级安全策略的表，并且可以内联到一个调用查询中，
	  那么在某些情况下重新使用不同角色下的缓存计划时，这些RLS策略可能无法正确执行。
	  这可能会允许用户查看或修改本应该是不可见的行。
     </para>
<!-- pgdoc-cn_end sig_en=9ab52de701bd4d1037269019cb807e61 -->

<!-- pgdoc-cn_start sig_en=b09dfa069d93a795e6c82e0ddb601ade sig_cn_org=76a2393105f546b93afcf44f9f8c89ea source=15.7 
     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Wolfgang Walther for reporting this problem.
      (CVE-2023-2455)
     </para>
________________________________________________________-->
     <para>
      <productname>PostgreSQL</productname>项目感谢Wolfgang Walther报告了这个问题。
      (CVE-2023-2455)
     </para>
<!-- pgdoc-cn_end sig_en=b09dfa069d93a795e6c82e0ddb601ade -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [8a8661828] 2023-02-22 10:14:52 +0900
Branch: REL_15_STABLE [fa5dd460c] 2023-02-22 10:14:56 +0900
-->
<!-- pgdoc-cn_start sig_en=258b6d1266b1245caa5b8238d4f6118b sig_cn_org=a57fe297099d8676fc1075303af42da1 source=15.7 
     <para>
      Fix potential corruption of the template (source) database after
      <command>CREATE DATABASE</command> with the <literal>STRATEGY
      WAL_LOG</literal> option (Nathan Bossart, Ryo Matsumura)
     </para>
________________________________________________________-->
     <para>
      修复在使用<command>CREATE DATABASE</command>时，带有<literal>STRATEGY
      WAL_LOG</literal>选项可能导致模板（源）数据库损坏的潜在问题（Nathan Bossart，Ryo Matsumura）
     </para>
<!-- pgdoc-cn_end sig_en=258b6d1266b1245caa5b8238d4f6118b -->

<!-- pgdoc-cn_start sig_en=cd20f057b7401b5ca2ad6b88bc1228e1 sig_cn_org=87e41b93445dfedf17b7b341f0cb82b3 source=15.7 
     <para>
      Improper buffer handling created a risk that any later modification
      of the template's <structname>pg_class</structname> catalog would be
      lost.
     </para>
________________________________________________________-->
     <para>
      不当的缓冲处理会导致模板的<structname>pg_class</structname>目录的任何后续修改都会丢失。
     </para>
<!-- pgdoc-cn_end sig_en=cd20f057b7401b5ca2ad6b88bc1228e1 -->
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [5df319f3d] 2023-03-22 09:20:34 -0700
Branch: REL_15_STABLE [560bb56c6] 2023-03-22 09:26:23 -0700
-->
<!-- pgdoc-cn_start sig_en=f31cd1150fe69cc91a8e38013c9d9ec9 sig_cn_org=c7fbee371c4bddeea685eeaf91801c5f source=15.7 
     <para>
      Fix memory leakage and unnecessary disk reads
      during <command>CREATE DATABASE</command> with the <literal>STRATEGY
      WAL_LOG</literal> option (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      修复在使用带<literal>STRATEGY WAL_LOG</literal>参数的
	  <command>CREATE DATABASE</command>时出现的内存泄漏和不必要的磁盘读取问题
      （Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=f31cd1150fe69cc91a8e38013c9d9ec9 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [4dadd660f] 2023-04-28 19:29:12 +0900
Branch: REL_15_STABLE [b9ad73ad2] 2023-04-28 19:29:36 +0900
Branch: REL_14_STABLE [d29eba198] 2023-04-28 19:29:38 +0900
Branch: REL_13_STABLE [7e95a33b4] 2023-04-28 19:29:40 +0900
Branch: REL_12_STABLE [63f7e91ec] 2023-04-28 19:29:42 +0900
Branch: REL_11_STABLE [a9212716b] 2023-04-28 19:29:44 +0900
-->
<!-- pgdoc-cn_start sig_en=750f53e3327724fc1c300c211f90d699 sig_cn_org=d5f57997751cb0889e1529f41e6fc5b0 source=15.7 
     <para>
      Avoid crash when the new schema name is omitted
      in <command>CREATE SCHEMA</command> (Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      在<command>CREATE SCHEMA</command>中避免新模式名称被省略时崩溃（Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=750f53e3327724fc1c300c211f90d699 -->

<!-- pgdoc-cn_start sig_en=06474f8e8d6c845c79b0fe12adbbab3d sig_cn_org=200349a61e0b2577e17963c34f2228dc source=15.7 
     <para>
      The SQL standard allows writing <literal>CREATE SCHEMA AUTHORIZATION
      <replaceable>owner_name</replaceable></literal>, with the schema
      name defaulting to <replaceable>owner_name</replaceable>.  However
      some code paths expected the schema name to be present and would
      fail.
     </para>
________________________________________________________-->
     <para>
      SQL标准允许编写<literal>CREATE SCHEMA AUTHORIZATION
      <replaceable>owner_name</replaceable></literal>，其中模式
      名称默认为<replaceable>owner_name</replaceable>。然而，
      一些代码路径期望模式名称存在，否则会失败。
     </para>
<!-- pgdoc-cn_end sig_en=06474f8e8d6c845c79b0fe12adbbab3d -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [326a33a28] 2023-03-28 11:39:24 -0400
Branch: REL_15_STABLE [bf5c4b3d9] 2023-03-28 11:36:50 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e3ac85014] 2023-03-15 11:59:18 -0400
Branch: REL_15_STABLE [3908d6ae1] 2023-03-15 11:59:18 -0400
-->
<!-- pgdoc-cn_start sig_en=9d75b5c672573fda5dc0e1bdf3fba7aa sig_cn_org=49903d89833607916943768a06a46825 source=15.7 
     <para>
      Fix various planner failures with <command>MERGE</command>
      commands (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复各种使用<command>MERGE</command>命令时的规划器失败(Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=9d75b5c672573fda5dc0e1bdf3fba7aa -->

<!-- pgdoc-cn_start sig_en=10d76c7c92ee830420119f470b4ba6d0 sig_cn_org=6149fe209687bb58e8de4f4090a2a704 source=15.7 
     <para>
      Planning could fail with errors like <quote>variable not found in
      subplan target list</quote> or <quote>PlaceHolderVar found where not
      expected</quote>.
     </para>
________________________________________________________-->
     <para>
      计划可能会出现错误，比如<quote>在子计划目标列表中找不到变量</quote>或<quote>在不
      期望的地方找到PlaceHolderVar</quote>。
     </para>
<!-- pgdoc-cn_end sig_en=10d76c7c92ee830420119f470b4ba6d0 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [7b14e20b1] 2023-03-13 11:12:20 +0000
Branch: REL_15_STABLE [da6257eee] 2023-03-13 11:11:10 +0000
Branch: master [80a48e0f2] 2023-02-22 09:39:09 +0000
Branch: REL_15_STABLE [018af1cc1] 2023-02-22 09:41:28 +0000
-->
<!-- pgdoc-cn_start sig_en=30ceae72c57e223b0959677246c94ecf sig_cn_org=a2ef7604036b2eec36de1933e26c73d1 source=15.7 
     <para>
      Fix the row count reported by <command>MERGE</command> for some
      corner cases (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复一些特殊情况下<command>MERGE</command>命令报告的行数错误（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=30ceae72c57e223b0959677246c94ecf -->

<!-- pgdoc-cn_start sig_en=ce4ceccdcd058d5d81336b14d111818a sig_cn_org=2011109f06e762c7240ad6dac6c82a04 source=15.7 
     <para>
      The row count reported in the command tag counted rows that actually
      hadn't been modified due to a <literal>BEFORE ROW</literal> trigger
      returning NULL.  This is inconsistent with what happens in
      plain <command>UPDATE</command> or <command>DELETE</command>, so
      change it to not count such rows.  Also, avoid counting a row twice
      when <command>MERGE</command> moves it into a different partition of
      a partitioned table.
     </para>
________________________________________________________-->
     <para>
      在命令标签中报告的行数计数了实际上由于<literal>BEFORE ROW</literal>触发器返回NULL而未被修改的行。
      这与在普通<command>UPDATE</command>或<command>DELETE</command>中发生的情况不一致，因此
      更改为不计算这些行。此外，当<command>MERGE</command>将其移动到分区表的不同分区时，
      避免将一行计数两次。
     </para>
<!-- pgdoc-cn_end sig_en=ce4ceccdcd058d5d81336b14d111818a -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [9321c79c8] 2023-03-13 10:22:22 +0000
Branch: REL_15_STABLE [7d9a75713] 2023-03-13 10:23:42 +0000
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [fd923b5de] 2023-02-15 20:37:44 +0100
Branch: REL_15_STABLE [5d8ec1b9f] 2023-02-15 20:37:44 +0100
-->
<!-- pgdoc-cn_start sig_en=e33cf50ce014e2b46fccdb3f2b96a31d sig_cn_org=abe404f7141d949291b5135146880d74 source=15.7 
     <para>
      Fix <command>MERGE</command> problems with concurrent updates
      (Dean Rasheed, &Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      修复<command>MERGE</command>在并发更新时的问题（Dean Rasheed, &Aacute;lvaro Herrera）
     </para>
<!-- pgdoc-cn_end sig_en=e33cf50ce014e2b46fccdb3f2b96a31d -->

<!-- pgdoc-cn_start sig_en=0ad8449252289c6d980cf961b8487454 sig_cn_org=0649ae4b31895d6f9cfac9a8e53e19b3 source=15.7 
     <para>
      Some cases misbehaved if a row to be updated or deleted
      by <command>MERGE</command> had just been updated by a concurrent
      transaction.  This could lead to a crash, or the wrong merge action
      being executed, or no action at all.
     </para>
________________________________________________________-->
     <para>
      一些情况下，如果一个要被<command>MERGE</command>更新或删除的行刚好被并发事务更新，
      则可能导致崩溃，执行错误的合并操作，或者根本没有任何操作。
     </para>
<!-- pgdoc-cn_end sig_en=0ad8449252289c6d980cf961b8487454 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [41e2c52fd] 2023-05-07 11:01:15 -0400
Branch: REL_15_STABLE [f200b9695] 2023-05-07 11:01:15 -0400
-->
<!-- pgdoc-cn_start sig_en=541a4adba8102472f57112ecadf31ada sig_cn_org=e915577653a3f297ea1c8f66cf5f9fff source=15.7 
     <para>
      Add support for decompiling <command>MERGE</command>
      commands (&Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      添加对反编译<command>MERGE</command>命令的支持（&Aacute;lvaro Herrera）
     </para>
<!-- pgdoc-cn_end sig_en=541a4adba8102472f57112ecadf31ada -->

<!-- pgdoc-cn_start sig_en=4fb946039a0e0771d433f396a7c3e5af sig_cn_org=7bd8fb919772e92b1e4bd31520533820 source=15.7 
     <para>
      This was overlooked when <command>MERGE</command> was added, but
      it's essential support for <command>MERGE</command> in new-style SQL
      functions.
     </para>
________________________________________________________-->
     <para>
      当<command>MERGE</command>被添加时，这一点被忽视了，但在新风格SQL函数中支持<command>MERGE</command>是至关重要的。
     </para>
<!-- pgdoc-cn_end sig_en=4fb946039a0e0771d433f396a7c3e5af -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6949b921d] 2023-03-04 13:32:35 -0500
Branch: REL_15_STABLE [f61e60102] 2023-03-04 13:32:35 -0500
-->
<!-- pgdoc-cn_start sig_en=8b40d719c978aaa5d0364c0102a0e462 sig_cn_org=879e53e5b9eaf5508edfe8f9e5ff775d source=15.7 
     <para>
      Fix enabling/disabling of foreign-key triggers in partitioned tables
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复分区表中外键触发器的启用/禁用（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=8b40d719c978aaa5d0364c0102a0e462 -->

<!-- pgdoc-cn_start sig_en=3ab4ef261cf312c412ed2d640ec18bdf sig_cn_org=ff1de6cd6f48b510d2b9f10477733186 source=15.7 
     <para>
      <command>ALTER TABLE ... ENABLE/DISABLE TRIGGER</command> failed if
      applied to a partitioned table's foreign-key enforcement triggers,
      because it tried to locate the clone triggers for the partitions by
      name, and they do not have the same name.  Locate them by
      parent-trigger OID instead.
     </para>
________________________________________________________-->
     <para>
      <command>ALTER TABLE ... ENABLE/DISABLE TRIGGER</command>失败，如果应用于分区表的外键强制触发器，
      因为它尝试通过名称定位分区的克隆触发器，而它们的名称不同。请通过父触发器OID来定位它们。
     </para>
<!-- pgdoc-cn_end sig_en=3ab4ef261cf312c412ed2d640ec18bdf -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a3c9d35ae] 2023-03-27 15:04:15 -0400
Branch: REL_15_STABLE [d90d59e25] 2023-03-27 15:04:02 -0400
Branch: REL_14_STABLE [334cc4c96] 2023-03-27 15:04:02 -0400
Branch: REL_13_STABLE [29a20ff06] 2023-03-27 15:04:02 -0400
Branch: REL_12_STABLE [cd07163c0] 2023-03-27 15:04:02 -0400
Branch: REL_11_STABLE [78838bc3d] 2023-03-27 15:04:02 -0400
-->
<!-- pgdoc-cn_start sig_en=a23c9f53f28145f02d313f5eb1193810 sig_cn_org=9a269467c3c5ea5cbc71c8a5f953a590 source=15.7 
     <para>
      Disallow altering composite types that are stored in indexes
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      禁止修改存储在索引中的复合类型（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=a23c9f53f28145f02d313f5eb1193810 -->

<!-- pgdoc-cn_start sig_en=f108e2258951288533204b4e7b7a63eb sig_cn_org=ca5dd6f3531609dffc19707afbad6e72 source=15.7 
     <para>
      <command>ALTER TYPE</command> disallows non-binary-compatible
      modifications of composite types if they are stored in any table
      columns.  (Perhaps that will be allowed someday, but it hasn't
      happened yet; the locking implications of rewriting many tables are
      daunting.)  We overlooked the possibility that an index might
      contain a composite type that doesn't also appear in its table.
     </para>
________________________________________________________-->
     <para>
      <command>ALTER TYPE</command>禁止对复合类型进行非二进制兼容的修改，如果它们存储在任何表列中。
      （也许有一天会允许这样做，但目前还没有发生；重写许多表的锁定影响令人生畏。）
      我们忽视了一个可能性，即索引可能包含一个在表中没有出现的复合类型。
</para>
<!-- pgdoc-cn_end sig_en=f108e2258951288533204b4e7b7a63eb -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f0d65c0ea] 2023-03-31 11:18:49 -0400
Branch: REL_15_STABLE [6e3698173] 2023-03-31 11:18:49 -0400
Branch: REL_14_STABLE [b0b55d8b8] 2023-03-31 11:18:49 -0400
Branch: REL_13_STABLE [bfb993b1b] 2023-03-31 11:18:49 -0400
Branch: REL_12_STABLE [e8d74aac5] 2023-03-31 11:18:49 -0400
-->
<!-- pgdoc-cn_start sig_en=39b1bdc2268c3c4756c535014c838636 sig_cn_org=b086d757de12e776288497c29dbdcf41 source=15.7 
     <para>
      Disallow system columns as elements of foreign keys (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      禁止将系统列作为外键的元素（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=39b1bdc2268c3c4756c535014c838636 -->

<!-- pgdoc-cn_start sig_en=4cfd1e288c7e30efd917ab915eada7a3 sig_cn_org=c83b048690b10f0e4e816870f6710686 source=15.7 
     <para>
      Since the removal of OID as a system column, there is no plausible
      use-case for this, and various bits of code no longer support it.
      Disallow it rather than trying to fix all the cases.
     </para>
________________________________________________________-->
     <para>
      自从OID作为系统列被移除以来，对此没有合理的使用场景，而且各种代码片段不再支持它。
      不要尝试修复所有情况，而是禁止它。
     </para>
<!-- pgdoc-cn_end sig_en=4cfd1e288c7e30efd917ab915eada7a3 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d66bb048c] 2023-03-10 13:52:44 -0500
Branch: REL_15_STABLE [59947bac7] 2023-03-10 13:52:28 -0500
Branch: REL_14_STABLE [53a53ea33] 2023-03-10 13:52:28 -0500
Branch: REL_13_STABLE [866fd004d] 2023-03-10 13:52:28 -0500
Branch: REL_12_STABLE [a30310833] 2023-03-10 13:52:28 -0500
Branch: REL_11_STABLE [6e2674d77] 2023-03-10 13:52:28 -0500
-->
<!-- pgdoc-cn_start sig_en=f9376e5115b0158ec53105f69bdd0408 sig_cn_org=1a49689340bc3b70f2dbb9d1c750b0fc source=15.7 
     <para>
      Ensure that <command>COPY TO</command> from an RLS-enabled parent
      table does not copy any rows from child tables (Antonin Houska)
     </para>
________________________________________________________-->
     <para>
      确保从启用了RLS的父表中<command>COPY TO</command>不会复制任何子表中的行（Antonin Houska）
     </para>
<!-- pgdoc-cn_end sig_en=f9376e5115b0158ec53105f69bdd0408 -->

<!-- pgdoc-cn_start sig_en=ce1c17c1bfc5144d5826342161aa34da sig_cn_org=a762370130e4a48b834c4c8aa10f0217 source=15.7 
     <para>
      The documentation is quite clear that <command>COPY TO</command>
      copies rows from only the named table, not any inheritance children
      it may have.  However, if row-level security was enabled on the table
      then this stopped being true.
     </para>
________________________________________________________-->
     <para>
      文档非常清楚，<command>COPY TO</command>仅从指定的表中复制行，而不是它可能具有的任何继承子项。
      但是，如果在表上启用了行级安全性，则这一点不再成立。
     </para>
<!-- pgdoc-cn_end sig_en=ce1c17c1bfc5144d5826342161aa34da -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4c40995f6] 2023-05-04 11:48:23 -0400
Branch: REL_15_STABLE [ccb479e76] 2023-05-04 11:48:23 -0400
Branch: REL_14_STABLE [d5de344a5] 2023-05-04 11:48:23 -0400
Branch: REL_13_STABLE [9a72f499a] 2023-05-04 11:48:23 -0400
Branch: REL_12_STABLE [580df5078] 2023-05-04 11:48:23 -0400
Branch: REL_11_STABLE [4624aad61] 2023-05-04 11:48:23 -0400
-->
<!-- pgdoc-cn_start sig_en=3fcb475382dec471920d30bf43b2f138 sig_cn_org=bdb8730a1a3a151a4ea36694f743926e source=15.7 
     <para>
      Avoid possible crash when <function>array_position()</function>
      or <function>array_positions()</function> is passed an empty array
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免当<function>array_position()</function>或<function>array_positions()</function>被传入空数组时可能发生崩溃
      (Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=3fcb475382dec471920d30bf43b2f138 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b081fe419] 2023-03-14 19:17:31 -0400
Branch: REL_15_STABLE [a67c75f82] 2023-03-14 19:17:31 -0400
Branch: REL_14_STABLE [7cac19105] 2023-03-14 19:17:31 -0400
Branch: REL_13_STABLE [386a26023] 2023-03-14 19:17:31 -0400
Branch: REL_12_STABLE [6d3a9a60f] 2023-03-14 19:17:31 -0400
Branch: REL_11_STABLE [8e33fb9ef] 2023-03-14 19:17:31 -0400
-->
<!-- pgdoc-cn_start sig_en=ca478122b15312de123311117074a94b sig_cn_org=b9c4f861f9c1325c4ceb86210359a953 source=15.7 
     <para>
      Fix possible out-of-bounds fetch in <function>to_char()</function>
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复可能导致<function>to_char()</function>函数越界获取的问题
      (Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=ca478122b15312de123311117074a94b -->

<!-- pgdoc-cn_start sig_en=0127a595edc8012c33a2b381d41e5e78 sig_cn_org=acedfbfbe0af639f545879278cf331de source=15.7 
     <para>
      With bad luck this could have resulted in a server crash.
     </para>
________________________________________________________-->
     <para>
      倒霉的话，这可能导致服务器崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=0127a595edc8012c33a2b381d41e5e78 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d7056bc1c] 2023-03-01 11:30:31 -0500
Branch: REL_15_STABLE [eae09137d] 2023-03-01 11:30:17 -0500
Branch: REL_14_STABLE [1a9356f65] 2023-03-01 11:30:17 -0500
Branch: REL_13_STABLE [3b37e8442] 2023-03-01 11:30:17 -0500
Branch: REL_12_STABLE [b162660d3] 2023-03-01 11:30:17 -0500
Branch: REL_11_STABLE [b1a9d8ef2] 2023-03-01 11:30:17 -0500
-->
<!-- pgdoc-cn_start sig_en=77b0efca472ae4c378ff27393b8b2b1a sig_cn_org=6a148fa98f532da0912b0afeceffb84e source=15.7 
     <para>
      Avoid buffer overread in <function>translate()</function> function
      (Daniil Anisimov)
     </para>
________________________________________________________-->
     <para>
      避免在<function>translate()</function>函数中发生缓冲区过读(Daniil Anisimov)
     </para>
<!-- pgdoc-cn_end sig_en=77b0efca472ae4c378ff27393b8b2b1a -->

<!-- pgdoc-cn_start sig_en=215f5faa72494a3063282397d097b5bc sig_cn_org=88bfe1dac6c65dc7ec90377e8ba90451 source=15.7 
     <para>
      When using the deletion feature, the function might fetch the byte
      just after the input string, creating a small risk of crash.
     </para>
________________________________________________________-->
     <para>
      当使用删除功能时，该函数可能会获取输入字符串后面的字节，存在一定的崩溃风险。
     </para>
<!-- pgdoc-cn_end sig_en=215f5faa72494a3063282397d097b5bc -->
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [f413941f4] 2023-03-17 12:08:46 -0700
Branch: REL_15_STABLE [8b87e9291] 2023-03-17 12:07:47 -0700
-->
<!-- pgdoc-cn_start sig_en=7e0fad96c53cf071f3b5cbbacd0e0f00 sig_cn_org=46193aa2420a7c0d1fa62d293cce5db9 source=15.7 
     <para>
      Adjust text-search-related character classification logic to
      correctly detect whether the prevailing locale
      is <literal>C</literal> (Jeff Davis)
     </para>
________________________________________________________-->
     <para>
      调整文本搜索相关的字符分类逻辑，以正确检测当前区域设置是否为<literal>C</literal>（Jeff Davis）
     </para>
<!-- pgdoc-cn_end sig_en=7e0fad96c53cf071f3b5cbbacd0e0f00 -->

<!-- pgdoc-cn_start sig_en=496b1223d6f88f752bd715fc5d404a3d sig_cn_org=482d58a22c717f28a7c88ae8b260c51b source=15.7 
     <para>
      This code got confused if the database's default collation uses ICU.
     </para>
________________________________________________________-->
     <para>
      如果数据库的默认排序规则使用ICU，这段代码会感到困惑。
     </para>
<!-- pgdoc-cn_end sig_en=496b1223d6f88f752bd715fc5d404a3d -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5e80d3515] 2023-02-12 12:50:55 -0500
Branch: REL_15_STABLE [0ef65d0f5] 2023-02-12 12:50:55 -0500
-->
<!-- pgdoc-cn_start sig_en=8fac437bef7c806de86de6400c83f63c sig_cn_org=bd4af13bd340ee419d196c5b92100e39 source=15.7 
     <para>
      Avoid possible crash on empty input for type <type>interval</type>
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免可能的崩溃，对于类型<type>interval</type>（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=8fac437bef7c806de86de6400c83f63c -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f0d0394e8] 2023-02-20 16:55:59 -0500
Branch: REL_15_STABLE [ded5ede27] 2023-02-20 16:55:59 -0500
-->
<!-- pgdoc-cn_start sig_en=cfdc83f67a036685eb96b48dcd37e44b sig_cn_org=61358b8e927a6dd111f4a5054419bd6a source=15.7 
     <para>
      Re-allow exponential notation in ISO-8601 interval fields
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      允许在ISO-8601间隔字段中使用指数表示法（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=cfdc83f67a036685eb96b48dcd37e44b -->

<!-- pgdoc-cn_start sig_en=d930d1b356e20c76a99c2179762424f9 sig_cn_org=4df52241fb623f9f5435032cf5147b28 source=15.7 
     <para>
      Interval input like <literal>P0.1e10D</literal> isn't officially
      sanctioned by ISO-8601, but we accepted it for a long time before
      version 15, so re-allow it.
     </para>
________________________________________________________-->
     <para>
      类似<literal>P0.1e10D</literal>的间隔输入并不是ISO-8601官方认可的，但在版本15之前我们接受了它很长一段时间，所以重新允许它。
     </para>
<!-- pgdoc-cn_end sig_en=d930d1b356e20c76a99c2179762424f9 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [25a7812cd] 2023-03-13 15:19:00 -0400
Branch: REL_15_STABLE [74a1a36d7] 2023-03-13 15:19:00 -0400
Branch: REL_14_STABLE [0ee9d685d] 2023-03-13 15:19:00 -0400
Branch: REL_13_STABLE [52e9a7816] 2023-03-13 15:19:00 -0400
Branch: REL_12_STABLE [c25a929a6] 2023-03-13 15:19:00 -0400
Branch: REL_11_STABLE [234941a3b] 2023-03-13 15:19:00 -0400
-->
<!-- pgdoc-cn_start sig_en=764f4fd11850d0240ad03c039c025674 sig_cn_org=d068b7f014b8d4e1e386e08ee847d8f1 source=15.7 
     <para>
      Fix error cursor setting for parse errors in JSON string literals
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复JSON字符串字面量中解析错误的光标设置（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=764f4fd11850d0240ad03c039c025674 -->

<!-- pgdoc-cn_start sig_en=7fa9e1277d270e2def66242955068e51 sig_cn_org=4af06f3541d118f0cdaf40c743a51d57 source=15.7 
     <para>
      Most cases in which a syntax error is detected in a string literal
      within a JSON value failed to set the error cursor appropriately.
      This led at least to an unhelpful error message (pointing to the
      token before the string, rather than the actual trouble spot), and
      could even result in a crash in v14 and later.
     </para>
________________________________________________________-->
     <para>
      大多数情况下，在JSON值中检测到语法错误的字符串文字未能正确设置错误光标。
      这至少导致了一个无用的错误消息（指向字符串之前的标记，而不是实际的问题点），
      甚至可能导致在v14及以后版本中崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=7fa9e1277d270e2def66242955068e51 -->
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [be504a3e9] 2023-03-07 21:52:32 -0800
Branch: REL_15_STABLE [391f08fd6] 2023-03-07 21:36:48 -0800
Branch: REL_14_STABLE [324281fd5] 2023-03-07 21:36:49 -0800
Branch: REL_13_STABLE [e6d77f22c] 2023-03-07 21:36:51 -0800
Branch: REL_12_STABLE [3c92f7e9d] 2023-03-07 21:36:52 -0800
-->
<!-- pgdoc-cn_start sig_en=29834d836fc238d609cb4846ae603e93 sig_cn_org=7f9676259fc9c5624a1400fe31e9d0de source=15.7 
     <para>
      Fix data corruption due to <varname>vacuum_defer_cleanup_age</varname>
      being larger than the current 64-bit xid (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      修复由<varname>vacuum_defer_cleanup_age</varname>大于当前64位xid引起的数据损坏（Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=29834d836fc238d609cb4846ae603e93 -->

<!-- pgdoc-cn_start sig_en=f76b900a123d197e471eb8140c059efe sig_cn_org=22220ed62961916d63af764d5af3d9f8 source=15.7 
     <para>
      In v14 and later with non-default settings
      of <varname>vacuum_defer_cleanup_age</varname>, it was possible to
      compute a very large vacuum cleanup horizon xid, leading to vacuum
      removing rows that are still live.  v12 and v13 have a lesser form
      of the same problem affecting only GiST indexes, which could lead to
      index pages getting recycled too early.
     </para>
________________________________________________________-->
     <para>
      在v14及更高版本中，如果<varname>vacuum_defer_cleanup_age</varname>的设置不是默认值，
      可能会计算出一个非常大的清理范围xid，导致清理器删除仍然存活的行。v12和v13存在同样问题的
      较轻形式，只影响GiST索引，可能导致索引页过早回收。
     </para>
<!-- pgdoc-cn_end sig_en=f76b900a123d197e471eb8140c059efe -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [30dbdbe75] 2023-03-13 12:40:28 -0400
Branch: REL_15_STABLE [5fd61bdc1] 2023-03-13 12:40:28 -0400
Branch: REL_14_STABLE [096e70805] 2023-03-13 12:40:28 -0400
Branch: REL_13_STABLE [bc0bcce2e] 2023-03-13 12:40:28 -0400
Branch: REL_12_STABLE [62a91a1b0] 2023-03-13 12:40:28 -0400
Branch: REL_11_STABLE [0736b1131] 2023-03-13 12:40:28 -0400
-->
<!-- pgdoc-cn_start sig_en=addb323290cafc5a0afa30108d81844c sig_cn_org=0138145f9fe4c8a8c9b8101be52eef68 source=15.7 
     <para>
      Fix parser's failure to detect some cases of improperly-nested
      aggregates (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复解析器未能检测到一些不正确嵌套的聚合体的情况（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=addb323290cafc5a0afa30108d81844c -->

<!-- pgdoc-cn_start sig_en=edbab76005e9d2f2b9e2d1ba3b0f6435 sig_cn_org=052fa3c583c63da937f41c6704f79a35 source=15.7 
     <para>
      This oversight could lead to executor failures for queries that
      should have been rejected as invalid.
     </para>
________________________________________________________-->
     <para>
      这个疏忽可能导致执行器对本应被拒绝为无效的查询失败。
     </para>
<!-- pgdoc-cn_end sig_en=edbab76005e9d2f2b9e2d1ba3b0f6435 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [6c3b697b1] 2023-03-31 12:13:05 +1300
Branch: REL_15_STABLE [df567fbf6] 2023-03-31 12:13:34 +1300
Branch: REL_14_STABLE [211016220] 2023-03-31 12:14:04 +1300
Branch: REL_13_STABLE [8d684c445] 2023-03-31 12:14:31 +1300
Branch: REL_12_STABLE [33510bc64] 2023-03-31 12:15:07 +1300
Branch: REL_11_STABLE [07554c99d] 2023-03-31 12:15:39 +1300
-->
<!-- pgdoc-cn_start sig_en=e4345097554de24c32a419b6a0ccc582 sig_cn_org=504908229c3e5daf8b538632aea079f0 source=15.7 
     <para>
      Fix data structure corruption during parsing of
      serial <literal>SEQUENCE NAME</literal> options (David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复在解析串行<literal>SEQUENCE NAME</literal>选项期间发生的数据结构损坏（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=e4345097554de24c32a419b6a0ccc582 -->

<!-- pgdoc-cn_start sig_en=0f5a76c73668279123fa4e5ab7830536 sig_cn_org=054888b1198f7a5e19f6ca47cca4e0c0 source=15.7 
     <para>
      This can lead to trouble if an event trigger captures the corrupted
      parse tree.
     </para>
________________________________________________________-->
     <para>
      这可能会导致问题，如果事件触发器捕获了损坏的解析树。
     </para>
<!-- pgdoc-cn_end sig_en=0f5a76c73668279123fa4e5ab7830536 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [88ceac5d7] 2023-04-12 10:46:38 -0400
Branch: REL_15_STABLE [f4badbcf4] 2023-04-12 10:46:30 -0400
Branch: REL_14_STABLE [0dd55ef9b] 2023-04-12 10:46:30 -0400
Branch: REL_13_STABLE [96c698e3f] 2023-04-12 10:46:30 -0400
Branch: REL_12_STABLE [953ff99c2] 2023-04-12 10:46:30 -0400
Branch: REL_11_STABLE [60c8aeaf6] 2023-04-12 10:46:30 -0400
-->
<!-- pgdoc-cn_start sig_en=4158a786171bdd666cc0c555304cad00 sig_cn_org=9857c276ac5d1414d203cf98fa258b60 source=15.7 
     <para>
      Correctly update plan nodes' parallel-safety markings when moving
      initplans from one node to another (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      当将initplans从一个节点移动到另一个节点时，正确更新计划节点的并行安全标记（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=4158a786171bdd666cc0c555304cad00 -->

<!-- pgdoc-cn_start sig_en=6245abd5dd36cc5a69fc902a6279cda0 sig_cn_org=49938986ebb39b62f71b5407535ae1e6 source=15.7 
     <para>
      This planner oversight could lead to <quote>subplan was not
      initialized</quote> errors at runtime.
     </para>
________________________________________________________-->
     <para>
      这个计划者的疏忽可能导致运行时出现<quote>子计划未初始化</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=6245abd5dd36cc5a69fc902a6279cda0 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [684ffac8c] 2023-03-14 11:10:45 -0400
Branch: REL_15_STABLE [3b4594443] 2023-03-14 11:10:45 -0400
Branch: REL_14_STABLE [7c509f7e5] 2023-03-14 11:10:45 -0400
-->
<!-- pgdoc-cn_start sig_en=41c502af10bb9b080d7740820d49edaa sig_cn_org=3893085edc4fb57d05cab0861ca360c2 source=15.7 
     <para>
      Avoid failure with PlaceHolderVars in extended-statistics code
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免在扩展统计代码中使用PlaceHolderVars导致失败
      (Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=41c502af10bb9b080d7740820d49edaa -->

<!-- pgdoc-cn_start sig_en=e1a2c2a1147736f560f14de87ab166ab sig_cn_org=f038da2f1ed9a4d50898613efd0175e5 source=15.7 
     <para>
      Use of dependency-type extended statistics could fail with
      <quote>PlaceHolderVar found where not expected</quote>.
     </para>
________________________________________________________-->
     <para>
      使用依赖类型扩展统计信息可能会出现<quote>找到未预期的PlaceHolderVar</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=e1a2c2a1147736f560f14de87ab166ab -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [eb7d043c9] 2023-03-17 15:49:53 +1300
Branch: REL_15_STABLE [371e3daaa] 2023-03-17 15:51:00 +1300
-->
<!-- pgdoc-cn_start sig_en=d7ff1cdaf6b5843790f25188b31e332d sig_cn_org=c2c3ffcdb72a3ddb8ebf3f694c6fe566 source=15.7 
     <para>
      Fix incorrect tests for whether a qual clause applied to a subquery
      can be transformed into a window aggregate <quote>run
      condition</quote> within the subquery (David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复了关于是否可以将应用于子查询的qual子句转换为子查询内的窗口聚合<quote>运行条件</quote>的不正确测试（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=d7ff1cdaf6b5843790f25188b31e332d -->

<!-- pgdoc-cn_start sig_en=1a75852c02f1eeab09586096576ede08 sig_cn_org=b2011490aa276c61d91114c4011e6c9a source=15.7 
     <para>
      A SubPlan within such a clause would cause assertion failures or
      incorrect answers, as would some other unusual cases.
     </para>
________________________________________________________-->
     <para>
      在这样一个从句中的子计划会导致断言失败或不正确的答案，一些其他异常情况也会如此。
     </para>
<!-- pgdoc-cn_end sig_en=1a75852c02f1eeab09586096576ede08 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [836c31ba5] 2023-02-13 17:11:03 +1300
Branch: REL_15_STABLE [a9fa6d79a] 2023-02-13 17:10:31 +1300
Branch: REL_14_STABLE [4aa43ba21] 2023-02-13 17:09:55 +1300
Branch: REL_13_STABLE [301eb3ee4] 2023-02-13 17:09:26 +1300
Branch: REL_12_STABLE [ac55abd33] 2023-02-13 17:08:46 +1300
Branch: REL_11_STABLE [8d2a8581b] 2023-02-13 17:07:04 +1300
-->
<!-- pgdoc-cn_start sig_en=57ff10512e24b99e5d05d2fcb8e64ac9 sig_cn_org=e403009297e970893671c93be4db2b51 source=15.7 
     <para>
      Disable the inverse-transition optimization for window aggregates
      when the call contains sub-SELECTs (David Rowley)
     </para>
________________________________________________________-->
     <para>
      当调用包含子查询时，禁用窗口聚合中的逆转换优化（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=57ff10512e24b99e5d05d2fcb8e64ac9 -->

<!-- pgdoc-cn_start sig_en=762036af02d0aa152018f98820af60a6 sig_cn_org=bf02e250dda7788d29374e3bfc70c865 source=15.7 
     <para>
      This optimization requires that the aggregate's argument expressions
      have repeatable results, which might not hold for a sub-SELECT.
     </para>
________________________________________________________-->
     <para>
      这种优化要求聚合函数的参数表达式具有可重复的结果，而子查询可能不具备这种特性。
     </para>
<!-- pgdoc-cn_end sig_en=762036af02d0aa152018f98820af60a6 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [554841699] 2023-03-26 13:41:06 -0400
Branch: REL_15_STABLE [7c4873438] 2023-03-26 13:41:06 -0400
Branch: REL_14_STABLE [11213d446] 2023-03-26 13:41:06 -0400
Branch: REL_13_STABLE [1bbbe1460] 2023-03-26 13:41:06 -0400
Branch: REL_12_STABLE [ad5fe7420] 2023-03-26 13:41:06 -0400
Branch: REL_11_STABLE [ae320fc21] 2023-03-26 13:41:06 -0400
-->
<!-- pgdoc-cn_start sig_en=81128028bf0f06f8b5c3b214f218d737 sig_cn_org=0c72ec4ef19820e262e32ce683a26d54 source=15.7 
     <para>
      Fix oversights in execution of nested <literal>ARRAY[]</literal>
      constructs (Alexander Lakhin, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复嵌套<literal>ARRAY[]</literal>结构执行中的疏漏（Alexander Lakhin，Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=81128028bf0f06f8b5c3b214f218d737 -->

<!-- pgdoc-cn_start sig_en=fe69beecba06cf5087a8960aafc7ae76 sig_cn_org=90868ca356af5bb107aff3ff5dbf30bb source=15.7 
     <para>
      Correctly detect overflow of the total space needed for the result
      array, avoiding a possible crash due to undersized output
      allocation.  Also ensure that any trailing padding space in the
      result array is zeroed; while leaving garbage there is harmless for
      most purposes, it can result in odd behavior later.
     </para>
________________________________________________________-->
     <para>
      正确检测结果数组所需总空间的溢出，避免由于输出分配不足可能导致的崩溃。
      同时确保结果数组中任何尾部填充空间都被清零；虽然在大多数情况下保留垃圾数据是无害的，
      但它可能导致后续出现奇怪的行为。
     </para>
<!-- pgdoc-cn_end sig_en=fe69beecba06cf5087a8960aafc7ae76 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [064eb89e8] 2023-04-15 12:01:39 -0400
Branch: REL_15_STABLE [c53ed26ea] 2023-04-15 12:01:39 -0400
Branch: REL_14_STABLE [9b104a27c] 2023-04-15 12:01:39 -0400
Branch: REL_13_STABLE [7428aecdd] 2023-04-15 12:01:39 -0400
Branch: REL_12_STABLE [048caf8d7] 2023-04-15 12:01:39 -0400
-->
<!-- pgdoc-cn_start sig_en=3728c222c8eaf61ebd93931949247175 sig_cn_org=f05b714ca4310489c39df4e331bd5255 source=15.7 
     <para>
      Prevent crash when updating a field within an
      array-of-domain-over-composite-type column (Dmitry Dolgov)
     </para>
________________________________________________________-->
     <para>
      防止在更新一个数组域中的字段时崩溃（Dmitry Dolgov）
     </para>
<!-- pgdoc-cn_end sig_en=3728c222c8eaf61ebd93931949247175 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [e0693faf7] 2023-04-14 16:20:27 +1200
Branch: REL_15_STABLE [0c09160e1] 2023-04-14 16:21:07 +1200
Branch: REL_14_STABLE [ae85fb828] 2023-04-14 16:21:42 +1200
Branch: REL_13_STABLE [6848f0c67] 2023-04-14 16:22:11 +1200
Branch: REL_12_STABLE [0b2e77ce2] 2023-04-14 16:22:46 +1200
Branch: REL_11_STABLE [1c19e2863] 2023-04-14 16:23:11 +1200
-->
<!-- pgdoc-cn_start sig_en=366d88db4e32ed03ba3fdac9f14ebd6c sig_cn_org=2c7ee045fd46806b72de37ca67a1b62b source=15.7 
     <para>
      Fix partition pruning logic for partitioning on boolean columns
      (David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复基于布尔列进行分区的分区修剪逻辑（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=366d88db4e32ed03ba3fdac9f14ebd6c -->

<!-- pgdoc-cn_start sig_en=c8e066ec1d8ab4ef7fb21725f7d85d6a sig_cn_org=433053407e9c11048a1b0fc46e5d298f source=15.7 
     <para>
      Pruning with a condition like <literal>boolcol IS NOT TRUE</literal>
      was done incorrectly, leading to possibly not returning rows in
      which <literal>boolcol</literal> is NULL.  Also, the rather unlikely
      case of partitioning on <literal>NOT boolcol</literal> was handled
      incorrectly.
     </para>
________________________________________________________-->
     <para>
      使用类似<literal>boolcol IS NOT TRUE</literal>的条件修剪是错误的，可能导致不返回<literal>boolcol</literal>为NULL的行。
      此外，对<literal>NOT boolcol</literal>进行分区的情况处理也不正确。
     </para>
<!-- pgdoc-cn_end sig_en=c8e066ec1d8ab4ef7fb21725f7d85d6a -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [8d578b9b2] 2023-03-21 14:29:34 +1300
Branch: REL_15_STABLE [c03c6e8cf] 2023-03-21 14:32:14 +1300
Branch: REL_14_STABLE [1b9e42e82] 2023-03-21 14:37:33 +1300
Branch: REL_13_STABLE [6e94d62e3] 2023-03-21 14:38:59 +1300
Branch: REL_12_STABLE [44d44aa97] 2023-03-21 14:41:35 +1300
Branch: REL_11_STABLE [ef16d2724] 2023-03-21 14:43:07 +1300
-->
<!-- pgdoc-cn_start sig_en=7be6600d23a4f36f012a672837e290c3 sig_cn_org=8e5ee41ba3d111e7717d3b9c8c7324e3 source=15.7 
     <para>
      Fix race condition in per-batch cleanup during parallel hash join
      (Thomas Munro, Melanie Plageman)
     </para>
________________________________________________________-->
     <para>
      修复并行哈希连接中批量清理的竞争条件（Thomas Munro，Melanie Plageman）
     </para>
<!-- pgdoc-cn_end sig_en=7be6600d23a4f36f012a672837e290c3 -->

<!-- pgdoc-cn_start sig_en=ccb07f242fb2b9cbca4e2114317aa95d sig_cn_org=b18204501a7f9fd7f0e3b38c2329688e source=15.7 
     <para>
      A crash was possible given unlucky timing and
      <varname>parallel_leader_participation</varname>
      = <literal>off</literal> (which is not the default).
     </para>
________________________________________________________-->
     <para>
      在不幸的时机和<varname>parallel_leader_participation</varname>=<literal>off</literal>
	  （这不是默认设置）的情况下，可能会发生崩溃。。
     </para>
<!-- pgdoc-cn_end sig_en=ccb07f242fb2b9cbca4e2114317aa95d -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7fee7871b] 2023-03-06 18:31:27 -0500
Branch: REL_15_STABLE [70ef50954] 2023-03-06 18:31:16 -0500
Branch: REL_14_STABLE [1e05ea51d] 2023-03-06 18:31:16 -0500
Branch: REL_13_STABLE [4a94cbd02] 2023-03-06 18:31:16 -0500
Branch: REL_12_STABLE [23b75dd03] 2023-03-06 18:31:16 -0500
-->
<!-- pgdoc-cn_start sig_en=23e0014e8f1f21e0f034978bbf7c42c5 sig_cn_org=91373235c509c533a3f37ba18b0eb31a source=15.7 
     <para>
      Recalculate <literal>GENERATED</literal> columns after an
      EvalPlanQual check (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在EvalPlanQual检查之后重新计算<literal>GENERATED</literal>列（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=23e0014e8f1f21e0f034978bbf7c42c5 -->

<!-- pgdoc-cn_start sig_en=8d889572e7190d743b6fb3aba6c60586 sig_cn_org=687758975de1bd8f483c208fab76ee20 source=15.7 
     <para>
      In <literal>READ COMMITTED</literal> isolation mode, the effects of
      a row update might need to get reapplied to a newer version of the
      row than the query found originally.  If so, we need to recompute
      any <literal>GENERATED</literal> columns, in case they depend on
      columns that were changed by the concurrent update.
     </para>
________________________________________________________-->
     <para>
      在<literal>READ COMMITTED</literal>隔离模式下，行更新的影响可能需要重新应用到比查询最初找到的行更新版本更新的行上。
	  如果是这样，我们需要重新计算任何<literal>GENERATED</literal>列，以防它们依赖于被并发更新更改的列。
     </para>
<!-- pgdoc-cn_end sig_en=8d889572e7190d743b6fb3aba6c60586 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [579ee5df1] 2023-03-20 13:28:47 +1300
Branch: REL_15_STABLE [8de4660a5] 2023-03-20 13:30:15 +1300
Branch: REL_14_STABLE [f654f343c] 2023-03-20 13:30:55 +1300
-->
<!-- pgdoc-cn_start sig_en=2b15c6dc6c968276508c575c635d6dd5 sig_cn_org=47a832c7c2ea07b212bbcb948cb53c6d source=15.7 
     <para>
      Fix memory leak in Memoize plan execution (David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复Memoize计划执行中的内存泄漏（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=2b15c6dc6c968276508c575c635d6dd5 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [806fad757] 2023-04-25 09:42:19 +0900
Branch: REL_15_STABLE [aa6177c88] 2023-04-25 09:42:33 +0900
Branch: REL_14_STABLE [4cc56f8ed] 2023-04-25 09:42:36 +0900
-->
<!-- pgdoc-cn_start sig_en=60ef43124371e4aaea0f3949fcf80526 sig_cn_org=32d15c02a40ca4f62031f9529aee70eb source=15.7 
     <para>
      Fix buffer refcount leak when using batched inserts for a foreign
      table included in a partitioned tree (Alexander Pyhalov)
     </para>
________________________________________________________-->
     <para>
      修复了在使用批量插入时，包含在分区树中的外部表会出现缓冲区引用计数泄漏的问题（Alexander Pyhalov）
     </para>
<!-- pgdoc-cn_end sig_en=60ef43124371e4aaea0f3949fcf80526 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [720de00af] 2023-03-15 13:58:18 +1300
Branch: REL_15_STABLE [d9c9c43af] 2023-03-15 14:02:49 +1300
Branch: REL_14_STABLE [2bef57ee8] 2023-03-15 14:05:27 +1300
-->
<!-- pgdoc-cn_start sig_en=d2b6d40adc03610590a36406e0066094 sig_cn_org=a1e786bade55802cb9ed8a0ac618cd5b source=15.7 
     <para>
      Restore support for
      sub-millisecond <varname>vacuum_cost_delay</varname> settings
      (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      恢复对亚毫秒级<varname>vacuum_cost_delay</varname>设置的支持
      (Thomas Munro)
     </para>
<!-- pgdoc-cn_end sig_en=d2b6d40adc03610590a36406e0066094 -->
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [bfac8f8bc] 2023-04-25 13:54:10 +0200
Branch: REL_15_STABLE [0319b306e] 2023-04-25 13:54:10 +0200
Branch: REL_14_STABLE [0e8e5e856] 2023-04-25 13:54:10 +0200
Branch: REL_13_STABLE [b95f36f86] 2023-04-25 13:54:10 +0200
Branch: REL_12_STABLE [cba3c8f6d] 2023-04-25 13:54:10 +0200
Branch: REL_11_STABLE [0151d2c5f] 2023-04-25 13:54:10 +0200
-->
<!-- pgdoc-cn_start sig_en=e6267c3275d684de084adf59ae6e6a7c sig_cn_org=a11422f9589a1ed46b2d798767d4bd51 source=15.7 
     <para>
      Don't balance vacuum cost delay when a table has a
      per-relation <varname>vacuum_cost_delay</varname> setting of zero
      (Masahiko Sawada)
     </para>
________________________________________________________-->
     <para>
      当表级的<varname>vacuum_cost_delay</varname>设置为零时，不要平衡清理延迟成本（Masahiko Sawada）
     </para>
<!-- pgdoc-cn_end sig_en=e6267c3275d684de084adf59ae6e6a7c -->

<!-- pgdoc-cn_start sig_en=0460f25d128450bd48fbc8e400cbd451 sig_cn_org=2405310e91f9a5b1d388985affbc9a85 source=15.7 
     <para>
      Delay balancing is supposed to be disabled whenever autovacuum is
      processing a table with a
      per-relation <varname>vacuum_cost_delay</varname> setting, but this
      was done only for positive settings, not zero.
     </para>
________________________________________________________-->
     <para>
      延迟平衡应该在自动清理处理具有每个关系<varname>vacuum_cost_delay</varname>设置的表时禁用，
      但这仅适用于正值设置，而不是零。
     </para>
<!-- pgdoc-cn_end sig_en=0460f25d128450bd48fbc8e400cbd451 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [99be6feec] 2023-03-07 18:21:53 -0500
Branch: REL_15_STABLE [76d2177fb] 2023-03-07 18:21:53 -0500
Branch: REL_14_STABLE [9f1e51b59] 2023-03-07 18:21:37 -0500
Branch: REL_13_STABLE [695b34ab3] 2023-03-07 18:21:37 -0500
Branch: REL_12_STABLE [5a19da58e] 2023-03-07 18:21:37 -0500
Branch: REL_11_STABLE [721626cb5] 2023-03-07 18:21:37 -0500
-->
<!-- pgdoc-cn_start sig_en=ff462c76a6a8045534194b5af65b9894 sig_cn_org=fc01f21a203e27c50d043ea122e4d1b6 source=15.7 
     <para>
      Fix corner-case crashes when columns have been added to the end of a
      view (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复了当列被添加到视图的末尾时出现的极端情况崩溃(Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=ff462c76a6a8045534194b5af65b9894 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [87f3667ec] 2023-02-25 14:44:14 -0500
Branch: REL_15_STABLE [a033f9165] 2023-02-25 14:44:14 -0500
Branch: REL_14_STABLE [9eaba0602] 2023-02-25 14:44:14 -0500
Branch: REL_13_STABLE [1e199c259] 2023-02-25 14:44:14 -0500
Branch: REL_12_STABLE [904b171a4] 2023-02-25 14:44:14 -0500
Branch: REL_11_STABLE [ffec64ba8] 2023-02-25 14:44:14 -0500
-->
<!-- pgdoc-cn_start sig_en=81a34a716a3ae9a60db6221299fd8c90 sig_cn_org=0d5ef7d484740ecfed8fa34adfb893b5 source=15.7 
     <para>
      Repair rare failure of MULTIEXPR_SUBLINK subplans in partitioned
      updates (Andres Freund, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复分区更新中MULTIEXPR_SUBLINK子计划的罕见故障（Andres Freund，Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=81a34a716a3ae9a60db6221299fd8c90 -->

<!-- pgdoc-cn_start sig_en=a178f7d9da2f8e4823a49460ea4a2e38 sig_cn_org=6b9e1ddee8826b6a421065150abce833 source=15.7 
     <para>
      Use of the syntax <literal>INSERT ... ON CONFLICT DO UPDATE SET (c1,
      ...) = (SELECT ...)</literal> with a partitioned target table could
      result in failure if any child table is dissimilar from the parent
      (for example, different physical column order).
      This typically manifested as failure of consistency checks in the
      executor; but a crash or incorrect data updates are also possible.
     </para>
________________________________________________________-->
     <para>
      使用语法<literal>INSERT ... ON CONFLICT DO UPDATE SET (c1, ...) = (SELECT ...)</literal>
	  与分区目标表一起使用可能会导致失败，如果任何子表与父表不同（例如，物理列顺序不同）。
	  这通常表现为执行器中的一致性检查失败；但崩溃或不正确的数据更新也是可能的。
     </para>
<!-- pgdoc-cn_end sig_en=a178f7d9da2f8e4823a49460ea4a2e38 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [75c737636] 2023-02-23 10:53:01 +0000
Branch: REL_15_STABLE [940b54743] 2023-02-23 10:54:51 +0000
Branch: REL_14_STABLE [f0423bea7] 2023-02-23 10:55:48 +0000
Branch: REL_13_STABLE [226da3d47] 2023-02-23 10:56:41 +0000
Branch: REL_12_STABLE [98b83b734] 2023-02-23 10:57:46 +0000
Branch: REL_11_STABLE [e68b133c3] 2023-02-23 10:58:43 +0000
-->
<!-- pgdoc-cn_start sig_en=c6fd25c6554e2866100f1a8cadbde768 sig_cn_org=20b68815010d5a32a2d6ad59213e3380 source=15.7 
     <para>
      Fix handling of <literal>DEFAULT</literal> markers within a
      multi-row <literal>INSERT ... VALUES</literal> query on a view that
      has a <literal>DO ALSO INSERT ... SELECT</literal> rule (Dean
      Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复在视图上具有<literal>DO ALSO INSERT ... SELECT</literal>规则的多行<literal>INSERT ... VALUES</literal>查询中处理<literal>DEFAULT</literal>标记的问题（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=c6fd25c6554e2866100f1a8cadbde768 -->

<!-- pgdoc-cn_start sig_en=6b26973d3e0ebebadd7e5daa2304afcf sig_cn_org=1d9fe38b9bad94f356d5b3a5f0dcbf78 source=15.7 
     <para>
      Such cases typically failed with <quote>unrecognized node
      type</quote> errors or assertion failures.
     </para>
________________________________________________________-->
     <para>
      这种情况通常会导致<quote>未识别的节点类型</quote>错误或断言失败。
     </para>
<!-- pgdoc-cn_end sig_en=6b26973d3e0ebebadd7e5daa2304afcf -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [a7d71c41d] 2023-02-25 14:41:12 +0000
Branch: REL_15_STABLE [8e5b4e001] 2023-02-25 14:43:57 +0000
Branch: REL_14_STABLE [27ff93d18] 2023-02-25 14:44:49 +0000
Branch: REL_13_STABLE [39ad791e8] 2023-02-25 14:45:44 +0000
Branch: REL_12_STABLE [4fd093af7] 2023-02-25 14:47:03 +0000
Branch: REL_11_STABLE [79f194cc0] 2023-02-25 14:48:08 +0000
-->
<!-- pgdoc-cn_start sig_en=bc311f5b01958ae4752b083377a9cfb4 sig_cn_org=85d6752d822bfa663753a1f009dc6631 source=15.7 
     <para>
      Support references to <literal>OLD</literal>
      and <literal>NEW</literal> within subqueries in rule actions
      (Dean Rasheed, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      支持在规则操作中的子查询中引用<literal>OLD</literal>和<literal>NEW</literal>
      （Dean Rasheed, Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=bc311f5b01958ae4752b083377a9cfb4 -->

<!-- pgdoc-cn_start sig_en=5a911e965d65ec6a68363d0ae25acca2 sig_cn_org=c729201dfa6736714a7f6df356c99208 source=15.7 
     <para>
      Such references are really lateral references, but the server could
      crash if the subquery wasn't explicitly marked
      with <literal>LATERAL</literal>.  Arrange to do that implicitly when
      necessary.
     </para>
________________________________________________________-->
     <para>
      这样的引用实际上是横向引用，但如果子查询没有明确标记为<literal>LATERAL</literal>，服务器可能会崩溃。在必要时隐式地安排这样做。
     </para>
<!-- pgdoc-cn_end sig_en=5a911e965d65ec6a68363d0ae25acca2 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [393430f57] 2023-02-17 16:40:34 -0500
Branch: REL_15_STABLE [c8a5f1685] 2023-02-17 16:40:34 -0500
Branch: REL_14_STABLE [14345f3c6] 2023-02-17 16:40:34 -0500
Branch: REL_13_STABLE [4efb4f0d4] 2023-02-17 16:40:34 -0500
Branch: REL_12_STABLE [3dd287c14] 2023-02-17 16:40:34 -0500
Branch: REL_11_STABLE [df931e9ab] 2023-02-17 16:40:34 -0500
-->
<!-- pgdoc-cn_start sig_en=0b700542b22e9afcf18c7f0ca71d9ab2 sig_cn_org=00116c176718c952fdb7b07e2e1137e6 source=15.7 
     <para>
      When decompiling a rule or SQL function body
      containing <command>INSERT</command>/<command>UPDATE</command>/<command>DELETE</command>
      within <command>WITH</command>, take care to print the correct alias
      for the target table (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      当反编译包含<command>INSERT</command>/<command>UPDATE</command>/<command>DELETE</command>的规则或SQL函数体时，
      在<command>WITH</command>中，务必注意打印目标表的正确别名（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=0b700542b22e9afcf18c7f0ca71d9ab2 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [47c0accbe] 2023-03-06 15:07:15 +1300
Branch: REL_15_STABLE [055990904] 2023-03-06 16:05:47 +1300
Branch: REL_14_STABLE [e9051ecd5] 2023-03-06 16:17:22 +1300
Branch: REL_13_STABLE [a0f55fc86] 2023-03-06 16:28:34 +1300
Branch: REL_12_STABLE [afa122e41] 2023-03-06 16:41:34 +1300
Branch: master [65e388d41] 2023-03-09 16:33:24 +1300
Branch: REL_15_STABLE [af397c6c2] 2023-03-09 16:56:51 +1300
Branch: REL_14_STABLE [d811d74be] 2023-03-09 16:57:11 +1300
Branch: REL_13_STABLE [ae632f7a3] 2023-03-09 17:09:57 +1300
Branch: REL_12_STABLE [e30fd0942] 2023-03-09 17:25:20 +1300
Branch: REL_11_STABLE [d1c0f81e7] 2023-03-09 17:26:06 +1300
-->
<!-- pgdoc-cn_start sig_en=2eedb269d6e67ae3f9dc4e4695a9d167 sig_cn_org=f43d9ddfffb6eefe39dd29d9d7bb97ee source=15.7 
     <para>
      Fix glitches in <literal>SERIALIZABLE READ ONLY</literal>
      optimization (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      修复<literal>SERIALIZABLE READ ONLY</literal>优化中的错误（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=2eedb269d6e67ae3f9dc4e4695a9d167 -->

<!-- pgdoc-cn_start sig_en=b0837d47be51b37543673cec5e89fa55 sig_cn_org=ca708c7935ca0c83e19ca38eae10cd1e source=15.7 
     <para>
      Transactions already marked as <quote>doomed</quote> confused the
      safe-snapshot optimization for <literal>SERIALIZABLE READ
      ONLY</literal> transactions.  The optimization was unnecessarily
      skipped in some cases.  In other cases an assertion failure occurred
      (but there was no problem in non-assert builds).
     </para>
________________________________________________________-->
     <para>
      已标记为<quote>doomed</quote>的事务混淆了对<literal>SERIALIZABLE READ
      ONLY</literal>事务的安全快照优化。在某些情况下，该优化被不必要地跳过。
      在其他情况下，会发生断言失败（但在非断言构建中没有问题）。
</para>
<!-- pgdoc-cn_end sig_en=b0837d47be51b37543673cec5e89fa55 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [05172f1f3] 2023-02-23 15:40:42 -0500
Branch: REL_15_STABLE [cef1c9c0c] 2023-02-23 15:40:28 -0500
Branch: REL_14_STABLE [0f78df719] 2023-02-23 15:40:28 -0500
Branch: REL_13_STABLE [861e9e486] 2023-02-23 15:40:28 -0500
Branch: REL_12_STABLE [95558bc8f] 2023-02-23 15:40:28 -0500
Branch: REL_11_STABLE [44dbc960f] 2023-02-23 15:40:28 -0500
-->
<!-- pgdoc-cn_start sig_en=2f28da8dfaa1ded1908bd837d54edb9b sig_cn_org=728afe1a857ce601b7c62501ebdfe6f9 source=15.7 
     <para>
      Avoid leaking cache callback slots in
      the <literal>pgoutput</literal> logical decoding plugin (Shi Yu)
     </para>
________________________________________________________-->
     <para>
      避免在<literal>pgoutput</literal>逻辑解码插件中泄漏缓存回调槽（Shi Yu）
     </para>
<!-- pgdoc-cn_end sig_en=2f28da8dfaa1ded1908bd837d54edb9b -->

<!-- pgdoc-cn_start sig_en=2aefa6165b8b4d4c54029856a9778b00 sig_cn_org=130d5e648533c43adc526fc900dea40e source=15.7 
     <para>
      Multiple cycles of starting up and shutting down the plugin within a
      single session would eventually lead to an <quote>out of
      relcache_callback_list slots</quote> error.
     </para>
________________________________________________________-->
     <para>
      在单个会话中多次启动和关闭插件最终会导致一个<quote>out of relcache_callback_list slots</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=2aefa6165b8b4d4c54029856a9778b00 -->
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [cd115c353] 2023-04-23 13:58:41 +0300
Branch: REL_15_STABLE [6e7361c85] 2023-04-23 14:00:06 +0300
Branch: REL_14_STABLE [9ef5a3583] 2023-04-23 14:00:13 +0300
Branch: REL_13_STABLE [02191136c] 2023-04-23 14:00:16 +0300
-->
<!-- pgdoc-cn_start sig_en=ab6b40a3c4f2a0f4800274c134b2ec67 sig_cn_org=aa3b5a81e9abbb27fe31c938b0b4590b source=15.7 
     <para>
      Avoid unnecessary calls to custom validators for index operator
      class options (Alexander Korotkov)
     </para>
________________________________________________________-->
     <para>
      避免对索引操作符类选项进行不必要的自定义验证调用（Alexander Korotkov）
     </para>
<!-- pgdoc-cn_end sig_en=ab6b40a3c4f2a0f4800274c134b2ec67 -->

<!-- pgdoc-cn_start sig_en=f632166d442942e65913083666bfb878 sig_cn_org=c2c4ddd380586642ff07a73fe962d5b3 source=15.7 
     <para>
      This change fixes some cases where an unexpected error was thrown.
     </para>
________________________________________________________-->
     <para>
      这个更改修复了一些意外错误被抛出的情况。
     </para>
<!-- pgdoc-cn_end sig_en=f632166d442942e65913083666bfb878 -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [e72910f80] 2023-02-19 01:46:58 +0100
Branch: REL_15_STABLE [305d89ad9] 2023-02-19 01:48:04 +0100
Branch: REL_14_STABLE [f3daa3116] 2023-02-19 01:48:22 +0100
-->
<!-- pgdoc-cn_start sig_en=81a6e7f41162ddc12a311c9743932571 sig_cn_org=903e6fb13e7ab35adea7d78a733814ba source=15.7 
     <para>
      Avoid useless work while scanning a multi-column BRIN index with
      multiple scan keys (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      在扫描具有多个扫描键的多列BRIN索引时避免无用的工作（Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=81a6e7f41162ddc12a311c9743932571 -->

<!-- pgdoc-cn_start sig_en=5ba32e0ed77c91db4783ec9c5c15a256 sig_cn_org=05fa26a73d4e4592780bfbe77dbbd70a source=15.7 
     <para>
      The existing code effectively considered only the last scan key
      while deciding whether a range matched, thus usually scanning more
      of the index than it needed to.
     </para>
________________________________________________________-->
     <para>
      现有代码在决定范围是否匹配时，实际上只考虑了最后一个扫描键，因此通常会扫描比实际需要更多的索引。
     </para>
<!-- pgdoc-cn_end sig_en=5ba32e0ed77c91db4783ec9c5c15a256 -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [e85831268] 2023-03-20 10:24:14 +0100
Branch: REL_15_STABLE [0c7726c28] 2023-03-20 10:20:35 +0100
Branch: REL_14_STABLE [6a78a42fe] 2023-03-20 10:16:54 +0100
-->
<!-- pgdoc-cn_start sig_en=c455378247001d603c7798f25ef263c7 sig_cn_org=09c2250be4976c210ea5e24490a130be source=15.7 
     <para>
      Fix netmask handling in BRIN inet_minmax_multi_ops opclass
      (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      修复BRIN inet_minmax_multi_ops操作类中的子网掩码处理（Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=c455378247001d603c7798f25ef263c7 -->

<!-- pgdoc-cn_start sig_en=d1403ebfdafa45a6d505a85ec1c16016 sig_cn_org=457b3d482676084420cc7388527c23a4 source=15.7 
     <para>
      This error triggered an assertion failure in assert-enabled builds,
      but is mostly harmless in production builds.
     </para>
________________________________________________________-->
     <para>
      这个错误在启用了断言的构建中触发了断言失败，但在生产构建中大部分是无害的。
     </para>
<!-- pgdoc-cn_end sig_en=d1403ebfdafa45a6d505a85ec1c16016 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8e5eef50c] 2023-03-29 11:31:30 -0400
Branch: REL_15_STABLE [2dc77adc7] 2023-03-29 11:31:30 -0400
Branch: REL_14_STABLE [a1904c9ce] 2023-03-29 11:31:30 -0400
Branch: REL_13_STABLE [2adb6adad] 2023-03-29 11:31:30 -0400
Branch: REL_12_STABLE [d2a1d4b19] 2023-03-29 11:31:30 -0400
Branch: REL_11_STABLE [b5c6776c1] 2023-03-29 11:31:30 -0400
-->
<!-- pgdoc-cn_start sig_en=f05669849441abaf51029e40f091c4f2 sig_cn_org=5ee45dd2420fb64551fd6444a8ac4727 source=15.7 
     <para>
      Fix dereference of dangling pointer during buffering build of a GiST
      index (Alexander Lakhin)
     </para>
________________________________________________________-->
     <para>
      修复了在构建GiST索引的缓冲时解除悬空指针的问题（Alexander Lakhin）
     </para>
<!-- pgdoc-cn_end sig_en=f05669849441abaf51029e40f091c4f2 -->

<!-- pgdoc-cn_start sig_en=07bae4e2fce95d7d449c232d82fac1bd sig_cn_org=fa9ef6c9c01cc785db8c0cc8d811c677 source=15.7 
     <para>
      This error seems to usually be harmless in production builds, as the
      fetched value is noncritical; but in principle it could cause a
      server crash.
     </para>
________________________________________________________-->
     <para>
      这个错误在生产版本中通常是无害的，因为获取的值是非关键的；但原则上它可能导致服务器崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=07bae4e2fce95d7d449c232d82fac1bd -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [adedf54e6] 2023-03-23 11:58:36 +0530
Branch: REL_15_STABLE [b6bf90edc] 2023-03-23 11:46:16 +0530
Branch: REL_14_STABLE [9dac02c77] 2023-03-23 11:32:22 +0530
Branch: REL_13_STABLE [be52fff91] 2023-03-23 11:21:13 +0530
Branch: REL_12_STABLE [0f2d4adbf] 2023-03-23 11:08:38 +0530
Branch: master [b797def59] 2023-03-21 09:47:21 +0530
Branch: REL_15_STABLE [3c12407f4] 2023-03-21 09:40:41 +0530
Branch: REL_14_STABLE [65ead7696] 2023-03-21 09:18:51 +0530
Branch: REL_13_STABLE [751d6676d] 2023-03-21 09:07:37 +0530
Branch: REL_12_STABLE [fc63e6ba8] 2023-03-21 08:50:23 +0530
Branch: REL_11_STABLE [4cdaea7a2] 2023-03-21 08:39:00 +0530
-->
<!-- pgdoc-cn_start sig_en=b8ab655b1306715ae6e66c07fdfbe702 sig_cn_org=ff3f8687dc273b99565260e6b9c12faf source=15.7 
     <para>
      Ignore dropped columns and generated columns during logical
      replication of an update or delete action (Onder Kalaci, Shi Yu)
     </para>
________________________________________________________-->
     <para>
      在逻辑复制更新或删除操作时，忽略被删除的列和生成的列（Onder Kalaci，Shi Yu）
     </para>
<!-- pgdoc-cn_end sig_en=b8ab655b1306715ae6e66c07fdfbe702 -->

<!-- pgdoc-cn_start sig_en=977c8a5635b16888e7bca629171c2a92 sig_cn_org=f1e02510e1d74161b9b173ffe9057391 source=15.7 
     <para>
      Replication with the <literal>REPLICA IDENTITY FULL</literal> option
      failed if the table contained such columns.
     </para>
________________________________________________________-->
     <para>
      使用<literal>REPLICA IDENTITY FULL</literal>选项进行复制失败，如果表中包含这样的列。
     </para>
<!-- pgdoc-cn_end sig_en=977c8a5635b16888e7bca629171c2a92 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [58f5edf84] 2023-05-05 21:25:44 +0900
Branch: REL_15_STABLE [d31dab9a5] 2023-05-05 21:25:50 +0900
Branch: REL_14_STABLE [ae4ffa722] 2023-05-05 21:25:56 +0900
Branch: REL_13_STABLE [cedcc4191] 2023-05-05 21:26:02 +0900
-->
<!-- pgdoc-cn_start sig_en=19c5f15015f2dd6055a4efca3c9933e4 sig_cn_org=3908525df0bce1bd3b41eee9ed7b6dd8 source=15.7 
     <para>
      Correct the name of the wait event for SLRU buffer I/O for commit
      timestamps (Alexander Lakhin)
     </para>
________________________________________________________-->
     <para>
      修正提交时间戳的SLRU缓冲区I/O的等待事件名称（Alexander Lakhin）
     </para>
<!-- pgdoc-cn_end sig_en=19c5f15015f2dd6055a4efca3c9933e4 -->

<!-- pgdoc-cn_start sig_en=43e206234c6a6c67fe5b784f6940ff23 sig_cn_org=77ecf88549d1ba3946c2745f24b656d5 source=15.7 
     <para>
      This wait event is named <literal>CommitTsBuffer</literal> according
      to the documentation, but the code had it
      as <literal>CommitTSBuffer</literal>.  Change the code to match the
      documentation, as that way is more consistent with the naming of
      related wait events.
     </para>
________________________________________________________-->
     <para>
      这个等待事件被称为<literal>CommitTsBuffer</literal>，但根据文档，代码中将其命名为
      <literal>CommitTSBuffer</literal>。将代码更改为与文档匹配，因为这种方式更符合
      相关等待事件的命名方式。
     </para>
<!-- pgdoc-cn_end sig_en=43e206234c6a6c67fe5b784f6940ff23 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [84cc14267] 2023-04-26 07:10:06 +0900
Branch: REL_15_STABLE [1ed1b84bd] 2023-04-26 07:30:42 +0900
Branch: REL_14_STABLE [aeb6f4b3b] 2023-04-26 07:30:47 +0900
-->
<!-- pgdoc-cn_start sig_en=8e9d92a52b9ef8dae4dae725d8369ba8 sig_cn_org=2ec86741473ea2454b717f29ff1db297 source=15.7 
     <para>
      Re-activate reporting of wait event <literal>SLRUFlushSync</literal>
      (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      重新激活等待事件<literal>SLRUFlushSync</literal>的报告（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=8e9d92a52b9ef8dae4dae725d8369ba8 -->

<!-- pgdoc-cn_start sig_en=7ad95df645e7fb05a8c226f72d5d55f4 sig_cn_org=1ed1e6b9a2fe9e1bfd677d5b43892da5 source=15.7 
     <para>
      Reporting of this type of wait was accidentally removed in code
      refactoring.
     </para>
________________________________________________________-->
     <para>
      报告这种类型的等待在代码重构中被意外删除了。
     </para>
<!-- pgdoc-cn_end sig_en=7ad95df645e7fb05a8c226f72d5d55f4 -->
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [b72623671] 2023-04-27 14:31:17 -0700
Branch: REL_15_STABLE [c98b06e2f] 2023-04-27 14:31:33 -0700
Branch: REL_14_STABLE [137003036] 2023-04-27 14:32:40 -0700
Branch: REL_13_STABLE [be40dd63e] 2023-04-27 14:32:55 -0700
-->
<!-- pgdoc-cn_start sig_en=eb82150d8a9233822d5306fa176633c4 sig_cn_org=8f909b0d01d5868136482bd160a78271 source=15.7 
     <para>
      Avoid possible underflow when calculating how many WAL segments to
      keep (Kyotaro Horiguchi)
     </para>
________________________________________________________-->
     <para>
      避免在计算要保留多少WAL段时可能出现的下溢（Kyotaro Horiguchi）
     </para>
<!-- pgdoc-cn_end sig_en=eb82150d8a9233822d5306fa176633c4 -->

<!-- pgdoc-cn_start sig_en=fecfc861418d2f0f016cd8824471be18 sig_cn_org=e2e85eb014183275d7aaaf2369df0bdf source=15.7 
     <para>
      This could result in not honoring <varname>wal_keep_size</varname>
      accurately.
     </para>
________________________________________________________-->
     <para>
      这可能导致无法准确地遵守<varname>wal_keep_size</varname>。
     </para>
<!-- pgdoc-cn_end sig_en=fecfc861418d2f0f016cd8824471be18 -->
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [8a2f783cc] 2023-02-06 10:51:08 -0500
Branch: REL_15_STABLE [ecb01e6eb] 2023-02-10 16:27:05 -0500
-->
<!-- pgdoc-cn_start sig_en=8d6458cf0e7dea662dad17176e4ced54 sig_cn_org=7d0f396ebcb3ef0b735b0d9f5b0bf2e5 source=15.7 
     <para>
      Disable startup progress reporting overhead in standby mode
      (Bharath Rupireddy)
     </para>
________________________________________________________-->
     <para>
      在待机模式下禁用启动进度报告开销
      (Bharath Rupireddy)
     </para>
<!-- pgdoc-cn_end sig_en=8d6458cf0e7dea662dad17176e4ced54 -->

<!-- pgdoc-cn_start sig_en=d2b3b44ea727d8c6a56c89a166fba811 sig_cn_org=86eb424acd2cd6b8a67769ab718c058f source=15.7 
     <para>
      In standby mode, we don't actually report progress of recovery,
      but we were doing work to track it anyway.
     </para>
________________________________________________________-->
     <para>
      在待机模式下，我们实际上不会报告恢复的进度，但我们仍在努力追踪它。
     </para>
<!-- pgdoc-cn_end sig_en=d2b3b44ea727d8c6a56c89a166fba811 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [9244c11af] 2023-02-15 10:12:16 +0900
Branch: REL_15_STABLE [5fd61055e] 2023-02-15 10:12:31 +0900
Branch: REL_14_STABLE [864f80fea] 2023-02-15 10:12:33 +0900
Branch: REL_13_STABLE [2eb8e54cc] 2023-02-15 10:12:36 +0900
Branch: REL_12_STABLE [a40e7b75e] 2023-02-15 10:12:38 +0900
Branch: REL_11_STABLE [88d606f7c] 2023-02-15 10:12:40 +0900
-->
<!-- pgdoc-cn_start sig_en=8b374eafee5ec76195b9e80f520093c5 sig_cn_org=d29bd95e6c27e4e81acc25cd05b11122 source=15.7 
     <para>
      Support RSA-PSS certificates with SCRAM-SHA-256 channel binding
      (Jacob Champion, Heikki Linnakangas)
     </para>
________________________________________________________-->
     <para>
      支持具有SCRAM-SHA-256通道绑定的RSA-PSS证书（Jacob Champion，Heikki Linnakangas）
     </para>
<!-- pgdoc-cn_end sig_en=8b374eafee5ec76195b9e80f520093c5 -->

<!-- pgdoc-cn_start sig_en=9f393b0afdecf0e7a3c40688b0b08732 sig_cn_org=68756d5d84ffda2323ab92ca693f82f6 source=15.7 
     <para>
      This feature requires building with OpenSSL 1.1.1 or newer.  Both
      the server and <application>libpq</application> are affected.
     </para>
________________________________________________________-->
     <para>
      这个功能需要使用OpenSSL 1.1.1或更新版本进行构建。服务器和<application>libpq</application>都受到影响。
     </para>
<!-- pgdoc-cn_end sig_en=9f393b0afdecf0e7a3c40688b0b08732 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [d41a178b3] 2023-03-15 13:24:47 +1300
Branch: REL_15_STABLE [06066915d] 2023-03-15 13:25:56 +1300
Branch: REL_14_STABLE [9b6e0b9c3] 2023-03-15 13:30:58 +1300
Branch: REL_13_STABLE [9f1c64018] 2023-03-15 13:31:34 +1300
Branch: REL_12_STABLE [836288427] 2023-03-15 13:32:21 +1300
Branch: REL_11_STABLE [5ff8e69d8] 2023-03-15 13:32:41 +1300
Branch: master [6a9229da6] 2023-03-17 10:44:46 +1300
Branch: REL_15_STABLE [75e7378f6] 2023-03-17 10:45:20 +1300
Branch: REL_14_STABLE [00fc4b3a3] 2023-03-17 09:52:45 +1300
Branch: REL_13_STABLE [798dae9f6] 2023-03-17 09:54:03 +1300
Branch: REL_12_STABLE [6f508b8bc] 2023-03-17 09:54:51 +1300
Branch: REL_11_STABLE [9d6c34397] 2023-03-17 09:58:08 +1300
Branch: master [10b6745d3] 2023-03-17 14:44:12 +1300
Branch: REL_15_STABLE [e8a774d00] 2023-03-17 14:46:03 +1300
Branch: REL_14_STABLE [1c0d4affa] 2023-03-17 14:46:50 +1300
Branch: REL_13_STABLE [77a8133c9] 2023-03-17 14:47:16 +1300
Branch: REL_12_STABLE [8fcd1517f] 2023-03-17 14:47:38 +1300
Branch: REL_11_STABLE [b23f2a729] 2023-03-17 14:48:08 +1300
-->
<!-- pgdoc-cn_start sig_en=e5eb785a8e47d9f86ed381c0ffd7014f sig_cn_org=7b5faaa819372d2ceb48e7c68912ec6d source=15.7 
     <para>
      Avoid race condition with process ID tracking on Windows (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      避免在Windows上使用进程ID跟踪引起的竞态条件（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=e5eb785a8e47d9f86ed381c0ffd7014f -->

<!-- pgdoc-cn_start sig_en=1a48187289a148a4375b840240b5d97b sig_cn_org=622bc2c106e8abb61cc566623955a235 source=15.7 
     <para>
      The operating system could recycle a PID before the postmaster
      observed that that child process was gone.  This could lead to
      tracking more than one child with the same PID, resulting in
      confusion.
     </para>
________________________________________________________-->
     <para>
      操作系统可能在postmaster观察到子进程已经消失之前回收一个PID。这可能导致跟踪多个具有相同PID的子进程，从而导致混乱。
     </para>
<!-- pgdoc-cn_end sig_en=1a48187289a148a4375b840240b5d97b -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [e35ded295] 2023-04-20 10:34:46 +1200
Branch: REL_15_STABLE [63a03aea6] 2023-04-21 10:02:25 +1200
-->
<!-- pgdoc-cn_start sig_en=86ddc04af7a70cfebcafcd718dfe2a3a sig_cn_org=6be70d694c320480b1ba09896a00fffb source=15.7 
     <para>
      Fix <function>list_copy_head()</function> to work correctly on an
      empty List (David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复<function>list_copy_head()</function>在空列表上的正确工作（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=86ddc04af7a70cfebcafcd718dfe2a3a -->

<!-- pgdoc-cn_start sig_en=496aec4e828ecf91323f9014cb52f68a sig_cn_org=7e0d204414ea2a6904258c7baaa326f8 source=15.7 
     <para>
      This case is not known to be reached by any
      core <productname>PostgreSQL</productname> code, but extensions
      might rely on it working.
     </para>
________________________________________________________-->
     <para>
      已知没有任何核心<productname>PostgreSQL</productname>代码会涉及这种情况，但扩展可能依赖于其正常工作。
     </para>
<!-- pgdoc-cn_end sig_en=496aec4e828ecf91323f9014cb52f68a -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [d0460a31d] 2023-02-22 13:23:09 +0000
Branch: REL_15_STABLE [576b25bfd] 2023-02-22 13:24:51 +0000
Branch: REL_14_STABLE [482ab3e4f] 2023-02-22 13:26:20 +0000
Branch: REL_13_STABLE [906356cf6] 2023-02-22 13:27:29 +0000
Branch: REL_12_STABLE [52dbd9f84] 2023-02-22 13:28:30 +0000
Branch: REL_11_STABLE [83a54d966] 2023-02-22 13:29:39 +0000
-->
<!-- pgdoc-cn_start sig_en=134b96e15f8cd8833109153fe145b311 sig_cn_org=ceb06098e07ea92dc2665c0b605ea255 source=15.7 
     <para>
      Add missing cases to <function>SPI_result_code_string()</function>
      (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      为<function>SPI_result_code_string()</function>添加缺失的情况（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=134b96e15f8cd8833109153fe145b311 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b3e184a5d] 2023-02-21 18:48:15 -0500
Branch: REL_15_STABLE [f6a55c1d5] 2023-02-21 18:47:46 -0500
Branch: REL_14_STABLE [dc44180f6] 2023-02-21 18:47:47 -0500
Branch: REL_13_STABLE [99e74cd23] 2023-02-21 18:47:47 -0500
Branch: REL_12_STABLE [463bef383] 2023-02-21 18:47:47 -0500
Branch: REL_11_STABLE [21bd818d0] 2023-02-21 18:47:47 -0500
-->
<!-- pgdoc-cn_start sig_en=6e09ff11f5e8a3b93e40aefd59f4779e sig_cn_org=5fa8a3e2bf787f41014b80d57a17875b source=15.7 
     <para>
      Fix erroneous Valgrind markings
      in <function>AllocSetRealloc()</function> (Karina Litskevich)
     </para>
________________________________________________________-->
     <para>
      修复<function>AllocSetRealloc()</function>（Karina Litskevich）中Valgrind标记错误。
     </para>
<!-- pgdoc-cn_end sig_en=6e09ff11f5e8a3b93e40aefd59f4779e -->

<!-- pgdoc-cn_start sig_en=4bc9e44033f54afb45ba9a6f806235f2 sig_cn_org=adfcb00019663c04d430ef79159e5206 source=15.7 
     <para>
      In the unusual case where the size of a large (&gt;8kB) palloc chunk
      is decreased, a Valgrind-aware build would mismark the defined-ness
      state of the memory released from the chunk, possibly causing
      incorrect results during Valgrind testing.
     </para>
________________________________________________________-->
     <para>
      在一个不寻常的情况下，当一个大的（&gt;8kB）palloc块的大小被减小时，
      一个Valgrind-aware构建会错误地标记释放的内存的定义状态，可能导致在Valgrind测试期间出现不正确的结果。
     </para>
<!-- pgdoc-cn_end sig_en=4bc9e44033f54afb45ba9a6f806235f2 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [0d3b49d4a] 2023-02-22 10:51:34 +0000
Branch: REL_15_STABLE [d8c3b65db] 2023-02-22 10:54:57 +0000
-->
<!-- pgdoc-cn_start sig_en=f03e5a3ec58fd2886e20ff593a4b3951 sig_cn_org=12dc171b9da59395968faa4b79fb1bf3 source=15.7 
     <para>
      Fix assertion failure for <command>MERGE</command> into a
      partitioned table with row-level security enabled (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复了在启用了行级安全性的分区表中将<command>MERGE</command>操作合并时的断言失败问题（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=f03e5a3ec58fd2886e20ff593a4b3951 -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [7fe1aa991] 2023-02-22 15:24:18 +0100
Branch: REL_15_STABLE [949ac32e1] 2023-02-22 16:48:30 +0100
Branch: REL_14_STABLE [8b9cbd42b] 2023-02-22 16:25:45 +0100
Branch: REL_13_STABLE [4df581fa0] 2023-02-22 16:09:30 +0100
Branch: REL_12_STABLE [497f863f0] 2023-02-22 15:50:37 +0100
Branch: REL_11_STABLE [8de91ebf2] 2023-02-22 15:35:19 +0100
-->
<!-- pgdoc-cn_start sig_en=ef74aa0500fbd4cfc051a8834321d3a2 sig_cn_org=8d4d3ac487372c5e8f0c4a49a54a7480 source=15.7 
     <para>
      Avoid assertion failure when decoding a transactional logical
      replication message (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      避免在解码事务性逻辑复制消息时出现断言失败（Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=ef74aa0500fbd4cfc051a8834321d3a2 -->
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [c04c6c5d6] 2023-04-21 08:19:41 -0700
Branch: REL_15_STABLE [109363de0] 2023-04-21 08:20:17 -0700
Branch: REL_14_STABLE [dde926b0f] 2023-04-21 08:20:32 -0700
Branch: REL_13_STABLE [79a66c617] 2023-04-21 08:20:47 -0700
Branch: REL_12_STABLE [5bcb15b81] 2023-04-21 08:21:04 -0700
Branch: REL_11_STABLE [106a1bf82] 2023-04-21 08:21:18 -0700
-->
<!-- pgdoc-cn_start sig_en=8e3e4635fbb9212fdd24b8817ed63c6f sig_cn_org=a05f5d6445815c21bab7513ebca8111a source=15.7 
     <para>
      Avoid locale sensitivity when processing regular expression escapes
      (Jeff Davis)
     </para>
________________________________________________________-->
     <para>
      在处理正则表达式转义字符时避免区域敏感性（Jeff Davis）
     </para>
<!-- pgdoc-cn_end sig_en=8e3e4635fbb9212fdd24b8817ed63c6f -->

<!-- pgdoc-cn_start sig_en=b89962a5dfa99daf8d54cd1c7a645c41 sig_cn_org=89a28597266e2a8db539121c114518bd source=15.7 
     <para>
      A backslash followed by a non-ASCII character could sometimes cause
      an assertion failure, depending on the prevailing locale.
     </para>
________________________________________________________-->
     <para>
      反斜杠后跟一个非ASCII字符有时可能会导致断言失败，这取决于当前的区域设置。
     </para>
<!-- pgdoc-cn_end sig_en=b89962a5dfa99daf8d54cd1c7a645c41 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3e383f9b6] 2023-04-17 14:22:26 -0400
Branch: REL_15_STABLE [2207df7c3] 2023-04-17 14:22:06 -0400
Branch: REL_14_STABLE [72a914e9f] 2023-04-17 14:22:06 -0400
Branch: REL_13_STABLE [86874a6df] 2023-04-17 14:22:06 -0400
Branch: REL_12_STABLE [9b0c1f213] 2023-04-17 14:22:06 -0400
Branch: REL_11_STABLE [c796d7296] 2023-04-17 14:22:06 -0400
-->
<!-- pgdoc-cn_start sig_en=ceda8b341a9c0e99a77aaec62bd3416d sig_cn_org=d4050c4169d77496acdd15e75f458fb5 source=15.7 
     <para>
      Avoid trying to write an empty WAL record
      in <function>log_newpage_range()</function> when the last few pages
      in the specified range are empty (Matthias van de Meent)
     </para>
________________________________________________________-->
     <para>
      避免在指定范围的最后几页为空时，在<function>log_newpage_range()</function>中尝试写入空的WAL记录（Matthias van de Meent）
     </para>
<!-- pgdoc-cn_end sig_en=ceda8b341a9c0e99a77aaec62bd3416d -->

<!-- pgdoc-cn_start sig_en=e3e08e97d6b271477a6cb7adf2217060 sig_cn_org=b1be5f88627775859b2efc5d01aed4cf source=15.7 
     <para>
      It is not entirely clear whether this case is reachable in released
      branches, but if it is then an assertion failure could occur.
     </para>
________________________________________________________-->
     <para>
      目前尚不清楚这种情况是否可以在已发布的分支中达到，但如果可以的话，可能会发生断言失败。
     </para>
<!-- pgdoc-cn_end sig_en=e3e08e97d6b271477a6cb7adf2217060 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [441ee1677] 2023-04-24 14:19:46 -0400
Branch: REL_15_STABLE [c1598d85f] 2023-04-24 14:19:46 -0400
Branch: REL_14_STABLE [2ba890ce7] 2023-04-24 14:19:46 -0400
Branch: REL_13_STABLE [bfa691087] 2023-04-24 14:19:46 -0400
Branch: REL_12_STABLE [ee71cad9a] 2023-04-24 14:19:46 -0400
-->
<!-- pgdoc-cn_start sig_en=ba024a52e6d5a8e38d3957a2c0a2d0c7 sig_cn_org=6c7bad69a715a6475e539d0d84b8e810 source=15.7 
     <para>
      Fix session-lifespan memory leakage in <application>plpgsql</application>
      <literal>DO</literal> blocks that use cast expressions
      (Ajit Awekar, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复在使用cast表达式的<application>plpgsql</application> <literal>DO</literal>块中出现的会话生命周期内存泄漏。
      (Ajit Awekar, Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=ba024a52e6d5a8e38d3957a2c0a2d0c7 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f47004add] 2023-04-29 13:06:44 -0400
Branch: REL_15_STABLE [ce9a1a3ea] 2023-04-29 13:06:44 -0400
Branch: REL_14_STABLE [1e868bb6c] 2023-04-29 13:06:44 -0400
Branch: REL_13_STABLE [ee24b5e79] 2023-04-29 13:06:44 -0400
Branch: REL_12_STABLE [900a8d526] 2023-04-29 13:06:44 -0400
Branch: REL_11_STABLE [ea96fbe77] 2023-04-29 13:06:44 -0400
-->
<!-- pgdoc-cn_start sig_en=aecdf9b946f1cec77c7576a34d5c4779 sig_cn_org=bb8575584bacb9f3a8e9f4bb95eee91f source=15.7 
     <para>
      Tighten array dimensionality checks when converting Perl
      list structures to multi-dimensional SQL arrays (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      当将Perl列表结构转换为多维SQL数组时，加强数组维度检查（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=aecdf9b946f1cec77c7576a34d5c4779 -->

<!-- pgdoc-cn_start sig_en=6d82ca9d7e341b26f97137d97d8cc329 sig_cn_org=c904da045796472b5d6513a4d39f88a8 source=15.7 
     <para>
      <application>plperl</application> could misbehave when the nesting
      of sub-lists is inconsistent so that the data does not represent a
      rectangular array of values.  Such cases now produce errors, but
      previously they could result in a crash or garbage output.
     </para>
________________________________________________________-->
     <para>
      <application>plperl</application>在子列表的嵌套不一致时可能会表现不当，导致数据不表示值的矩形数组。
      这种情况现在会产生错误，但以前可能会导致崩溃或垃圾输出。
     </para>
<!-- pgdoc-cn_end sig_en=6d82ca9d7e341b26f97137d97d8cc329 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0553528e7] 2023-05-04 11:00:33 -0400
Branch: REL_15_STABLE [b7001c6b6] 2023-05-04 11:00:33 -0400
Branch: REL_14_STABLE [9d517339e] 2023-05-04 11:00:33 -0400
Branch: REL_13_STABLE [0e6354ed9] 2023-05-04 11:00:33 -0400
Branch: REL_12_STABLE [b7fcf3824] 2023-05-04 11:00:33 -0400
Branch: REL_11_STABLE [aa7e5e404] 2023-05-04 11:00:33 -0400
Branch: master [81eaaf65e] 2023-04-28 12:24:29 -0400
Branch: REL_15_STABLE [512c55522] 2023-04-28 12:24:29 -0400
Branch: REL_14_STABLE [a1d9aacc4] 2023-04-28 12:24:29 -0400
Branch: REL_13_STABLE [7dcd9998c] 2023-04-28 12:24:29 -0400
Branch: REL_12_STABLE [ff9203f46] 2023-04-28 12:24:29 -0400
Branch: REL_11_STABLE [b7c6af375] 2023-04-28 12:24:29 -0400
-->
<!-- pgdoc-cn_start sig_en=d1d48fb89c476262395ef421586b08e4 sig_cn_org=fc5bb1bcd069f4f676c27344908aa245 source=15.7 
     <para>
      Tighten array dimensionality checks when converting Python
      list structures to multi-dimensional SQL arrays (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      当将Python列表结构转换为多维SQL数组时，加强数组维度检查（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=d1d48fb89c476262395ef421586b08e4 -->

<!-- pgdoc-cn_start sig_en=b4ad923e87217214808d315d67f6f8ee sig_cn_org=9bda9142d6a991eff18320fd71962fd7 source=15.7 
     <para>
      <application>plpython</application> could misbehave when dealing
      with empty sub-lists, or when the nesting of sub-lists is
      inconsistent so that the data does not represent a rectangular array
      of values.  The former should result in an empty output array, and
      the latter in an error.  But some cases resulted in a crash, and
      others in unexpected output.
     </para>
________________________________________________________-->
     <para>
      <application>plpython</application>在处理空子列表或者子列表的嵌套不一致导致数据不表示值的矩形数组时可能会出现异常行为。
      前者应该导致空输出数组，后者导致错误。但有些情况导致崩溃，而其他情况导致意外输出。
     </para>
<!-- pgdoc-cn_end sig_en=b4ad923e87217214808d315d67f6f8ee -->
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [57d005170] 2023-05-04 16:23:05 -0700
Branch: REL_15_STABLE [825ebc984] 2023-05-04 16:24:48 -0700
Branch: REL_14_STABLE [52c9cf323] 2023-05-04 16:25:05 -0700
Branch: REL_13_STABLE [800531846] 2023-05-04 16:26:00 -0700
Branch: REL_12_STABLE [24964394a] 2023-05-04 16:26:05 -0700
Branch: REL_11_STABLE [0af386b0f] 2023-05-04 16:26:11 -0700
-->
<!-- pgdoc-cn_start sig_en=5f73a5b6556bc945572dda84dadd34bd sig_cn_org=94c8e935c68643a68f2e9896de9d8940 source=15.7 
     <para>
      Fix unwinding of exception stack
      in <application>plpython</application> (Xing Guo)
     </para>
________________________________________________________-->
     <para>
      修复<application>plpython</application>中异常堆栈展开的问题（Xing Guo）
     </para>
<!-- pgdoc-cn_end sig_en=5f73a5b6556bc945572dda84dadd34bd -->

<!-- pgdoc-cn_start sig_en=1de746fe103e05fc6411ea0ad4b55e8d sig_cn_org=008bd4687d12c03ab7925d8ae1b7ff66 source=15.7 
     <para>
      Some rare failure cases could return without cleaning up the PG_TRY
      exception stack, risking a crash if another error was raised before
      the next stack level was unwound.
     </para>
________________________________________________________-->
     <para>
      一些罕见的失败情况可能在不清理PG_TRY异常堆栈的情况下返回，如果在下一个堆栈级别解除之前引发另一个错误，可能会导致崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=1de746fe103e05fc6411ea0ad4b55e8d -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e0a09d4e3] 2023-03-13 16:36:20 +0900
Branch: REL_15_STABLE [4493256c5] 2023-03-13 16:36:28 +0900
Branch: REL_14_STABLE [7e319231c] 2023-03-13 16:36:31 +0900
Branch: REL_13_STABLE [96bef4374] 2023-03-13 16:36:33 +0900
Branch: REL_12_STABLE [2bc36a56c] 2023-03-13 16:36:34 +0900
-->
<!-- pgdoc-cn_start sig_en=655d6fd9f438541400b01983787f950f sig_cn_org=afe1ff837e531c647e1e825ac13777a6 source=15.7 
     <para>
      Fix inconsistent GSS-encryption error handling
      in <application>libpq</application>'s
      <function>PQconnectPoll()</function>
      (Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      修复<application>libpq</application>的<function>PQconnectPoll()</function>中不一致的GSS加密错误处理
      (Michael Paquier)
     </para>
<!-- pgdoc-cn_end sig_en=655d6fd9f438541400b01983787f950f -->

<!-- pgdoc-cn_start sig_en=84b63462f0a110b06ac857c6c645a594 sig_cn_org=71217ee1f3834ad120b29dba38d6f164 source=15.7 
     <para>
      With <option>gssencmode</option> set to <literal>require</literal>,
      the connection was not marked dead after a GSS initialization
      failure.  Make it fail immediately, as the equivalent case for TLS
      encryption has long done.
     </para>
________________________________________________________-->
     <para>
      当<option>gssencmode</option>设置为<literal>require</literal>时，
      在GSS初始化失败后，连接不会被标记为死连接。立即使其失败，就像TLS加密的等效情况一直在做的那样。
</para>
<!-- pgdoc-cn_end sig_en=84b63462f0a110b06ac857c6c645a594 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [f18029084] 2023-04-18 11:20:41 +0900
Branch: REL_15_STABLE [8c746be44] 2023-04-18 11:20:47 +0900
Branch: REL_14_STABLE [02f076454] 2023-04-18 11:20:50 +0900
Branch: REL_13_STABLE [e9e457d22] 2023-04-18 11:20:51 +0900
Branch: REL_12_STABLE [a28bd7713] 2023-04-18 11:20:53 +0900
Branch: REL_11_STABLE [9eb44bb04] 2023-04-18 11:20:55 +0900
Branch: REL_11_STABLE [dbd25dd0b] 2023-04-18 12:00:31 +0900
-->
<!-- pgdoc-cn_start sig_en=871f16cd7a6a630205d2b25d6fff8f72 sig_cn_org=af542ef288590f4ffb58e7ee951264dd source=15.7 
     <para>
      Fix possible data corruption in <application>ecpg</application>
      programs built with the <option>-C ORACLE</option> option
      (Kyotaro Horiguchi)
     </para>
________________________________________________________-->
     <para>
      修复了使用<application>ecpg</application>构建的程序可能出现的数据损坏问题，
      该程序使用了<option>-C ORACLE</option>选项（Kyotaro Horiguchi）
     </para>
<!-- pgdoc-cn_end sig_en=871f16cd7a6a630205d2b25d6fff8f72 -->

<!-- pgdoc-cn_start sig_en=fe62c3f407c6aa1901751e15e49dd603 sig_cn_org=69aa4b73b325f98f8fd461bee6c2c098 source=15.7 
     <para>
      When <function>ecpg_get_data()</function> is called
      with <varname>varcharsize</varname> set to zero, it could write a
      terminating zero character into the last byte of the preceding
      field, truncating the data in that field.
     </para>
________________________________________________________-->
     <para>
      当调用<function>ecpg_get_data()</function>时，如果将<varname>varcharsize</varname>设置为零，
      它可能会在前一个字段的最后一个字节中写入一个终止零字符，从而截断该字段中的数据。
</para>
<!-- pgdoc-cn_end sig_en=fe62c3f407c6aa1901751e15e49dd603 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bc8cd50fe] 2023-03-17 13:31:40 -0400
Branch: REL_15_STABLE [2b216da1e] 2023-03-17 13:31:40 -0400
Branch: REL_14_STABLE [5fc1ac151] 2023-03-17 13:31:40 -0400
Branch: REL_13_STABLE [7e7c5b683] 2023-03-17 13:31:40 -0400
Branch: REL_12_STABLE [8f83ce8c5] 2023-03-17 13:31:40 -0400
Branch: REL_11_STABLE [012ffb365] 2023-03-17 13:31:40 -0400
-->
<!-- pgdoc-cn_start sig_en=7197599dea00216ac2f30f94714f14d0 sig_cn_org=977fe5ee9fd8f00f7b4d1c8badadd636 source=15.7 
     <para>
      Fix <application>pg_dump</application> so that partitioned tables
      that are hash-partitioned on an enum-type column can be restored
      successfully (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<application>pg_dump</application>，使得基于枚举类型列进行哈希分区的分区表可以成功恢复（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=7197599dea00216ac2f30f94714f14d0 -->

<!-- pgdoc-cn_start sig_en=20902d980aa5b99448bda4d08098c3bb sig_cn_org=fe131bdb64f230f51a808c62acffb88e source=15.7 
     <para>
      Since the hash codes for enum values depend on the OIDs assigned to
      the enum, they are typically different after a dump and restore,
      meaning that rows often need to go into a different partition than
      they were in originally.  Users can work around that by specifying
      the <option>-&minus;load-via-partition-root</option> option; but since
      there is very little chance of success without that,
      teach <application>pg_dump</application> to apply it automatically
      to such tables.
     </para>
________________________________________________________-->
     <para>
      由于枚举值的哈希码取决于分配给枚举的OID，因此在转储和恢复后它们通常是不同的，
      这意味着行通常需要进入与最初不同的分区。用户可以通过指定
      <option>--load-via-partition-root</option>选项来解决这个问题；但由于
      没有这个选项成功的机会很小，因此
      教<application>pg_dump</application>自动将其应用于这样的表。
</para>
<!-- pgdoc-cn_end sig_en=20902d980aa5b99448bda4d08098c3bb -->

<!-- pgdoc-cn_start sig_en=a4fbcc8949460e1d1e9be94dcfde2f82 sig_cn_org=92442c2b510a1784f8e1bfe4c0eff76a source=15.7 
     <para>
      Also, fix <application>pg_restore</application> to not try
      to <command>TRUNCATE</command> target tables before restoring into
      them when <option>-&minus;load-via-partition-root</option> mode is used.
      This avoids a hazard of deadlocks and lost data.
     </para>
________________________________________________________-->
     <para>
      另外，修复<application>pg_restore</application>，在使用<option>--load-via-partition-root</option>模式时，
      不要尝试在将数据还原到目标表之前对其进行<command>TRUNCATE</command>。
      这样可以避免死锁和数据丢失的风险。
     </para>
<!-- pgdoc-cn_end sig_en=a4fbcc8949460e1d1e9be94dcfde2f82 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a923e2163] 2023-04-12 09:09:38 +0900
Branch: REL_15_STABLE [5c3254946] 2023-04-12 09:09:53 +0900
Branch: REL_14_STABLE [34105eea6] 2023-04-12 09:09:58 +0900
Branch: master [765f5df72] 2023-03-15 12:55:51 +0900
Branch: REL_15_STABLE [69b6032e0] 2023-03-15 12:56:06 +0900
Branch: REL_14_STABLE [bbf18fe19] 2023-03-15 12:56:10 +0900
-->
<!-- pgdoc-cn_start sig_en=7ec55aebd5d420da6f702f55e1febf4d sig_cn_org=446e295ae855ba0a82403ffa2fd75142 source=15.7 
     <para>
      Correctly detect non-seekable files on Windows
      (Juan José Santamaría Flecha, Michael Paquier, Daniel Watzinger)
     </para>
________________________________________________________-->
     <para>
      在Windows上正确检测不可寻址的文件
      (Juan José Santamaría Flecha, Michael Paquier, Daniel Watzinger)
</para>
<!-- pgdoc-cn_end sig_en=7ec55aebd5d420da6f702f55e1febf4d -->

<!-- pgdoc-cn_start sig_en=7fe6505c9d8f155486f839bd0035541f sig_cn_org=e83efb6ab447fc1e994eabda9977b8d5 source=15.7 
     <para>
      This bug led to misbehavior when <application>pg_dump</application>
      writes to a pipe or <application>pg_restore</application> reads from
      one.
     </para>
________________________________________________________-->
     <para>
      这个错误导致<application>pg_dump</application>在写入管道时出现异常行为，
      或者<application>pg_restore</application>在从管道中读取时出现异常行为。
     </para>
<!-- pgdoc-cn_end sig_en=7fe6505c9d8f155486f839bd0035541f -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [038f586d5] 2023-02-21 10:56:37 +0100
Branch: REL_15_STABLE [108a22bd1] 2023-02-21 10:56:37 +0100
Branch: REL_14_STABLE [663e50e83] 2023-02-21 10:56:37 +0100
-->
<!-- pgdoc-cn_start sig_en=3a7bc270a1d6b7f0b8b07b2d66671561 sig_cn_org=872506754728bf1cf167d0b38f4365fd source=15.7 
     <para>
      In <application>pgbench</application>'s <quote>prepared</quote>
      mode, prepare all the commands in a pipeline before starting the
      pipeline (&Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      在<application>pgbench</application>的<quote>prepared</quote>模式中，在启动管道之前，准备好所有命令的管道(&Aacute;lvaro Herrera)
     </para>
<!-- pgdoc-cn_end sig_en=3a7bc270a1d6b7f0b8b07b2d66671561 -->

<!-- pgdoc-cn_start sig_en=ea11f396ce20ea9d1b891d11832d0e1b sig_cn_org=ae2c32e5a16e0dece52a930ffa65e304 source=15.7 
     <para>
      This avoids a failure when a pgbench script tries to
      start a serializable transaction inside a pipeline.
     </para>
________________________________________________________-->
     <para>
      这样可以避免在管道内部尝试启动一个可串行化事务时出现失败。
     </para>
<!-- pgdoc-cn_end sig_en=ea11f396ce20ea9d1b891d11832d0e1b -->
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [e88754a19] 2023-03-24 10:56:10 -0400
Branch: REL_15_STABLE [701ec5557] 2023-03-24 10:59:10 -0400
Branch: REL_14_STABLE [8fd5aa76c] 2023-03-24 11:06:45 -0400
Branch: master [b7cea5882] 2023-03-28 16:16:53 -0400
Branch: REL_15_STABLE [453f53821] 2023-03-28 16:17:03 -0400
Branch: REL_14_STABLE [e3363cda9] 2023-03-28 16:21:29 -0400
-->
<!-- pgdoc-cn_start sig_en=a380697bffb031f4656f704305d4e11e sig_cn_org=3ff21fa8c538b0f2238194e88a429bfc source=15.7 
     <para>
      In <filename>contrib/amcheck</filename>'s heap checking code, deal
      correctly with tuples having zero xmin or xmax (Robert Haas)
     </para>
________________________________________________________-->
     <para>
      在<filename>contrib/amcheck</filename>的堆检查代码中，正确处理具有零xmin或xmax的元组（Robert Haas）
     </para>
<!-- pgdoc-cn_end sig_en=a380697bffb031f4656f704305d4e11e -->
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [4f5d461e0] 2023-03-11 14:12:52 -0800
Branch: REL_15_STABLE [e8a9750d0] 2023-03-11 14:14:50 -0800
Branch: REL_14_STABLE [b3a83055c] 2023-03-11 14:17:51 -0800
-->
<!-- pgdoc-cn_start sig_en=9b3023a281cefdb4679aacdb87d4ec0d sig_cn_org=07c42ff35ca97e425fb9d370cee39028 source=15.7 
     <para>
      In <filename>contrib/amcheck</filename>, deal sanely with xids that
      appear to be before epoch zero (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      在<filename>contrib/amcheck</filename>中，合理处理似乎在零点之前的xids（Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=9b3023a281cefdb4679aacdb87d4ec0d -->

<!-- pgdoc-cn_start sig_en=f4d92dfe99be337d0a1eb6609224f64a sig_cn_org=bb24ffc398445406c31f6291f1b8973d source=15.7 
     <para>
      In cases of corruption we might see a wrapped-around 32-bit xid that
      appears to be before the first xid epoch.  Promoting such a value to
      64-bit form produced a value far in the future, resulting in wrong
      reports.  Return FirstNormalFullTransactionId in such cases so that
      things work reasonably sanely.
     </para>
________________________________________________________-->
     <para>
      在出现数据损坏的情况下，我们可能会看到一个包裹在32位xid之前的xid，看起来是在第一个xid纪元之前。
      将这样的值提升为64位形式会产生一个遥远的未来值，导致错误的报告。
      在这种情况下返回FirstNormalFullTransactionId，以便事情能够相对正常地运行。
     </para>
<!-- pgdoc-cn_end sig_en=f4d92dfe99be337d0a1eb6609224f64a -->
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [8e82db97b] 2023-04-12 11:37:13 -0400
Branch: REL_15_STABLE [fa83e9e23] 2023-04-12 11:51:09 -0400
-->
<!-- pgdoc-cn_start sig_en=f3f370bf70b1f7361ac3fc1322411319 sig_cn_org=4f5cc995a096d0e80f0f10848234bef7 source=15.7 
     <para>
      In <filename>contrib/basebackup_to_shell</filename>, properly detect
      failure to open a pipe (Robert Haas)
     </para>
________________________________________________________-->
     <para>
      在<filename>contrib/basebackup_to_shell</filename>中，正确检测打开管道失败的情况（Robert Haas）
     </para>
<!-- pgdoc-cn_end sig_en=f3f370bf70b1f7361ac3fc1322411319 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [df38157d9] 2023-04-27 11:55:06 -0400
Branch: REL_15_STABLE [85ec8bcce] 2023-04-27 11:55:06 -0400
Branch: REL_14_STABLE [c74f88c40] 2023-04-27 11:55:06 -0400
Branch: REL_13_STABLE [de2dfa053] 2023-04-27 11:55:06 -0400
Branch: REL_12_STABLE [ce9662598] 2023-04-27 11:55:06 -0400
Branch: REL_11_STABLE [c3c1097dc] 2023-04-27 11:55:06 -0400
-->
<!-- pgdoc-cn_start sig_en=601257aef85c4e316c8ac8009ba1e564 sig_cn_org=d25faa0d86e9ced2a2962166b33b23e9 source=15.7 
     <para>
      In <filename>contrib/hstore_plpython</filename>, avoid crashing if
      the Python value to be transformed isn't a mapping (Dmitry Dolgov,
      Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在<filename>contrib/hstore_plpython</filename>中，避免在要转换的Python值不是映射时导致崩溃(Dmitry Dolgov,
      Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=601257aef85c4e316c8ac8009ba1e564 -->

<!-- pgdoc-cn_start sig_en=7b2983793cee3038bac9175e02eb615f sig_cn_org=d937340b48ebeabc5c1aea0b56a32d41 source=15.7 
     <para>
      This should give an error, but Python 3 changed some APIs in a way
      that caused the check to misbehave, allowing a crash to ensue.
     </para>
________________________________________________________-->
     <para>
      这应该会产生一个错误，但Python 3以一种方式改变了一些API，导致检查行为异常，从而导致崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=7b2983793cee3038bac9175e02eb615f -->
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [8bbd0cce9] 2023-04-23 14:30:09 +0300
Branch: REL_15_STABLE [214495dc5] 2023-04-23 14:30:51 +0300
Branch: REL_14_STABLE [f4a4a18ec] 2023-04-23 14:31:11 +0300
Branch: REL_13_STABLE [48c6825d0] 2023-04-23 14:00:16 +0300
-->
<!-- pgdoc-cn_start sig_en=2a41828d90acf279deb06a8e7d2172c4 sig_cn_org=cfef77f913c465e103a1e2df428101d7 source=15.7 
     <para>
      Require the <literal>siglen</literal> option of a GiST index on
      an <type>ltree</type> column, if specified, to be a multiple of 4
      (Alexander Korotkov)
     </para>
________________________________________________________-->
     <para>
      要求在<type>ltree</type>列上的GiST索引的<literal>siglen</literal>选项，如果指定的话，必须是4的倍数
      (Alexander Korotkov)
     </para>
<!-- pgdoc-cn_end sig_en=2a41828d90acf279deb06a8e7d2172c4 -->

<!-- pgdoc-cn_start sig_en=db3fe715fb8c089255f3a3f117efaaf1 sig_cn_org=5ee7a3fb1bb2f2b7c64021cceb66d850 source=15.7 
     <para>
      Other values result in misaligned accesses to index content, which
      is harmless on Intel-compatible hardware but can cause a crash on
      some other architectures.
     </para>
________________________________________________________-->
     <para>
      其他数值会导致对索引内容的访问不对齐，在英特尔兼容硬件上没有问题，但在其他一些架构上可能会导致崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=db3fe715fb8c089255f3a3f117efaaf1 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [be753639d] 2023-03-02 14:03:02 +0900
Branch: REL_15_STABLE [9d41ecfcd] 2023-03-02 14:03:08 +0900
Branch: REL_14_STABLE [5ad63eee1] 2023-03-02 14:03:21 +0900
-->
<!-- pgdoc-cn_start sig_en=1ad59a169148c6af8df6927064be22a5 sig_cn_org=275c7dd152a11f7147ac9d2f384522a4 source=15.7 
     <para>
      In <filename>contrib/pageinspect</filename>, add defenses against
      incorrect input for the <function>gist_page_items()</function> function
      (Dmitry Koval)
     </para>
________________________________________________________-->
     <para>
      在<filename>contrib/pageinspect</filename>中，为<function>gist_page_items()</function>函数添加对不正确输入的防御（Dmitry Koval）
     </para>
<!-- pgdoc-cn_end sig_en=1ad59a169148c6af8df6927064be22a5 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1925ac281] 2023-03-11 12:15:41 -0500
Branch: REL_15_STABLE [6170386c7] 2023-03-11 12:15:41 -0500
Branch: REL_14_STABLE [786528039] 2023-03-11 12:15:41 -0500
Branch: REL_13_STABLE [bc436e4a9] 2023-03-11 12:15:41 -0500
Branch: REL_12_STABLE [1279414bc] 2023-03-11 12:15:41 -0500
Branch: REL_11_STABLE [b18327489] 2023-03-11 12:15:41 -0500
-->
<!-- pgdoc-cn_start sig_en=0f05fea77b0e5280f012e405d4b886c5 sig_cn_org=84ae0ac3d3c08d2ea41d62414594ff9f source=15.7 
     <para>
      Fix misbehavior in <filename>contrib/pg_trgm</filename> with an
      unsatisfiable regular expression (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复在<filename>contrib/pg_trgm</filename>中处理无法满足的正则表达式时出现的问题。（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=0f05fea77b0e5280f012e405d4b886c5 -->

<!-- pgdoc-cn_start sig_en=26f64a2d8012ab1278bfe83748078192 sig_cn_org=a45e6674fe60c0b708f813bab0525573 source=15.7 
     <para>
      A regex such as <literal>$foo</literal> is legal but unsatisfiable;
      the regex compiler recognizes that and produces an empty NFA graph.
      Attempting to optimize such a graph into a pg_trgm GIN or GiST index
      qualification resulted in accessing off the end of a work array,
      possibly leading to crashes.
     </para>
________________________________________________________-->
     <para>
      诸如<literal>$foo</literal>这样的正则表达式是合法的但无法满足；
      正则表达式编译器会识别这一点并生成一个空的NFA图。
      尝试将这样的图优化为pg_trgm GIN或GiST索引的限制条件会导致访问工作数组的末尾，
      可能导致崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=26f64a2d8012ab1278bfe83748078192 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [8427ce4c3] 2023-02-21 20:01:43 +0900
Branch: REL_15_STABLE [5bace41ab] 2023-02-21 20:02:09 +0900
-->
<!-- pgdoc-cn_start sig_en=a16c655f427d54c21464aaa79f36ab3d sig_cn_org=2e4b989f1330b81cda5de44588f74734 source=15.7 
     <para>
      Fix handling of escape sequences
      in <filename>contrib/postgres_fdw</filename>'s
      <varname>application_name</varname> parameter (Kyotaro Horiguchi,
      Michael Paquier)
     </para>
________________________________________________________-->
     <para>
      修复<filename>contrib/postgres_fdw</filename>中<varname>application_name</varname>参数中转义序列的处理（Kyotaro Horiguchi，Michael Paquier）
     </para>
<!-- pgdoc-cn_end sig_en=a16c655f427d54c21464aaa79f36ab3d -->

<!-- pgdoc-cn_start sig_en=2943fd608f179ba800e9a915393e5863 sig_cn_org=03fbad86eb522e299dff4991df420112 source=15.7 
     <para>
      The code to expand these could fail if executed in a background
      process, as for example during auto-analyze of a foreign table.
     </para>
________________________________________________________-->
     <para>
      在后台进程中执行这些代码进行扩展可能会失败，例如在对外部表进行自动分析时。
     </para>
<!-- pgdoc-cn_end sig_en=2943fd608f179ba800e9a915393e5863 -->
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [69e8c7cf1] 2023-02-20 11:07:24 -0800
Branch: REL_15_STABLE [da32a99df] 2023-02-20 11:29:31 -0800
-->
<!-- pgdoc-cn_start sig_en=bc12ad9b0f1e9dc71efcad762c1dda93 sig_cn_org=bed5969b6ff2759769d7ea9d0bc06eb6 source=15.7 
     <para>
      In <filename>contrib/pg_walinspect</filename>, limit memory usage
      of <function>pg_get_wal_records_info()</function> (Bharath Rupireddy)
     </para>
________________________________________________________-->
     <para>
      在<filename>contrib/pg_walinspect</filename>中，限制<function>pg_get_wal_records_info()</function>的内存使用（Bharath Rupireddy）
     </para>
<!-- pgdoc-cn_end sig_en=bc12ad9b0f1e9dc71efcad762c1dda93 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [eab2d3147] 2023-04-20 18:12:32 -0400
Branch: REL_15_STABLE [a14afd3bd] 2023-04-20 18:12:48 -0400
Branch: REL_14_STABLE [6d60b718c] 2023-04-20 18:12:32 -0400
Branch: REL_13_STABLE [6dce37203] 2023-04-20 18:12:32 -0400
Branch: REL_12_STABLE [e2e34dfff] 2023-04-20 18:12:32 -0400
Branch: REL_11_STABLE [c976ccc9e] 2023-04-20 18:12:32 -0400
-->
<!-- pgdoc-cn_start sig_en=9e3ad6f2a75a8b5691a656916c2d1352 sig_cn_org=2a1c8a1663be8e463d1bb6930ba78037 source=15.7 
     <para>
      Use the <option>-&minus;strip-unneeded</option> option when stripping
      static libraries with
      GNU-compatible <application>strip</application> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      使用<option>--strip-unneeded</option>选项在使用GNU兼容的<application>strip</application>工具时剥离静态库(Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=9e3ad6f2a75a8b5691a656916c2d1352 -->

<!-- pgdoc-cn_start sig_en=dd4f0eda0e1020453bd097385facd7c6 sig_cn_org=e74612171bcc4230bb51716a9a4af2b1 source=15.7 
     <para>
      Previously, <literal>make install-strip</literal> used
      the <option>-x</option> option in this case.  This change avoids
      misbehavior of <application>llvm-strip</application>, and gives
      slightly smaller output as well.
     </para>
________________________________________________________-->
     <para>
      以前，在这种情况下，<literal>make install-strip</literal>使用
      <option>-x</option>选项。这个更改避免了<application>llvm-strip</application>的错误行为，
      同时也会得到稍微更小的输出。
     </para>
<!-- pgdoc-cn_end sig_en=dd4f0eda0e1020453bd097385facd7c6 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [969509c3f] 2023-02-08 17:15:25 -0500
Branch: REL_15_STABLE [2ee703c9d] 2023-02-08 17:15:23 -0500
Branch: REL_14_STABLE [7f8778fcf] 2023-02-08 17:15:23 -0500
Branch: REL_13_STABLE [c7b608600] 2023-02-08 17:15:23 -0500
Branch: REL_12_STABLE [11f1f9f4f] 2023-02-08 17:15:27 -0500
Branch: REL_11_STABLE [36a646d99] 2023-02-08 17:15:27 -0500
-->
<!-- pgdoc-cn_start sig_en=0731fdb4cdd2ac4668d468b975584309 sig_cn_org=55468f3421254ee568b7c4c57c772ca8 source=15.7 
     <para>
      Stop recommending auto-download of DTD files for building the
      documentation, and indeed disable it (Aleksander Alekseev, Peter
      Eisentraut, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      停止推荐自动下载DTD文件来构建文档，并且禁用它（Aleksander Alekseev, Peter
      Eisentraut, Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=0731fdb4cdd2ac4668d468b975584309 -->

<!-- pgdoc-cn_start sig_en=d626a67aef164c820d357b5f448b400b sig_cn_org=35375a5beee86a75d25f58d81eb4b786 source=15.7 
     <para>
      It appears no longer possible to build the SGML documentation
      without a local installation of the DocBook DTD files.
      Formerly <application>xsltproc</application> could download those
      files on-the-fly from sourceforge.net; but sourceforge.net now
      permits only HTTPS access, and no common version
      of <application>xsltproc</application> supports that.  Hence, remove
      the bits of our documentation suggesting that that's possible or
      useful, and instead
      add <application>xsltproc</application>'s <option>-&minus;nonet</option>
      option to the build recipes.
     </para>
________________________________________________________-->
     <para>
      现在似乎不再可能在没有本地安装DocBook DTD文件的情况下构建SGML文档。
      以前<application>xsltproc</application>可以从sourceforge.net上动态下载这些文件；
      但是sourceforge.net现在只允许HTTPS访问，而没有常见版本的<application>xsltproc</application>支持这一点。
      因此，删除我们文档中建议这是可能或有用的部分，而是
      将<application>xsltproc</application>的<option>--nonet</option>选项添加到构建配方中。
     </para>
<!-- pgdoc-cn_end sig_en=d626a67aef164c820d357b5f448b400b -->
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [5d42a9751] 2023-05-05 07:09:52 +0200
Branch: REL_15_STABLE [3d37476f5] 2023-05-05 07:10:15 +0200
Branch: REL_14_STABLE [e07022500] 2023-05-05 07:10:30 +0200
Branch: REL_13_STABLE [670494477] 2023-05-05 07:11:58 +0200
Branch: REL_12_STABLE [14bb2e76c] 2023-05-05 07:12:18 +0200
Branch: REL_11_STABLE [b189f71e5] 2023-05-05 07:12:26 +0200
-->
<!-- pgdoc-cn_start sig_en=473ea30b2b04373a1f48730d93992a9c sig_cn_org=5c6610f445f0f6db9d8a5c220700baec source=15.7 
     <para>
      When running TAP tests in PGXS builds, use a saner location for the
      temporary <filename>portlock</filename> directory (Peter Eisentraut)
     </para>
________________________________________________________-->
     <para>
      在PGXS构建中运行TAP测试时，为临时<filename>portlock</filename>目录使用更合理的位置（Peter Eisentraut）
     </para>
<!-- pgdoc-cn_end sig_en=473ea30b2b04373a1f48730d93992a9c -->

<!-- pgdoc-cn_start sig_en=dc9602d349e994b231349584c08243fc sig_cn_org=d3bff2e8965804fb6f53042495d86363 source=15.7 
     <para>
      Place it under <filename>tmp_check</filename> in the build
      directory.  With the previous coding, a PGXS build would try to place
      it in the installation directory, which is not necessarily writable.
     </para>
________________________________________________________-->
     <para>
      将其放在构建目录中的<filename>tmp_check</filename>下。使用先前的编码，
      PGXS构建会尝试将其放在安装目录中，这不一定是可写的。
</para>
<!-- pgdoc-cn_end sig_en=dc9602d349e994b231349584c08243fc -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4ddee4d9d] 2023-04-18 14:46:39 -0400
Branch: REL_15_STABLE [62b22caa5] 2023-04-18 14:46:39 -0400
Branch: REL_14_STABLE [b79b36f26] 2023-04-18 14:46:39 -0400
Branch: REL_13_STABLE [87d8ec3e4] 2023-04-18 14:46:39 -0400
Branch: REL_12_STABLE [2ad35cf06] 2023-04-18 14:46:39 -0400
Branch: REL_11_STABLE [7228f2f81] 2023-04-18 14:46:39 -0400
-->
<!-- pgdoc-cn_start sig_en=48521b4254f77aeb9b57f249702ed508 sig_cn_org=61fe5eed420eae64589a4f38db73ac45 source=15.7 
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2023c for DST law changes in Egypt, Greenland, Morocco, and
      Palestine.
     </para>
________________________________________________________-->
     <para>
      更新时区数据文件至<application>tzdata</application>2023c版本，以反映埃及、格陵兰、摩洛哥和巴勒斯坦的夏令时法律变化。
     </para>
<!-- pgdoc-cn_end sig_en=48521b4254f77aeb9b57f249702ed508 -->

<!-- pgdoc-cn_start sig_en=f45e9ef1885557f275ddc5641be9ed6b sig_cn_org=8c4000300153dd516cb83e97a0cd15f7 source=15.7 
     <para>
      When observing Moscow time, Europe/Kirov and Europe/Volgograd now
      use the abbreviations MSK/MSD instead of numeric abbreviations,
      for consistency with other timezones observing Moscow time.
      Also, America/Yellowknife is no longer distinct from America/Edmonton;
      this affects some pre-1948 timestamps in that area.
     </para>
________________________________________________________-->
     <para>
      当观察莫斯科时间时，欧洲/基洛夫和欧洲/伏尔加格勒现在使用缩写MSK/MSD而不是数字缩写，
      以保持与观察莫斯科时间的其他时区的一致性。
      此外，美洲/黄刀不再与美洲/埃德蒙顿区分开来；这影响了该地区一些1948年之前的时间戳。
     </para>
<!-- pgdoc-cn_end sig_en=f45e9ef1885557f275ddc5641be9ed6b -->
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-2">
<!-- pgdoc-cn_start sig_en=f30b07928f12c461883c93ac69be4bcb sig_cn_org=2a357e9415bdc232edd22140b6b5e503 source=15.7 
  <title>Release 15.2</title>
________________________________________________________-->
  <title>发布版本 15.2</title>
<!-- pgdoc-cn_end sig_en=f30b07928f12c461883c93ac69be4bcb -->

  <formalpara>
<!-- pgdoc-cn_start sig_en=c45e8127eac45f2347bf1713afaeffda sig_cn_org=253305b4c6dff5b87ef36e3c2d95e52e source=15.7 
  <title>Release date:</title>
________________________________________________________-->
  <title>发布日期：</title>
<!-- pgdoc-cn_end sig_en=c45e8127eac45f2347bf1713afaeffda -->
<!-- pgdoc-cn_start sig_en=190d2d7cd8cee0b3ce94dff080f8248c sig_cn_org=b3db7cc60cd1c948e7b08d8d5adcb74f source=15.7 
  <para>2023-02-09</para>
________________________________________________________-->
  <para>2023年2月9日</para>
<!-- pgdoc-cn_end sig_en=190d2d7cd8cee0b3ce94dff080f8248c -->
  </formalpara>

<!-- pgdoc-cn_start sig_en=cdd3701a1f6c64bbf7cfa5fc1459ce8d sig_cn_org=9632a16c75399be34691b61a5d783100 source=15.7 
  <para>
   This release contains a variety of fixes from 15.1.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>
________________________________________________________-->
  <para>
   这个版本包含了从15.1版本中修复的各种问题。
   有关主要版本15中的新功能信息，请参见<xref linkend="release-15"/>。
</para>
<!-- pgdoc-cn_end sig_en=cdd3701a1f6c64bbf7cfa5fc1459ce8d -->

  <sect2>
<!-- pgdoc-cn_start sig_en=783f4c558d7bb14c8ad0408ba6dbd3bc sig_cn_org=c679f925b3cc904633261dbe3b27e8eb source=15.7 
   <title>Migration to Version 15.2</title>
________________________________________________________-->
   <title>升级到版本15.2</title>
<!-- pgdoc-cn_end sig_en=783f4c558d7bb14c8ad0408ba6dbd3bc -->

<!-- pgdoc-cn_start sig_en=036ed5117c7b85420fc61cc5e5b99f8b sig_cn_org=992c4bf77211ba6013c0d564cef911c0 source=15.7 
   <para>
    A dump/restore is not required for those running 15.X.
   </para>
________________________________________________________-->
   <para>
    对于运行15.X版本的用户，不需要进行dump/restore操作。
   </para>
<!-- pgdoc-cn_end sig_en=036ed5117c7b85420fc61cc5e5b99f8b -->

<!-- pgdoc-cn_start sig_en=84728392672595c430d9f275382bdd0b sig_cn_org=c6f8c5c8dd86e854c08d740ffdb0f10d source=15.7 
   <para>
    However, if you are upgrading from a version earlier than 15.1,
    see <xref linkend="release-15-1"/>.
   </para>
________________________________________________________-->
   <para>
    然而，如果您正在从早于15.1版本升级，
    请参见<xref linkend="release-15-1"/>。
   </para>
<!-- pgdoc-cn_end sig_en=84728392672595c430d9f275382bdd0b -->
  </sect2>

  <sect2>
<!-- pgdoc-cn_start sig_en=e161fef38e54e54458e215e5f978ef9b sig_cn_org=f104d50dd9d4dd802f94229ebe5bc097 source=15.7 
   <title>Changes</title>
________________________________________________________-->
   <title>变更</title>
<!-- pgdoc-cn_end sig_en=e161fef38e54e54458e215e5f978ef9b -->

   <itemizedlist>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [71c37797d] 2023-02-06 11:20:07 +0900
Branch: REL_15_STABLE [715c345dd] 2023-02-06 11:20:20 +0900
Branch: REL_14_STABLE [626f2c1d6] 2023-02-06 11:20:23 +0900
Branch: REL_13_STABLE [45a945ee9] 2023-02-06 11:20:27 +0900
Branch: REL_12_STABLE [3f7342671] 2023-02-06 11:20:31 +0900
-->
<!-- pgdoc-cn_start sig_en=4cafc819e3778f0cbfa7b2b870999b91 sig_cn_org=513214c32e463cdea85a0d2e5d5e9038 source=15.7 
     <para>
      <application>libpq</application> can leak memory contents after
      GSSAPI transport encryption initiation fails (Jacob Champion)
     </para>
________________________________________________________-->
     <para>
      <application>libpq</application>在GSSAPI传输加密初始化失败后可能会泄漏内存内容（Jacob Champion）
     </para>
<!-- pgdoc-cn_end sig_en=4cafc819e3778f0cbfa7b2b870999b91 -->

<!-- pgdoc-cn_start sig_en=abce75cfe8b777ba12b01924255b8eeb sig_cn_org=9d5c5ddf47c0f64671bb8400e79398e6 source=15.7 
     <para>
      A modified server, or an unauthenticated man-in-the-middle, can
      send a not-zero-terminated error message during setup of GSSAPI
      (Kerberos) transport encryption.  <application>libpq</application>
      will then copy that string, as well as following bytes in
      application memory up to the next zero byte, to its error report.
      Depending on what the calling application does with the error
      report, this could result in disclosure of application memory
      contents.  There is also a small probability of a crash due to
      reading beyond the end of memory.  Fix by properly zero-terminating
      the server message.
      (CVE-2022-41862)
     </para>
________________________________________________________-->
     <para>
      一个修改过的服务器，或者一个未经身份验证的中间人，可以在GSSAPI（Kerberos）传输加密设置期间发送一个非零终止的错误消息。
      <application>libpq</application>然后会将该字符串以及后续字节复制到应用程序内存中，直到下一个零字节为止，以供错误报告使用。
      根据调用应用程序对错误报告的处理方式，这可能导致应用程序内存内容的泄露。由于读取超出内存的范围，也存在小概率导致崩溃的情况。
      通过正确终止服务器消息来修复。
      (CVE-2022-41862)
     </para>
<!-- pgdoc-cn_end sig_en=abce75cfe8b777ba12b01924255b8eeb -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3f7836ff6] 2023-01-05 14:12:17 -0500
Branch: REL_15_STABLE [3706cc97a] 2023-01-05 14:12:17 -0500
Branch: REL_14_STABLE [8cd190e13] 2023-01-05 14:12:17 -0500
Branch: REL_13_STABLE [ad38e2f89] 2023-01-05 14:12:17 -0500
Branch: master [3f244d020] 2023-01-15 13:14:52 -0500
Branch: REL_15_STABLE [a8f7687a0] 2023-01-15 14:06:46 -0500
Branch: REL_14_STABLE [a8b88c26f] 2023-01-15 14:06:46 -0500
Branch: REL_13_STABLE [787db4be9] 2023-01-15 14:06:46 -0500
-->
<!-- pgdoc-cn_start sig_en=64bfef9e7ab04f03b09f3ba5b212bae4 sig_cn_org=e7ffb8cbf382cae7b735337cb2bab1fb source=15.7 
     <para>
      Fix calculation of which <literal>GENERATED</literal> columns need
      to be updated in child tables during an <command>UPDATE</command> on
      a partitioned table or inheritance tree (Amit Langote, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复在对分区表或继承树进行<command>UPDATE</command>时需要更新哪些<literal>GENERATED</literal>列在子表中的计算（Amit Langote, Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=64bfef9e7ab04f03b09f3ba5b212bae4 -->

<!-- pgdoc-cn_start sig_en=ea1ac2efc53fb162a70f7cefdf383421 sig_cn_org=08068ea9069004aa124fb1cf398c752a source=15.7 
     <para>
      This fixes failure to update <literal>GENERATED</literal> columns
      that do not exist in the parent table, or that have different
      dependencies than are in the parent column's generation expression.
     </para>
________________________________________________________-->
     <para>
      这修复了在父表中不存在的<literal>GENERATED</literal>列或者具有与父列生成表达式中不同依赖关系的列更新失败的问题。
     </para>
<!-- pgdoc-cn_end sig_en=ea1ac2efc53fb162a70f7cefdf383421 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [fe9e658f4] 2023-01-30 10:04:57 +0000
Branch: REL_15_STABLE [4785af9e6] 2023-01-30 10:07:32 +0000
-->
<!-- pgdoc-cn_start sig_en=6a498dc91a189e0e979b1e972855b630 sig_cn_org=41262bb560e4ad90b2ae1ffbd20b990d source=15.7 
     <para>
      Fix possible failure of <command>MERGE</command> to compute
      <literal>GENERATED</literal> columns (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复可能导致<command>MERGE</command>无法计算<literal>GENERATED</literal>列的问题（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=6a498dc91a189e0e979b1e972855b630 -->

<!-- pgdoc-cn_start sig_en=d1ac0aa59ec6c36ab4c9daa1c3a21301 sig_cn_org=8adf7935298af9a90ef9f0e243e8a028 source=15.7 
     <para>
      When the first row-level action of the <command>MERGE</command> was
      an <literal>UPDATE</literal>, any
      subsequent <literal>INSERT</literal> actions would fail to
      compute <literal>GENERATED</literal> columns that were deemed
      unnecessary to compute for the <literal>UPDATE</literal> action
      (due to not depending on any of the <literal>UPDATE</literal> target
      columns).
     </para>
________________________________________________________-->
     <para>
      当<command>MERGE</command>的第一个行级操作是<literal>UPDATE</literal>时，
      任何后续的<literal>INSERT</literal>操作都将无法计算被认为对<literal>UPDATE</literal>操作
      不必要计算的<literal>GENERATED</literal>列（因为它们不依赖于任何<literal>UPDATE</literal>目标列）。
     </para>
<!-- pgdoc-cn_end sig_en=d1ac0aa59ec6c36ab4c9daa1c3a21301 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [f026c16a2] 2023-01-10 14:17:47 +0000
Branch: REL_15_STABLE [38255f2d0] 2023-01-10 14:16:27 +0000
-->
<!-- pgdoc-cn_start sig_en=53e30e0467fbe45f71a5ae4874d37644 sig_cn_org=655fb51f0cd4a2751a5f874c20fd0faa source=15.7 
     <para>
      Fix <command>MERGE</command>'s check for
      unreachable <literal>WHEN</literal> clauses (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复<command>MERGE</command>对不可达<literal>WHEN</literal>子句的检查（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=53e30e0467fbe45f71a5ae4874d37644 -->

<!-- pgdoc-cn_start sig_en=fba8932a7b9207806dd6615c0bed0ddf sig_cn_org=bb15e253fb39f25f3caa84ed5bc50586 source=15.7 
     <para>
      A <literal>WHEN</literal> clause following an
      unconditional <literal>WHEN</literal> clause should be rejected as
      unreachable, but this case was not always detected.
     </para>
________________________________________________________-->
     <para>
      一个无条件的<literal>WHEN</literal>子句后面跟着一个<literal>WHEN</literal>子句应该被拒绝为不可达，但这种情况并不总是被检测到。
     </para>
<!-- pgdoc-cn_end sig_en=fba8932a7b9207806dd6615c0bed0ddf -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [7b2ccc5e0] 2022-11-25 13:31:48 +0000
Branch: REL_15_STABLE [04d61bfe6] 2022-11-25 13:29:51 +0000
-->
<!-- pgdoc-cn_start sig_en=ad8bcfcab0fb70f9b0e409c7a2823124 sig_cn_org=f066ed8a99b9238ca4d2ce8e1ac7a85a source=15.7 
     <para>
      Fix <command>MERGE</command>'s rule-detection test (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复<command>MERGE</command>的规则检测测试（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=ad8bcfcab0fb70f9b0e409c7a2823124 -->

<!-- pgdoc-cn_start sig_en=3c21fd746b7956d92f88d926323ab54f sig_cn_org=a5881e9d6dcb8f18c7eabb443bbf7ebb source=15.7 
     <para>
      <command>MERGE</command> is not supported on tables with rules;
      but it also failed on tables that once had rules but no longer do.
     </para>
________________________________________________________-->
     <para>
      <command>MERGE</command>不支持带有规则的表格；但它也在曾经有规则但现在没有规则的表格上失败了。
     </para>
<!-- pgdoc-cn_end sig_en=3c21fd746b7956d92f88d926323ab54f -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [6ff5aa129] 2022-11-17 18:56:11 +0100
Branch: REL_15_STABLE [3d45edcef] 2022-11-17 18:56:11 +0100
-->
<!-- pgdoc-cn_start sig_en=dceae46d30197b9e9aeb75789c121e08 sig_cn_org=2c57d8fb7ae25f68d86ed351ebd5aa34 source=15.7 
     <para>
      In <command>MERGE</command>, don't count a <literal>DO
      NOTHING</literal> action as a processed tuple (&Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      在<command>MERGE</command>中，不要将<literal>DO
      NOTHING</literal>操作视为已处理的元组（&Aacute;lvaro Herrera）
     </para>
<!-- pgdoc-cn_end sig_en=dceae46d30197b9e9aeb75789c121e08 -->

<!-- pgdoc-cn_start sig_en=d894ab277af34f71727f94387f753a3b sig_cn_org=315d161861b66a1cf5fae59030edb3cd source=15.7 
     <para>
      This makes the code's behavior match the documentation.
     </para>
________________________________________________________-->
     <para>
      这样可以使代码的行为与文档匹配。
     </para>
<!-- pgdoc-cn_end sig_en=d894ab277af34f71727f94387f753a3b -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [935277b24] 2022-12-16 13:07:42 -0500
Branch: REL_15_STABLE [ae98debf7] 2022-12-16 13:07:42 -0500
Branch: REL_14_STABLE [ea5ae4cae] 2022-12-16 13:07:42 -0500
-->
<!-- pgdoc-cn_start sig_en=1338437070128fad498290d2ee71313b sig_cn_org=0356eed0d11f167c0dd2c1e8cac3425d source=15.7 
     <para>
      Allow a <literal>WITH RECURSIVE ... CYCLE</literal> CTE
      to access its output column (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      允许一个<literal>WITH RECURSIVE ... CYCLE</literal> CTE
      访问它的输出列（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=1338437070128fad498290d2ee71313b -->

<!-- pgdoc-cn_start sig_en=de32c5a01cd804be2c69dfb8d1a3793b sig_cn_org=d525413a76a040b9a00f9f2a6f5196d2 source=15.7 
     <para>
      A reference to the <literal>SET</literal> column from within the CTE
      would fail with <quote>cache lookup failed for type 0</quote>.
     </para>
________________________________________________________-->
     <para>
      在CTE内部引用<literal>SET</literal>列会导致<quote>cache lookup failed for type 0</quote>。
     </para>
<!-- pgdoc-cn_end sig_en=de32c5a01cd804be2c69dfb8d1a3793b -->
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [ffbb7e65a] 2022-11-25 17:45:00 +0900
Branch: REL_15_STABLE [fc02019c0] 2022-11-25 17:45:01 +0900
Branch: REL_14_STABLE [e52245228] 2022-11-25 17:45:03 +0900
Branch: master [4b3e37993] 2022-12-08 16:15:00 +0900
Branch: REL_15_STABLE [a0bf7a0ec] 2022-12-08 16:15:01 +0900
Branch: REL_14_STABLE [d43a97ef4] 2022-12-08 16:15:03 +0900
-->
<!-- pgdoc-cn_start sig_en=2ef21d1cf240685d55820e763e4d3004 sig_cn_org=8b372d1fcf3557708b47fff3bbf469d6 source=15.7 
     <para>
      Fix handling of pending inserts when doing a bulk insertion to a
      foreign table (Etsuro Fujita)
     </para>
________________________________________________________-->
     <para>
      修复了在向外部表进行批量插入时处理待处理插入的问题（Etsuro Fujita）
     </para>
<!-- pgdoc-cn_end sig_en=2ef21d1cf240685d55820e763e4d3004 -->

<!-- pgdoc-cn_start sig_en=996f3eb7c17aece72c599bdc926872e6 sig_cn_org=67ef6247de9271a139655ec188efd57d source=15.7 
     <para>
      In some cases pending insertions were not flushed to the FDW soon
      enough, leading to logical inconsistencies, for
      example <literal>BEFORE ROW</literal> triggers not seeing rows they
      should be able to see.
     </para>
________________________________________________________-->
     <para>
      在某些情况下，待插入的数据没有及时刷新到FDW，导致逻辑不一致，例如<literal>BEFORE ROW</literal>触发器无法看到它们应该看到的行。
     </para>
<!-- pgdoc-cn_end sig_en=996f3eb7c17aece72c599bdc926872e6 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c9f7f9264] 2023-01-21 13:10:29 -0500
Branch: REL_15_STABLE [9e4288ce6] 2023-01-21 13:10:29 -0500
Branch: REL_14_STABLE [70ec756b0] 2023-01-21 13:10:29 -0500
Branch: REL_13_STABLE [72d611109] 2023-01-21 13:10:29 -0500
Branch: REL_12_STABLE [a5f3f2fce] 2023-01-21 13:10:30 -0500
Branch: REL_11_STABLE [6c122edde] 2023-01-21 13:10:30 -0500
-->
<!-- pgdoc-cn_start sig_en=070659b02d4775c054e2211d73c36521 sig_cn_org=644032bf12fd25848e842e10510380ca source=15.7 
     <para>
      Allow <literal>REPLICA IDENTITY</literal>
      to be set on an index that's not (yet) valid (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      允许在尚未有效的索引上设置<literal>REPLICA IDENTITY</literal>（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=070659b02d4775c054e2211d73c36521 -->

<!-- pgdoc-cn_start sig_en=2830f1d577344d22d0c6f4b55cff745d sig_cn_org=e624d439b22aac979ffa00158d4c38fd source=15.7 
     <para>
      When <application>pg_dump</application> dumps a partitioned index
      that's marked <literal>REPLICA IDENTITY</literal>, it generates a
      command sequence that applies <literal>REPLICA IDENTITY</literal>
      before the partitioned index has been marked valid, causing restore
      to fail.  There seems no very good reason to prohibit doing it in
      that order, so allow it.  The marking will have no effect anyway
      until the index becomes valid.
     </para>
________________________________________________________-->
     <para>
      当<application>pg_dump</application>转储一个被标记为<literal>REPLICA IDENTITY</literal>的分区索引时，
      它生成一个命令序列，在分区索引被标记为有效之前应用<literal>REPLICA IDENTITY</literal>，
      导致恢复失败。似乎没有很好的理由禁止按照这个顺序进行操作，所以允许它。
      标记将不会产生任何效果，直到索引变为有效为止。
     </para>
<!-- pgdoc-cn_end sig_en=2830f1d577344d22d0c6f4b55cff745d -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [2605643a3] 2022-12-03 12:11:33 +0000
Branch: REL_15_STABLE [c67204db6] 2022-12-03 12:14:36 +0000
Branch: REL_14_STABLE [2c7ed9f75] 2022-12-03 12:16:07 +0000
Branch: REL_13_STABLE [3bed88123] 2022-12-03 12:17:47 +0000
Branch: REL_12_STABLE [33f600f04] 2022-12-03 12:18:58 +0000
Branch: REL_11_STABLE [30f9b03a0] 2022-12-03 12:20:02 +0000
-->
<!-- pgdoc-cn_start sig_en=a284fc42412c9ef53c47e7194f96296f sig_cn_org=537c6ee9e275af746dbae7a54c896ca9 source=15.7 
     <para>
      Fix handling of <literal>DEFAULT</literal> markers in rules that
      perform an <command>INSERT</command> from a
      multi-row <literal>VALUES</literal> list (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复在执行从多行<literal>VALUES</literal>列表中进行<command>INSERT</command>的规则中<literal>DEFAULT</literal>标记的处理（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=a284fc42412c9ef53c47e7194f96296f -->

<!-- pgdoc-cn_start sig_en=bc255e7581de3c114d0db00e452dc6d5 sig_cn_org=bff23ebde4669b08d85538f98519b289 source=15.7 
     <para>
      In some cases a <literal>DEFAULT</literal> marker would not get
      replaced with the proper default-value expression, leading to
      an <quote>unrecognized node type</quote> error.
     </para>
________________________________________________________-->
     <para>
      在某些情况下，<literal>DEFAULT</literal>标记不会被正确替换为适当的默认值表达式，
      导致<quote>未识别的节点类型</quote>错误。
</para>
<!-- pgdoc-cn_end sig_en=bc255e7581de3c114d0db00e452dc6d5 -->
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [3161ae86c] 2023-01-12 18:16:34 +0300
Branch: REL_15_STABLE [4dc3f94fa] 2023-01-12 18:17:43 +0300
Branch: REL_14_STABLE [0d9221f1d] 2023-01-12 18:18:04 +0300
Branch: REL_13_STABLE [2ff3ac3b5] 2023-01-12 18:18:31 +0300
Branch: REL_12_STABLE [9e24e4781] 2023-01-12 18:19:19 +0300
-->
<!-- pgdoc-cn_start sig_en=0344f78af7f8f636d02a71544843c502 sig_cn_org=550cfcc6bc7265579e880fdda9dd8805 source=15.7 
     <para>
      Reject uses of undefined variables in <type>jsonpath</type>
      existence checks (Alexander Korotkov, David G. Johnston)
     </para>
________________________________________________________-->
     <para>
      拒绝在<type>jsonpath</type>存在检查中使用未定义的变量（Alexander Korotkov, David G. Johnston）
     </para>
<!-- pgdoc-cn_end sig_en=0344f78af7f8f636d02a71544843c502 -->

<!-- pgdoc-cn_start sig_en=0e157d8f42bf3b14b65c7f6053233636 sig_cn_org=fa4cc0b0ce3a811e7d8ad3368a639d06 source=15.7 
     <para>
      While <type>jsonpath</type> match operators threw an error for an
      undefined variable in the path pattern, the existence operators
      silently treated it as a match.
     </para>
________________________________________________________-->
     <para>
      当<type>jsonpath</type>匹配操作符在路径模式中引用了未定义的变量时，会抛出错误，
      而存在性操作符则会将其视为匹配。
     </para>
<!-- pgdoc-cn_end sig_en=0e157d8f42bf3b14b65c7f6053233636 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b0feda79f] 2022-12-12 16:17:54 -0500
Branch: REL_15_STABLE [d79b76b10] 2022-12-12 16:17:49 -0500
Branch: REL_14_STABLE [a18328bb3] 2022-12-12 16:17:49 -0500
-->
<!-- pgdoc-cn_start sig_en=be797dd1e0d5b0c5c32226917975f6d0 sig_cn_org=cb0ef83453137541f055fb18d2b59e1e source=15.7 
     <para>
      Fix <type>jsonb</type> subscripting to cope with toasted subscript
      values (Tom Lane, David G. Johnston)
     </para>
________________________________________________________-->
     <para>
      修复<type>jsonb</type>下标处理，以处理被分片的下标值（Tom Lane，David G. Johnston）
     </para>
<!-- pgdoc-cn_end sig_en=be797dd1e0d5b0c5c32226917975f6d0 -->

<!-- pgdoc-cn_start sig_en=0fe25317f6979f4015a586e4acb8e173 sig_cn_org=11d9351af25fa5f3b7b04207a26eeebe source=15.7 
     <para>
      Using a text value fetched directly from a table as
      a <type>jsonb</type> subscript was likely to fail.
      Fetches would usually not find any matching element.
      Assignments could store the value with a garbage key,
      although keys long enough to cause that problem are probably rare in
      the field.
     </para>
________________________________________________________-->
     <para>
      直接从表中获取的文本值作为<type>jsonb</type>下标使用很可能会失败。
      通常情况下，获取操作找不到任何匹配的元素。
      赋值可能会将该值存储在一个垃圾键中，尽管在实际应用中，导致该问题的键很可能是罕见的。
     </para>
<!-- pgdoc-cn_end sig_en=0fe25317f6979f4015a586e4acb8e173 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [ffcf6f4cf] 2023-01-26 14:52:19 +1300
Branch: REL_15_STABLE [d9f5345bf] 2023-01-26 14:53:37 +1300
Branch: REL_14_STABLE [2f65b8468] 2023-01-26 14:54:17 +1300
Branch: REL_13_STABLE [1a5afe007] 2023-01-26 14:54:39 +1300
Branch: REL_12_STABLE [b55303792] 2023-01-26 14:55:03 +1300
Branch: REL_11_STABLE [d95dcc9ab] 2023-01-26 14:55:37 +1300
-->
<!-- pgdoc-cn_start sig_en=f4bc730e37d71752d995e9f0171d6485 sig_cn_org=48b94fea0c2dbe72c027ba117eccf805 source=15.7 
     <para>
      Fix edge-case data corruption in parallel hash joins (Dmitry Astapov)
     </para>
________________________________________________________-->
     <para>
      修复并行哈希连接中的边缘情况数据损坏（Dmitry Astapov）
     </para>
<!-- pgdoc-cn_end sig_en=f4bc730e37d71752d995e9f0171d6485 -->

<!-- pgdoc-cn_start sig_en=753908aaa749ba36b67c0f44cf12e170 sig_cn_org=9c8314c4feba97dab22e055f222c85b6 source=15.7 
     <para>
      If the final chunk of a large tuple being written out to a temporary
      file was exactly 32760 bytes, it would be corrupted due to a
      fencepost bug.  The query would typically fail later with
      corrupted-data symptoms.
     </para>
________________________________________________________-->
     <para>
      如果要写出到临时文件的大元组的最后一个块恰好是32760字节，由于一个栅栏错误，它将会损坏。
	  查询通常会在稍后失败，并显示损坏的数据症状。
     </para>
<!-- pgdoc-cn_end sig_en=753908aaa749ba36b67c0f44cf12e170 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [7e8a80d1f] 2023-01-19 13:13:05 +0900
Branch: REL_15_STABLE [49e3a5e71] 2023-01-19 13:13:27 +0900
Branch: REL_14_STABLE [2e21e2857] 2023-01-19 13:13:28 +0900
Branch: REL_13_STABLE [fed4e92f3] 2023-01-19 13:13:30 +0900
Branch: REL_12_STABLE [162a48287] 2023-01-19 13:13:32 +0900
Branch: REL_11_STABLE [0c2f34af7] 2023-01-19 13:13:34 +0900
-->
<!-- pgdoc-cn_start sig_en=9e7c334ef3c520214cdec453e55a8508 sig_cn_org=06b591772aa3226e3bb5960aab36ff04 source=15.7 
     <para>
      Honor non-default settings
      of <varname>checkpoint_completion_target</varname>
      (Bharath Rupireddy)
     </para>
________________________________________________________-->
     <para>
      尊重<varname>checkpoint_completion_target</varname>的非默认设置
      (Bharath Rupireddy)
     </para>
<!-- pgdoc-cn_end sig_en=9e7c334ef3c520214cdec453e55a8508 -->

<!-- pgdoc-cn_start sig_en=0be1e97720d59a2f9b8468ce8d07c60f sig_cn_org=c194c9f754df0168ebbac0a54795cea6 source=15.7 
     <para>
      Internal state was not updated after a change
      in <varname>checkpoint_completion_target</varname>, possibly
      resulting in performing checkpoint I/O faster or slower than
      desired, especially if that setting was changed on-the-fly.
     </para>
________________________________________________________-->
     <para>
      内部状态在<varname>checkpoint_completion_target</varname>更改后未更新，可能导致执行检查点I/O的速度比预期更快或更慢，特别是如果该设置是动态更改的。
     </para>
<!-- pgdoc-cn_end sig_en=0be1e97720d59a2f9b8468ce8d07c60f -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [44e9e3426] 2023-01-19 12:23:20 -0500
Branch: REL_15_STABLE [abe203304] 2023-01-19 12:23:20 -0500
Branch: REL_14_STABLE [103450724] 2023-01-19 12:23:20 -0500
Branch: REL_13_STABLE [1b9a0b96a] 2023-01-19 12:23:20 -0500
Branch: REL_12_STABLE [87591db19] 2023-01-19 12:23:20 -0500
Branch: REL_11_STABLE [0a269527f] 2023-01-19 12:23:20 -0500
-->
<!-- pgdoc-cn_start sig_en=5ef1cce4115cecacdd80c08fe1a0c462 sig_cn_org=d655768bb00743b0b93d3daefa6c5ce7 source=15.7 
     <para>
      Log the correct ending timestamp
      in <varname>recovery_target_xid</varname> mode (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在<varname>recovery_target_xid</varname>模式下记录正确的结束时间戳（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=5ef1cce4115cecacdd80c08fe1a0c462 -->

<!-- pgdoc-cn_start sig_en=72eaacbf1925278b1ccced6248e6f903 sig_cn_org=aa8df03e103e83f6728082a6cd4fd58a source=15.7 
     <para>
      When ending recovery based on the <varname>recovery_target_xid</varname>
      setting with <varname>recovery_target_inclusive</varname>
      = <literal>off</literal>, we printed an incorrect timestamp (always
      2000-01-01) in the <quote>recovery stopping before
      ... transaction</quote> log message.
     </para>
________________________________________________________-->
     <para>
      当基于<varname>recovery_target_xid</varname>设置结束恢复时，如果<varname>recovery_target_inclusive</varname>
      = <literal>off</literal>，我们在<quote>在...事务之前停止恢复</quote>日志消息中打印了一个不正确的时间戳（始终为2000-01-01）。
     </para>
<!-- pgdoc-cn_end sig_en=72eaacbf1925278b1ccced6248e6f903 -->
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [1561612e3] 2023-01-16 09:44:04 +0100
Branch: REL_15_STABLE [ac01fa647] 2023-01-16 09:45:03 +0100
Branch: REL_14_STABLE [f463335e1] 2023-01-16 09:48:09 +0100
Branch: REL_13_STABLE [cf74b6ead] 2023-01-16 09:54:15 +0100
-->
<!-- pgdoc-cn_start sig_en=5e204660c5d704f37eb1279cd5818eab sig_cn_org=7e6ec8f4a38935a2dcde387e7929dfcb source=15.7 
     <para>
      Improve error reporting for some buffered file read failures
      (Peter Eisentraut)
     </para>
________________________________________________________-->
     <para>
      改进某些缓冲文件读取失败的错误报告（Peter Eisentraut）
     </para>
<!-- pgdoc-cn_end sig_en=5e204660c5d704f37eb1279cd5818eab -->

<!-- pgdoc-cn_start sig_en=266bec560a628f65de502277c62e8ff6 sig_cn_org=beda55b30b09f315d3838ee820cbb428 source=15.7 
     <para>
      Correctly report a short read, giving the numbers of bytes desired
      and actually read, instead of reporting an irrelevant error code.
      Most places got this right already, but some recently-written
      replication logic did not.
     </para>
________________________________________________________-->
     <para>
      正确报告短读取，给出所需字节数和实际读取的字节数，而不是报告无关的错误代码。
      大多数地方已经做到了，但最近编写的一些复制逻辑没有做到。
     </para>
<!-- pgdoc-cn_end sig_en=266bec560a628f65de502277c62e8ff6 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [647fa5005] 2023-01-15 17:32:09 -0500
Branch: REL_15_STABLE [db9127c58] 2023-01-15 17:32:09 -0500
-->
<!-- pgdoc-cn_start sig_en=729b4ee23aaa3f59b8a3312fc5f8b13b sig_cn_org=63cc5d927aba2ebe211b432afa17f46f source=15.7 
     <para>
      Remove arbitrary limit on number of elements
      in <type>int2vector</type> and <type>oidvector</type> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      移除<type>int2vector</type>和<type>oidvector</type>中元素数量的任意限制（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=729b4ee23aaa3f59b8a3312fc5f8b13b -->

<!-- pgdoc-cn_start sig_en=d7f86b189c9e9b9b2bf08c54f4bccf30 sig_cn_org=002914ebec2daf44a9fb002b1421bf01 source=15.7 
     <para>
      The input functions for these types previously rejected more than
      100 elements.  With the introduction of the logical replication
      column list feature, it's necessary to
      accept <type>int2vector</type>s having up to 1600 columns,
      otherwise long column lists cause logical-replication failures.
     </para>
________________________________________________________-->
     <para>
      这些类型的输入函数以前拒绝了超过100个元素。随着逻辑复制列列表功能的引入，
      必须接受具有多达1600列的<type>int2vector</type>，否则长列列表会导致逻辑复制失败。
     </para>
<!-- pgdoc-cn_end sig_en=d7f86b189c9e9b9b2bf08c54f4bccf30 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [20432f873] 2022-12-13 14:23:58 -0500
Branch: REL_15_STABLE [18431ee6f] 2022-12-13 14:23:59 -0500
Branch: REL_14_STABLE [ae47f8a96] 2022-12-13 14:23:59 -0500
Branch: REL_13_STABLE [942cc240f] 2022-12-13 14:23:59 -0500
Branch: REL_12_STABLE [1cca4a75f] 2022-12-13 14:23:59 -0500
Branch: REL_11_STABLE [f48aa5df4] 2022-12-13 14:23:59 -0500
-->
<!-- pgdoc-cn_start sig_en=d35c1ba1cbf3177619a2fe368aef7fa3 sig_cn_org=345b52ce0c58d8be2605e7160acb15bd source=15.7 
     <para>
      In extended query protocol, avoid an immediate commit
      after <command>ANALYZE</command> if we're running a pipeline
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在扩展查询协议中，在运行管道时，避免在<command>ANALYZE</command>之后立即提交（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=d35c1ba1cbf3177619a2fe368aef7fa3 -->

<!-- pgdoc-cn_start sig_en=c5b22e02cb8efd91dbb007ffe70d9e65 sig_cn_org=2006307432a6a277b0cd34d44b8f8389 source=15.7 
     <para>
      If there's not been an explicit <command>BEGIN
      TRANSACTION</command>, <command>ANALYZE</command> would take it on
      itself to commit, which should not happen within a pipelined series
      of commands.
     </para>
________________________________________________________-->
     <para>
      如果没有明确的<command>BEGIN TRANSACTION</command>，<command>ANALYZE</command>会自行提交，
	  这在一系列命令中不应该发生。
     </para>
<!-- pgdoc-cn_end sig_en=c5b22e02cb8efd91dbb007ffe70d9e65 -->
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [e52daaabf] 2023-01-21 06:08:00 -0800
Branch: REL_15_STABLE [b152bb7b2] 2023-01-21 06:08:03 -0800
Branch: REL_14_STABLE [6900aea67] 2023-01-21 06:08:04 -0800
Branch: REL_13_STABLE [a9bccffe5] 2023-01-21 06:08:04 -0800
Branch: REL_12_STABLE [e75b5c855] 2023-01-21 06:08:04 -0800
Branch: REL_11_STABLE [8f70de7e0] 2023-01-21 06:08:05 -0800
-->
<!-- pgdoc-cn_start sig_en=c60a6935af9d94ef6e5f0ff5ade40166 sig_cn_org=b9dcbae36627ee26bf5105d553bc2a54 source=15.7 
     <para>
      Reject cancel request packets having the wrong length
      (Andrey Borodin)
     </para>
________________________________________________________-->
     <para>
      拒绝具有错误长度的取消请求数据包
      （Andrey Borodin）
     </para>
<!-- pgdoc-cn_end sig_en=c60a6935af9d94ef6e5f0ff5ade40166 -->

<!-- pgdoc-cn_start sig_en=0912ef785051fa2bab00860726d5bb58 sig_cn_org=cb7c6195c034998577bf7ee6433ef071 source=15.7 
     <para>
      The server would process a cancel request even if its length word
      was too small.  This led to reading beyond the end of the allocated
      buffer.  In theory that could cause a segfault, but it seems quite
      unlikely to happen in practice, since the buffer would have to be
      very close to the end of memory.  The more likely outcome was a bogus
      log message about wrong backend PID or cancel code.  Complain about
      the wrong length, instead.
     </para>
________________________________________________________-->
     <para>
      服务器会处理取消请求，即使其长度字数太小。这会导致超出分配缓冲区的末尾。
      理论上可能会导致段错误，但在实践中似乎不太可能发生，因为缓冲区必须非常接近内存末尾。
      更可能的结果是关于错误的后端PID或取消代码的虚假日志消息。而不是抱怨错误的长度。
     </para>
<!-- pgdoc-cn_end sig_en=0912ef785051fa2bab00860726d5bb58 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [94985c210] 2022-12-10 19:27:20 +1300
Branch: REL_15_STABLE [04788ee4c] 2022-12-10 19:27:53 +1300
-->
<!-- pgdoc-cn_start sig_en=6bf5e9c95aa5c245c2d157294583d23e sig_cn_org=e6cde36073654133152a020d810e5d6d source=15.7 
     <para>
      Fix planner preprocessing oversights for window function run-condition
      expressions (Richard Guo, David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复窗口函数运行条件表达式的计划器预处理问题（Richard Guo，David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=6bf5e9c95aa5c245c2d157294583d23e -->

<!-- pgdoc-cn_start sig_en=9ec723320d7c7edf21878f22a2bacb05 sig_cn_org=78df246ea56e8744498116e3c2277095 source=15.7 
     <para>
      This could lead to planner errors such as <quote>WindowFunc not
      found in subplan target lists</quote>.
     </para>
________________________________________________________-->
     <para>
      这可能导致规划器错误，例如<quote>在子计划目标列表中找不到WindowFunc</quote>。
     </para>
<!-- pgdoc-cn_end sig_en=9ec723320d7c7edf21878f22a2bacb05 -->
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [a85832722] 2022-12-07 00:09:36 +1300
Branch: REL_15_STABLE [2a535620c] 2022-12-07 00:10:21 +1300
-->
<!-- pgdoc-cn_start sig_en=4a43d6c109d407f9561289856cbe2a7d sig_cn_org=548185228c8eb216c75632cd76aa5748 source=15.7 
     <para>
      Fix possible dangling-pointer access during execution of window
      function run-condition expressions (David Rowley)
     </para>
________________________________________________________-->
     <para>
      修复在执行窗口函数运行条件表达式期间可能出现的悬空指针访问（David Rowley）
     </para>
<!-- pgdoc-cn_end sig_en=4a43d6c109d407f9561289856cbe2a7d -->

<!-- pgdoc-cn_start sig_en=ddf4bebdb0c8c3b56b75b436537c051e sig_cn_org=7d6bbea2a2bfefec87a9d0d6fad2e1ed source=15.7 
     <para>
      In practice, because the run-condition optimization is only applied
      to certain window functions that happen to all
      return <type>int8</type>, this only manifested as a problem on
      32-bit builds.
     </para>
________________________________________________________-->
     <para>
      实际上，由于运行条件优化仅适用于某些窗口函数，这些函数恰好都返回<type>int8</type>，
      这只在32位构建中表现为问题。
     </para>
<!-- pgdoc-cn_end sig_en=ddf4bebdb0c8c3b56b75b436537c051e -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5beb7881f] 2022-12-22 10:35:02 -0500
Branch: REL_15_STABLE [1a3daa5bb] 2022-12-22 10:35:02 -0500
Branch: REL_14_STABLE [97431d673] 2022-12-22 10:35:02 -0500
Branch: REL_13_STABLE [4fceb454f] 2022-12-22 10:35:03 -0500
Branch: REL_12_STABLE [d572003f7] 2022-12-22 10:35:03 -0500
Branch: REL_11_STABLE [8cd700cc5] 2022-12-22 10:35:03 -0500
-->
<!-- pgdoc-cn_start sig_en=b663bb314b73556316bc6d8f396fe013 sig_cn_org=fe194851a2fc994bf19252fb54e94f14 source=15.7 
     <para>
      Add recursion and looping defenses in subquery pullup (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      在子查询提取中添加递归和循环防御（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=b663bb314b73556316bc6d8f396fe013 -->

<!-- pgdoc-cn_start sig_en=3087da18f5da00123b8813fe44e1bde3 sig_cn_org=2232be2ef057071b4bb9acfc433c0f4e source=15.7 
     <para>
      A contrived query can result in deep recursion and unreasonable
      amounts of time spent trying to flatten subqueries.  A proper fix
      for that seems unduly invasive for a back-patch, but we can at least
      add stack depth checks and an interrupt check to allow the query to
      be cancelled.
     </para>
________________________________________________________-->
     <para>
      一个人为的查询可能导致深度递归和花费不合理的时间来尝试展平子查询。对此的适当修复似乎对于一个回溯补丁来说过于侵入性，
	  但我们至少可以添加堆栈深度检查和中断检查，以允许取消查询。
     </para>
<!-- pgdoc-cn_end sig_en=3087da18f5da00123b8813fe44e1bde3 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d69d01ba9] 2022-12-05 12:36:40 -0500
Branch: REL_15_STABLE [c959f84c2] 2022-12-05 12:36:41 -0500
Branch: REL_14_STABLE [dc3648f65] 2022-12-05 12:36:41 -0500
Branch: master [e76913802] 2022-12-04 13:48:12 -0500
Branch: REL_15_STABLE [834d97c32] 2022-12-04 13:48:12 -0500
Branch: REL_14_STABLE [ce093aa18] 2022-12-04 13:48:12 -0500
-->
<!-- pgdoc-cn_start sig_en=1bda77985b685372c6299891340a3ec9 sig_cn_org=7ba1cbde8764e40a003eb58ec0b8c073 source=15.7 
     <para>
      Fix planner issues when combining Memoize nodes with partitionwise
      joins or parameterized nestloops (Richard Guo)
     </para>
________________________________________________________-->
     <para>
      修复了将Memoize节点与分区连接或参数化嵌套循环结合时的规划器问题（Richard Guo）
     </para>
<!-- pgdoc-cn_end sig_en=1bda77985b685372c6299891340a3ec9 -->

<!-- pgdoc-cn_start sig_en=b6a61a0eebc9f68769fe61cccd645404 sig_cn_org=6666be87cd0e25a9f7102d1444156259 source=15.7 
     <para>
      These errors could lead to not using Memoize in contexts where it
      would be useful, or possibly to wrong query plans.
     </para>
________________________________________________________-->
     <para>
      这些错误可能导致在可能有用的情况下不使用Memoize，或者可能导致错误的查询计划。
     </para>
<!-- pgdoc-cn_end sig_en=b6a61a0eebc9f68769fe61cccd645404 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fe12f2f8f] 2022-12-04 13:17:18 -0500
Branch: REL_15_STABLE [bf8fd64ff] 2022-12-04 13:17:18 -0500
Branch: REL_14_STABLE [ec3daeec3] 2022-12-04 13:17:18 -0500
Branch: REL_13_STABLE [4ebca555c] 2022-12-04 13:17:18 -0500
Branch: REL_12_STABLE [1ff549e84] 2022-12-04 13:17:18 -0500
Branch: REL_11_STABLE [2df073313] 2022-12-04 13:17:18 -0500
-->
<!-- pgdoc-cn_start sig_en=66390715e9c6d3979c404150636058b6 sig_cn_org=f2fa045e94f021cf7f7f255209377806 source=15.7 
     <para>
      Fix partitionwise-join code to tolerate failure to produce a plan for
      each partition (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复按分区连接代码，以容忍不能对每个分区生成计划的情况（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=66390715e9c6d3979c404150636058b6 -->

<!-- pgdoc-cn_start sig_en=1fa6e8d98087ccc36c8c5d2a661cc1ac sig_cn_org=dc8cfa262ef81f90248408e69404f763 source=15.7 
     <para>
      This could result in <quote>could not devise a query plan for the
      given query</quote> errors.
     </para>
________________________________________________________-->
     <para>
      这可能导致<quote>无法为给定查询设计查询计划</quote>错误。
     </para>
<!-- pgdoc-cn_end sig_en=1fa6e8d98087ccc36c8c5d2a661cc1ac -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9c6ad5eaa] 2022-11-22 14:40:20 -0500
Branch: REL_15_STABLE [2debceed2] 2022-11-22 14:40:44 -0500
Branch: REL_14_STABLE [bd06fe4de] 2022-11-22 14:40:45 -0500
Branch: REL_13_STABLE [6e639267a] 2022-11-22 14:40:45 -0500
Branch: REL_12_STABLE [ec10b6139] 2022-11-22 14:40:45 -0500
Branch: REL_11_STABLE [b96a096db] 2022-11-22 14:40:46 -0500
-->
<!-- pgdoc-cn_start sig_en=cabbf42c069ed0a6f10d3ba27d853981 sig_cn_org=24d6949814cc7b61d773bd0424247b8f source=15.7 
     <para>
      Limit the amount of cleanup work done
      by <function>get_actual_variable_range</function> (Simon Riggs)
     </para>
________________________________________________________-->
     <para>
      限制由<function>get_actual_variable_range</function>（Simon Riggs）执行的清理工作量。
     </para>
<!-- pgdoc-cn_end sig_en=cabbf42c069ed0a6f10d3ba27d853981 -->

<!-- pgdoc-cn_start sig_en=aed295fc07187c223ec7381ea9a95db4 sig_cn_org=530060438894c686d215881a27af08dd source=15.7 
     <para>
      Planner runs occurring just after deletion of a large number of
      tuples appearing at the end of an index could expend significant
      amounts of work setting the <quote>killed</quote> bits for those
      index entries.  Limit the amount of work done in any one query by
      giving up on this process after examining 100 heap pages.  All the
      cleanup will still happen eventually, but without so large a
      performance hiccup.
     </para>
________________________________________________________-->
     <para>
      在删除大量出现在索引末尾的元组后发生的Planner运行可能会花费大量工作来设置这些索引条目的<quote>已删除</quote>位。
      通过在检查100个堆页面后放弃这个过程来限制任一查询中所做的工作量。所有的清理最终仍会发生，但不会有如此大的性能波动。
     </para>
<!-- pgdoc-cn_end sig_en=aed295fc07187c223ec7381ea9a95db4 -->
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [cb2e7ddfe] 2022-12-02 18:10:30 -0800
Branch: REL_15_STABLE [c6a60471a] 2022-12-02 18:07:47 -0800
-->
<!-- pgdoc-cn_start sig_en=c5cafb0b79148df068032211f0ad122d sig_cn_org=f5f0c8e9a4a1e05b9581b21f6fde184a source=15.7 
     <para>
      Prevent the statistics machinery from getting confused when a
      relation's relkind changes (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      防止统计机制在关系的relkind发生变化时混淆（Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=c5cafb0b79148df068032211f0ad122d -->

<!-- pgdoc-cn_start sig_en=e00bf71993b72d2e1c3746c187f8a0c8 sig_cn_org=05e79a834ca0617ade783652258ba87e source=15.7 
     <para>
      Converting a table to a view could lead to crashes or assertion
      failures.
     </para>
________________________________________________________-->
     <para>
      将表转换为视图可能导致崩溃或断言失败。
     </para>
<!-- pgdoc-cn_end sig_en=e00bf71993b72d2e1c3746c187f8a0c8 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1dd6700f4] 2022-12-01 11:38:14 -0500
Branch: REL_15_STABLE [a711b36e5] 2022-12-01 11:38:15 -0500
Branch: REL_14_STABLE [de0ff6088] 2022-12-01 11:38:15 -0500
-->
<!-- pgdoc-cn_start sig_en=016926e81297ac13407300008f188eda sig_cn_org=2823347b6fea9926bd2ae14c8a2981e6 source=15.7 
     <para>
      Fix under-parenthesized display of <literal>AT TIME ZONE</literal>
      constructs (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<literal>AT TIME ZONE</literal>构造中括号不足的显示问题（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=016926e81297ac13407300008f188eda -->

<!-- pgdoc-cn_start sig_en=bb204bb501fa906955573c4ecd87db15 sig_cn_org=bd5ce7fcfe09c92fe5e18d1697e1cfbf source=15.7 
     <para>
      This could result in dump/restore failures for rules or views in
      which an argument of <literal>AT TIME ZONE</literal> is itself an
      expression.
     </para>
________________________________________________________-->
     <para>
      这可能导致规则或视图中<literal>AT TIME ZONE</literal>的参数本身是一个表达式而导致的dump/restore失败。
     </para>
<!-- pgdoc-cn_end sig_en=bb204bb501fa906955573c4ecd87db15 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8b47ccb62] 2022-11-29 11:46:33 -0500
Branch: REL_15_STABLE [5dfc2b753] 2022-11-29 11:46:33 -0500
Branch: REL_14_STABLE [7715a3c24] 2022-11-29 11:46:33 -0500
-->
<!-- pgdoc-cn_start sig_en=541f369d782f1889058b99653afa80c9 sig_cn_org=36fe12eff7857763f2f5c514b1bc9cc4 source=15.7 
     <para>
      Prevent clobbering of cached parsetrees for utility statements in
      SQL functions (Tom Lane, Daniel Gustafsson)
     </para>
________________________________________________________-->
     <para>
      防止SQL函数中utility语句的缓存解析树被覆盖（Tom Lane，Daniel Gustafsson）
     </para>
<!-- pgdoc-cn_end sig_en=541f369d782f1889058b99653afa80c9 -->

<!-- pgdoc-cn_start sig_en=9648d168fca7fdcbf4adbe80205ccda1 sig_cn_org=5f81f57716bf92ed16118bf1251722cb source=15.7 
     <para>
      If a SQL-language function executes the same utility command more
      than once within a single calling query, it could crash or report
      strange errors such as <quote>unrecognized node type</quote>.
     </para>
________________________________________________________-->
     <para>
      如果一个SQL语言函数在单个调用查询中执行相同的实用命令超过一次，它可能会崩溃或报告诸如<quote>未识别的节点类型</quote>等奇怪错误。
     </para>
<!-- pgdoc-cn_end sig_en=9648d168fca7fdcbf4adbe80205ccda1 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5644d6f90] 2022-11-21 17:07:29 -0500
Branch: REL_15_STABLE [0353db996] 2022-11-21 17:07:07 -0500
Branch: REL_14_STABLE [1b9c04b13] 2022-11-21 17:07:07 -0500
Branch: REL_13_STABLE [74670688f] 2022-11-21 17:07:07 -0500
Branch: REL_12_STABLE [1aed4c4fd] 2022-11-21 17:07:07 -0500
Branch: REL_11_STABLE [c0eed8891] 2022-11-21 17:07:07 -0500
-->
<!-- pgdoc-cn_start sig_en=e21ee68642dc876ce0aff8f7713027b4 sig_cn_org=d682ec7f1765168635f9da1fee6c685d source=15.7 
     <para>
      Ensure that execution of full-text-search queries can be cancelled
      while they are performing phrase matches (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      确保在执行全文搜索查询时可以取消，同时执行短语匹配（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=e21ee68642dc876ce0aff8f7713027b4 -->
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [edf12e7bb] 2022-12-01 11:49:15 -0800
Branch: REL_15_STABLE [9377b4f30] 2022-12-01 11:55:59 -0800
Branch: REL_14_STABLE [47e1224d5] 2022-12-01 11:53:53 -0800
Branch: REL_13_STABLE [a844052b5] 2022-12-01 11:52:06 -0800
Branch: REL_12_STABLE [f98c4fb1d] 2022-12-01 11:49:43 -0800
-->
<!-- pgdoc-cn_start sig_en=d616311316817f1160227f4e70aac394 sig_cn_org=8abbf4ab69367862d5b32833dfb566a4 source=15.7 
     <para>
      Fix memory leak in hashing strings with nondeterministic collations
      (Jeff Davis)
     </para>
________________________________________________________-->
     <para>
      修复在具有不确定性排序的字符串哈希中的内存泄漏（Jeff Davis）
     </para>
<!-- pgdoc-cn_end sig_en=d616311316817f1160227f4e70aac394 -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [6c6d6ba3e] 2023-01-24 09:25:36 +0530
Branch: REL_15_STABLE [267135d01] 2023-01-24 09:12:04 +0530
Branch: REL_14_STABLE [fd270b728] 2023-01-24 09:02:05 +0530
-->
<!-- pgdoc-cn_start sig_en=5a6eb91ccd2d406f9465846e65e08026 sig_cn_org=60fb4e519d1ba9bd6f7d4b7b5f29a233 source=15.7 
     <para>
      Fix deadlock between <command>DROP DATABASE</command> and logical
      replication worker process (Hou Zhijie)
     </para>
________________________________________________________-->
     <para>
      修复<command>DROP DATABASE</command>和逻辑复制工作进程之间的死锁（侯志杰）
     </para>
<!-- pgdoc-cn_end sig_en=5a6eb91ccd2d406f9465846e65e08026 -->

<!-- pgdoc-cn_start sig_en=8e85f82f58ba0bf006ad35d639b4034c sig_cn_org=96efb714f4f88a893d4e6045c51c82a7 source=15.7 
     <para>
      This was caused by an ill-advised choice to block interrupts while
      creating a logical replication slot in the worker.  In version 15
      that could lead to an undetected deadlock.  In version 14, no
      deadlock has been observed, but it's still a bad idea to block
      interrupts while waiting for network I/O.
     </para>
________________________________________________________-->
     <para>
      这是由于在worker中创建逻辑复制插槽时阻止中断的不明智选择造成的。在版本15中，这可能导致无法检测到的死锁。在版本14中，尚未观察到死锁，但在等待网络I/O时阻止中断仍然是一个坏主意。
     </para>
<!-- pgdoc-cn_end sig_en=8e85f82f58ba0bf006ad35d639b4034c -->
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [bc54ef4ec] 2023-01-23 18:27:42 -0800
Branch: REL_15_STABLE [704a330a9] 2023-01-23 18:27:45 -0800
Branch: REL_14_STABLE [0a796b8b3] 2023-01-23 18:27:48 -0800
Branch: REL_13_STABLE [c5864805b] 2023-01-23 18:27:51 -0800
Branch: REL_12_STABLE [92fc12787] 2023-01-23 18:27:55 -0800
Branch: REL_11_STABLE [243373159] 2023-01-23 18:27:58 -0800
-->
<!-- pgdoc-cn_start sig_en=1827ed936e481dd78d2e0647679d80b7 sig_cn_org=c4a476ac8a3fbe0dcc7de26044ad3a1d source=15.7 
     <para>
      Clean up the <application>libpq</application> connection object
      after a failed replication connection attempt (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      在失败的复制连接尝试之后清理<application>libpq</application>连接对象
      (Andres Freund)
     </para>
<!-- pgdoc-cn_end sig_en=1827ed936e481dd78d2e0647679d80b7 -->

<!-- pgdoc-cn_start sig_en=bcd25616cb4895fdc5d5ccba9608845f sig_cn_org=9a7fdd8d44cc18352f1664ba6099d4df source=15.7 
     <para>
      The previous coding leaked the connection object.  In background
      code paths that's pretty harmless because the calling process will
      give up and exit.  But in commands such as <command>CREATE
      SUBSCRIPTION</command>, such a failure resulted in a small
      session-lifespan memory leak.
     </para>
________________________________________________________-->
     <para>
      之前的编码泄漏了连接对象。在后台代码路径中，这是相当无害的，因为调用进程会放弃并退出。
	  但在诸如<command>CREATE SUBSCRIPTION</command>之类的命令中，这样的失败会导致一个小的会话生命周期内存泄漏。
     </para>
<!-- pgdoc-cn_end sig_en=bcd25616cb4895fdc5d5ccba9608845f -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8242752f9] 2022-11-29 15:43:17 -0500
Branch: REL_15_STABLE [55fa993d7] 2022-11-29 15:43:17 -0500
Branch: REL_14_STABLE [06998eab1] 2022-11-29 15:43:17 -0500
Branch: REL_13_STABLE [6e8ad1152] 2022-11-29 15:43:17 -0500
Branch: REL_12_STABLE [c4a153d77] 2022-11-29 15:43:17 -0500
Branch: REL_11_STABLE [a6c9e1db2] 2022-11-29 15:43:17 -0500
-->
<!-- pgdoc-cn_start sig_en=a567fb18f8fa0140b387eddd22f068b5 sig_cn_org=6ded71ba16ee9cc08868939f9fbc8fa7 source=15.7 
     <para>
      In hot-standby servers, reduce processing effort for tracking XIDs
      known to be active on the primary (Simon Riggs, Michail Nikolaev)
     </para>
________________________________________________________-->
     <para>
      在热备用服务器中，减少跟踪已知在主服务器上活动的XIDs的处理工作（Simon Riggs，Michail Nikolaev）
     </para>
<!-- pgdoc-cn_end sig_en=a567fb18f8fa0140b387eddd22f068b5 -->

<!-- pgdoc-cn_start sig_en=1ecceffd3a15b0d5a07444b626471333 sig_cn_org=bdbe75fa8e7eca17df0e358d67483f70 source=15.7 
     <para>
      Insufficiently-aggressive cleanup of the KnownAssignedXids array
      could lead to poor performance, particularly
      when <varname>max_connections</varname> is set to a large value on
      the standby.
     </para>
________________________________________________________-->
     <para>
      对KnownAssignedXids数组的清理不够积极可能导致性能不佳，特别是在备用机上将<varname>max_connections</varname>设置为较大值时。
     </para>
<!-- pgdoc-cn_end sig_en=1ecceffd3a15b0d5a07444b626471333 -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [0557e1770] 2022-11-22 10:56:07 +0100
Branch: REL_15_STABLE [1ad033df1] 2022-11-22 10:56:07 +0100
Branch: REL_14_STABLE [1b3ed7571] 2022-11-22 10:56:07 +0100
Branch: REL_13_STABLE [36eeb37cd] 2022-11-22 10:56:07 +0100
-->
<!-- pgdoc-cn_start sig_en=2b83ed7c73e4658cf7010f53b9c0dc81 sig_cn_org=b3a8c06ccc38958d3986e3be70d6af10 source=15.7 
     <para>
      Ignore invalidated logical-replication slots while determining
      oldest catalog xmin (Sirisha Chamarthi)
     </para>
________________________________________________________-->
     <para>
      在确定最旧的catalog xmin时忽略无效的逻辑复制插槽（Sirisha Chamarthi）
     </para>
<!-- pgdoc-cn_end sig_en=2b83ed7c73e4658cf7010f53b9c0dc81 -->

<!-- pgdoc-cn_start sig_en=e928f0da1e7dd243baaa9a59f8a98837 sig_cn_org=d95ae9ef64c0d2bd2176bdddd003dc47 source=15.7 
     <para>
      A replication slot could prevent cleanup of dead tuples in the
      system catalogs even after it becomes invalidated due to
      exceeding <varname>max_slot_wal_keep_size</varname>.  Thus, failure
      of a replication consumer could lead to indefinitely-large catalog
      bloat.
     </para>
________________________________________________________-->
     <para>
      复制槽即使在因超过<varname>max_slot_wal_keep_size</varname>而失效后，
      也可以防止系统目录中死元组的清理。因此，复制消费者的故障可能导致目录
      无限增大。
     </para>
<!-- pgdoc-cn_end sig_en=e928f0da1e7dd243baaa9a59f8a98837 -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [2b6df0546] 2023-01-07 12:17:14 +0530
Branch: REL_15_STABLE [18b81258a] 2023-01-07 12:04:33 +0530
Branch: REL_14_STABLE [b2cc5b810] 2023-01-07 11:52:41 +0530
-->
<!-- pgdoc-cn_start sig_en=5c6c004ed4e8138c557f2b0d7c0d62cc sig_cn_org=cca097f543317c80183f3ae4dcd0924b source=15.7 
     <para>
      In logical decoding, notify the remote node when a transaction is
      detected to have crashed (Hou Zhijie)
     </para>
________________________________________________________-->
     <para>
      在逻辑解码中，当检测到事务崩溃时，通知远程节点（侯志杰）
     </para>
<!-- pgdoc-cn_end sig_en=5c6c004ed4e8138c557f2b0d7c0d62cc -->

<!-- pgdoc-cn_start sig_en=d42eda76c7aed10f2a3eef0335a6dfb5 sig_cn_org=2aaec0910c29d68c68db2e03ba5604da source=15.7 
     <para>
      After a server restart, we'll re-stream the changes for transactions
      occurring shortly before the restart.  Some of these transactions
      probably never completed; when we realize that one didn't we throw
      away the relevant decoding state locally, but we neglected to tell
      the subscriber about it.  That led to the subscriber keeping useless
      streaming files until it's next restarted.
     </para>
________________________________________________________-->
     <para>
      在服务器重新启动后，我们将重新流式传输在重新启动前发生的事务更改。这些事务中有一些可能从未完成；
	  当我们意识到其中一个没有完成时，我们会在本地丢弃相关的解码状态，但我们忽略了告诉订阅者。
	  这导致订阅者保留无用的流式传输文件，直到下次重新启动。
</para>
<!-- pgdoc-cn_end sig_en=d42eda76c7aed10f2a3eef0335a6dfb5 -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: REL_15_STABLE [898ef41bf] 2022-11-25 09:38:03 +0530
Branch: REL_14_STABLE [9f2cc1a73] 2022-11-25 09:25:50 +0530
Branch: REL_13_STABLE [4ec157c15] 2022-11-25 09:15:31 +0530
Branch: REL_12_STABLE [aa9d916f6] 2022-11-25 09:00:15 +0530
Branch: REL_11_STABLE [9b788aafd] 2022-11-25 08:56:54 +0530
-->
<!-- pgdoc-cn_start sig_en=3d3611ba4d039ab5ab021402c138746a sig_cn_org=f7b6c564cd6e6b5baa1ebb1428a11d34 source=15.7 
     <para>
      Fix uninitialized-memory usage in logical decoding (Masahiko Sawada)
     </para>
________________________________________________________-->
     <para>
      修复逻辑解码中未初始化内存的使用（Masahiko Sawada）
     </para>
<!-- pgdoc-cn_end sig_en=3d3611ba4d039ab5ab021402c138746a -->

<!-- pgdoc-cn_start sig_en=818386e3624bf9e93d309db0a32ecb58 sig_cn_org=6fb6c99bd93ef33b38ad0b62936bc674 source=15.7 
     <para>
      In certain cases, resumption of logical decoding could try to re-use
      XID data that had already been freed, leading to unpredictable
      behavior.
     </para>
________________________________________________________-->
     <para>
      在某些情况下，逻辑解码的恢复可能尝试重新使用已经被释放的XID数据，导致行为不可预测。
     </para>
<!-- pgdoc-cn_end sig_en=818386e3624bf9e93d309db0a32ecb58 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [5ad165d2c] 2023-01-12 13:40:33 +0900
Branch: REL_15_STABLE [6f25e4877] 2023-01-12 13:41:22 +0900
-->
<!-- pgdoc-cn_start sig_en=17a857484b36d98ac08d68142c14344d sig_cn_org=01cdfe0de39f42c13e5fd06425e7b1c6 source=15.7 
     <para>
      Acquire spinlock while updating shared state during logical decoding
      context creation (Masahiko Sawada)
     </para>
________________________________________________________-->
     <para>
      在逻辑解码上下文创建期间更新共享状态时获取自旋锁（Masahiko Sawada）
     </para>
<!-- pgdoc-cn_end sig_en=17a857484b36d98ac08d68142c14344d -->

<!-- pgdoc-cn_start sig_en=564a1eb0a747b0af54efe40c997cd1d6 sig_cn_org=4b52d43a031c3d69695997c505386c8b source=15.7 
     <para>
      We neglected to acquire the appropriate lock while updating data
      about two-phase transactions, potentially allowing other processes
      to see inconsistent data.
     </para>
________________________________________________________-->
     <para>
      在更新有关两阶段事务的数据时，我们忽略了获取适当的锁，这可能导致其他进程看到不一致的数据。
     </para>
<!-- pgdoc-cn_end sig_en=564a1eb0a747b0af54efe40c997cd1d6 -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [40b149135] 2022-12-02 10:52:58 +0530
Branch: REL_15_STABLE [ebf87c019] 2022-12-02 11:14:42 +0530
-->
<!-- pgdoc-cn_start sig_en=e949c03e57ff9c7539c536b8b133e2e6 sig_cn_org=590394aa4bdfa2750d103ee4bbc0ffcc source=15.7 
     <para>
      Fix <application>pgoutput</application> replication plug-in to not
      send columns not listed in a table's replication column list
      (Hou Zhijie)
     </para>
________________________________________________________-->
     <para>
      修复<application>pgoutput</application>复制插件，不发送未在表的复制列列表中列出的列
      (侯志杰)
     </para>
<!-- pgdoc-cn_end sig_en=e949c03e57ff9c7539c536b8b133e2e6 -->

<!-- pgdoc-cn_start sig_en=fc0fe2cf69eaeed4340352c89b14706b sig_cn_org=f42d037129c40f7135cc83c2b559149a source=15.7 
     <para>
      <literal>UPDATE</literal> and <literal>DELETE</literal> events did
      not pay attention to the configured column list, thus sending more
      data than expected.  This did not cause a problem when the receiver
      is our built-in logical replication code, but it might confuse other
      receivers, and in any case it wasted network bandwidth.
     </para>
________________________________________________________-->
     <para>
      <literal>UPDATE</literal>和<literal>DELETE</literal>事件没有注意到配置的列列表，
      因此发送了比预期更多的数据。当接收方是我们内置的逻辑复制代码时，这不会造成问题，
      但可能会使其他接收方感到困惑，并且无论如何都浪费了网络带宽。
     </para>
<!-- pgdoc-cn_end sig_en=fc0fe2cf69eaeed4340352c89b14706b -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [e848be60b] 2022-11-14 10:43:33 +0530
Branch: REL_15_STABLE [e49e19181] 2022-11-14 10:32:47 +0530
Branch: REL_14_STABLE [9693f1900] 2022-11-14 10:22:28 +0530
Branch: REL_13_STABLE [20c223336] 2022-11-14 10:11:10 +0530
Branch: REL_12_STABLE [4dccccb37] 2022-11-14 10:01:14 +0530
Branch: REL_11_STABLE [1703033f8] 2022-11-14 09:52:06 +0530
-->
<!-- pgdoc-cn_start sig_en=2b4dedfe46a878140f2f02a2c8aa274f sig_cn_org=7ed2420db336442141940abf705fd832 source=15.7 
     <para>
      Avoid rare <quote>failed to acquire cleanup lock</quote> panic
      during WAL replay of hash-index page split operations (Robert Haas)
     </para>
________________________________________________________-->
     <para>
      避免在哈希索引页面拆分操作的WAL重放期间发生罕见的<quote>未能获取清理锁</quote>的panic错误（Robert Haas）
     </para>
<!-- pgdoc-cn_end sig_en=2b4dedfe46a878140f2f02a2c8aa274f -->
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [d6a3dbe14] 2022-11-11 12:38:29 -0800
Branch: REL_15_STABLE [7bf713dd2] 2022-11-11 12:46:11 -0800
Branch: REL_14_STABLE [f893af496] 2022-11-11 12:46:22 -0800
Branch: REL_13_STABLE [58a45bb1d] 2022-11-11 12:46:34 -0800
Branch: REL_12_STABLE [7dd39e9e8] 2022-11-11 12:46:44 -0800
Branch: REL_11_STABLE [5eaf3e375] 2022-11-11 12:46:52 -0800
-->
<!-- pgdoc-cn_start sig_en=10c7fdc22f819cf213aaf995707d10e2 sig_cn_org=618d4b196ace7eb1212d727c283530d7 source=15.7 
     <para>
      Advance a heap page's LSN when setting its all-visible bit during
      WAL replay (Jeff Davis)
     </para>
________________________________________________________-->
     <para>
      在WAL重放期间设置堆页面的全可见位时，推进堆页面的LSN（Jeff Davis）
     </para>
<!-- pgdoc-cn_end sig_en=10c7fdc22f819cf213aaf995707d10e2 -->

<!-- pgdoc-cn_start sig_en=1afd8885a26d0aa8034a5aa3a4ad2d57 sig_cn_org=749ef75114de44b8be79629cd7cbc3f1 source=15.7 
     <para>
      Failure to do this left the page possibly different on standby
      servers than the primary, and violated some other expectations about
      when the LSN changes.  This seems only a theoretical hazard so
      far as <productname>PostgreSQL</productname> itself is concerned,
      but it could upset third-party tools.
     </para>
________________________________________________________-->
     <para>
      未执行此操作可能导致备用服务器上的页面与主服务器上的页面可能不同，并违反了关于 LSN 更改时间的一些其他期望。
      就<productname>PostgreSQL</productname>本身而言，这似乎只是一种理论上的危险，但可能会影响第三方工具。
     </para>
<!-- pgdoc-cn_end sig_en=1afd8885a26d0aa8034a5aa3a4ad2d57 -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [b2d479289] 2023-02-03 11:13:34 +0000
Branch: REL_15_STABLE [4f74741a5] 2023-02-03 11:11:59 +0000
Branch: REL_14_STABLE [86bfbeab4] 2023-02-03 11:09:15 +0000
-->
<!-- pgdoc-cn_start sig_en=d82b720dca2feee078c109ee92ef40df sig_cn_org=3843baf287055f849b532e130ce30c12 source=15.7 
     <para>
      Fix <function>int64_div_fast_to_numeric()</function> to work for a
      wider range of inputs (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复<function>int64_div_fast_to_numeric()</function>，使其适用于更广泛的输入范围（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=d82b720dca2feee078c109ee92ef40df -->

<!-- pgdoc-cn_start sig_en=655a3c806a477fe8b3d50a98e49575c4 sig_cn_org=e0e6aae6ab2d4e93a702d30f3ea6c851 source=15.7 
     <para>
      This function misbehaved with some values of its second argument.
      No such usages exist in core <productname>PostgreSQL</productname>,
      but it's clearly a hazard for external modules, so repair.
     </para>
________________________________________________________-->
     <para>
      这个函数在第二个参数的某些值上表现不当。
      在核心<productname>PostgreSQL</productname>中不存在这样的用法，
      但对于外部模块来说，这显然是一个危险，所以修复。
</para>
<!-- pgdoc-cn_end sig_en=655a3c806a477fe8b3d50a98e49575c4 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [f1821b58f] 2023-01-13 11:02:12 +1300
Branch: REL_15_STABLE [8a98523a5] 2023-01-13 11:02:00 +1300
Branch: REL_14_STABLE [547e60b83] 2023-01-13 10:57:29 +1300
Branch: REL_13_STABLE [c159b0383] 2023-01-13 10:54:49 +1300
Branch: REL_12_STABLE [bf388ab82] 2023-01-13 10:54:34 +1300
Branch: REL_11_STABLE [1b40710a8] 2023-01-13 10:54:20 +1300
-->
<!-- pgdoc-cn_start sig_en=d08186b6d6d0dbd6c43ebd96666d423e sig_cn_org=9b90bb1fe599567a80cb3bb39ea41ec2 source=15.7 
     <para>
      Fix latent buffer-overrun problem in <literal>WaitEventSet</literal>
      logic (Thomas Munro)
     </para>
________________________________________________________-->
     <para>
      修复<literal>WaitEventSet</literal>逻辑中的潜在缓冲区溢出问题（Thomas Munro）
     </para>
<!-- pgdoc-cn_end sig_en=d08186b6d6d0dbd6c43ebd96666d423e -->

<!-- pgdoc-cn_start sig_en=2a175120422fd4ea2e5aed7a8aa66097 sig_cn_org=09b49fecfeace4a6cf3eac615fce6d5f source=15.7 
     <para>
      The <function>epoll</function>-based
      and <function>kqueue</function>-based implementations could ask the
      kernel for too many events if the size of their internal buffer was
      different from the size of the caller's output buffer.  That case is
      not known to occur in released <productname>PostgreSQL</productname>
      versions, but this error is a hazard for external modules and future
      bug fixes.
     </para>
________________________________________________________-->
     <para>
      基于<function>epoll</function>和<function>kqueue</function>的实现，
      如果其内部缓冲区的大小与调用者的输出缓冲区大小不同，可能会向内核请求太多事件。
      在已发布的<productname>PostgreSQL</productname>版本中尚未发现这种情况，
      但这种错误对于外部模块和未来的错误修复是一个危险因素。
</para>
<!-- pgdoc-cn_end sig_en=2a175120422fd4ea2e5aed7a8aa66097 -->
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [8c954168c] 2022-11-19 12:22:04 -0800
Branch: REL_15_STABLE [a0d35ebcc] 2022-11-19 12:33:11 -0800
Branch: REL_14_STABLE [fc4154286] 2022-11-19 12:33:14 -0800
Branch: REL_13_STABLE [c13667b51] 2022-11-19 12:36:33 -0800
Branch: REL_12_STABLE [4cbcb7ed8] 2022-11-19 12:36:48 -0800
Branch: REL_11_STABLE [140c80372] 2022-11-19 12:36:52 -0800
-->
<!-- pgdoc-cn_start sig_en=28d57051639e1fa27ebd54e79cb4a70f sig_cn_org=16582211d8fc1fa140517695b2b9c6dc source=15.7 
     <para>
      Avoid nominally-undefined behavior when accessing shared memory in
      32-bit builds (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      避免在32位构建中访问共享内存时出现名义上未定义的行为（Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=28d57051639e1fa27ebd54e79cb4a70f -->

<!-- pgdoc-cn_start sig_en=c1103f19a5bd4470500dde34a3f234f1 sig_cn_org=7325d9ab42e11216413a644b42d27ea5 source=15.7 
     <para>
      clang's undefined-behavior sanitizer complained about use of a
      pointer that was less aligned than it should be.  It's very unlikely
      that this would cause a problem in non-debug builds, but it's worth
      fixing for testing purposes.
     </para>
________________________________________________________-->
     <para>
      clang的未定义行为检测器报告了使用比应该更少对齐的指针。在非调试构建中，这很不可能
      导致问题，但为了测试目的，值得修复。
     </para>
<!-- pgdoc-cn_end sig_en=c1103f19a5bd4470500dde34a3f234f1 -->
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [02699bc1f] 2022-12-30 20:49:50 +0100
Branch: REL_15_STABLE [c4f64cfab] 2022-12-30 20:49:11 +0100
Branch: REL_14_STABLE [883dc0214] 2022-12-30 20:47:58 +0100
-->
<!-- pgdoc-cn_start sig_en=3e9ad4d6446638bbbc62c27c698c98fc sig_cn_org=a6a8796aa5726d9f85a590cd1f9c4943 source=15.7 
     <para>
      Fix assertion failure in BRIN minmax-multi opclasses (Tomas Vondra)
     </para>
________________________________________________________-->
     <para>
      修复BRIN minmax-multi操作类中的断言失败（Tomas Vondra）
     </para>
<!-- pgdoc-cn_end sig_en=3e9ad4d6446638bbbc62c27c698c98fc -->

<!-- pgdoc-cn_start sig_en=280a4e1235a5acc9fc72a8c5e253c9bd sig_cn_org=2ba36ca584f9b922af40ff6ec3e1ec5e source=15.7 
     <para>
      The assertion was overly strict, so this mistake was harmless in
      non-assert builds.
     </para>
________________________________________________________-->
     <para>
      这个断言过于严格，所以在非断言构建中这个错误是无害的。
     </para>
<!-- pgdoc-cn_end sig_en=280a4e1235a5acc9fc72a8c5e253c9bd -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [51dfaa0b0] 2022-11-29 10:52:44 -0500
Branch: REL_15_STABLE [556c0b913] 2022-11-29 10:52:44 -0500
Branch: REL_14_STABLE [0224646be] 2022-11-29 10:52:44 -0500
Branch: REL_13_STABLE [aca695fb6] 2022-11-29 10:52:44 -0500
Branch: REL_12_STABLE [bb8d48cb9] 2022-11-29 10:52:44 -0500
-->
<!-- pgdoc-cn_start sig_en=d8eac6ef279bbd8897d0f60903e5ff76 sig_cn_org=09f2769c6564c053d71f7dd1e9117729 source=15.7 
     <para>
      Remove faulty assertion in useless-RESULT-RTE optimization logic
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      移除无用的结果运行时错误优化逻辑中的错误断言（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=d8eac6ef279bbd8897d0f60903e5ff76 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [2fcf685f6] 2022-12-23 10:04:18 +0900
Branch: REL_15_STABLE [e3897a3a4] 2022-12-23 10:04:30 +0900
Branch: REL_14_STABLE [7ad458e06] 2022-12-23 10:04:33 +0900
Branch: REL_13_STABLE [4dbe72d61] 2022-12-23 10:04:34 +0900
Branch: REL_12_STABLE [7445869e1] 2022-12-23 10:04:36 +0900
Branch: REL_11_STABLE [df6fea51f] 2022-12-23 10:04:37 +0900
-->
<!-- pgdoc-cn_start sig_en=8f232d2a85fdf95dc150294d3e02e0d9 sig_cn_org=d50817c41e45d2c8dcaa66de15e375a5 source=15.7 
     <para>
      Fix copy-and-paste errors in cache-lookup-failure messages for ACL
      checks (Justin Pryzby)
     </para>
________________________________________________________-->
     <para>
      修复ACL检查中缓存查找失败消息中的复制粘贴错误（Justin Pryzby）
     </para>
<!-- pgdoc-cn_end sig_en=8f232d2a85fdf95dc150294d3e02e0d9 -->

<!-- pgdoc-cn_start sig_en=d1f01411f36c7a52c4dc16e1295d4840 sig_cn_org=8f5f67266517540344e19e31a6fa1114 source=15.7 
     <para>
      In principle these errors should never be reached.  But if they are,
      some of them reported the wrong type of object.
     </para>
________________________________________________________-->
     <para>
      原则上，这些错误永远不应该被触发。但如果它们被触发了，有些错误报告了错误的对象类型。
     </para>
<!-- pgdoc-cn_end sig_en=d1f01411f36c7a52c4dc16e1295d4840 -->
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [45f5c81ad] 2022-12-12 10:26:48 -0500
Branch: REL_15_STABLE [8b5ba2f3f] 2022-12-12 10:33:02 -0500
-->
<!-- pgdoc-cn_start sig_en=bbbb088d2eaefca07d73de407b7da90b sig_cn_org=efb14afe4067dfabab0d7615830d71f8 source=15.7 
     <para>
      Fix possible corruption of very large tablespace map files
      in <application>pg_basebackup</application> (Antonin Houska)
     </para>
________________________________________________________-->
     <para>
      修复<application>pg_basebackup</application>中非常大的表空间映射文件可能出现的损坏问题（Antonin Houska）
     </para>
<!-- pgdoc-cn_end sig_en=bbbb088d2eaefca07d73de407b7da90b -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [74739d1d3] 2023-01-19 19:32:50 -0500
Branch: REL_15_STABLE [488e89bf7] 2023-01-19 19:32:47 -0500
-->
<!-- pgdoc-cn_start sig_en=1c684d930041706dd811b3b1079242cd sig_cn_org=6df3ebb439023948b5c470e466611238 source=15.7 
     <para>
      Avoid harmless warning from <application>pg_dump</application>
      in <option>-&minus;if-exists</option> mode (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免<application>pg_dump</application>在<option>--if-exists</option>模式下产生无害警告（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=1c684d930041706dd811b3b1079242cd -->

<!-- pgdoc-cn_start sig_en=09bdc4055be1f2d278777ac7202f2bb2 sig_cn_org=46c750b99bec0a77749027896a927268 source=15.7 
     <para>
      If the <literal>public</literal> schema has a non-default owner then
      use of <application>pg_dump</application>'s <option>-&minus;if-exists</option>
      option resulted in a warning message <quote>warning: could not find
      where to insert IF EXISTS in statement "-&minus; *not* dropping schema,
      since initdb creates it"</quote>.  The dump output was okay, though.
     </para>
________________________________________________________-->
     <para>
      如果<literal>public</literal>模式有一个非默认所有者，那么使用<application>pg_dump</application>的
      <option>--if-exists</option>选项会导致一个警告消息<quote>warning: could not find
      where to insert IF EXISTS in statement "-- *not* dropping schema, since initdb creates it"</quote>。
      尽管转储输出正常。
     </para>
<!-- pgdoc-cn_end sig_en=09bdc4055be1f2d278777ac7202f2bb2 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [cabfb8241] 2022-12-02 14:24:44 -0500
Branch: REL_15_STABLE [97299cf99] 2022-12-02 14:24:44 -0500
Branch: REL_14_STABLE [303b26c1b] 2022-12-02 14:24:44 -0500
-->
<!-- pgdoc-cn_start sig_en=5e7a0b364d446e910e95351614c28685 sig_cn_org=a40339cf72b90acf90b1ce838976c6e5 source=15.7 
     <para>
      Fix <application>psql</application>'s <literal>\sf</literal>
      and <literal>\ef</literal> commands to handle SQL-language functions
      that have <acronym>SQL</acronym>-standard function bodies (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<application>psql</application>的<literal>\sf</literal>和<literal>\ef</literal>命令，
      以处理具有<acronym>SQL</acronym>标准函数体的SQL语言函数（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=5e7a0b364d446e910e95351614c28685 -->

<!-- pgdoc-cn_start sig_en=56248f948fff141ae8fe12b7fef6d60a sig_cn_org=3d2201cef66fa003577dd9692d05e467 source=15.7 
     <para>
      These commands misidentified the start of the function body when it
      used new-style syntax.
     </para>
________________________________________________________-->
     <para>
      这些命令在使用新风格语法时错误地识别了函数体的开始。
     </para>
<!-- pgdoc-cn_end sig_en=56248f948fff141ae8fe12b7fef6d60a -->
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [e7a59094b] 2023-01-06 11:18:44 +0000
Branch: REL_15_STABLE [2daf4664c] 2023-01-06 11:16:53 +0000
Branch: REL_14_STABLE [48599a18d] 2023-01-06 11:15:22 +0000
Branch: REL_13_STABLE [2ad4abedf] 2023-01-06 11:13:34 +0000
Branch: REL_12_STABLE [274185d11] 2023-01-06 11:11:51 +0000
Branch: REL_11_STABLE [c54b88870] 2023-01-06 11:09:56 +0000
-->
<!-- pgdoc-cn_start sig_en=a30559fc5adf86d8010b6229ee5df0a8 sig_cn_org=f388ab5dfda4419dd0edfd82293d8430 source=15.7 
     <para>
      Fix tab completion of <command>ALTER
      FUNCTION/PROCEDURE/ROUTINE</command> ... <command>SET
      SCHEMA</command> (Dean Rasheed)
     </para>
________________________________________________________-->
     <para>
      修复<command>ALTER FUNCTION/PROCEDURE/ROUTINE</command>的TAB补全... <command>SET SCHEMA</command>（Dean Rasheed）
     </para>
<!-- pgdoc-cn_end sig_en=a30559fc5adf86d8010b6229ee5df0a8 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [aeaaf520f] 2022-11-21 15:37:10 -0500
Branch: REL_15_STABLE [b8988cf1d] 2022-11-21 15:37:10 -0500
-->
<!-- pgdoc-cn_start sig_en=83877be9591a4933ec3490f2ed262a48 sig_cn_org=81b3b63f7fdaa63d0cdb19e98415ec56 source=15.7 
     <para>
      Update <filename>contrib/pageinspect</filename> to mark its
      disk-accessing functions as <literal>PARALLEL RESTRICTED</literal>
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      更新<filename>contrib/pageinspect</filename>，将其磁盘访问函数标记为<literal>PARALLEL RESTRICTED</literal>（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=83877be9591a4933ec3490f2ed262a48 -->

<!-- pgdoc-cn_start sig_en=1fa9999b695f492911d3451d1650b756 sig_cn_org=6d0c23816e967566ae1726fbef11a680 source=15.7 
     <para>
      This avoids possible failure if one of these functions is used to
      examine a temporary table, since a session's temporary tables are not
      accessible from parallel workers.
     </para>
________________________________________________________-->
     <para>
      这样可以避免在使用这些函数检查临时表时可能出现的失败，因为会话的临时表无法从并行工作者中访问。
     </para>
<!-- pgdoc-cn_end sig_en=1fa9999b695f492911d3451d1650b756 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [701c881f7] 2022-12-21 17:51:50 -0500
Branch: REL_15_STABLE [b87037b37] 2022-12-21 17:51:50 -0500
Branch: REL_14_STABLE [f489b480f] 2022-12-21 17:51:50 -0500
Branch: REL_13_STABLE [d35f1d485] 2022-12-21 17:51:50 -0500
Branch: REL_12_STABLE [c8314d62a] 2022-12-21 17:51:50 -0500
Branch: REL_11_STABLE [0ff4056b8] 2022-12-21 17:51:50 -0500
-->
<!-- pgdoc-cn_start sig_en=9e39828979cc6ad440faf2ddaffeeb12 sig_cn_org=5fe940b5c17f05b2b6f873e6594c47b1 source=15.7 
     <para>
      Fix <filename>contrib/seg</filename> to not crash or print garbage
      if an input number has more than 127 digits (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<filename>contrib/seg</filename>，如果输入数字超过127位，则不会崩溃或打印垃圾信息（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=9e39828979cc6ad440faf2ddaffeeb12 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_15_STABLE [576506303] 2022-11-10 10:23:49 -0500
Branch: REL_14_STABLE [06dca17ad] 2022-11-10 10:23:49 -0500
Branch: REL_13_STABLE [0942acb73] 2022-11-10 10:23:49 -0500
Branch: REL_12_STABLE [cf0f465c0] 2022-11-10 10:23:49 -0500
-->
<!-- pgdoc-cn_start sig_en=fb102416c1e2cb880023eda0708e6ccf sig_cn_org=c510f3601107a551efc7002926977afb source=15.7 
     <para>
      Fix build on Microsoft Visual Studio 2013 (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复在Microsoft Visual Studio 2013上的构建问题（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=fb102416c1e2cb880023eda0708e6ccf -->

<!-- pgdoc-cn_start sig_en=ad768fff6aee52f3f0913959fbf95702 sig_cn_org=bd8fbb9350bf11b4c1be3c4285a3ef33 source=15.7 
     <para>
      A previous patch supposed that all platforms of interest
      have <function>snprintf()</function>, but MSVC 2013 isn't quite
      there yet.  Revert to using <function>sprintf()</function> on that
      platform.
     </para>
________________________________________________________-->
     <para>
      之前的补丁假设所有感兴趣的平台都有<function>snprintf()</function>，
      但MSVC 2013还没有完全支持。在该平台上回退到使用<function>sprintf()</function>。
     </para>
<!-- pgdoc-cn_end sig_en=ad768fff6aee52f3f0913959fbf95702 -->
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [341f4e002] 2022-11-25 15:28:38 -0500
Branch: REL_15_STABLE [fed54fc9a] 2022-11-25 15:37:33 -0500
Branch: REL_14_STABLE [f76191fd9] 2022-11-25 15:37:33 -0500
Branch: REL_13_STABLE [9fe5cff14] 2022-11-25 15:37:33 -0500
Branch: REL_12_STABLE [171c7fffa] 2022-11-25 15:37:34 -0500
Branch: REL_11_STABLE [ae7c51213] 2022-11-25 15:37:34 -0500
-->
<!-- pgdoc-cn_start sig_en=5a86bab366c85253050957a412f071cd sig_cn_org=4b61582998b56dcc540d5d1e0e92f8aa source=15.7 
     <para>
      Fix compile failure in building PL/Perl with MSVC when using
      Strawberry Perl (Andrew Dunstan)
     </para>
________________________________________________________-->
     <para>
      修复在使用Strawberry Perl时，使用MSVC构建PL/Perl时出现的编译失败（Andrew Dunstan）
     </para>
<!-- pgdoc-cn_end sig_en=5a86bab366c85253050957a412f071cd -->
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [ccc59a83c] 2022-11-27 09:03:22 -0500
Branch: REL_15_STABLE [b5d8fd418] 2022-11-27 09:18:14 -0500
Branch: REL_14_STABLE [f3f70b8de] 2022-11-27 09:18:20 -0500
Branch: REL_13_STABLE [68d89d80c] 2022-11-27 09:18:32 -0500
Branch: REL_12_STABLE [85565cbca] 2022-11-27 09:18:40 -0500
Branch: REL_11_STABLE [724dd5649] 2022-11-27 09:18:46 -0500
-->
<!-- pgdoc-cn_start sig_en=cb082a791602c097e804bde2e0ad5af0 sig_cn_org=82210901e502158ff5e7e4dc80b1113b source=15.7 
     <para>
      Fix mismatch of PL/Perl built with MSVC versus a Perl library built
      with gcc (Andrew Dunstan)
     </para>
________________________________________________________-->
     <para>
      修复使用MSVC构建的PL/Perl与使用gcc构建的Perl库不匹配的问题（Andrew Dunstan）
     </para>
<!-- pgdoc-cn_end sig_en=cb082a791602c097e804bde2e0ad5af0 -->

<!-- pgdoc-cn_start sig_en=9696658a0e7fa76d99a67b8b7dcfda5c sig_cn_org=c91bfadf06359209e3026b7ffbe06cfc source=15.7 
     <para>
      Such combinations could previously fail with <quote>loadable library
      and perl binaries are mismatched</quote> errors.
     </para>
________________________________________________________-->
     <para>
      这样的组合以前可能会出现<quote>可加载库和perl二进制文件不匹配</quote>的错误。
     </para>
<!-- pgdoc-cn_end sig_en=9696658a0e7fa76d99a67b8b7dcfda5c -->
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [388e80132] 2022-12-29 12:47:29 -0800
Branch: REL_15_STABLE [c6e75e4c2] 2023-01-02 15:49:33 -0800
Branch: REL_14_STABLE [7b5dec760] 2023-01-02 15:50:00 -0800
Branch: REL_13_STABLE [ce073d014] 2023-01-02 15:50:33 -0800
Branch: REL_12_STABLE [f0e13802f] 2023-01-02 15:51:03 -0800
Branch: REL_11_STABLE [99f8bc335] 2023-01-02 15:51:05 -0800
-->
<!-- pgdoc-cn_start sig_en=7f8edd4aab703427b3c3e1e22fb09e6c sig_cn_org=aacece794248921104561e4cbf2c8474 source=15.7 
     <para>
      Suppress compiler warnings from Perl's header files (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      抑制Perl头文件中的编译器警告（Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=7f8edd4aab703427b3c3e1e22fb09e6c -->

<!-- pgdoc-cn_start sig_en=a4118b3c04ff5c017b98626cf9fda82d sig_cn_org=7accf65423f63baddcd922c55c62f2e9 source=15.7 
     <para>
      Our preferred compiler options provoke warnings about constructs
      appearing in recent versions of Perl's header files.  When using
      <application>gcc</application>, we can suppress these warnings with
      a pragma.
     </para>
________________________________________________________-->
     <para>
      我们首选的编译器选项会引发关于最近版本Perl头文件中出现的构造的警告。
      当使用<application>gcc</application>时，我们可以通过一个编译指示来抑制这些警告。
     </para>
<!-- pgdoc-cn_end sig_en=a4118b3c04ff5c017b98626cf9fda82d -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_15_STABLE [9a40a0311] 2023-01-20 11:58:12 -0500
Branch: REL_14_STABLE [21c058648] 2023-01-20 11:58:12 -0500
Branch: REL_13_STABLE [c78f109b8] 2023-01-20 11:58:12 -0500
Branch: REL_12_STABLE [6d066d56b] 2023-01-20 11:58:12 -0500
Branch: REL_11_STABLE [b69e9dfab] 2023-01-20 11:58:12 -0500
-->
<!-- pgdoc-cn_start sig_en=9d8b21b352462ddc0869b6b925ce8e9f sig_cn_org=011e4cb4349f6703afd13d54471a75ea source=15.7 
     <para>
      Fix <application>pg_waldump</application> to build on compilers that
      don't discard unused static-inline functions (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<application>pg_waldump</application>在不丢弃未使用的静态内联函数的编译器上构建的问题（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=9d8b21b352462ddc0869b6b925ce8e9f -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [758f44bc3] 2023-01-31 17:36:55 -0500
Branch: REL_15_STABLE [65f0d9d27] 2023-01-31 17:37:06 -0500
Branch: REL_14_STABLE [7e6154779] 2023-01-31 17:37:14 -0500
Branch: REL_13_STABLE [20d9da107] 2023-01-31 17:37:22 -0500
Branch: REL_12_STABLE [2c95d8776] 2023-01-31 17:37:28 -0500
Branch: REL_11_STABLE [7ddc428ef] 2023-01-31 17:37:34 -0500
-->
<!-- pgdoc-cn_start sig_en=5b9324a977e852c33c8f7704e4d2397f sig_cn_org=b3039d94a3c42e3002305395cdfba2f6 source=15.7 
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2022g for DST law changes in Greenland and Mexico,
      plus historical corrections for northern Canada, Colombia, and
      Singapore.
     </para>
________________________________________________________-->
     <para>
      更新时区数据文件至<application>tzdata</application>
      发布2022g版本，以适应格陵兰和墨西哥的夏令时法律变化，
      以及对加拿大北部、哥伦比亚和新加坡的历史更正。
     </para>
<!-- pgdoc-cn_end sig_en=5b9324a977e852c33c8f7704e4d2397f -->

<!-- pgdoc-cn_start sig_en=a6147a1c94735367a3df2fd2d2876e94 sig_cn_org=abc6317652fa89bfbdd2e613aedf3369 source=15.7 
     <para>
      Notably, a new timezone America/Ciudad_Juarez has been split off
      from America/Ojinaga.
     </para>
________________________________________________________-->
     <para>
      值得注意的是，一个新的时区America/Ciudad_Juarez已经从America/Ojinaga中分离出来。
     </para>
<!-- pgdoc-cn_end sig_en=a6147a1c94735367a3df2fd2d2876e94 -->
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-1">
<!-- pgdoc-cn_start sig_en=e23701fb873537c1fd64d2e7a23152d8 sig_cn_org=3bd588a67e618e14c8f7ce86429ecd26 source=15.7 
  <title>Release 15.1</title>
________________________________________________________-->
  <title>发布版本 15.1</title>
<!-- pgdoc-cn_end sig_en=e23701fb873537c1fd64d2e7a23152d8 -->

  <formalpara>
<!-- pgdoc-cn_start sig_en=c45e8127eac45f2347bf1713afaeffda sig_cn_org=253305b4c6dff5b87ef36e3c2d95e52e source=15.7 
  <title>Release date:</title>
________________________________________________________-->
  <title>发布日期：</title>
<!-- pgdoc-cn_end sig_en=c45e8127eac45f2347bf1713afaeffda -->
<!-- pgdoc-cn_start sig_en=7d2e11b81843f076e23f6ec96c4cbd5e sig_cn_org=8713a5a68966996c827a8f8c620960d6 source=15.7 
  <para>2022-11-10</para>
________________________________________________________-->
  <para>2022年11月10日</para>
<!-- pgdoc-cn_end sig_en=7d2e11b81843f076e23f6ec96c4cbd5e -->
  </formalpara>

<!-- pgdoc-cn_start sig_en=312188ed695370bff1fc2d054a135567 sig_cn_org=3e9217dc187e5a4c077645b6d49159ee source=15.7 
  <para>
   This release contains a variety of fixes from 15.0.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>
________________________________________________________-->
  <para>
   这个版本包含了从15.0版本中修复的各种问题。
   有关主要版本15中新功能的信息，请参见<xref linkend="release-15"/>。
</para>
<!-- pgdoc-cn_end sig_en=312188ed695370bff1fc2d054a135567 -->

  <sect2>
<!-- pgdoc-cn_start sig_en=7327caa4d7ebe166173fe6bbb1af095e sig_cn_org=d57bbd9b1be3f88942ac534d331f28a4 source=15.7 
   <title>Migration to Version 15.1</title>
________________________________________________________-->
   <title>升级到版本15.1</title>
<!-- pgdoc-cn_end sig_en=7327caa4d7ebe166173fe6bbb1af095e -->

<!-- pgdoc-cn_start sig_en=036ed5117c7b85420fc61cc5e5b99f8b sig_cn_org=992c4bf77211ba6013c0d564cef911c0 source=15.7 
   <para>
    A dump/restore is not required for those running 15.X.
   </para>
________________________________________________________-->
   <para>
    对于运行15.X版本的用户，不需要进行dump/restore操作。
   </para>
<!-- pgdoc-cn_end sig_en=036ed5117c7b85420fc61cc5e5b99f8b -->

<!-- pgdoc-cn_start sig_en=1e7b8eafcfdc348276423565502ab95e sig_cn_org=20cad8ed1c9f2cf9fcc8760b3b1a7be1 source=15.7 
   <para>
    However, if you regularly create and drop tables exceeding 1GB,
    see the first changelog entry below.
   </para>
________________________________________________________-->
   <para>
    然而，如果您经常创建和删除超过1GB的表，请参阅下面的第一个变更日志条目。
   </para>
<!-- pgdoc-cn_end sig_en=1e7b8eafcfdc348276423565502ab95e -->
  </sect2>

  <sect2>
<!-- pgdoc-cn_start sig_en=e161fef38e54e54458e215e5f978ef9b sig_cn_org=f104d50dd9d4dd802f94229ebe5bc097 source=15.7 
   <title>Changes</title>
________________________________________________________-->
   <title>变更</title>
<!-- pgdoc-cn_end sig_en=e161fef38e54e54458e215e5f978ef9b -->

   <itemizedlist>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0e758ae89] 2022-11-07 11:36:45 -0500
Branch: REL_15_STABLE [5fe0ab420] 2022-11-07 11:36:45 -0500
-->
<!-- pgdoc-cn_start sig_en=c6fec2014838caad5d728b80d45e82ce sig_cn_org=a6b7327900e2b0aaa1b32913f1de7ae2 source=15.7 
     <para>
      Fix failure to remove non-first segments of large tables
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复无法删除大表的非第一个段的故障
      (Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=c6fec2014838caad5d728b80d45e82ce -->

<!-- pgdoc-cn_start sig_en=772f027d78bba8789660c8688455124b sig_cn_org=6f332586b7d6a4dcbfceb711237b9a82 source=15.7 
     <para>
      <productname>PostgreSQL</productname> splits large tables into
      multiple files (normally with 1GB per file).  The logic for dropping
      a table was broken and would miss removing all but the first such
      file, in two cases: drops of temporary tables and WAL replay of
      drops of regular tables.  Applications that routinely create
      multi-gigabyte temporary tables could suffer significant disk space
      leakage.
     </para>
________________________________________________________-->
     <para>
      <productname>PostgreSQL</productname>将大表拆分为多个文件（通常每个文件1GB）。
      删除表的逻辑存在问题，可能会漏掉除第一个文件外的所有文件，有两种情况：
      临时表的删除和常规表的WAL重放删除。经常创建多GB临时表的应用可能会
      遭受重大磁盘空间泄漏。
     </para>
<!-- pgdoc-cn_end sig_en=772f027d78bba8789660c8688455124b -->

<!-- pgdoc-cn_start sig_en=c1e89bc39813ed24656d939ce8410c58 sig_cn_org=757108c0cf40d619242242ba8317c929 source=15.7 
     <para>
      Orphaned temporary-table files are removed during postmaster start,
      so the mere act of updating to 15.1 is sufficient to clear any
      leaked temporary-table storage.  However, if you suffered any
      database crashes while using 15.0, and there might have been
      large tables dropped just before such crashes, it's advisable
      to check the database directories for files named according to the
      pattern
      <literal><replaceable>NNNN</replaceable>.<replaceable>NN</replaceable></literal>.
      If there is no matching file named
      just <literal><replaceable>NNNN</replaceable></literal> (without
      the <literal>.<replaceable>NN</replaceable></literal> suffix), these
      files should be removed manually.
     </para>
________________________________________________________-->
     <para>
      孤立的临时表文件在postmaster启动时被删除，因此仅仅更新到15.1版本就足以清除任何泄漏的临时表存储。
      但是，如果在使用15.0版本时遇到任何数据库崩溃，并且在这些崩溃之前可能有大表被删除，建议检查数据库目录中是否有按照以下模式命名的文件：
      <literal><replaceable>NNNN</replaceable>.<replaceable>NN</replaceable></literal>。
      如果没有匹配的文件只是命名为<literal><replaceable>NNNN</replaceable></literal>（没有<literal>.<replaceable>NN</replaceable></literal>后缀），
      这些文件应该手动删除。
</para>
<!-- pgdoc-cn_end sig_en=c1e89bc39813ed24656d939ce8410c58 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b8f2687fd] 2022-10-11 18:24:14 -0400
Branch: REL_15_STABLE [07ce67698] 2022-10-11 18:24:14 -0400
Branch: REL_14_STABLE [3162bd95c] 2022-10-11 18:24:14 -0400
Branch: REL_13_STABLE [21e042b0b] 2022-10-11 18:24:14 -0400
Branch: REL_12_STABLE [abc510fa2] 2022-10-11 18:24:15 -0400
Branch: REL_11_STABLE [addde9bc6] 2022-10-11 18:24:15 -0400
Branch: REL_10_STABLE [23e2a06ac] 2022-10-11 18:24:15 -0400
-->
<!-- pgdoc-cn_start sig_en=fbe3e99e8e9ffacaf1cf9bd103767801 sig_cn_org=227b28342ebd84e084cf91dacee789ad source=15.7 
     <para>
      Fix handling of <literal>DEFAULT</literal> tokens that appear
      in a multi-row <literal>VALUES</literal> clause of an
      <command>INSERT</command> on an updatable view (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复在可更新视图上的<command>INSERT</command>命令的多行<literal>VALUES</literal>
	  子句中出现的<literal>DEFAULT</literal>标记的处理问题
      （Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=fbe3e99e8e9ffacaf1cf9bd103767801 -->

<!-- pgdoc-cn_start sig_en=3e362e85bbaa808593a9d8ba4d22175a sig_cn_org=3baa79606d19a7585a686eaac88c835a source=15.7 
     <para>
      This oversight could lead to <quote>cache lookup failed for
      type</quote> errors, or in older branches even to crashes.
     </para>
________________________________________________________-->
     <para>
      这个疏忽可能导致<quote>类型的缓存查找失败</quote>错误，甚至在旧分支中可能导致崩溃。
     </para>
<!-- pgdoc-cn_end sig_en=3e362e85bbaa808593a9d8ba4d22175a -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [797e313dc] 2022-10-17 12:14:39 -0400
Branch: REL_15_STABLE [4a41a069e] 2022-10-17 12:14:39 -0400
Branch: REL_14_STABLE [2f26cec48] 2022-10-17 12:14:39 -0400
Branch: REL_13_STABLE [b21615d1e] 2022-10-17 12:14:39 -0400
Branch: REL_12_STABLE [65c1106d8] 2022-10-17 12:14:39 -0400
Branch: REL_11_STABLE [e9377e3e5] 2022-10-17 12:14:39 -0400
Branch: REL_10_STABLE [ecf4ce689] 2022-10-17 12:14:39 -0400
-->
<!-- pgdoc-cn_start sig_en=93895ffa16fdf5bf167bba6badf2641c sig_cn_org=92246934b0105b9f0d10f7bf1f5114b5 source=15.7 
     <para>
      Disallow rules named <literal>_RETURN</literal> that are
      not <literal>ON SELECT</literal> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      不允许命名为<literal>_RETURN</literal>的规则，除非是<literal>ON SELECT</literal>（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=93895ffa16fdf5bf167bba6badf2641c -->

<!-- pgdoc-cn_start sig_en=f178d5896be1560285e636bd3f6c180f sig_cn_org=6388d701e8110373be41de7094e419c0 source=15.7 
     <para>
      This avoids confusion between a view's <literal>ON SELECT</literal>
      rule and any other rules it may have.
     </para>
________________________________________________________-->
     <para>
      这样可以避免视图的<literal>ON SELECT</literal>规则与其它规则混淆。
     </para>
<!-- pgdoc-cn_end sig_en=f178d5896be1560285e636bd3f6c180f -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d57534740] 2022-10-16 19:18:08 -0400
Branch: REL_15_STABLE [d4abb0bc5] 2022-10-16 19:18:08 -0400
Branch: REL_14_STABLE [8122160ff] 2022-10-16 19:18:08 -0400
-->
<!-- pgdoc-cn_start sig_en=2055b5aa93b0ec2427a8eda50eca565b sig_cn_org=6312d0c711f59e2742457c892f0b78bd source=15.7 
     <para>
      Avoid failure in <command>EXPLAIN VERBOSE</command> for a query
      using <literal>SEARCH BREADTH FIRST</literal> with constant
      initial values (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免在使用<command>EXPLAIN VERBOSE</command>对使用常量初始值的<literal>SEARCH BREADTH FIRST</literal>查询时失败（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=2055b5aa93b0ec2427a8eda50eca565b -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [cba4e78f3] 2022-10-15 19:24:26 +0200
Branch: REL_15_STABLE [16d11d684] 2022-10-15 19:24:26 +0200
-->
<!-- pgdoc-cn_start sig_en=21d8dad2d855ebd1ba55b7f1be498a01 sig_cn_org=d1b7092d36630c4f1574625a52060fc4 source=15.7 
     <para>
      Prevent use of <command>MERGE</command> on a partitioned table with
      foreign-table partitions (&Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      防止在具有外部表分区的分区表上使用<command>MERGE</command> (&Aacute;lvaro Herrera)
     </para>
<!-- pgdoc-cn_end sig_en=21d8dad2d855ebd1ba55b7f1be498a01 -->

<!-- pgdoc-cn_start sig_en=0cc0d2d9735064997477b09f01e6b3ad sig_cn_org=2039daeec4ad8d2490de248a8f64a45b source=15.7 
     <para>
      The case isn't supported, and previously threw an incomprehensible
      error.
     </para>
________________________________________________________-->
     <para>
      该案例不受支持，并且以前会抛出一个难以理解的错误。
     </para>
<!-- pgdoc-cn_end sig_en=0cc0d2d9735064997477b09f01e6b3ad -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b0284bfb1] 2022-11-03 20:40:21 +0100
Branch: REL_15_STABLE [c301e1c0c] 2022-11-03 20:40:21 +0100
Branch: REL_14_STABLE [18865f4df] 2022-11-03 20:40:21 +0100
Branch: REL_13_STABLE [41b6e7c9a] 2022-11-03 20:40:21 +0100
Branch: REL_12_STABLE [ab70b3a52] 2022-11-03 20:40:21 +0100
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [614a406b4] 2022-10-07 19:37:48 +0200
Branch: REL_15_STABLE Release: REL_15_0 [6083132ab] 2022-10-07 19:37:48 +0200
Branch: REL_14_STABLE [483d26930] 2022-10-07 19:37:48 +0200
Branch: REL_13_STABLE [7d520e68e] 2022-10-07 19:37:48 +0200
Branch: REL_12_STABLE [669803af0] 2022-10-07 19:37:48 +0200
-->
<!-- pgdoc-cn_start sig_en=e1d845cbb17f41563642fe325a67bb3e sig_cn_org=75fd1b191d59213a810b5dbc671e16db source=15.7 
     <para>
      Fix construction of per-partition foreign key constraints while
      doing <command>ALTER TABLE ATTACH PARTITION</command>
      (Jehan-Guillaume de Rorthais, &Aacute;lvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      修复在执行<command>ALTER TABLE ATTACH PARTITION</command>时构建分区外键约束
      (Jehan-Guillaume de Rorthais, &Aacute;lvaro Herrera)
     </para>
<!-- pgdoc-cn_end sig_en=e1d845cbb17f41563642fe325a67bb3e -->

<!-- pgdoc-cn_start sig_en=33e04f167463d271ca01f28768dc6178 sig_cn_org=aaf1eec9dfbc88ca8cbf2c1a5c549523 source=15.7 
     <para>
      Previously, incorrect or duplicate constraints could be constructed
      for the newly-added partition.
     </para>
________________________________________________________-->
     <para>
      以前，对于新添加的分区，可能会构建不正确或重复的约束。
     </para>
<!-- pgdoc-cn_end sig_en=33e04f167463d271ca01f28768dc6178 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f4857082b] 2022-11-01 14:34:44 -0400
Branch: REL_15_STABLE [1f1865e90] 2022-11-01 14:34:44 -0400
-->
<!-- pgdoc-cn_start sig_en=f518d59324ac998d5ae316d6afa38e87 sig_cn_org=3f3471f9c5288525c506e8f7275588ae source=15.7 
     <para>
      Fix planner failure with extended statistics on partitioned or
      inherited tables (Richard Guo, Justin Pryzby)
     </para>
________________________________________________________-->
     <para>
      修复在分区或继承表上使用扩展统计信息时的计划器故障（Richard Guo，Justin Pryzby）
     </para>
<!-- pgdoc-cn_end sig_en=f518d59324ac998d5ae316d6afa38e87 -->

<!-- pgdoc-cn_start sig_en=5ad27ee01fbef41978a16ba23d479429 sig_cn_org=274320071144c379d779806fa78959d0 source=15.7 
     <para>
      Some cases failed with <quote>cache lookup failed for statistics
      object</quote>.
     </para>
________________________________________________________-->
     <para>
      一些情况下失败了，显示<quote>统计对象的缓存查找失败</quote>。
     </para>
<!-- pgdoc-cn_end sig_en=5ad27ee01fbef41978a16ba23d479429 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [56b662523] 2022-10-13 09:31:57 +0900
Branch: REL_15_STABLE [ca4070f2b] 2022-10-26 09:41:13 +0900
Branch: REL_14_STABLE [5a30d43fa] 2022-10-26 09:41:18 +0900
Branch: REL_13_STABLE [594b97509] 2022-10-26 09:41:22 +0900
Branch: REL_12_STABLE [51c24d9e2] 2022-10-26 09:41:26 +0900
Branch: REL_11_STABLE [341fba2a6] 2022-10-26 09:41:28 +0900
Branch: REL_10_STABLE [b02fc7df1] 2022-10-26 09:41:31 +0900
-->
<!-- pgdoc-cn_start sig_en=41b104b5ce0b239d219794ccae00fc12 sig_cn_org=224dba29ef1de1c8e3defa36b341b4b0 source=15.7 
     <para>
      Fix mis-ordering of WAL operations in fast insert path for GIN
      indexes (Matthias van de Meent, Zhang Mingli)
     </para>
________________________________________________________-->
     <para>
      修复GIN索引的快速插入路径中WAL操作的错误排序（Matthias van de Meent，张明立）
     </para>
<!-- pgdoc-cn_end sig_en=41b104b5ce0b239d219794ccae00fc12 -->

<!-- pgdoc-cn_start sig_en=bf21b9d99a2d266aff4165bed8207fce sig_cn_org=c19199aefc219e5757850886d74f402d source=15.7 
     <para>
      This mistake is not known to have any negative consequences within
      core <productname>PostgreSQL</productname>, but it did cause issues
      for some extensions.
     </para>
________________________________________________________-->
     <para>
      这个错误在核心<productname>PostgreSQL</productname>中并不会造成任何负面后果，但它确实给一些扩展造成了问题。
     </para>
<!-- pgdoc-cn_end sig_en=bf21b9d99a2d266aff4165bed8207fce -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [16b1fe003] 2022-10-20 08:49:48 +0530
Branch: REL_15_STABLE [64ff0fe4e] 2022-10-20 09:43:59 +0530
Branch: REL_14_STABLE [a592ed923] 2022-10-20 09:34:18 +0530
Branch: REL_13_STABLE [25f7be1ca] 2022-10-20 09:25:13 +0530
Branch: REL_12_STABLE [1bf4d9206] 2022-10-20 09:16:28 +0530
Branch: REL_11_STABLE [5f7076cb6] 2022-10-20 09:07:04 +0530
Branch: REL_10_STABLE [10ed7b9e4] 2022-10-20 08:58:11 +0530
Branch: REL_15_STABLE [343afa967] 2022-10-21 10:03:35 +0530
Branch: REL_14_STABLE [4fbe6096b] 2022-10-21 09:52:44 +0530
Branch: REL_13_STABLE [38dbaaf27] 2022-10-21 09:42:24 +0530
Branch: REL_12_STABLE [02600886c] 2022-10-21 09:32:21 +0530
Branch: REL_11_STABLE [216af69ae] 2022-10-21 09:22:20 +0530
-->
<!-- pgdoc-cn_start sig_en=2cc09e73a2d8b8bf0a743379f85955a0 sig_cn_org=7347ea6a25f60e9af0a82909147b8ef5 source=15.7 
     <para>
      Fix bugs in logical decoding when replay starts from a point
      between the beginning of a transaction and the beginning of its
      subtransaction (Masahiko Sawada, Kuroda Hayato)
     </para>
________________________________________________________-->
     <para>
      修复逻辑解码中的错误，当重放从事务的开始和其子事务的开始之间的某一点开始时
      (Masahiko Sawada, Kuroda Hayato)
     </para>
<!-- pgdoc-cn_end sig_en=2cc09e73a2d8b8bf0a743379f85955a0 -->

<!-- pgdoc-cn_start sig_en=425ee3808227fed00150a49a767dcccb sig_cn_org=71c1593028cddf97aeb8d1f9cf6fee38 source=15.7 
     <para>
      These errors could lead to assertion failures in debug builds, and
      otherwise to memory leaks.
     </para>
________________________________________________________-->
     <para>
      这些错误可能导致调试版本中的断言失败，否则可能导致内存泄漏。
     </para>
<!-- pgdoc-cn_end sig_en=425ee3808227fed00150a49a767dcccb -->
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [ce20f8b9f] 2022-10-21 12:57:18 +0530
Branch: REL_15_STABLE [10eaa9750] 2022-10-21 12:43:28 +0530
Branch: REL_14_STABLE [36fc013fa] 2022-10-21 12:33:47 +0530
Branch: REL_13_STABLE [1eed947f9] 2022-10-21 12:22:47 +0530
Branch: REL_12_STABLE [f7f82cf05] 2022-10-21 12:10:11 +0530
Branch: REL_11_STABLE [5c51afe23] 2022-10-21 12:08:14 +0530
Branch: REL_10_STABLE [61838d2dd] 2022-10-21 11:54:34 +0530
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [f972ec5c2] 2022-08-23 10:20:02 +0530
Branch: REL_15_STABLE Release: REL_15_0 [42681dffa] 2022-08-23 10:08:43 +0530
Branch: REL_14_STABLE [6d05d575b] 2022-08-23 09:24:51 +0530
Branch: REL_13_STABLE [4985a4591] 2022-08-23 09:10:28 +0530
Branch: REL_12_STABLE [9415873ae] 2022-08-23 08:51:20 +0530
Branch: REL_11_STABLE [51e9469a4] 2022-08-23 08:42:51 +0530
Branch: REL_10_STABLE [6b50433e8] 2022-08-23 08:39:31 +0530
-->
<!-- pgdoc-cn_start sig_en=d72057f32f6763958e34706d03a0a283 sig_cn_org=48f92cf51aaad6ca8e684bf71bee3bd4 source=15.7 
     <para>
      Accept interrupts in more places during logical decoding (Amit
      Kapila, Masahiko Sawada)
     </para>
________________________________________________________-->
     <para>
      在逻辑解码过程中接受更多地方的中断（Amit Kapila，Masahiko Sawada）
     </para>
<!-- pgdoc-cn_end sig_en=d72057f32f6763958e34706d03a0a283 -->

<!-- pgdoc-cn_start sig_en=1035a74876e1cb75daf53302a6aeb0dc sig_cn_org=24c0e113081324b1e7408c751fd17aff source=15.7 
     <para>
      This ameliorates problems with slow shutdown of replication workers.
     </para>
________________________________________________________-->
     <para>
      这样可以改善复制工作者关闭速度慢的问题。
     </para>
<!-- pgdoc-cn_end sig_en=1035a74876e1cb75daf53302a6aeb0dc -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [be541efbf] 2022-11-02 12:29:39 -0400
Branch: REL_15_STABLE [414d29a82] 2022-11-02 12:29:39 -0400
Branch: REL_14_STABLE [a5b7821fc] 2022-11-02 12:29:39 -0400
Branch: REL_13_STABLE [4d3f7e75c] 2022-11-02 12:29:39 -0400
-->
<!-- pgdoc-cn_start sig_en=7f4e178e6882f27a824b8ae5638f7e28 sig_cn_org=ede15cf58511fc86a55afc38b773ae11 source=15.7 
     <para>
      Prevent attempts to replicate into a foreign-table partition in
      replication workers (Shi Yu, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      防止在复制工作者中尝试将数据复制到外部表分区（Shi Yu，Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=7f4e178e6882f27a824b8ae5638f7e28 -->

<!-- pgdoc-cn_start sig_en=88804d0a284e665c6a786008e8496bbe sig_cn_org=8c44b1ba491bb11be3062f127acd9bec source=15.7 
     <para>
      Although partitioned tables can have foreign tables as partitions,
      replicating into such a partition isn't currently supported.
      The logical replication worker process would crash if it was
      attempted.  Now, an error is thrown.
     </para>
________________________________________________________-->
     <para>
      虽然分区表可以将外部表作为分区，但目前不支持将数据复制到这样的分区中。
      如果尝试这样做，逻辑复制工作进程将崩溃。现在会抛出错误。
     </para>
<!-- pgdoc-cn_end sig_en=88804d0a284e665c6a786008e8496bbe -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [dea834938] 2022-11-03 12:02:14 -0400
Branch: REL_15_STABLE [f2dc7f9e3] 2022-11-03 12:01:57 -0400
Branch: REL_14_STABLE [2489c38cd] 2022-11-03 12:01:57 -0400
Branch: REL_13_STABLE [b00f342ea] 2022-11-03 12:01:57 -0400
Branch: REL_12_STABLE [d9ffccf8d] 2022-11-03 12:01:57 -0400
Branch: REL_11_STABLE [ed019b5ef] 2022-11-03 12:01:57 -0400
Branch: REL_10_STABLE [5f3cec77b] 2022-11-03 12:01:57 -0400
-->
<!-- pgdoc-cn_start sig_en=9f29f495a12ed89f16a2d849f0fe1a32 sig_cn_org=41f3c07dff5cfcec268dae16effb2d8b source=15.7 
     <para>
      Avoid crash after function syntax error in replication workers
      (Maxim Orlov, Anton Melnikov, Masahiko Sawada, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免在复制工作者中的函数语法错误后崩溃
      (Maxim Orlov, Anton Melnikov, Masahiko Sawada, Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=9f29f495a12ed89f16a2d849f0fe1a32 -->

<!-- pgdoc-cn_start sig_en=296fefc9d64b891c229fbfa9512c6474 sig_cn_org=9e4b42ae1a75539a1087d88c5af3a417 source=15.7 
     <para>
      If a syntax error occurred in a SQL-language or PL/pgSQL-language
      <command>CREATE FUNCTION</command> or <command>DO</command> command
      executed in a logical replication worker, the worker process would
      crash with a null pointer dereference or assertion failure.
     </para>
________________________________________________________-->
     <para>
      如果在逻辑复制工作者中执行SQL语言或PL/pgSQL语言的<command>CREATE FUNCTION</command>或<command>DO</command>命令时发生语法错误，
      工作者进程将崩溃，出现空指针解引用或断言失败。
     </para>
<!-- pgdoc-cn_end sig_en=296fefc9d64b891c229fbfa9512c6474 -->
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [9668c4a66] 2022-10-19 14:06:56 +0900
Branch: REL_15_STABLE [5d2a47a29] 2022-10-19 14:07:01 +0900
-->
<!-- pgdoc-cn_start sig_en=9e9c7caad67c22f6921efde29b05df1e sig_cn_org=48561e048ec751d4c0e93bb7b26b6c85 source=15.7 
     <para>
      Avoid double call of the shutdown callback of an archiver module
      (Nathan Bossart, Bharath Rupireddy)
     </para>
________________________________________________________-->
     <para>
      避免调用存档模块的关闭回调两次
      (Nathan Bossart, Bharath Rupireddy)
</para>
<!-- pgdoc-cn_end sig_en=9e9c7caad67c22f6921efde29b05df1e -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [eec346611] 2022-10-17 11:35:23 -0400
Branch: REL_15_STABLE [2e3326929] 2022-10-17 11:35:23 -0400
Branch: REL_14_STABLE [8c611602b] 2022-10-17 11:35:23 -0400
Branch: REL_13_STABLE [62b263bf7] 2022-10-17 11:35:23 -0400
Branch: REL_12_STABLE [99b6b705d] 2022-10-17 11:35:23 -0400
-->
<!-- pgdoc-cn_start sig_en=b828b4c9cf4ff7c7826538b86bea4cf7 sig_cn_org=e8a64993b0ef121b769445f88ec579a6 source=15.7 
     <para>
      Add plan-time check for attempted access to a table that has no
      table access method (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      为尝试访问没有表访问方法的表添加计划时间检查（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=b828b4c9cf4ff7c7826538b86bea4cf7 -->

<!-- pgdoc-cn_start sig_en=0158bbdd21fdac0910cba4df1d1fd8b1 sig_cn_org=a442e2444837aa0dbed1077e8b2cf394 source=15.7 
     <para>
      This prevents a crash in some catalog-corruption scenarios, for
      example use of a view whose <literal>ON SELECT</literal> rule is
      missing.
     </para>
________________________________________________________-->
     <para>
      这可以防止在某些目录损坏的情况下崩溃，例如使用一个视图，其<literal>ON SELECT</literal>规则丢失。
     </para>
<!-- pgdoc-cn_end sig_en=0158bbdd21fdac0910cba4df1d1fd8b1 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [18a4a620e] 2022-10-11 18:54:31 -0400
Branch: REL_15_STABLE [e7b4ff327] 2022-10-11 18:54:31 -0400
Branch: REL_14_STABLE [b10546ecf] 2022-10-11 18:54:31 -0400
Branch: REL_13_STABLE [744270137] 2022-10-11 18:54:31 -0400
Branch: REL_12_STABLE [8f98352b5] 2022-10-11 18:54:31 -0400
Branch: REL_11_STABLE [6c1de98ba] 2022-10-11 18:54:31 -0400
Branch: REL_10_STABLE [ab35b9dd7] 2022-10-11 18:54:31 -0400
-->
<!-- pgdoc-cn_start sig_en=9366335107a57850decc99ae33f1d694 sig_cn_org=82f432f0975cc20945e238ba36a857ad source=15.7 
     <para>
      Prevent postmaster crash when shared-memory state is corrupted
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      防止当共享内存状态损坏时postmaster进程崩溃
      (Tom Lane)
     </para>
<!-- pgdoc-cn_end sig_en=9366335107a57850decc99ae33f1d694 -->

<!-- pgdoc-cn_start sig_en=9950a546ee956dfc9ccfaa94eb76016d sig_cn_org=a2cba08cb7b602243e018fe7b91889c1 source=15.7 
     <para>
      The postmaster process is supposed to survive and initiate a
      database restart if shared memory becomes corrupted, but one
      bit of code was being insufficiently cautious about that.
     </para>
________________________________________________________-->
     <para>
      邮件管理员进程应该在共享内存损坏时能够存活并启动数据库重启，但有一段代码对此并不够谨慎。
     </para>
<!-- pgdoc-cn_end sig_en=9950a546ee956dfc9ccfaa94eb76016d -->
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [db1b931a4] 2022-10-14 19:06:26 +0200
Branch: REL_15_STABLE [27ca0bce5] 2022-10-14 19:06:26 +0200
Branch: REL_14_STABLE [b8af4166f] 2022-10-14 19:06:26 +0200
-->
<!-- pgdoc-cn_start sig_en=be69385e271cf6eab51e639842e36422 sig_cn_org=d54caea293aba83774e4bbd924b1ea7c source=15.7 
     <para>
      In <application>libpq</application>, handle single-row mode
      correctly when pipelining (Denis Laxalde)
     </para>
________________________________________________________-->
     <para>
      在<application>libpq</application>中，在管道处理时正确处理单行模式（Denis Laxalde）
     </para>
<!-- pgdoc-cn_end sig_en=be69385e271cf6eab51e639842e36422 -->

<!-- pgdoc-cn_start sig_en=888aa2573f85de2ec5d66f6f8329c2a8 sig_cn_org=76169c2e8db4e02e05be3fe0c54007ef source=15.7 
     <para>
      The single-row flag was not reset at the correct time if pipeline
      mode was also active.
     </para>
________________________________________________________-->
     <para>
      如果管道模式也处于活动状态，则单行标志在正确的时间未被重置。
     </para>
<!-- pgdoc-cn_end sig_en=888aa2573f85de2ec5d66f6f8329c2a8 -->
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [2598b76bf] 2022-10-22 09:42:52 +0200
Branch: REL_15_STABLE [4a6de748d] 2022-10-22 09:41:38 +0200
-->
<!-- pgdoc-cn_start sig_en=8354a9df654d66fb57a2715cd6f655aa sig_cn_org=8bb0c25c677f4f335016f693d03cb3de source=15.7 
     <para>
      Fix <application>psql</application>'s exit status when a
      command-line query is canceled (Peter Eisentraut)
     </para>
________________________________________________________-->
     <para>
      修复<application>psql</application>在取消命令行查询时的退出状态（Peter Eisentraut）
     </para>
<!-- pgdoc-cn_end sig_en=8354a9df654d66fb57a2715cd6f655aa -->

<!-- pgdoc-cn_start sig_en=caa5398672c2912ed6709bafa66bbe2e sig_cn_org=d7a4e51907d67b4db59eff451915b69d source=15.7 
     <para>
      <literal>psql -c <replaceable>query</replaceable></literal> would
      exit successfully if the query was canceled.  Fix it to exit with
      nonzero status, as in other error cases.
     </para>
________________________________________________________-->
     <para>
      <literal>psql -c <replaceable>query</replaceable></literal>如果查询被取消，将成功退出。修复它以在其他错误情况下以非零状态退出。
     </para>
<!-- pgdoc-cn_end sig_en=caa5398672c2912ed6709bafa66bbe2e -->
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [1f0c4fa25] 2022-10-21 08:21:55 -0400
Branch: REL_15_STABLE [5c013e620] 2022-10-21 08:31:39 -0400
Branch: REL_14_STABLE [aaad8adb0] 2022-10-21 08:39:48 -0400
Branch: REL_13_STABLE [0bf2cd160] 2022-10-21 08:45:08 -0400
Branch: REL_12_STABLE [475e9daf3] 2022-10-21 08:59:26 -0400
Branch: REL_11_STABLE [38214dabd] 2022-10-21 09:05:57 -0400
Branch: REL_10_STABLE [ba58266eb] 2022-10-21 09:11:47 -0400
-->
<!-- pgdoc-cn_start sig_en=037cdd2ce723eaf09781c7a8488cef0b sig_cn_org=c3c71d57d8e41ae70cdfbb75355841f7 source=15.7 
     <para>
      Allow cross-platform tablespace relocation
      in <application>pg_basebackup</application> (Robert Haas)
     </para>
________________________________________________________-->
     <para>
      允许在<application>pg_basebackup</application>中跨平台移动表空间（Robert Haas）
     </para>
<!-- pgdoc-cn_end sig_en=037cdd2ce723eaf09781c7a8488cef0b -->

<!-- pgdoc-cn_start sig_en=eedceb5c1de9aa5917f4a1e4dec94562 sig_cn_org=8d0905f17b41c50f8bafb9baa64a3f7d source=15.7 
     <para>
      Allow the remote path in <option>-&minus;tablespace-mapping</option> to be
      either a Unix-style or Windows-style absolute path, since the source
      server could be on a different OS than the local system.
     </para>
________________________________________________________-->
     <para>
      允许<option>--tablespace-mapping</option>中的远程路径可以是Unix风格或Windows风格的绝对路径，
      因为源服务器可能与本地系统不同操作系统。
</para>
<!-- pgdoc-cn_end sig_en=eedceb5c1de9aa5917f4a1e4dec94562 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [26ee7fb36] 2022-11-02 11:30:04 -0400
Branch: REL_15_STABLE [0eede9625] 2022-11-02 11:30:04 -0400
-->
<!-- pgdoc-cn_start sig_en=9411b0eb8a832ac2b5b18e7b6090eeb1 sig_cn_org=14a67051cf40269379e72ac156ada76f source=15.7 
     <para>
      Fix <application>pg_dump</application>'s failure to dump comments
      attached to some <literal>CHECK</literal> constraints (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<application>pg_dump</application>无法转储附加到某些<literal>CHECK</literal>约束的注释（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=9411b0eb8a832ac2b5b18e7b6090eeb1 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [34fa0ddae] 2022-11-04 10:39:52 -0400
Branch: REL_15_STABLE [2c6d43650] 2022-11-04 10:39:52 -0400
-->
<!-- pgdoc-cn_start sig_en=205e4caa3f92740e51b2e289f98d264c sig_cn_org=1370d439dc789ee68c752cc60c3d21fc source=15.7 
     <para>
      Fix <command>CREATE DATABASE</command> to allow
      its <literal>oid</literal> parameter to exceed
      2<superscript>31</superscript> (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      修复<command>CREATE DATABASE</command>，允许其<literal>oid</literal>参数超过2<superscript>31</superscript>（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=205e4caa3f92740e51b2e289f98d264c -->

<!-- pgdoc-cn_start sig_en=8c9d47554fa478f5e9bc963195fc0fa4 sig_cn_org=8fd0a34f325275d1ba5ee6134d53c602 source=15.7 
     <para>
      This oversight prevented <application>pg_upgrade</application> from
      succeeding when the source installation contained databases with
      OIDs larger than that.
     </para>
________________________________________________________-->
     <para>
      这个疏忽导致<application>pg_upgrade</application>在源安装中包含OID大于该值的数据库时无法成功。
     </para>
<!-- pgdoc-cn_end sig_en=8c9d47554fa478f5e9bc963195fc0fa4 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [495e73c20] 2022-11-01 12:48:01 -0400
Branch: REL_15_STABLE [8b0a5cf3f] 2022-11-01 12:48:01 -0400
Branch: REL_14_STABLE [0f2f5645a] 2022-11-01 12:48:01 -0400
Branch: REL_13_STABLE [a9fdb48b7] 2022-11-01 12:48:01 -0400
Branch: REL_12_STABLE [ca4c6764b] 2022-11-01 12:48:01 -0400
Branch: REL_11_STABLE [149e00192] 2022-11-01 12:48:01 -0400
Branch: REL_10_STABLE [56083ff30] 2022-11-01 12:48:01 -0400
-->
<!-- pgdoc-cn_start sig_en=f2cc7c7430e901e57c625e967338a7f7 sig_cn_org=b90deaf72dd880fdb3ab30ef66c879b4 source=15.7 
     <para>
      In <application>pg_stat_statements</application>, fix access to
      already-freed memory (zhaoqigui)
     </para>
________________________________________________________-->
     <para>
      在<application>pg_stat_statements</application>中，修复对已释放内存的访问（zhaoqigui）
     </para>
<!-- pgdoc-cn_end sig_en=f2cc7c7430e901e57c625e967338a7f7 -->

<!-- pgdoc-cn_start sig_en=7f7ed10ffafea2385d9d5b1d25b2b1a0 sig_cn_org=eb9837a803d482e89abc077ee93003bc source=15.7 
     <para>
      This occurred if <application>pg_stat_statements</application>
      tracked a <command>ROLLBACK</command> command issued via extended
      query protocol.  In debug builds it consistently led to an assertion
      failure.  In production builds there would often be no visible ill
      effect; but if the freed memory had already been reused, the likely
      result would be to store garbage for the query string.
     </para>
________________________________________________________-->
     <para>
      如果<application>pg_stat_statements</application>跟踪通过扩展查询协议发出的<command>ROLLBACK</command>命令，
	  则会发生这种情况。在调试构建中，这通常会导致断言失败。在生产构建中，通常不会有明显的不良影响；
	  但如果已经重新使用了已释放的内存，则可能的结果是为查询字符串存储垃圾数据。
     </para>
<!-- pgdoc-cn_end sig_en=7f7ed10ffafea2385d9d5b1d25b2b1a0 -->
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [c2ae01f69] 2022-10-19 22:18:26 +1300
Branch: REL_15_STABLE [af64846e1] 2022-10-19 22:18:54 +1300
Branch: REL_14_STABLE [d033f8f8b] 2022-10-19 22:32:14 +1300
Branch: REL_13_STABLE [cf94cb586] 2022-10-19 22:38:58 +1300
Branch: REL_12_STABLE [aa34bc4e2] 2022-10-19 22:44:53 +1300
Branch: REL_11_STABLE [da3a6825e] 2022-10-19 22:49:25 +1300
-->
<!-- pgdoc-cn_start sig_en=3c7b7814b66b392123d77c8d1c47a00e sig_cn_org=5f82281bc64961651e991d905181c4f1 source=15.7 
     <para>
      Fix incompatibilities with LLVM 15 (Thomas Munro, Andres Freund)
     </para>
________________________________________________________-->
     <para>
      修复与LLVM 15的不兼容性（Thomas Munro，Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=3c7b7814b66b392123d77c8d1c47a00e -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1c72d82c2] 2022-11-02 17:37:29 -0400
Branch: REL_15_STABLE [a5737e765] 2022-11-02 17:37:26 -0400
Branch: REL_14_STABLE [058c7b5dd] 2022-11-02 17:37:26 -0400
Branch: REL_13_STABLE [c479492c0] 2022-11-02 17:37:26 -0400
Branch: REL_12_STABLE [5ecf836e9] 2022-11-02 17:37:26 -0400
Branch: REL_11_STABLE [a0f9be1f9] 2022-11-02 17:37:26 -0400
Branch: REL_10_STABLE [19cefebe7] 2022-11-02 17:37:26 -0400
-->
<!-- pgdoc-cn_start sig_en=8c6af66f2baee5a0adddd2b14fc400cd sig_cn_org=ec7002bfbd2dbd8bd736cfe726a717b5 source=15.7 
     <para>
      Allow use of <function>__sync_lock_test_and_set()</function> for
      spinlocks on any machine (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      允许在任何机器上使用<function>__sync_lock_test_and_set()</function>进行自旋锁（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=8c6af66f2baee5a0adddd2b14fc400cd -->

<!-- pgdoc-cn_start sig_en=27dadd383b58893fd65e6e8134cf11fb sig_cn_org=375b351a88a8d9d73782c6c2e91568c0 source=15.7 
     <para>
      This eases porting to new machine architectures, at least if you're
      using a compiler that supports this GCC builtin function.
     </para>
________________________________________________________-->
     <para>
      这样可以更容易地移植到新的机器架构，至少如果你正在使用支持这个GCC内建函数的编译器。
     </para>
<!-- pgdoc-cn_end sig_en=27dadd383b58893fd65e6e8134cf11fb -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [717ec1aae] 2022-10-16 15:27:04 -0400
Branch: REL_15_STABLE [24c4c2617] 2022-10-16 15:27:04 -0400
Branch: REL_14_STABLE [18e60712d] 2022-10-16 15:27:04 -0400
Branch: REL_13_STABLE [bc7a40b42] 2022-10-16 15:27:04 -0400
Branch: REL_12_STABLE [3d7df87c4] 2022-10-16 15:27:04 -0400
Branch: REL_11_STABLE [6618c276b] 2022-10-16 15:27:04 -0400
Branch: REL_10_STABLE [02d074e3e] 2022-10-16 15:27:04 -0400
Branch: REL9_6_STABLE [9bfa043a1] 2022-10-16 15:27:04 -0400
Branch: REL9_5_STABLE [377b37cf7] 2022-10-16 15:27:04 -0400
Branch: REL9_4_STABLE [57dfb6ce6] 2022-10-16 15:27:04 -0400
Branch: REL9_3_STABLE [ee4c44014] 2022-10-16 15:27:04 -0400
Branch: REL9_2_STABLE [fec443414] 2022-10-16 15:27:04 -0400
-->
<!-- pgdoc-cn_start sig_en=b1b149471b14798fd37fceb7950bc770 sig_cn_org=2576b7e20b28262cdb2d36500ab01313 source=15.7 
     <para>
      Rename symbol <literal>REF</literal> to <literal>REF_P</literal> to
      avoid compile failure on recent macOS (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      将符号<literal>REF</literal>重命名为<literal>REF_P</literal>，以避免在最近的macOS上编译失败（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=b1b149471b14798fd37fceb7950bc770 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [450ee7012] 2022-10-16 11:47:44 -0400
Branch: REL_15_STABLE [bd4b2926e] 2022-10-16 11:47:44 -0400
Branch: REL_14_STABLE [6fa431d84] 2022-10-16 11:47:44 -0400
Branch: REL_13_STABLE [a2acafc7b] 2022-10-16 11:47:44 -0400
Branch: REL_12_STABLE [d33ac1ec2] 2022-10-16 11:47:44 -0400
-->
<!-- pgdoc-cn_start sig_en=9dafc73b6344200768ae818522d03454 sig_cn_org=db3884c0feff8097937d049e99bd26fc source=15.7 
     <para>
      Avoid using <function>sprintf</function>, to avoid compile-time
      deprecation warnings (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      避免使用<function>sprintf</function>，以避免编译时的弃用警告（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=9dafc73b6344200768ae818522d03454 -->
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e7c7605a7] 2022-11-01 17:08:28 -0400
Branch: REL_15_STABLE [c3d16eb3d] 2022-11-01 17:08:49 -0400
Branch: REL_14_STABLE [97bb80b1b] 2022-11-01 17:08:58 -0400
Branch: REL_13_STABLE [ebf48810b] 2022-11-01 17:09:04 -0400
Branch: REL_12_STABLE [ec9a000d8] 2022-11-01 17:09:09 -0400
Branch: REL_11_STABLE [b1cb77bdf] 2022-11-01 17:09:16 -0400
Branch: REL_10_STABLE [b3326a753] 2022-11-01 17:09:21 -0400
-->
<!-- pgdoc-cn_start sig_en=60c16f80893cf01b95ce97f15093340c sig_cn_org=2100353c65d66557a650b586a19091c6 source=15.7 
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2022f for DST law changes in Chile, Fiji, Iran, Jordan,
      Mexico, Palestine, and Syria, plus historical corrections for Chile,
      Crimea, Iran, and Mexico.
     </para>
________________________________________________________-->
     <para>
      更新时区数据文件至<application>tzdata</application> 2022f版本，以反映智利、斐济、伊朗、约旦、墨西哥、巴勒斯坦和叙利亚的夏令时法律变化，以及智利、克里米亚、伊朗和墨西哥的历史更正。
     </para>
<!-- pgdoc-cn_end sig_en=60c16f80893cf01b95ce97f15093340c -->

<!-- pgdoc-cn_start sig_en=b3eb72622ea68817146620a60ee18c3b sig_cn_org=372f8e62dab14c688ec10c69778212bb source=15.7 
     <para>
      Also, the Europe/Kiev zone has been renamed to Europe/Kyiv.
      Also, the following zones have been merged into nearby,
      more-populous zones whose clocks have agreed with them since 1970:
      Antarctica/Vostok, Asia/Brunei,
      Asia/Kuala_Lumpur, Atlantic/Reykjavik, Europe/Amsterdam,
      Europe/Copenhagen, Europe/Luxembourg, Europe/Monaco, Europe/Oslo,
      Europe/Stockholm, Indian/Christmas, Indian/Cocos, Indian/Kerguelen,
      Indian/Mahe, Indian/Reunion, Pacific/Chuuk, Pacific/Funafuti,
      Pacific/Majuro, Pacific/Pohnpei, Pacific/Wake and Pacific/Wallis.
      (This indirectly affects zones that were already links to one of
      these: Arctic/Longyearbyen, Atlantic/Jan_Mayen, Iceland,
      Pacific/Ponape, Pacific/Truk, and Pacific/Yap.)  America/Nipigon,
      America/Rainy_River, America/Thunder_Bay, Europe/Uzhgorod, and
      Europe/Zaporozhye were also merged into nearby zones after
      discovering that their claimed post-1970 differences from those
      zones seem to have been errors.
      In all these cases, the previous zone name remains as an alias;
      but the actual data is that of the zone that was merged into.
     </para>
________________________________________________________-->
     <para>
      另外，欧洲/基辅时区已更名为欧洲/基辅。
      此外，以下时区已合并到附近人口更多的时区，自1970年以来，这些时区的时钟已经与它们达成一致：
      南极洲/沃斯托克，亚洲/文莱，亚洲/吉隆坡，大西洋/雷克雅未克，欧洲/阿姆斯特丹，
      欧洲/哥本哈根，欧洲/卢森堡，欧洲/摩纳哥，欧洲/奥斯陆，欧洲/斯德哥尔摩，印度/圣诞岛，
      印度/科科斯群岛，印度/凯尔盖朗岛，印度/马埃岛，印度/留尼汪岛，太平洋/楚克岛，太平洋/富纳富提岛，
      太平洋/马朱罗岛，太平洋/波恩佩岛，太平洋/威克岛和太平洋/瓦利斯岛。
      （这间接影响了那些已经链接到其中一个时区的时区：北极/朗伊尔比恩，大西洋/扬马延岛，冰岛，
      太平洋/波纳佩，太平洋/特鲁克和太平洋/雅浦。）美洲/尼皮贡，美洲/雷尼河，美洲/桑德湾，
      欧洲/乌日哥罗德和欧洲/扎波罗热在发现他们声称的与这些时区的1970年后的差异似乎是错误后，
      也已合并到附近的时区。
      在所有这些情况下，以前的时区名称仍然作为别名；
      但实际数据是合并时区的数据。
     </para>
<!-- pgdoc-cn_end sig_en=b3eb72622ea68817146620a60ee18c3b -->

<!-- pgdoc-cn_start sig_en=93ac0c3ef2e30701284db6eba8f0fc2e sig_cn_org=a232424ec76db5e85a3bf3da57c91ac1 source=15.7 
     <para>
      These zone mergers result in loss of pre-1970 timezone history for
      the merged zones, which may be troublesome for applications
      expecting consistency of <type>timestamptz</type> display.  As an
      example, the stored value <literal>1944-06-01 12:00 UTC</literal>
      would previously display as <literal>1944-06-01
      13:00:00+01</literal> if the Europe/Stockholm zone is selected, but
      now it will read out as <literal>1944-06-01 14:00:00+02</literal>.
     </para>
________________________________________________________-->
     <para>
      这些区域合并导致合并区域失去了1970年之前的时区历史记录，这可能会对期望
	  <type>timestamptz</type>显示一致性的应用程序造成麻烦。
	  例如，存储的值<literal>1944-06-01 12:00 UTC</literal>以前如果选择了Europe/Stockholm区域，
	  则会显示为<literal>1944-06-01 13:00:00+01</literal>，但现在将显示为<literal>1944-06-01 14:00:00+02</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=93ac0c3ef2e30701284db6eba8f0fc2e -->

<!-- pgdoc-cn_start sig_en=7aeed33cc178691e3dbb6fc65527d289 sig_cn_org=5d1ae2d192886dd893c14d22605b15bc source=15.7 
     <para>
      It is possible to build the time zone data files with options that
      will restore the older zone data, but that choice also inserts a lot
      of other old (and typically poorly-attested) zone data, resulting in
      more total changes from the previous release than accepting these
      upstream changes does.  <productname>PostgreSQL</productname> has
      chosen to ship the <productname>tzdb</productname> data
      as-recommended, and so far as we are aware most major operating
      system distributions are doing likewise.  However, if these changes
      cause significant problems for your application, a possible solution
      is to install a local build of the time zone data files using
      <productname>tzdb</productname>'s backwards-compatibility options
      (see their <literal>PACKRATDATA</literal>
      and <literal>PACKRATLIST</literal> options).
     </para>
________________________________________________________-->
     <para>
      可以使用选项构建时区数据文件，以恢复旧的区域数据，但这个选择也会插入很多其他旧的（通常是证据不足的）区域数据，导致与上一个版本相比的总体变化更多，而接受这些上游更改则不会。 <productname>PostgreSQL</productname>选择以推荐方式提供<productname>tzdb</productname>数据，据我们所知，大多数主要操作系统发行版也在这样做。 但是，如果这些更改对您的应用程序造成重大问题，一个可能的解决方案是使用<productname>tzdb</productname>的向后兼容选项安装本地构建的时区数据文件（请参阅它们的<literal>PACKRATDATA</literal>和<literal>PACKRATLIST</literal>选项）。
     </para>
<!-- pgdoc-cn_end sig_en=7aeed33cc178691e3dbb6fc65527d289 -->
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15">
<!-- pgdoc-cn_start sig_en=0afa5fa400834e8a3c6218df8af41eba sig_cn_org=b5afec76948debafe81627e7dd62ef99 source=15.7 
  <title>Release 15</title>
________________________________________________________-->
  <title>发布版本 15</title>
<!-- pgdoc-cn_end sig_en=0afa5fa400834e8a3c6218df8af41eba -->

  <formalpara>
<!-- pgdoc-cn_start sig_en=c45e8127eac45f2347bf1713afaeffda sig_cn_org=253305b4c6dff5b87ef36e3c2d95e52e source=15.7 
   <title>Release date:</title>
________________________________________________________-->
   <title>发布日期：</title>
<!-- pgdoc-cn_end sig_en=c45e8127eac45f2347bf1713afaeffda -->
<!-- pgdoc-cn_start sig_en=749388b89c9e1bb2d66d73e2a02b57ac sig_cn_org=a9aad5fedce2ddae378d37c642fe0a4a source=15.7 
   <para>2022-10-13</para>
________________________________________________________-->
   <para>2022年10月13日</para>
<!-- pgdoc-cn_end sig_en=749388b89c9e1bb2d66d73e2a02b57ac -->
  </formalpara>

  <sect2>
<!-- pgdoc-cn_start sig_en=13508788fd8dee2d1f9c928870e99338 sig_cn_org=None source=14.1 
   <title>Overview</title>
________________________________________________________-->
   <title>概述</title>
<!-- pgdoc-cn_end sig_en=13508788fd8dee2d1f9c928870e99338 -->

<!-- pgdoc-cn_start sig_en=02dd6a15d5070b78ceb4362c3aa8c1bf sig_cn_org=872caca8db82a015b086db1292d20a2f source=15.7 
   <para>
    <productname>PostgreSQL</productname> 15 contains many new features
    and enhancements, including:
   </para>
________________________________________________________-->
   <para>
    <productname>PostgreSQL</productname> 15 包含许多新功能和增强功能，包括:
   </para>
<!-- pgdoc-cn_end sig_en=02dd6a15d5070b78ceb4362c3aa8c1bf -->

   <itemizedlist>
    <listitem>
<!-- pgdoc-cn_start sig_en=75fbc1e973a5316d9035619cc217f96d sig_cn_org=d90c0a0221f0d12907e3ca1b245e3a1d source=15.7 
     <para>
      Support for the <acronym>SQL</acronym>
      <link linkend="sql-merge"><command>MERGE</command></link> command.
     </para>
________________________________________________________-->
     <para>
      支持<acronym>SQL</acronym>命令
      <link linkend="sql-merge"><command>MERGE</command></link>。
     </para>
<!-- pgdoc-cn_end sig_en=75fbc1e973a5316d9035619cc217f96d -->
    </listitem>
    <listitem>
<!-- pgdoc-cn_start sig_en=e7a11ef0b2577239eae563f1ed921079 sig_cn_org=2091e6dff10572517f87f8cb7b353870 source=15.7 
     <para>
      Selective publication of tables' contents within
      <link linkend="logical-replication">logical replication</link>
      publications, through the ability to specify column lists and
      row filter conditions.
     </para>
________________________________________________________-->
     <para>
      通过指定列列表和行过滤条件，在<link linkend="logical-replication">逻辑复制</link>发布中选择性地发布表内容。
     </para>
<!-- pgdoc-cn_end sig_en=e7a11ef0b2577239eae563f1ed921079 -->
    </listitem>
    <listitem>
<!-- pgdoc-cn_start sig_en=91899353685660e09efc92ebb1437d72 sig_cn_org=4a7e57a2fb25838f34daa22b209bc638 source=15.7 
     <para>
      More options for compression, including support for Zstandard (zstd)
      compression.  This includes support for performing compression on
      the server side during
      <link linkend="app-pgbasebackup"><application>pg_basebackup</application></link>.
     </para>
________________________________________________________-->
     <para>
      提供更多的压缩选项，包括支持Zstandard（zstd）压缩。这包括在
      <link linkend="app-pgbasebackup"><application>pg_basebackup</application></link>
      过程中在服务器端执行压缩的支持。
     </para>
<!-- pgdoc-cn_end sig_en=91899353685660e09efc92ebb1437d72 -->
    </listitem>
    <listitem>
<!-- pgdoc-cn_start sig_en=61bc207ea7308284b6632403478771fc sig_cn_org=4bf04874e1446354a0851c3e31940acc source=15.7 
     <para>
      Support for structured <link linkend="guc-log-destination">server
      log output</link> using the <acronym>JSON</acronym> format.
     </para>
________________________________________________________-->
     <para>
      支持使用<acronym>JSON</acronym>格式的<link linkend="guc-log-destination">服务器日志输出</link>的结构化支持。
     </para>
<!-- pgdoc-cn_end sig_en=61bc207ea7308284b6632403478771fc -->
    </listitem>
    <listitem>
<!-- pgdoc-cn_start sig_en=755141215473651cb7913b35ee7cb362 sig_cn_org=e01dc137075d15b86f1dfcea998a3573 source=15.7 
     <para>
      Performance improvements, particularly for in-memory and on-disk
      sorting.
     </para>
________________________________________________________-->
     <para>
      性能改进，特别是对于内存和磁盘排序。
     </para>
<!-- pgdoc-cn_end sig_en=755141215473651cb7913b35ee7cb362 -->
    </listitem>
   </itemizedlist>

<!-- pgdoc-cn_start sig_en=9753684280279312ae5e7c980f1e0887 sig_cn_org=36e0e6e518a2de025a562262b1154f57 source=15.7 
   <para>
    The above items and other new features of
    <productname>PostgreSQL</productname> 15 are explained in more detail
    in the sections below.
   </para>
________________________________________________________-->
   <para>
    上述项目和<productname>PostgreSQL</productname> 15的其他新功能在下面的部分中有更详细的解释。
   </para>
<!-- pgdoc-cn_end sig_en=9753684280279312ae5e7c980f1e0887 -->

  </sect2>

  <sect2>

<!-- pgdoc-cn_start sig_en=59aeec8d9c8fdeb4542a64afc6241b98 sig_cn_org=d2b1fe6d8bc3b7adbc694b706db865e9 source=15.7 
   <title>Migration to Version 15</title>
________________________________________________________-->
   <title>升级到版本15</title>
<!-- pgdoc-cn_end sig_en=59aeec8d9c8fdeb4542a64afc6241b98 -->

<!-- pgdoc-cn_start sig_en=431f010bb2fbb17abe43f0a35996ba08 sig_cn_org=bced2179de5c6a7b7245d912d41a82ca source=15.7 
    <para>
     A dump/restore using <xref linkend="app-pg-dumpall"/> or use of
     <xref linkend="pgupgrade"/> or logical replication is required for
     those wishing to migrate data from any previous release.  See <xref
     linkend="upgrading"/> for general information on migrating to new
     major releases.
    </para>
________________________________________________________-->
    <para>
     使用<xref linkend="app-pg-dumpall"/>进行转储/恢复，或者使用
     <xref linkend="pgupgrade"/>或逻辑复制来迁移数据，以便从任何之前的版本迁移数据。参见<xref
     linkend="upgrading"/>了解有关迁移到新主要版本的一般信息。
    </para>
<!-- pgdoc-cn_end sig_en=431f010bb2fbb17abe43f0a35996ba08 -->

<!-- pgdoc-cn_start sig_en=f60f3cc409d2fe328574fa670006a80a sig_cn_org=da57acd4aaffffa7afd8608f681f114e source=15.7 
    <para>
     Version 15 contains a number of changes that may affect compatibility
     with previous releases.  Observe the following incompatibilities:
    </para>
________________________________________________________-->
    <para>
     版本15包含了一些可能影响与之前版本兼容性的更改。请注意以下不兼容性：
    </para>
<!-- pgdoc-cn_end sig_en=f60f3cc409d2fe328574fa670006a80a -->

   <itemizedlist>

<!--
Author: Noah Misch <noah@leadboat.com>
2021-09-09 [b073c3ccd] Revoke PUBLIC CREATE from public schema, now owned by pg
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=07eb01437503c6b6d66c69db8c6f685b sig_cn_org=74596b5207372874c93142da689cda4a source=15.7 
     <para>
      Remove <literal>PUBLIC</literal> creation permission on the <link
      linkend="ddl-schemas-public"><literal>public</literal> schema</link>
      (Noah Misch)
     </para>
________________________________________________________-->
     <para>
      移除在<link linkend="ddl-schemas-public"><literal>public</literal>模式</link>上的<literal>PUBLIC</literal>创建权限
      (Noah Misch)
     </para>
<!-- pgdoc-cn_end sig_en=07eb01437503c6b6d66c69db8c6f685b -->

<!-- pgdoc-cn_start sig_en=b6920d64ed5f92fedb1a8efc75d3a413 sig_cn_org=0eabea17c5d1ad8d90f64166a2f9f22e source=15.7 
     <para>
      The new default is one of the secure schema usage patterns that <xref
      linkend="ddl-schemas-patterns"/> has recommended since the security
      release for CVE-2018-1058.  The change applies to new database
      clusters and to newly-created databases in existing clusters.
      Upgrading a cluster or restoring a database dump will preserve
      <literal>public</literal>'s existing permissions.
     </para>
________________________________________________________-->
     <para>
      新的默认设置是自从CVE-2018-1058安全发布以来，<xref linkend="ddl-schemas-patterns"/>推荐的安全模式之一。
      此更改适用于新的数据库集群以及现有集群中新创建的数据库。
      升级集群或恢复数据库转储将保留<literal>public</literal>的现有权限。
</para>
<!-- pgdoc-cn_end sig_en=b6920d64ed5f92fedb1a8efc75d3a413 -->

<!-- pgdoc-cn_start sig_en=b320668137078c7264de534add61e85a sig_cn_org=1cd7719dbc5121e9f6eaadac552aa69c source=15.7 
     <para>
      For existing databases, especially those having multiple users,
      consider revoking <literal>CREATE</literal> permission on
      the <literal>public</literal> schema to adopt this new default.
      For new databases having no need to defend against insider threats,
      granting <literal>CREATE</literal> permission will yield the behavior
      of prior releases.
     </para>
________________________________________________________-->
     <para>
      对于现有数据库，特别是那些有多个用户的数据库，考虑撤销对<literal>public</literal>式<literal>CREATE</literal>权限的授予，
      以采用这个新的默认设置。对于没有必要防范内部威胁的新数据库，授予<literal>CREATE</literal>权限
      将产生之前版本的行为。
     </para>
<!-- pgdoc-cn_end sig_en=b320668137078c7264de534add61e85a -->
    </listitem>

<!--
Author: Noah Misch <noah@leadboat.com>
2021-09-09 [b073c3ccd] Revoke PUBLIC CREATE from public schema, now owned by pg
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=7970d1f827f3f484c3d832a6b76ec16b sig_cn_org=05965f6bf4914ffe5c1d07edb003e950 source=15.7 
     <para>
      Change the owner of the <literal>public</literal> schema to be the
      new <literal>pg_database_owner</literal> role (Noah Misch)
     </para>
________________________________________________________-->
     <para>
      将<literal>public</literal>模式的所有者更改为新的<literal>pg_database_owner</literal>角色（Noah Misch）
     </para>
<!-- pgdoc-cn_end sig_en=7970d1f827f3f484c3d832a6b76ec16b -->

<!-- pgdoc-cn_start sig_en=015cd0917dfb9cb6351da9958eb4e5c2 sig_cn_org=dddb2ac7bea47e836adaf0e958ef33d2 source=15.7 
     <para>
      This allows each database's owner to have ownership privileges on
      the <literal>public</literal> schema within their database.
      Previously it was owned by the bootstrap superuser, so that
      non-superuser database owners could not do anything with it.
     </para>
________________________________________________________-->
     <para>
      这样每个数据库的所有者都可以在其数据库中拥有<literal>public</literal>模式的所有权权限。
      以前它是由引导超级用户拥有的，因此非超级用户数据库所有者无法对其进行任何操作。
     </para>
<!-- pgdoc-cn_end sig_en=015cd0917dfb9cb6351da9958eb4e5c2 -->

<!-- pgdoc-cn_start sig_en=224066058c9fe303ba5cdad5ba6f4cb9 sig_cn_org=a5b5466cd81793799f4699668c6e8e40 source=15.7 
     <para>
      This change applies to new database clusters and to newly-created
      databases in existing clusters.
      Upgrading a cluster or restoring a database dump will preserve
      <literal>public</literal>'s existing ownership specification.
     </para>
________________________________________________________-->
     <para>
      这个更改适用于新的数据库集群和现有集群中新创建的数据库。
      升级集群或恢复数据库转储将保留<literal>public</literal>的现有所有权规范。
</para>
<!-- pgdoc-cn_end sig_en=224066058c9fe303ba5cdad5ba6f4cb9 -->
    </listitem>

<!--
Author: Stephen Frost <sfrost@snowman.net>
2022-04-06 [39969e2a1] Remove exclusive backup mode
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=39912dcfb4694f009da1b442cb1777ff sig_cn_org=8e7978c6e8ee7809f89aaa54b236c73c source=15.7 
     <para>
      Remove long-deprecated <link linkend="backup-base-backup">exclusive
      backup mode</link> (David Steele, Nathan Bossart)
     </para>
________________________________________________________-->
     <para>
      移除长期弃用的<link linkend="backup-base-backup">独占备份模式</link>（David Steele，Nathan Bossart）
     </para>
<!-- pgdoc-cn_end sig_en=39912dcfb4694f009da1b442cb1777ff -->

<!-- pgdoc-cn_start sig_en=84f69547d86e337cc9221db602490cbf sig_cn_org=e4809a8429e83ea4874e9f7313d298b2 source=15.7 
     <para>
      If the database server stops abruptly while in this mode, the
      server could fail to start.  The non-exclusive backup mode is
      considered superior for all purposes.  Functions
      <function>pg_start_backup()</function>/<function>pg_stop_backup()</function>
      have been renamed to
      <function>pg_backup_start()</function>/<function>pg_backup_stop()</function>,
      and the functions <function>pg_backup_start_time()</function>
      and <function>pg_is_in_backup()</function> have been removed.
     </para>
________________________________________________________-->
     <para>
      如果数据库服务器在这种模式下突然停止，服务器可能无法启动。非独占备份模式被认为在所有情况下都更优秀。
      函数<function>pg_start_backup()</function>/<function>pg_stop_backup()</function>已重命名为
      <function>pg_backup_start()</function>/<function>pg_backup_stop()</function>，
      而函数<function>pg_backup_start_time()</function>和<function>pg_is_in_backup()</function>已被移除。
</para>
<!-- pgdoc-cn_end sig_en=84f69547d86e337cc9221db602490cbf -->
    </listitem>

<!--
Author: Peter Geoghegan <pg@bowt.ie>
2022-02-16 [8f388f6f5] Increase hash_mem_multiplier default to 2.0.
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=457bd27fd086e689c053877301a5a43d sig_cn_org=56203f1579f696582755312c4d8dc6c1 source=15.7 
     <para>
      Increase <link
      linkend="guc-hash-mem-multiplier"><varname>hash_mem_multiplier</varname></link>
      default to 2.0 (Peter Geoghegan)
     </para>
________________________________________________________-->
     <para>
      将<link linkend="guc-hash-mem-multiplier"><varname>hash_mem_multiplier</varname></link>
      的默认值增加到2.0（Peter Geoghegan）
     </para>
<!-- pgdoc-cn_end sig_en=457bd27fd086e689c053877301a5a43d -->

<!-- pgdoc-cn_start sig_en=79372a731060076ba0d12904f83569a2 sig_cn_org=8ae0f16b918b09768ea1d45860f23131 source=15.7 
     <para>
      This allows query hash operations to use more
      <link linkend="guc-work-mem"><varname>work_mem</varname></link>
      memory than other operations.
     </para>
________________________________________________________-->
     <para>
      这允许查询哈希操作使用比其他操作更多的
      <link linkend="guc-work-mem"><varname>work_mem</varname></link>
      内存。
     </para>
<!-- pgdoc-cn_end sig_en=79372a731060076ba0d12904f83569a2 -->
    </listitem>

<!--
Author: Andres Freund <andres@anarazel.de>
2022-03-07 [76a29adee] plpython: Remove plpythonu, plpython2u and associated tr
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=40a312141d32616d3271de062ed82be4 sig_cn_org=942c82cb71c34b45f5335c1c1965028d source=15.7 
     <para>
      Remove server-side language <link
      linkend="plpython"><literal>plpython2u</literal></link> and generic
      Python language <literal>plpythonu</literal> (Andres Freund)
     </para>
________________________________________________________-->
     <para>
      移除服务器端语言<link
      linkend="plpython"><literal>plpython2u</literal></link>和通用的
      Python语言<literal>plpythonu</literal>（Andres Freund）
     </para>
<!-- pgdoc-cn_end sig_en=40a312141d32616d3271de062ed82be4 -->

<!-- pgdoc-cn_start sig_en=0cd56f94a3a1664aa104325aefa68295 sig_cn_org=a49d97ec4faa30a066af5ee9b141f1c8 source=15.7 
     <para>
      Python 2.x is no longer supported.  While the original intent of
      <literal>plpythonu</literal> was that it could eventually refer
      to <literal>plpython3u</literal>, changing it now seems more likely
      to cause problems than solve them, so it's just been removed.
     </para>
________________________________________________________-->
     <para>
      Python 2.x不再受支持。虽然最初的意图是<literal>plpythonu</literal>最终可以指向<literal>plpython3u</literal>，
      但现在更改它似乎更可能引起问题而不是解决问题，因此它已被移除。
     </para>
<!-- pgdoc-cn_end sig_en=0cd56f94a3a1664aa104325aefa68295 -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-06 [cbe25dcff] Disallow making an empty lexeme via array_to_tsvector().
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=cf8d6d348d8010f5a5e5ef3692785337 sig_cn_org=e4f027f87a70ad1b86c48840cf929a81 source=15.7 
     <para>
      Generate an error if <link
      linkend="textsearch-functions-table"><function>array_to_tsvector()</function></link>
      is passed an empty-string array element (Jean-Christophe Arnu)
     </para>
________________________________________________________-->
     <para>
      如果<link linkend="textsearch-functions-table"><function>array_to_tsvector()</function></link>函数被传递一个空字符串数组元素，则会生成一个错误（Jean-Christophe Arnu）
     </para>
<!-- pgdoc-cn_end sig_en=cf8d6d348d8010f5a5e5ef3692785337 -->

<!-- pgdoc-cn_start sig_en=bc6c208ffd84e9f12a6b9824bb39b9c1 sig_cn_org=38655b153370a8fb66eeb25edb819985 source=15.7 
     <para>
      This is prohibited because lexemes should never be empty.  Users of
      previous Postgres releases should verify that no empty lexemes
      are stored because they can lead to dump/restore failures and
      inconsistent results.
     </para>
________________________________________________________-->
     <para>
      这是被禁止的，因为词元永远不应为空。之前的Postgres版本的用户应验证没有存储空词元，因为它们可能导致dump/restore失败和不一致的结果。
     </para>
<!-- pgdoc-cn_end sig_en=bc6c208ffd84e9f12a6b9824bb39b9c1 -->
    </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-12-06 [e9e63b702] Fix inappropriate uses of PG_GETARG_UINT32()
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=0c889f63c50dfa6f3537b92f274458d2 sig_cn_org=397deecf43740959b38bba1e1714d14d source=15.7 
     <para>
      Generate an error when <link
      linkend="functions-string-other"><function>chr()</function></link>
      is supplied with a negative argument (Peter Eisentraut)
     </para>
________________________________________________________-->
     <para>
      当<link
      linkend="functions-string-other"><function>chr()</function></link>
      被提供负参数时，会生成一个错误（Peter Eisentraut）
     </para>
<!-- pgdoc-cn_end sig_en=0c889f63c50dfa6f3537b92f274458d2 -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-15 [2523928b2] Reject change of output-column collation in CREATE OR RE
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=a3689084d814b9f0e82f4eb9af5f24ec sig_cn_org=95d90f068147224cb8513f453e191d37 source=15.7 
     <para>
      Prevent <link linkend="sql-createview"><command>CREATE OR REPLACE
      VIEW</command></link> from changing the collation of an output column
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      防止<link linkend="sql-createview"><command>CREATE OR REPLACE
      VIEW</command></link>改变输出列的排序规则（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=a3689084d814b9f0e82f4eb9af5f24ec -->
    </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-01-12 [a18b6d2dc] ecpg: Catch zero-length Unicode identifiers correctly
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=2d44b8d0a1ce1d5d1c7af9dc5562caed sig_cn_org=c0850e795e248a52c85d398ac6aa63df source=15.7 
     <para>
      Disallow zero-length <link
      linkend="sql-syntax-identifiers">Unicode identifiers</link>,
      e.g., <literal>U&amp;""</literal>
      (Peter Eisentraut)
     </para>
________________________________________________________-->
     <para>
      禁止零长度的<link
      linkend="sql-syntax-identifiers">Unicode标识符</link>，
      例如，<literal>U&amp;""</literal>
      (Peter Eisentraut)
     </para>
<!-- pgdoc-cn_end sig_en=2d44b8d0a1ce1d5d1c7af9dc5562caed -->

<!-- pgdoc-cn_start sig_en=e9f6556c4e3c68f4f76b2aabd3270f42 sig_cn_org=3c2451254f436995bf1e68e23d70b15f source=15.7 
     <para>
      Non-Unicode zero-length identifiers were already disallowed.
     </para>
________________________________________________________-->
     <para>
      非Unicode零长度标识符已被禁止。
     </para>
<!-- pgdoc-cn_end sig_en=e9f6556c4e3c68f4f76b2aabd3270f42 -->
    </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-02-16 [2549f0661] Reject trailing junk after numeric literals
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=c7362f49fce647af40439679b3ac568d sig_cn_org=bf342ba1adde73303111fd513e312fb0 source=15.7 
     <para>
      Prevent <link linkend="sql-syntax-constants-numeric">numeric
      literals</link> from having non-numeric trailing characters (Peter
      Eisentraut)
     </para>
________________________________________________________-->
     <para>
      防止<link linkend="sql-syntax-constants-numeric">数字字面量</link>后面有非数字字符（Peter Eisentraut）
     </para>
<!-- pgdoc-cn_end sig_en=c7362f49fce647af40439679b3ac568d -->

<!-- pgdoc-cn_start sig_en=0ca7c0709506d385862ca7d2e4dcf806 sig_cn_org=532176b36dd90984cb9e49950a7516cf source=15.7 
     <para>
      Previously, query text like <literal>123abc</literal> would be
      interpreted as <literal>123</literal> followed
      by a separate token <literal>abc</literal>.
     </para>
________________________________________________________-->
     <para>
      以前，查询文本像<literal>123abc</literal>会被解释为<literal>123</literal>后面跟着一个单独的标记<literal>abc</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=0ca7c0709506d385862ca7d2e4dcf806 -->
    </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-03-28 [e26114c81] Make JSON path numeric literals more correct
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=6597b69192ef1af69284a3386ed12443 sig_cn_org=228db356d3da655815acd22cbee4f9d0 source=15.7 
     <para>
      Adjust <link linkend="datatype-json"><acronym>JSON</acronym></link>
      numeric literal processing to match the
      <acronym>SQL</acronym>/<acronym>JSON</acronym>-standard (Peter
      Eisentraut)
     </para>
________________________________________________________-->
     <para>
      调整<link linkend="datatype-json"><acronym>JSON</acronym></link>
      数字文字处理，以匹配
      <acronym>SQL</acronym>/<acronym>JSON</acronym>标准（Peter
      Eisentraut）
     </para>
<!-- pgdoc-cn_end sig_en=6597b69192ef1af69284a3386ed12443 -->

<!-- pgdoc-cn_start sig_en=f9f66d91d8b1914daac0a8a50e4f0c93 sig_cn_org=2617759a8f0aad12a7a1edc4ad0078c2 source=15.7 
     <para>
      This accepts numeric formats like <literal>.1</literal> and
      <literal>1.</literal>, and disallows trailing junk after numeric
      literals, like <literal>1.type()</literal>.
     </para>
________________________________________________________-->
     <para>
      这个接受数字格式，比如<literal>.1</literal>和<literal>1.</literal>，并且不允许在数字字面量后面加上无关的内容，比如<literal>1.type()</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=f9f66d91d8b1914daac0a8a50e4f0c93 -->
    </listitem>

<!--
Author: Bruce Momjian <bruce@momjian.us>
2021-08-03 [95ab1e0a9] interval:  round values when spilling to months
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=df3dcd157517738878190370f606b00e sig_cn_org=0b0e62b4caf94eb6f825ae4997571641 source=15.7 
     <para>
      When <link linkend="datatype-datetime"><type>interval</type></link>
      input provides a fractional value for a unit greater than months,
      round to the nearest month (Bruce Momjian)
     </para>
________________________________________________________-->
     <para>
      当<link linkend="datatype-datetime"><type>interval</type></link>输入提供了大于月份的单位的小数值时，四舍五入到最接近的月份（Bruce Momjian）
     </para>
<!-- pgdoc-cn_end sig_en=df3dcd157517738878190370f606b00e -->

<!-- pgdoc-cn_start sig_en=798d51e54ec1ff312286850d6132d562 sig_cn_org=862ad76cd0354ad1611e828667d989ef source=15.7 
     <para>
      For example, convert <literal>1.99 years</literal> to <literal>2
      years</literal>, not <literal>1 year 11 months</literal> as before.
     </para>
________________________________________________________-->
     <para>
      例如，将<literal>1.99年</literal>转换为<literal>2年</literal>，而不是之前的<literal>1年11个月</literal>。
     </para>
<!-- pgdoc-cn_end sig_en=798d51e54ec1ff312286850d6132d562 -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-03 [591e088dd] Fix portability issues in datetime parsing.
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=fc2424f074dcbf4b5589ebb953dc4cd7 sig_cn_org=faa6892483414bfbcf0029eecbfdf0cc source=15.7 
     <para>
      Improve consistency of <type>interval</type> parsing with trailing
      periods (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      提高对带有尾随句点的<type>interval</type>解析的一致性（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=fc2424f074dcbf4b5589ebb953dc4cd7 -->

<!-- pgdoc-cn_start sig_en=ca13635f4adcf93bf50a7158f1da6c9b sig_cn_org=23bbf873bd2acbaab7281316bfae54a3 source=15.7 
     <para>
      Numbers with trailing periods were rejected on some platforms.
     </para>
________________________________________________________-->
     <para>
      在一些平台上，带有尾随句点的数字会被拒绝。
     </para>
<!-- pgdoc-cn_end sig_en=ca13635f4adcf93bf50a7158f1da6c9b -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-19 [a3d6264bb] interval_out() must be marked STABLE, not IMMUTABLE.
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=d0ade7ce5170b0abf44e3019ac7f122e sig_cn_org=a99d0e1cc66ebd1f148f614e8bc6e221 source=15.7 
     <para>
      Mark the <type>interval</type> output
      function as stable, not immutable, since it depends on <link
      linkend="guc-intervalstyle"><varname>IntervalStyle</varname></link>
      (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      将<type>interval</type>输出函数标记为稳定的，而不是不可变的，因为它依赖于<link
      linkend="guc-intervalstyle"><varname>IntervalStyle</varname></link>
      （Tom Lane）
</para>
<!-- pgdoc-cn_end sig_en=d0ade7ce5170b0abf44e3019ac7f122e -->

<!-- pgdoc-cn_start sig_en=060784a96f0be022fa4fc1b0e9e3e6ac sig_cn_org=500a683e5eef08e8ce141392ed33e15f source=15.7 
     <para>
      This will, for example, cause creation of indexes relying on the
      text output of <type>interval</type> values to fail.
     </para>
________________________________________________________-->
     <para>
      这将导致依赖<type>interval</type>值文本输出的索引创建失败。
     </para>
<!-- pgdoc-cn_end sig_en=060784a96f0be022fa4fc1b0e9e3e6ac -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-28 [54bd1e43c] Handle integer overflow in interval justification functi
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=0016ce3b4179460c141fa936f8c4dfc9 sig_cn_org=3f4cfc926e62565b4e7e82ecb1a5aeb5 source=15.7 
     <para>
      Detect integer overflow in <link
      linkend="functions-datetime-table">interval justification
      functions</link> (Joe Koshakow)
     </para>
________________________________________________________-->
     <para>
      在<link linkend="functions-datetime-table">间隔调整函数</link>中检测整数溢出（Joe Koshakow）。
     </para>
<!-- pgdoc-cn_end sig_en=0016ce3b4179460c141fa936f8c4dfc9 -->

<!-- pgdoc-cn_start sig_en=ade3e62a1bcc83a6e53d63bbcb62f010 sig_cn_org=a55a5eb3dc6215a6c5a64eed599b7e2f source=15.7 
     <para>
      The affected functions are <function>justify_interval()</function>,
      <function>justify_hours()</function>, and
      <function>justify_days()</function>.
     </para>
________________________________________________________-->
     <para>
      受影响的函数包括<function>justify_interval()</function>、
      <function>justify_hours()</function>和
      <function>justify_days()</function>。
     </para>
<!-- pgdoc-cn_end sig_en=ade3e62a1bcc83a6e53d63bbcb62f010 -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-08-02 [c034b629c] Change type "char"'s I/O format for non-ASCII characters
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=611ad873dd3d57bb7d790ae682af3335 sig_cn_org=bd5faf2ba368bcb828f6636eb6a8b9f3 source=15.7 
     <para>
      Change the I/O format of type <type>"char"</type> for non-ASCII
      characters (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      更改非ASCII字符的<type>"char"</type>类型的I/O格式（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=611ad873dd3d57bb7d790ae682af3335 -->

<!-- pgdoc-cn_start sig_en=6ef567048d84b97bd4459ff0ec076564 sig_cn_org=df44adfbe3fa6861c9421e47733deed4 source=15.7 
     <para>
      Bytes with the high bit set are now output as a backslash and three
      octal digits, to avoid encoding issues.
     </para>
________________________________________________________-->
     <para>
      高位设置的字节现在被输出为反斜杠和三个八进制数字，以避免编码问题。
     </para>
<!-- pgdoc-cn_end sig_en=6ef567048d84b97bd4459ff0ec076564 -->
    </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-03-28 [79de9842a] Remove the ability of a role to administer itself.
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=160c7eab36cfd77ffcd2ee3cbd968bb3 sig_cn_org=fba42373c0a896e2b10fde3af9232347 source=15.7 
     <para>
      Remove the default <link linkend="sql-createrole"><literal>ADMIN
      OPTION</literal></link> privilege a login role has on its own role
      membership (Robert Haas)
     </para>
________________________________________________________-->
     <para>
      移除登录角色对自身角色成员身份拥有的默认<link linkend="sql-createrole"><literal>ADMIN
      OPTION</literal></link>特权（Robert Haas）
     </para>
<!-- pgdoc-cn_end sig_en=160c7eab36cfd77ffcd2ee3cbd968bb3 -->

<!-- pgdoc-cn_start sig_en=d45db12f290c8d89b7fed7fc46928ff8 sig_cn_org=7fbed68841e1a8750eb36f43881dd06d source=15.7 
     <para>
      Previously, a login role could add/remove members of its own role,
      even without <literal>ADMIN OPTION</literal> privilege.
     </para>
________________________________________________________-->
     <para>
      以前，登录角色可以添加/删除自己角色的成员，即使没有<literal>ADMIN OPTION</literal>特权。
     </para>
<!-- pgdoc-cn_end sig_en=d45db12f290c8d89b7fed7fc46928ff8 -->
    </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2022-01-07 [a2ab9c06e] Respect permissions within logical replication.
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=d569aa7b51d6c787213961602f654393 sig_cn_org=11bf67b341484c4f1dcf971d506227a0 source=15.7 
     <para>
      Allow <link linkend="logical-replication">logical replication</link>
      to run as the owner of the subscription (Mark Dilger)
     </para>
________________________________________________________-->
     <para>
      允许<link linkend="logical-replication">逻辑复制</link>以订阅所有者的身份运行（Mark Dilger）
     </para>
<!-- pgdoc-cn_end sig_en=d569aa7b51d6c787213961602f654393 -->

<!-- pgdoc-cn_start sig_en=867ef4fa8948590cd6cd220d80574e2d sig_cn_org=2fd1b013a7f6946dd019b6bea87eb7e2 source=15.7 
     <para>
      Because row-level security policies are not checked, only superusers,
      roles with <literal>bypassrls</literal>, and table owners can
      replicate into tables with row-level security policies.
     </para>
________________________________________________________-->
     <para>
      由于不检查行级安全策略，只有超级用户、具有<literal>bypassrls</literal>的角色和表所有者才能将数据复制到具有行级安全策略的表中。
     </para>
<!-- pgdoc-cn_end sig_en=867ef4fa8948590cd6cd220d80574e2d -->
    </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2022-01-08 [96a6f11c0] More cleanup of a2ab9c06ea.
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=5944be336998e59db560e6704d68956e sig_cn_org=809058bd4cc5ee1d60ffcd4f21d0ab3f source=15.7 
     <para>
      Prevent <command>UPDATE</command> and <command>DELETE</command>
      <link linkend="logical-replication">logical replication</link>
      operations on tables where the subscription owner does not have
      <command>SELECT</command> permission on the table (Jeff Davis)
     </para>
________________________________________________________-->
     <para>
      防止<command>UPDATE</command>和<command>DELETE</command>操作在订阅所有者没有对表具有<command>SELECT</command>权限的情况下进行
      <link linkend="logical-replication">逻辑复制</link>
      操作（Jeff Davis）
     </para>
<!-- pgdoc-cn_end sig_en=5944be336998e59db560e6704d68956e -->

<!-- pgdoc-cn_start sig_en=31425f10c55e1103959e0eea8e101de1 sig_cn_org=29c592ee13fc77d7b6b3e6a3bb9adcb6 source=15.7 
     <para>
      <command>UPDATE</command> and <command>DELETE</command> commands
      typically involve reading the table as well, so require the
      subscription owner to have table <command>SELECT</command>
      permission.
     </para>
________________________________________________________-->
     <para>
      <command>UPDATE</command>和<command>DELETE</command>命令通常也需要读取表格，因此需要订阅所有者具有表格<command>SELECT</command>权限。
     </para>
<!-- pgdoc-cn_end sig_en=31425f10c55e1103959e0eea8e101de1 -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-07-27 [48c5c9068] Use the "pg_temp" schema alias in EXPLAIN and related ou
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=e440fa56c78e7af6b07378de333869ba sig_cn_org=128ce662ee1e46e1ed51a744b79b41cc source=15.7 
     <para>
      When <link linkend="sql-explain"><command>EXPLAIN</command></link>
      references the session's temporary object schema, refer to it as
      <literal>pg_temp</literal> (Amul Sul)
     </para>
________________________________________________________-->
     <para>
      当<link linkend="sql-explain"><command>EXPLAIN</command></link>引用会话的临时对象模式时，
      请将其称为<literal>pg_temp</literal>（Amul Sul）
</para>
<!-- pgdoc-cn_end sig_en=e440fa56c78e7af6b07378de333869ba -->

<!-- pgdoc-cn_start sig_en=f7a0dcbef2efb35fa8909e938a60f60d sig_cn_org=a9ec24cabcefa15c4368f69b336f6d8a source=15.7 
     <para>
      Previously the actual schema name was reported, leading to
      inconsistencies across sessions.
     </para>
________________________________________________________-->
     <para>
      以前报告的是实际的模式名称，导致会话之间存在不一致。
     </para>
<!-- pgdoc-cn_end sig_en=f7a0dcbef2efb35fa8909e938a60f60d -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-03-24 [ce95c5437] Fix pg_statio_all_tables view for multiple TOAST indexes
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=d84b850730dc97b009d48072416ccf42 sig_cn_org=1b0b5b2ba1a36712eae179db69600de1 source=15.7 
     <para>
      Fix <link
      linkend="monitoring-pg-statio-all-tables-view"><structname>pg_statio_all_tables</structname></link>
      to sum values for the rare case of <acronym>TOAST</acronym> tables
      with multiple indexes (Andrei Zubkov)
     </para>
________________________________________________________-->
     <para>
      修复<link linkend="monitoring-pg-statio-all-tables-view"><structname>pg_statio_all_tables</structname></link>
      以便对具有多个索引的<acronym>TOAST</acronym>表的值进行求和（Andrei Zubkov）
     </para>
<!-- pgdoc-cn_end sig_en=d84b850730dc97b009d48072416ccf42 -->

<!-- pgdoc-cn_start sig_en=3c1130efd442a311249fe7176709a822 sig_cn_org=794c571c366ce54e10ac3f68dbcf9af6 source=15.7 
     <para>
      Previously such cases would show one row for each index.
     </para>
________________________________________________________-->
     <para>
      以前这种情况会为每个索引显示一行。
     </para>
<!-- pgdoc-cn_end sig_en=3c1130efd442a311249fe7176709a822 -->
    </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-12-01 [75d22069e] Warning on SET of nonexisting setting with a prefix rese
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-27 [2ed8a8cc5] Rethink handling of settings with a prefix reserved by a
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-21 [88103567c] Disallow setting bogus GUCs within an extension's reserv
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=fb20d16cdfc5f81ccb73eda7504906de sig_cn_org=bd29a0e97d18999523836c97708d52c4 source=15.7 
     <para>
      Disallow setting <link linkend="runtime-config-custom">custom
      options</link> that match the name of an installed extension, but
      are not one of the extension's declared variables
      (Florin Irion, Tom Lane)
     </para>
________________________________________________________-->
     <para>
      禁止设置与已安装扩展的名称匹配但不是扩展声明的变量之一的
      <link linkend="runtime-config-custom">自定义选项</link>
      (Florin Irion, Tom Lane)
</para>
<!-- pgdoc-cn_end sig_en=fb20d16cdfc5f81ccb73eda7504906de -->

<!-- pgdoc-cn_start sig_en=dba30d21532bc0c880cfad181120a182 sig_cn_org=6fe7030f0d0d1694203bcfe904f88352 source=15.7 
     <para>
      This change causes any such pre-existing variables to be deleted
      during extension load, and then prevents new ones from being created
      later in the session.  The intent is to prevent confusion about
      whether a variable is associated with an extension or not.
     </para>
________________________________________________________-->
     <para>
      这种更改会导致任何这样的预先存在的变量在扩展加载期间被删除，然后阻止在会话后期创建新变量。
      目的是防止关于变量是否与扩展相关的混淆。
     </para>
<!-- pgdoc-cn_end sig_en=dba30d21532bc0c880cfad181120a182 -->
    </listitem>

<!--
Author: Andres Freund <andres@anarazel.de>
2022-04-06 [6f0cf8787] pgstat: remove stats_temp_directory.
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=b49e1eae67d35edf7fa08c33746c333b sig_cn_org=f18d4a81653171ab8d0c8bc6ce0c0f33 source=15.7 
     <para>
      Remove obsolete server variable
      <varname>stats_temp_directory</varname> (Andres Freund, Kyotaro
      Horiguchi)
     </para>
________________________________________________________-->
     <para>
      移除过时的服务器变量
      <varname>stats_temp_directory</varname> (Andres Freund, Kyotaro
      Horiguchi)
</para>
<!-- pgdoc-cn_end sig_en=b49e1eae67d35edf7fa08c33746c333b -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-28 [3804539e4] Replace random(), pg_erand48(), etc with a better PRNG A
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-12 [d4f109e4a] Doc: update description of random() function.
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=be9c84e7e0ec7bf797ab31f7961cc830 sig_cn_org=fdcdf4c59da7e71ef1ee39ad19dba115 source=15.7 
     <para>
      Improve the algorithm used to compute <link
      linkend="functions-math-random-table"><function>random()</function></link>
      (Fabien Coelho)
     </para>
________________________________________________________-->
     <para>
      改进用于计算<link
      linkend="functions-math-random-table"><function>random()</function></link>
      的算法（Fabien Coelho）
     </para>
<!-- pgdoc-cn_end sig_en=be9c84e7e0ec7bf797ab31f7961cc830 -->

<!-- pgdoc-cn_start sig_en=e0540bfbfc0ded002a978bb60bf5465f sig_cn_org=edc98b65e1ad0e69a3e925b32505211a source=15.7 
     <para>
      This will cause <function>random()</function>'s results to differ
      from what was emitted by prior versions, even for the same seed
      value.
     </para>
________________________________________________________-->
     <para>
      这将导致<function>random()</function>的结果与先前版本发出的结果不同，即使是相同的种子值。
     </para>
<!-- pgdoc-cn_end sig_en=e0540bfbfc0ded002a978bb60bf5465f -->
    </listitem>

<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-09-23 [bd8ac900d] Remove PQsendQuery support in pipeline mode
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=167e004025c21d0f3c5a745103e44e23 sig_cn_org=b1d566d673d66e0bac53957be77fa28f source=15.7 
     <para>
      <application>libpq</application>'s <link
      linkend="libpq-PQsendQuery"><function>PQsendQuery()</function></link>
      function is no longer supported in pipeline mode (Álvaro Herrera)
     </para>
________________________________________________________-->
     <para>
      <application>libpq</application>的<link
      linkend="libpq-PQsendQuery"><function>PQsendQuery()</function></link>
      函数在流水线模式中不再受支持（Álvaro Herrera）
     </para>
<!-- pgdoc-cn_end sig_en=167e004025c21d0f3c5a745103e44e23 -->

<!-- pgdoc-cn_start sig_en=471e7c10c3b759f2a6667901f93880a8 sig_cn_org=62226c52d00257974761af4b958252b4 source=15.7 
     <para>
      Applications that are using that combination will need to be
      modified to use <function>PQsendQueryParams()</function> instead.
     </para>
________________________________________________________-->
     <para>
      使用该组合的应用程序需要修改为使用<function>PQsendQueryParams()</function>。
     </para>
<!-- pgdoc-cn_end sig_en=471e7c10c3b759f2a6667901f93880a8 -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-09 [376ce3e40] Prefer $HOME when looking up the current user's home dir
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=418cbaf99c987cf631524bee454648ad sig_cn_org=517ebfb1e541f24ee78d31bf1af31859 source=15.7 
     <para>
      On non-Windows platforms, consult the <envar>HOME</envar> environment
      variable to find the user's home directory (Anders Kaseorg)
     </para>
________________________________________________________-->
     <para>
      在非Windows平台上，查看<envar>HOME</envar>环境变量以找到用户的主目录（Anders Kaseorg）
     </para>
<!-- pgdoc-cn_end sig_en=418cbaf99c987cf631524bee454648ad -->

<!-- pgdoc-cn_start sig_en=3649f8d7c9205b6b4933ae519cf6b6bf sig_cn_org=224d345cdd2e5ba0f204f1315abb28f6 source=15.7 
     <para>
      If <envar>HOME</envar> is empty or unset, fall back to the previous
      method of checking the <literal>&lt;pwd.h&gt;</literal> database.
      This change affects <application>libpq</application> (for example,
      while looking up <filename>~/.pgpass</filename>) as well as various
      client application programs.
     </para>
________________________________________________________-->
     <para>
      如果<envar>HOME</envar>为空或未设置，则回退到检查<literal>&lt;pwd.h&gt;</literal>数据库的先前方法。
      此更改会影响<application>libpq</application>（例如，在查找<filename>~/.pgpass</filename>时）以及各种客户端应用程序。
</para>
<!-- pgdoc-cn_end sig_en=3649f8d7c9205b6b4933ae519cf6b6bf -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-15 [2a712066d] Remove pg_dump's - -no-synchronized-snapshots switch.
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=95b8d051a18ccbf3faa7ea67a2536bbc sig_cn_org=3ef556f656274b81eb198c18e5009360 source=15.7 
     <para>
      Remove <link
      linkend="app-pgdump"><application>pg_dump</application></link>'s
      <option>-&minus;no-synchronized-snapshots</option> option (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      移除<link
      linkend="app-pgdump"><application>pg_dump</application></link>的
      <option>--no-synchronized-snapshots</option>选项（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=95b8d051a18ccbf3faa7ea67a2536bbc -->

<!-- pgdoc-cn_start sig_en=b8d26f73dc90e06220907c2cef4e6d26 sig_cn_org=0e8623fcae3eaa98e47a4df5bb84ee35 source=15.7 
     <para>
      All still-supported server versions support synchronized snapshots,
      so there's no longer a need for this option.
     </para>
________________________________________________________-->
     <para>
      所有仍然支持的服务器版本都支持同步快照，因此不再需要此选项。
     </para>
<!-- pgdoc-cn_end sig_en=b8d26f73dc90e06220907c2cef4e6d26 -->
    </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-06-15 [a3ff08e0b] Tweak behavior of psql - -single-transaction depending
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=a6817992827effb1a5097e076892bb32 sig_cn_org=93e56f4dcc40572bdb0b259967952ed0 source=15.7 
       <para>
        After an error is detected in <link
        linkend="app-psql"><application>psql</application></link>'s
        <option>-&minus;single-transaction</option> mode, change the
        final <command>COMMIT</command> command
        to <command>ROLLBACK</command> only
        if <varname>ON_ERROR_STOP</varname> is set (Michael Paquier)
       </para>
________________________________________________________-->
       <para>
        在检测到<link
        linkend="app-psql"><application>psql</application></link>的
        <option>--single-transaction</option>模式中的错误后，只有在设置了<varname>ON_ERROR_STOP</varname>时，
        将最终的<command>COMMIT</command>命令更改为<command>ROLLBACK</command>（Michael Paquier）
       </para>
<!-- pgdoc-cn_end sig_en=a6817992827effb1a5097e076892bb32 -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-12 [f8abb0f5e] postgres_fdw: suppress casts on constants in limited cas
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=c2e8d3d9f943a95a5d87fa6c528aab2f sig_cn_org=fa3a72b6ff2e27344c8236d8da123e03 source=15.7 
     <para>
      Avoid unnecessary casting of constants in queries sent by <link
      linkend="postgres-fdw">postgres_fdw</link> (Dian Fay)
     </para>
________________________________________________________-->
     <para>
      避免在由<link linkend="postgres-fdw">postgres_fdw</link>发送的查询中不必要地进行常量转换（Dian Fay）
     </para>
<!-- pgdoc-cn_end sig_en=c2e8d3d9f943a95a5d87fa6c528aab2f -->

<!-- pgdoc-cn_start sig_en=bfe4a0881c2483867411c0f9726e9ba8 sig_cn_org=f8d8edb426c18b236902b005134daff9 source=15.7 
     <para>
      When column types are intentionally different between local and
      remote databases, such casts could cause errors.
     </para>
________________________________________________________-->
     <para>
      当本地和远程数据库之间的列类型有意不同时，这些转换可能会导致错误。
     </para>
<!-- pgdoc-cn_end sig_en=bfe4a0881c2483867411c0f9726e9ba8 -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-14 [fd2abeb7c] Delete contrib/xml2's legacy implementation of xml_is_we
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=6432b2a7d4c492cf583f6c28c5f17b99 sig_cn_org=24489ac6c3e779746e0953531e7b78ad source=15.7 
     <para>
      Remove <link linkend="xml2">xml2</link>'s
      <function>xml_is_well_formed()</function> function (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      移除<link linkend="xml2">xml2</link>的<function>xml_is_well_formed()</function>函数（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=6432b2a7d4c492cf583f6c28c5f17b99 -->

<!-- pgdoc-cn_start sig_en=1e080dc6121915dab654939128c4c0e7 sig_cn_org=133344b58ae245cf86b5ba74f330023b source=15.7 
     <para>
      This function has been implemented in the core backend since
      Postgres 9.1.
     </para>
________________________________________________________-->
     <para>
      这个函数自Postgres 9.1以来已经在核心后端中实现。
     </para>
<!-- pgdoc-cn_end sig_en=1e080dc6121915dab654939128c4c0e7 -->
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-07-06 [955b3e0f9] Allow CustomScan providers to say whether they support p
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=fabf62d4783dc99f944e825361165674 sig_cn_org=bf3aa5b8d9737e4cd8cf174e33349f52 source=15.7 
     <para>
      Allow <link linkend="custom-scan">custom scan providers</link>
      to indicate if they support projections (Sven Klemm)
     </para>
________________________________________________________-->
     <para>
      允许<link linkend="custom-scan">自定义扫描提供程序</link>
      指示它们是否支持投影（Sven Klemm）
     </para>
<!-- pgdoc-cn_end sig_en=fabf62d4783dc99f944e825361165674 -->

<!-- pgdoc-cn_start sig_en=a4ba0b827559370107ea6988d1dc3ddf sig_cn_org=415f5bb0f7aa74c57e8ea6915884481c source=15.7 
     <para>
      The default is now that custom scan providers are assumed to not
      support projections;  those that do will need to be updated for
      this release.
     </para>
________________________________________________________-->
     <para>
      默认情况下，现在假定自定义扫描提供程序不支持投影；那些支持的将需要在此版本中进行更新。
     </para>
<!-- pgdoc-cn_end sig_en=a4ba0b827559370107ea6988d1dc3ddf -->
    </listitem>

   </itemizedlist>

  </sect2>

  <sect2>
<!-- pgdoc-cn_start sig_en=e161fef38e54e54458e215e5f978ef9b sig_cn_org=f104d50dd9d4dd802f94229ebe5bc097 source=15.7 
   <title>Changes</title>
________________________________________________________-->
   <title>变更</title>
<!-- pgdoc-cn_end sig_en=e161fef38e54e54458e215e5f978ef9b -->

<!-- pgdoc-cn_start sig_en=de485fb19129dced69825c3a1a69212e sig_cn_org=c8b1b7353f282f8054ab4675152d2dc1 source=15.7 
   <para>
    Below you will find a detailed account of the changes between
    <productname>PostgreSQL</productname> 15 and the previous major
    release.
   </para>
________________________________________________________-->
   <para>
    下面将详细介绍<productname>PostgreSQL</productname> 15与上一个主要版本之间的变化。
</para>
<!-- pgdoc-cn_end sig_en=de485fb19129dced69825c3a1a69212e -->

   <sect3>
<!-- pgdoc-cn_start sig_en=9189294b7a121aae803ff469797ca246 sig_cn_org=d9be102ccf075d32052f6a1c47f345a9 source=15.7 
    <title>Server</title>
________________________________________________________-->
    <title>服务器</title>
<!-- pgdoc-cn_end sig_en=9189294b7a121aae803ff469797ca246 -->

    <itemizedlist>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-02-14 [37851a8b8] Database-level collation version tracking
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=06ff7ae2a13d8ec9937b60b7fded6a66 sig_cn_org=148163f7e182f8371625f73ef6671f4c source=15.7 
      <para>
       Record and check the collation version of each <link
       linkend="sql-createdatabase">database</link> (Peter Eisentraut)
      </para>
________________________________________________________-->
      <para>
       记录并检查每个<link linkend="sql-createdatabase">数据库</link>的排序版本（Peter Eisentraut）
      </para>
<!-- pgdoc-cn_end sig_en=06ff7ae2a13d8ec9937b60b7fded6a66 -->

<!-- pgdoc-cn_start sig_en=f2a7554c228478bda66a77c44c5e8d82 sig_cn_org=ec00d47d34154face3a51fed79fc3734 source=15.7 
      <para>
       This feature is designed to detect collation version
       changes to avoid index corruption.  Function
       <function>pg_database_collation_actual_version()</function>
       reports the underlying operating system collation version, and
       <command>ALTER DATABASE ...  REFRESH</command> sets the recorded
       database collation version to match the operating system collation
       version.
      </para>
________________________________________________________-->
      <para>
       这个功能旨在检测排序版本的更改，以避免索引损坏。函数
       <function>pg_database_collation_actual_version()</function>
       报告底层操作系统的排序版本，而
       <command>ALTER DATABASE ...  REFRESH</command> 设置记录的
       数据库排序版本以匹配操作系统的排序版本。
      </para>
<!-- pgdoc-cn_end sig_en=f2a7554c228478bda66a77c44c5e8d82 -->
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-03-17 [f2553d430] Add option to use ICU as global locale provider
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=c7311409d6f542384a4560049ba67caa sig_cn_org=95d899142cf854a13de320f16385d2f2 source=15.7 
      <para>
       Allow <link linkend="locale"><acronym>ICU</acronym></link>
       collations to be set as the default for clusters and databases
       (Peter Eisentraut)
      </para>
________________________________________________________-->
      <para>
       允许将<link linkend="locale"><acronym>ICU</acronym></link>
       排序规则设置为集群和数据库的默认值
       (Peter Eisentraut)
      </para>
<!-- pgdoc-cn_end sig_en=c7311409d6f542384a4560049ba67caa -->

<!-- pgdoc-cn_start sig_en=f0593d074fcb23e6186ea26235675345 sig_cn_org=4d5cb0b464a558d91ea83b995e74f740 source=15.7 
      <para>
       Previously, only <application>libc</application>-based
       collations could be selected at the cluster and database levels.
       <acronym>ICU</acronym> collations could only be used via explicit
       <literal>COLLATE</literal> clauses.
      </para>
________________________________________________________-->
      <para>
       以前，只能在集群和数据库级别选择基于<application>libc</application>的排序规则。
       <acronym>ICU</acronym>排序规则只能通过显式的<literal>COLLATE</literal>子句使用。
      </para>
<!-- pgdoc-cn_end sig_en=f0593d074fcb23e6186ea26235675345 -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-03-29 [a2c84990b] Add system view pg_ident_file_mappings
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=2b12166f3e15673e39146b972d44a081 sig_cn_org=765d60862301278e27ad91110ab92f45 source=15.7 
      <para>
       Add system view <link
       linkend="view-pg-ident-file-mappings"><structname>pg_ident_file_mappings</structname></link>
       to report <filename>pg_ident.conf</filename> information (Julien
       Rouhaud)
      </para>
________________________________________________________-->
      <para>
       将系统视图<link linkend="view-pg-ident-file-mappings"><structname>pg_ident_file_mappings</structname></link>
       添加到报告<filename>pg_ident.conf</filename>信息中（Julien Rouhaud）
</para>
<!-- pgdoc-cn_end sig_en=2b12166f3e15673e39146b972d44a081 -->
     </listitem>

       </itemizedlist>

    <sect4>
<!-- pgdoc-cn_start sig_en=71f682c70d815e46d2dc66389d8e870d sig_cn_org=3d8721f7d3f58b53748c85a0f215049b source=15.7 
     <title><link linkend="ddl-partitioning">Partitioning</link></title>
________________________________________________________-->
     <title><link linkend="ddl-partitioning">分区</link></title>
<!-- pgdoc-cn_end sig_en=71f682c70d815e46d2dc66389d8e870d -->

     <itemizedlist>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-08-03 [475dbd0b7] Track a Bitmapset of non-pruned partitions in RelOptInfo
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=bc7f70bdad8048fe538dd78b66585d9a sig_cn_org=093d5aff67e1f3e358042be439fbf075 source=15.7 
       <para>
        Improve planning time for queries referencing partitioned tables
        (David Rowley)
       </para>
________________________________________________________-->
       <para>
        改进查询引用分区表的计划时间（David Rowley）
       </para>
<!-- pgdoc-cn_end sig_en=bc7f70bdad8048fe538dd78b66585d9a -->

<!-- pgdoc-cn_start sig_en=c5ad9e7e33c0796afccd0ed821c0b5fa sig_cn_org=54fb383e9975835d15b1d5e4d5eccff9 source=15.7 
       <para>
        This change helps when only a few of many partitions are relevant.
       </para>
________________________________________________________-->
       <para>
        这种变化在只有许多分区中的少数分区相关时会有所帮助。
       </para>
<!-- pgdoc-cn_end sig_en=c5ad9e7e33c0796afccd0ed821c0b5fa -->
      </listitem>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-08-03 [db632fbca] Allow ordered partition scans in more cases
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=3f1f561f013ea4dcd6644f806891d61d sig_cn_org=c4277729d15d0c019a384d1081a67155 source=15.7 
       <para>
        Allow ordered scans of partitions to avoid sorting in more cases
        (David Rowley)
       </para>
________________________________________________________-->
       <para>
        允许有序扫描分区，以避免在更多情况下进行排序（David Rowley）
       </para>
<!-- pgdoc-cn_end sig_en=3f1f561f013ea4dcd6644f806891d61d -->

<!-- pgdoc-cn_start sig_en=b2d6a6017a9f8b8350ee0a4e13001343 sig_cn_org=5d8c2d62acdfd4473ff240d3d17798dc source=15.7 
       <para>
        Previously, a partitioned table with a <literal>DEFAULT</literal>
        partition or a <literal>LIST</literal> partition containing
        multiple values could not be used for ordered partition scans.
        Now they can be used if such partitions are pruned during planning.
       </para>
________________________________________________________-->
       <para>
        以前，具有<literal>DEFAULT</literal>分区或包含多个值的<literal>LIST</literal>分区的表
        无法用于有序分区扫描。现在，如果在规划过程中修剪了这些分区，它们可以被使用。
       </para>
<!-- pgdoc-cn_end sig_en=b2d6a6017a9f8b8350ee0a4e13001343 -->
      </listitem>

<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-03-20 [ba9a7e392] Enforce foreign key correctly during cross-partition upd
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=bde2c72156dff3073f0c6f3a68da467b sig_cn_org=d0e27af55fee34a1f4a9396950bc7ff2 source=15.7 
       <para>
        Improve foreign key behavior of updates on partitioned tables
        that move rows between partitions (Amit Langote)
       </para>
________________________________________________________-->
       <para>
        改进在移动行到分区表之间的更新时的外键行为（Amit Langote）
       </para>
<!-- pgdoc-cn_end sig_en=bde2c72156dff3073f0c6f3a68da467b -->

<!-- pgdoc-cn_start sig_en=d710f9833e52ebf4378e5d8b22295900 sig_cn_org=8079508968027ebf63ff164fa438c662 source=15.7 
       <para>
        Previously, such updates ran a delete action on the source
        partition and an insert action on the target partition.
        <productname>PostgreSQL</productname> will now run an update action
        on the partition root, providing cleaner semantics.
       </para>
________________________________________________________-->
       <para>
        以前，这种更新在源分区上运行删除操作，并在目标分区上运行插入操作。
        <productname>PostgreSQL</productname>现在将在分区根上运行更新操作，提供更清晰的语义。
       </para>
<!-- pgdoc-cn_end sig_en=d710f9833e52ebf4378e5d8b22295900 -->
      </listitem>

<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-04-02 [cfdd03f45] Allow CLUSTER on partitioned tables
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-04-14 [3f19e176a] Have CLUSTER ignore partitions not owned by caller
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=c42f64179defcc5178e14046b8263ac9 sig_cn_org=472f0f7e7e840de3fd45207f21b9a43f source=15.7 
       <para>
        Allow <link linkend="sql-cluster"><command>CLUSTER</command></link>
        on partitioned tables (Justin Pryzby)
       </para>
________________________________________________________-->
       <para>
        允许在分区表上使用<link linkend="sql-cluster"><command>CLUSTER</command></link>
        （Justin Pryzby）
       </para>
<!-- pgdoc-cn_end sig_en=c42f64179defcc5178e14046b8263ac9 -->
      </listitem>

<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2021-07-22 [80ba4bb38] Make ALTER TRIGGER RENAME consistent for partitioned tab
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=2b3171f6bf0fb864a63310e77b964a22 sig_cn_org=9d01253487f1821193c8af22c2a09354 source=15.7 
       <para>
        Fix <link linkend="sql-altertable"><command>ALTER TRIGGER
        RENAME</command></link> on partitioned tables to properly rename
        triggers on all partitions (Arne Roland, Álvaro Herrera)
       </para>
________________________________________________________-->
       <para>
        修复在分区表上<link linkend="sql-altertable"><command>ALTER TRIGGER RENAME</command></link>的问题，以便正确地重命名所有分区上的触发器（Arne Roland，Álvaro Herrera）
       </para>
<!-- pgdoc-cn_end sig_en=2b3171f6bf0fb864a63310e77b964a22 -->

<!-- pgdoc-cn_start sig_en=ece9fe32fbcf3285dc9ec1dd66cc1aa9 sig_cn_org=8db77d27636192fffd051b1f37776738 source=15.7 
       <para>
        Also prohibit cloned triggers from being renamed.
       </para>
________________________________________________________-->
       <para>
        禁止重命名克隆的触发器。
       </para>
<!-- pgdoc-cn_end sig_en=ece9fe32fbcf3285dc9ec1dd66cc1aa9 -->
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
<!-- pgdoc-cn_start sig_en=1dd306ead6471d4aaa831b08d5684b3f sig_cn_org=5c4190610514fc49462666ad2a899649 source=15.7 
     <title>Indexes</title>
________________________________________________________-->
     <title>索引</title>
<!-- pgdoc-cn_end sig_en=1dd306ead6471d4aaa831b08d5684b3f -->

     <itemizedlist>

<!--
Author: Peter Geoghegan <pg@bowt.ie>
2021-10-02 [2903f1404] Enable deduplication in system catalog indexes.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=0e75760a1cb710de2e7bb85c1d3a44ae sig_cn_org=365664d43bd41742e66c09083e926991 source=15.7 
       <para>
        Allow btree indexes on system and <link
        linkend="storage-toast"><acronym>TOAST</acronym></link>
        tables to efficiently store duplicates (Peter Geoghegan)
       </para>
________________________________________________________-->
       <para>
        允许在系统和<link
        linkend="storage-toast"><acronym>TOAST</acronym></link>
        表上使用btree索引，以有效地存储重复项（Peter Geoghegan）
       </para>
<!-- pgdoc-cn_end sig_en=0e75760a1cb710de2e7bb85c1d3a44ae -->

<!-- pgdoc-cn_start sig_en=894fb8260cbb29224ed6f67d872c8282 sig_cn_org=d92da64a45161ed053ed04e039c6ae1f source=15.7 
       <para>
        Previously de-duplication was disabled for these types of indexes.
       </para>
________________________________________________________-->
       <para>
        以前，对于这些类型的索引，去重功能是被禁用的。
       </para>
<!-- pgdoc-cn_end sig_en=894fb8260cbb29224ed6f67d872c8282 -->
      </listitem>

<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
2022-02-07 [f1ea98a79] Reduce non-leaf keys overlap in GiST indexes produced by
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=90252dfb9be3b4a5d21f5b2433edd40c sig_cn_org=fbac5d4b31d78630229ca7e9bc8bfbef source=15.7 
       <para>
        Improve lookup performance
        of <link linkend="gist"><acronym>GiST</acronym></link> indexes
        that were built using sorting (Aliaksandr Kalenik, Sergei
        Shoulbakov, Andrey Borodin)
       </para>
________________________________________________________-->
       <para>
        提高使用排序构建的<link linkend="gist"><acronym>GiST</acronym></link>索引的查找性能
        （Aliaksandr Kalenik，Sergei Shoulbakov，Andrey Borodin）
       </para>
<!-- pgdoc-cn_end sig_en=90252dfb9be3b4a5d21f5b2433edd40c -->
      </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-02-03 [94aa7cc5f] Add UNIQUE null treatment option
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=52487667bc47029b9fcf0e4670cb81af sig_cn_org=e56d73cdc72d45ad733db43c9c3fa7c8 source=15.7 
       <para>
        Allow unique constraints and indexes to treat
        <literal>NULL</literal> values as not distinct (Peter Eisentraut)
       </para>
________________________________________________________-->
       <para>
        允许唯一约束和索引将<literal>NULL</literal>值视为相同（Peter Eisentraut）
       </para>
<!-- pgdoc-cn_end sig_en=52487667bc47029b9fcf0e4670cb81af -->

<!-- pgdoc-cn_start sig_en=5aad74caf7e6aa867491c1b9bd146f5d sig_cn_org=08be8e71aa95f38bbc1e7d6f154253d1 source=15.7 
       <para>
        Previously <literal>NULL</literal> entries were always treated
        as distinct values, but this can now be changed by creating
        constraints and indexes using <literal>UNIQUE NULLS NOT
        DISTINCT</literal>.
       </para>
________________________________________________________-->
       <para>
        以前<literal>NULL</literal>条目总是被视为不同的值，但现在可以通过创建使用<literal>UNIQUE NULLS NOT DISTINCT</literal>的约束和索引来更改这一点。
       </para>
<!-- pgdoc-cn_end sig_en=5aad74caf7e6aa867491c1b9bd146f5d -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-17 [a148f8bc0] Add a planner support function for starts_with().
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=138078f1e23b897b0a37172da130e502 sig_cn_org=8cc3ce4510110bef801a1d9d4257016f source=15.7 
       <para>
        Allow the <link
        linkend="functions-string-other"><literal>^@</literal></link>
        starts-with operator and the <function>starts_with()</function>
        function to use btree indexes if using the C collation (Tom Lane)
       </para>
________________________________________________________-->
       <para>
        允许<link
        linkend="functions-string-other"><literal>^@</literal></link>
        starts-with运算符和<function>starts_with()</function>函数在使用C排序规则时使用btree索引（Tom Lane）
       </para>
<!-- pgdoc-cn_end sig_en=138078f1e23b897b0a37172da130e502 -->

<!-- pgdoc-cn_start sig_en=dc326bedc055ac829513ee53af5736c3 sig_cn_org=5fa4270f9638328bea1ebaab1d2a6b18 source=15.7 
       <para>
        Previously these could only use <link
        linkend="spgist"><acronym>SP-GiST</acronym></link> indexes.
       </para>
________________________________________________________-->
       <para>
        以前，这些只能使用<link
        linkend="spgist"><acronym>SP-GiST</acronym></link>索引。
       </para>
<!-- pgdoc-cn_end sig_en=dc326bedc055ac829513ee53af5736c3 -->
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
<!-- pgdoc-cn_start sig_en=74b6eff57a1f8c0e207b184771081be9 sig_cn_org=9a948b44ad66c389427f923daffd016d source=15.7 
     <title>Optimizer</title>
________________________________________________________-->
     <title>优化器</title>
<!-- pgdoc-cn_end sig_en=74b6eff57a1f8c0e207b184771081be9 -->

     <itemizedlist>

<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2022-01-16 [269b532ae] Add stxdinherit flag to pg_statistic_ext_data
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=def90149f6b6b0a26d91c81e00d5ed3a sig_cn_org=85793953bbce7532f2e27e84aca835db source=15.7 
       <para>
        Allow <link linkend="sql-createstatistics">extended
        statistics</link> to record statistics for a parent with all its
        children (Tomas Vondra, Justin Pryzby)
       </para>
________________________________________________________-->
       <para>
        允许<link linkend="sql-createstatistics">扩展统计信息</link>记录父级及其所有子级的统计信息（Tomas Vondra, Justin Pryzby）
       </para>
<!-- pgdoc-cn_end sig_en=def90149f6b6b0a26d91c81e00d5ed3a -->

<!-- pgdoc-cn_start sig_en=95349f1330a81112e9bc8819d97d6e3d sig_cn_org=0b53d98aebaed8e1b0b878f65aab8996 source=15.7 
       <para>
        Regular statistics already tracked parent and
        parent-plus-all-children statistics separately.
       </para>
________________________________________________________-->
       <para>
        常规统计已经分别跟踪父级和父级加所有子级的统计数据。
       </para>
<!-- pgdoc-cn_end sig_en=95349f1330a81112e9bc8819d97d6e3d -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-03-24 [0bd7af082] Invent recursive_worktable_factor GUC to replace hard-wi
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=b3c6cc685dd9ff1616125f1d49e04849 sig_cn_org=df115bcfd3ea5b968a81fc1c855f730a source=15.7 
       <para>
        Add server variable <link
        linkend="guc-recursive-worktable-factor"><varname>recursive_worktable_factor</varname></link>
        to allow the user to specify the expected size of the working
        table of a <link linkend="queries-with-recursive">recursive
        query</link> (Simon Riggs)
       </para>
________________________________________________________-->
       <para>
        添加服务器变量<link linkend="guc-recursive-worktable-factor"><varname>recursive_worktable_factor</varname></link>
        ，允许用户指定<link linkend="queries-with-recursive">递归查询</link>的工作表的预期大小（Simon Riggs）
       </para>
<!-- pgdoc-cn_end sig_en=b3c6cc685dd9ff1616125f1d49e04849 -->
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
<!-- pgdoc-cn_start sig_en=a5864e69d999da12c9d6530175c2c3a6 sig_cn_org=1d8069b437dc11144dd2d5b63a2cffe8 source=15.7 
     <title>General Performance</title>
________________________________________________________-->
     <title>通用性能</title>
<!-- pgdoc-cn_end sig_en=a5864e69d999da12c9d6530175c2c3a6 -->

     <itemizedlist>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-07-07 [29f45e299] Use a hash table to speed up NOT IN(values)
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=40158e0c6e261521d09aeda4e16e7b3f sig_cn_org=eac1fade25b42700f40dc71fd9ebcebd source=15.7 
       <para>
        Allow hash lookup for <link
        linkend="functions-subquery-notin"><literal>NOT IN</literal></link>
        clauses with many constants (David Rowley, James Coleman)
       </para>
________________________________________________________-->
       <para>
        允许对具有许多常量的<link
        linkend="functions-subquery-notin"><literal>NOT IN</literal></link>
        子句进行哈希查找（David Rowley, James Coleman）
       </para>
<!-- pgdoc-cn_end sig_en=40158e0c6e261521d09aeda4e16e7b3f -->

<!-- pgdoc-cn_start sig_en=df3822542c0fb6989480dfceb25421b6 sig_cn_org=b0b113e85a77357cc3feebd0f5b9ef39 source=15.7 
       <para>
        Previously the code always sequentially scanned the list of values.
       </para>
________________________________________________________-->
       <para>
        以前，代码总是按顺序扫描数值列表。
       </para>
<!-- pgdoc-cn_end sig_en=df3822542c0fb6989480dfceb25421b6 -->
      </listitem>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-08-22 [22c4e88eb] Allow parallel DISTINCT
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=a9820880c96a5e21f39f734507f82358 sig_cn_org=8a7c1a25764c82bfce4335b63bade3c6 source=15.7 
      <para>
       Allow <command>SELECT DISTINCT</command> to be parallelized
       (David Rowley)
      </para>
________________________________________________________-->
      <para>
       允许<command>SELECT DISTINCT</command>进行并行化（David Rowley）
      </para>
<!-- pgdoc-cn_end sig_en=a9820880c96a5e21f39f734507f82358 -->
     </listitem>

<!--
Author: John Naylor <john.naylor@postgresql.org>
2021-12-20 [911588a3f] Add fast path for validating UTF-8 text
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=ac3c967713056c0dcb08b7721ab5830e sig_cn_org=b155753691f508ae42d2f1a5f06b5c7b source=15.7 
       <para>
        Speed up encoding validation of <acronym>UTF</acronym>-8 text
        by processing 16 bytes at a time
        (John Naylor, Heikki Linnakangas)
       </para>
________________________________________________________-->
       <para>
        加快对<acronym>UTF</acronym>-8文本的编码验证，每次处理16个字节
        (John Naylor, Heikki Linnakangas)
       </para>
<!-- pgdoc-cn_end sig_en=ac3c967713056c0dcb08b7721ab5830e -->

<!-- pgdoc-cn_start sig_en=8f6753b49133e6d51b96555bf0370c6d sig_cn_org=7151b69132916e3167bce2831de1924b source=15.7 
       <para>
        This will improve text-heavy operations like <link
        linkend="sql-copy"><command>COPY FROM</command></link>.
       </para>
________________________________________________________-->
       <para>
        这将改善像<link
        linkend="sql-copy"><command>COPY FROM</command></link>这样的文本密集型操作。
       </para>
<!-- pgdoc-cn_end sig_en=8f6753b49133e6d51b96555bf0370c6d -->
      </listitem>

<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2021-10-18 [65014000b] Replace polyphase merge algorithm with a simple balanced
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2021-10-25 [166f94377] Clarify the logic in a few places in the new balanced me
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=e086d87d98e9ce56f019ef532ea4d1fa sig_cn_org=7f44f5a6466ac54459ef63017bbff8fe source=15.7 
       <para>
        Improve performance for sorts that exceed <link
        linkend="guc-work-mem"><varname>work_mem</varname></link>
        (Heikki Linnakangas)
       </para>
________________________________________________________-->
       <para>
        提高对超过<link
        linkend="guc-work-mem"><varname>work_mem</varname></link>
        (Heikki Linnakangas)的排序性能
       </para>
<!-- pgdoc-cn_end sig_en=e086d87d98e9ce56f019ef532ea4d1fa -->

<!-- pgdoc-cn_start sig_en=18237ac844523cc3153ec8b85e3e1a0f sig_cn_org=d33208c14fd9475086258cff5770e647 source=15.7 
       <para>
        When the sort data no longer fits in <varname>work_mem</varname>,
        switch to a batch sorting algorithm that uses more output streams
        than before.
       </para>
________________________________________________________-->
       <para>
        当排序数据不再适合<varname>work_mem</varname>时，切换到一个批量排序算法，
        使用比以前更多的输出流。
       </para>
<!-- pgdoc-cn_end sig_en=18237ac844523cc3153ec8b85e3e1a0f -->
      </listitem>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-07-22 [91e9e89dc] Make nodeSort.c use Datum sorts for single column sorts
Author: David Rowley <drowley@postgresql.org>
2022-04-04 [40af10b57] Use Generation memory contexts to store tuples in sorts
Author: John Naylor <john.naylor@postgresql.org>
2022-04-02 [697492434] Specialize tuplesort routines for different kinds of abb
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=1d6c6190ab0e0bdc1c197ebe933f7c12 sig_cn_org=840db02b2fa4caa8c8be82415b1e1e45 source=15.7 
       <para>
        Improve performance and reduce memory consumption of in-memory
        sorts (Ronan Dunklau, David Rowley, Thomas Munro, John Naylor)
       </para>
________________________________________________________-->
       <para>
        提高内存排序的性能并减少内存消耗（Ronan Dunklau，David Rowley，Thomas Munro，John Naylor）
       </para>
<!-- pgdoc-cn_end sig_en=1d6c6190ab0e0bdc1c197ebe933f7c12 -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-06-29 [4035cd5d4] Add support for LZ4 with compression of full-page writes
Author: Michael Paquier <michael@paquier.xyz>
2022-03-11 [e9537321a] Add support for zstd with compression of full-page write
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=71860c50e1a35c1c1f08f98a03898cb9 sig_cn_org=2e7cc82ad4d2b70c6f37f715baf5a445 source=15.7 
       <para>
        Allow <acronym>WAL</acronym> <link
        linkend="guc-full-page-writes">full page writes</link> to use
        LZ4 and Zstandard compression (Andrey Borodin, Justin Pryzby)
       </para>
________________________________________________________-->
       <para>
        允许<acronym>WAL</acronym> <link
        linkend="guc-full-page-writes">全页写入</link>使用
        LZ4和Zstandard压缩（Andrey Borodin, Justin Pryzby）
       </para>
<!-- pgdoc-cn_end sig_en=71860c50e1a35c1c1f08f98a03898cb9 -->

<!-- pgdoc-cn_start sig_en=3f0047cf519b2f0f1f414b010ac4b00c sig_cn_org=2611952a711c1f0ffbdf6a5de10913dd source=15.7 
       <para>
        This is controlled by the <link
        linkend="guc-wal-compression"><varname>wal_compression</varname></link>
        server setting.
       </para>
________________________________________________________-->
       <para>
        这由服务器设置<link
        linkend="guc-wal-compression"><varname>wal_compression</varname></link>控制。
       </para>
<!-- pgdoc-cn_end sig_en=3f0047cf519b2f0f1f414b010ac4b00c -->
      </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2021-07-19 [2dbe89057] Support direct I/O on macOS.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=329ed5ea0efaa7c042841160ca7ec3c5 sig_cn_org=97800baf9c1cec9407e9d8f29a96ca50 source=15.7 
       <para>
        Add support for writing <acronym>WAL</acronym>
        using <link linkend="guc-wal-sync-method">direct I/O</link> on
        macOS (Thomas Munro)
       </para>
________________________________________________________-->
       <para>
        添加对在macOS上使用<acronym>WAL</acronym>进行<link linkend="guc-wal-sync-method">直接I/O</link>写入的支持（Thomas Munro）
       </para>
<!-- pgdoc-cn_end sig_en=329ed5ea0efaa7c042841160ca7ec3c5 -->

<!-- pgdoc-cn_start sig_en=a99aa938184bf4561157547864980723 sig_cn_org=b6a888c25a3738c05849d21bb4f70074 source=15.7 
       <para>
        This only works if <literal>max_wal_senders = 0</literal>
        and <literal>wal_level = minimal</literal>.
       </para>
________________________________________________________-->
       <para>
        这仅在<literal>max_wal_senders = 0</literal>且<literal>wal_level = minimal</literal>时有效。
       </para>
<!-- pgdoc-cn_end sig_en=a99aa938184bf4561157547864980723 -->
      </listitem>

<!--
Author: Peter Geoghegan <pg@bowt.ie>
2022-04-03 [0b018faba] Set relfrozenxid to oldest extant XID seen by VACUUM.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=bdd79b32135c95fbb01bf6e287f25175 sig_cn_org=016ce4d7afb907598bc72229690c9d2d source=15.7 
       <para>
        Allow <link linkend="routine-vacuuming">vacuum</link> to be more
        aggressive in setting the oldest frozen and multi transaction id
        (Peter Geoghegan)
       </para>
________________________________________________________-->
       <para>
        允许<link linkend="routine-vacuuming">vacuum</link>在设置最老的冻结和多事务ID时更加积极
        （Peter Geoghegan）
       </para>
<!-- pgdoc-cn_end sig_en=bdd79b32135c95fbb01bf6e287f25175 -->
      </listitem>

<!--
Author: Etsuro Fujita <efujita@postgresql.org>
2022-04-06 [c2bb02bc2] Allow asynchronous execution in more cases.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=b70e3c5d7240f6c3395b77d61959e13f sig_cn_org=b308b9aaea792b27f36c98bdcb89a535 source=15.7 
       <para>
        Allow a query referencing multiple <link
        linkend="ddl-foreign-data">foreign tables</link> to perform
        parallel foreign table scans in more cases (Andrey Lepikhov,
        Etsuro Fujita)
       </para>
________________________________________________________-->
       <para>
        允许引用多个<link
        linkend="ddl-foreign-data">外部表</link>的查询在更多情况下执行并行外部表扫描（Andrey Lepikhov，
        Etsuro Fujita）
       </para>
<!-- pgdoc-cn_end sig_en=b70e3c5d7240f6c3395b77d61959e13f -->
      </listitem>

<!--
Author: David Rowley <drowley@postgresql.org>
2022-04-08 [9d9c02ccd] Teach planner and executor about monotonic window funcs
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=f2a3bf8f36004ceb05ad39fcc9750f06 sig_cn_org=e117316075ad534cee586a00fabf96de source=15.7 
       <para>
        Improve the performance of <link linkend="functions-window">window
        functions</link> that use <function>row_number()</function>,
        <function>rank()</function>, <function>dense_rank()</function> and
        <function>count()</function>
        (David Rowley)
       </para>
________________________________________________________-->
       <para>
        提高使用<function>row_number()</function>、<function>rank()</function>、
        <function>dense_rank()</function>和<function>count()</function>的
        <link linkend="functions-window">窗口函数</link>的性能
        （David Rowley）
       </para>
<!-- pgdoc-cn_end sig_en=f2a3bf8f36004ceb05ad39fcc9750f06 -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-06 [a82a5eee3] Use ISB as a spin-delay instruction on ARM64.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=64d31b5093c9b174cf60c782ac9527d5 sig_cn_org=8db997867a0bdaa5ef712800ae8d04d6 source=15.7 
       <para>
        Improve the performance of spinlocks on high-core-count ARM64
        systems (Geoffrey Blake)
       </para>
________________________________________________________-->
       <para>
        提高高核数ARM64系统上自旋锁的性能（Geoffrey Blake）
       </para>
<!-- pgdoc-cn_end sig_en=64d31b5093c9b174cf60c782ac9527d5 -->
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
<!-- pgdoc-cn_start sig_en=7f79d68fa5a8c3bc9aedb664a23056cd sig_cn_org=9a7f61d2d75c17ff28e61a93fe5c3643 source=15.7 
     <title>Monitoring</title>
________________________________________________________-->
     <title>监控</title>
<!-- pgdoc-cn_end sig_en=7f79d68fa5a8c3bc9aedb664a23056cd -->

     <itemizedlist>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2021-12-13 [64da07c41] Default to log_checkpoints=on, log_autovacuum_min_durati
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=61afb7f843447f62ef66b1ab7688166c sig_cn_org=0148eb4ccf3a4a420ebb66e54b561b77 source=15.7 
       <para>
        Enable default logging of checkpoints and slow autovacuum
        operations (Bharath Rupireddy)
       </para>
________________________________________________________-->
       <para>
        启用默认记录检查点和慢自动清理操作（Bharath Rupireddy）
       </para>
<!-- pgdoc-cn_end sig_en=61afb7f843447f62ef66b1ab7688166c -->

<!-- pgdoc-cn_start sig_en=5191e6847b09beb13ce5b4cd70ed9eaf sig_cn_org=7a2e42c470fe664b46eb685b5722c4c2 source=15.7 
       <para>
        This changes the default of <link
        linkend="guc-log-checkpoints"><varname>log_checkpoints</varname></link>
        to <literal>on</literal> and that of <link
        linkend="guc-log-autovacuum-min-duration"><varname>log_autovacuum_min_duration</varname></link>
        to 10 minutes.  This will cause even an idle server to generate
        some log output, which might cause problems on
        resource-constrained servers without log file rotation.  These
        defaults should be changed in such cases.
       </para>
________________________________________________________-->
       <para>
        这将把<link linkend="guc-log-checkpoints"><varname>log_checkpoints</varname></link>的默认值更改为<literal>on</literal>，
        将<link linkend="guc-log-autovacuum-min-duration"><varname>log_autovacuum_min_duration</varname></link>的默认值更改为10分钟。
        这将导致即使是空闲的服务器也会生成一些日志输出，
        这可能会在没有日志文件轮换的资源受限服务器上造成问题。
        在这种情况下应该更改这些默认值。
       </para>
<!-- pgdoc-cn_end sig_en=5191e6847b09beb13ce5b4cd70ed9eaf -->
      </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2021-10-25 [9ce346eab] Report progress of startup operations that take a long t
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2021-11-05 [e543906e2] Document default and changeability of log_startup_progre
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=5cc3b0de035cf752ec566a61a8d48937 sig_cn_org=09319d28f66e62b410def005f61ebed2 source=15.7 
       <para>
        Generate progress messages in the server log during slow server
        starts (Nitin Jadhav, Robert Haas)
       </para>
________________________________________________________-->
       <para>
        在服务器启动缓慢时在服务器日志中生成进度消息（Nitin Jadhav，Robert Haas）
       </para>
<!-- pgdoc-cn_end sig_en=5cc3b0de035cf752ec566a61a8d48937 -->

<!-- pgdoc-cn_start sig_en=7fbeeb11b8f3d9b20f077aad48e9dd31 sig_cn_org=8ad363bcc64d8bd8964cf182906b9924 source=15.7 
       <para>
        The messages report the cause of the delay.  The time interval for
        notification is controlled by the new server variable <link
        linkend="guc-log-startup-progress-interval"><varname>log_startup_progress_interval</varname></link>.
       </para>
________________________________________________________-->
       <para>
        这些消息报告了延迟的原因。通知的时间间隔由新的服务器变量
        <link linkend="guc-log-startup-progress-interval"><varname>log_startup_progress_interval</varname></link>
        控制。
</para>
<!-- pgdoc-cn_end sig_en=7fbeeb11b8f3d9b20f077aad48e9dd31 -->
      </listitem>

<!--
Author: Andres Freund <andres@anarazel.de>
2022-04-06 [5891c7a8e] pgstat: store statistics in shared memory.
Author: Andres Freund <andres@anarazel.de>
2022-04-07 [b3abca681] pgstat: Update docs to match the shared memory stats rea
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=b49729d42cf071336bc6707ebc04279b sig_cn_org=77eec7703caffd9459f4f368c1307f2e source=15.7 
       <para>
        Store <link linkend="monitoring-stats">cumulative statistics
        system</link> data in shared memory (Kyotaro Horiguchi, Andres
        Freund, Melanie Plageman)
       </para>
________________________________________________________-->
       <para>
        将<link linkend="monitoring-stats">累积统计系统</link>数据存储在共享内存中（Kyotaro Horiguchi，Andres Freund，Melanie Plageman）
       </para>
<!-- pgdoc-cn_end sig_en=b49729d42cf071336bc6707ebc04279b -->

<!-- pgdoc-cn_start sig_en=ce56fed8e955c396a4f009059580cea6 sig_cn_org=ac4e7ead9f7942a47c883432c148781a source=15.7 
       <para>
        Previously this data was sent to a statistics collector process
        via <acronym>UDP</acronym> packets, and could only be read by
        sessions after transferring it via the file system.  There is no
        longer a separate statistics collector process.
       </para>
________________________________________________________-->
       <para>
        以前，这些数据是通过<acronym>UDP</acronym>数据包发送到统计收集器进程的，
        只能通过文件系统传输后才能被会话读取。现在不再有单独的统计收集器进程了。
       </para>
<!-- pgdoc-cn_end sig_en=ce56fed8e955c396a4f009059580cea6 -->
      </listitem>

<!--
Author: Peter Geoghegan <pg@bowt.ie>
2022-02-11 [872770fd6] Add VACUUM instrumentation for scanned pages, relfrozenx
Author: Peter Geoghegan <pg@bowt.ie>
2022-03-13 [6e20f4600] VACUUM VERBOSE: tweak scanned_pages logic.
Author: Peter Geoghegan <pg@bowt.ie>
2022-04-15 [bdb71dbe8] VACUUM VERBOSE: Show dead items for an empty table.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=609395900cfe815a5f74e02c4b8b1112 sig_cn_org=0d9ce5ac7e2159d7a6916182bde834cf source=15.7 
       <para>
        Add additional information to <command>VACUUM VERBOSE</command>
        and autovacuum logging messages (Peter Geoghegan)
       </para>
________________________________________________________-->
       <para>
        为<command>VACUUM VERBOSE</command>和自动清理日志消息添加额外信息（Peter Geoghegan）
       </para>
<!-- pgdoc-cn_end sig_en=609395900cfe815a5f74e02c4b8b1112 -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-04-08 [efb0ef909] Track I/O timing for temporary file blocks in EXPLAIN (B
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=dd1465c43c0588359df2d4258c1f49b6 sig_cn_org=bb6bdeae89751c3396e261f7ade11db8 source=15.7 
       <para>
        Add <link linkend="sql-explain"><command>EXPLAIN
        (BUFFERS)</command></link> output for temporary file block I/O
        (Masahiko Sawada)
       </para>
________________________________________________________-->
       <para>
        为临时文件块I/O添加<link linkend="sql-explain"><command>EXPLAIN (BUFFERS)</command></link>
		输出（Masahiko Sawada）
       </para>
<!-- pgdoc-cn_end sig_en=dd1465c43c0588359df2d4258c1f49b6 -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-01-17 [dc686681e] Introduce log_destination=jsonlog
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=bde93769e16f65beb4f7e1db8c5e18db sig_cn_org=81f6c36b720634374e3a74276430e020 source=15.7 
       <para>
        Allow <link linkend="guc-log-destination">log output</link> in
        <acronym>JSON</acronym> format (Sehrope Sarkuni, Michael Paquier)
       </para>
________________________________________________________-->
       <para>
        允许在<link linkend="guc-log-destination">日志输出</link>中以<acronym>JSON</acronym>格式
        （Sehrope Sarkuni，Michael Paquier）
       </para>
<!-- pgdoc-cn_end sig_en=bde93769e16f65beb4f7e1db8c5e18db -->

<!-- pgdoc-cn_start sig_en=2404446d8d9944329a290f2b8bb80a42 sig_cn_org=7bd5937dc0ba9b4dca1af47c5b8dc743 source=15.7 
       <para>
        The new setting is <literal>log_destination = jsonlog</literal>.
       </para>
________________________________________________________-->
       <para>
        新设置为<literal>log_destination = jsonlog</literal>。
       </para>
<!-- pgdoc-cn_end sig_en=2404446d8d9944329a290f2b8bb80a42 -->
      </listitem>

<!--
Author: Fujii Masao <fujii@postgresql.org>
2021-09-02 [e04267844] Enhance pg_stat_reset_single_table_counters function.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=02ae185bd962562ffb84522ed29819e1 sig_cn_org=89b78beb99308ea1cc1e68b8398b5122 source=15.7 
       <para>
        Allow <link
        linkend="monitoring-stats-funcs-table"><function>pg_stat_reset_single_table_counters()</function></link>
        to reset the counters of relations shared across all databases
        (Sadhuprasad Patro)
       </para>
________________________________________________________-->
       <para>
        允许<link
        linkend="monitoring-stats-funcs-table"><function>pg_stat_reset_single_table_counters()</function></link>
        重置所有数据库共享的关系计数器
        (Sadhuprasad Patro)
       </para>
<!-- pgdoc-cn_end sig_en=02ae185bd962562ffb84522ed29819e1 -->
      </listitem>

<!--
Author: Fujii Masao <fujii@postgresql.org>
2021-11-22 [1b06d7bac] Report wait events for local shell commands like archive
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=aefcab07d3ea1c97c1ba6dc7d3bf7ecf sig_cn_org=21bef610ab346ae3d412b409b140c882 source=15.7 
       <para>
        Add <link linkend="wait-event-table">wait events</link> for local
        shell commands (Fujii Masao)
       </para>
________________________________________________________-->
       <para>
        为本地shell命令添加<link linkend="wait-event-table">等待事件</link>（藤井正男）
       </para>
<!-- pgdoc-cn_end sig_en=aefcab07d3ea1c97c1ba6dc7d3bf7ecf -->

<!-- pgdoc-cn_start sig_en=b0b8d867cff48c81b10237d2ed05d089 sig_cn_org=33c50a5ef73ac8f0dfabea44658602c8 source=15.7 
       <para>
        The new wait events are used when calling
        <varname>archive_command</varname>,
        <varname>archive_cleanup_command</varname>,
        <varname>restore_command</varname> and
        <varname>recovery_end_command</varname>.
       </para>
________________________________________________________-->
       <para>
        新的等待事件在调用<varname>archive_command</varname>、
        <varname>archive_cleanup_command</varname>、
        <varname>restore_command</varname>和
        <varname>recovery_end_command</varname>时使用。
       </para>
<!-- pgdoc-cn_end sig_en=b0b8d867cff48c81b10237d2ed05d089 -->
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
<!-- pgdoc-cn_start sig_en=13cba4791f3b1778f8daa6f35b4036f4 sig_cn_org=a03d9e2e12dc31ee7d156d49eca71ba3 source=15.7 
     <title>Privileges</title>
________________________________________________________-->
     <title>权限</title>
<!-- pgdoc-cn_end sig_en=13cba4791f3b1778f8daa6f35b4036f4 -->

     <itemizedlist>

<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
2022-03-22 [7faa5fc84] Add support for security invoker views.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=d4a4c3629c25932beaec5b093295d4d7 sig_cn_org=09e9820e8b8115582ef18cf52cdb69c6 source=15.7 
       <para>
        Allow table accesses done by
        a <link linkend="sql-createview">view</link> to optionally be
        controlled by privileges of the view's caller (Christoph Heiss)
       </para>
________________________________________________________-->
       <para>
        允许可选地控制以视图的调用者的权限发起由<link linkend="sql-createview">视图</link>执行的表访问（Christoph Heiss）
       </para>
<!-- pgdoc-cn_end sig_en=d4a4c3629c25932beaec5b093295d4d7 -->

<!-- pgdoc-cn_start sig_en=acc5e5abca218c6c0d533fc3c46aaae5 sig_cn_org=e9fee446281dcab4d27616a3b39bb78d source=15.7 
       <para>
        Previously, view accesses were always treated as being done by the
        view's owner.  That's still the default.
       </para>
________________________________________________________-->
       <para>
        以前，视图访问始终被视为由视图的所有者执行。这仍然是默认设置。
       </para>
<!-- pgdoc-cn_end sig_en=acc5e5abca218c6c0d533fc3c46aaae5 -->
      </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-28 [7f6772317] Adjust server-side backup to depend on pg_write_server_f
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=4f276fc816ac34a15bc004c1a178bae6 sig_cn_org=8e0a09f686bcc593c18933c6e150b094 source=15.7 
       <para>
        Allow members of the <link
        linkend="predefined-roles-table"><literal>pg_write_server_files</literal></link>
        predefined role to perform server-side base backups (Dagfinn
        Ilmari Mannsåker)
       </para>
________________________________________________________-->
       <para>
        允许<link linkend="predefined-roles-table"><literal>pg_write_server_files</literal></link>
        预定义角色的成员执行服务器端基本备份（Dagfinn Ilmari Mannsåker）
       </para>
<!-- pgdoc-cn_end sig_en=4f276fc816ac34a15bc004c1a178bae6 -->

<!-- pgdoc-cn_start sig_en=105d3393ab94e608633cb209ec836935 sig_cn_org=01b0d3bbc1309da541059e7c65ce4205 source=15.7 
       <para>
        Previously only superusers could perform such backups.
       </para>
________________________________________________________-->
       <para>
        以前只有超级用户才能执行这样的备份。
       </para>
<!-- pgdoc-cn_end sig_en=105d3393ab94e608633cb209ec836935 -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-06 [a0ffa885e] Allow granting SET and ALTER SYSTEM privileges on GUC pa
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-07-19 [a2944d872] Fix missed corner cases for grantable permissions on GUC
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=a0c20489740846b53e268d7e64d51e14 sig_cn_org=7a1a4a3f404fee1c5b08bb4c5f94a975 source=15.7 
       <para>
        Allow <link linkend="sql-grant"><command>GRANT</command></link>
        to grant permissions to change individual server variables via
        <command>SET</command> and <command>ALTER SYSTEM</command>
        (Mark Dilger)
       </para>
________________________________________________________-->
       <para>
        允许通过<command>SET</command>和<command>ALTER SYSTEM</command>来
        使用<link linkend="sql-grant"><command>GRANT</command></link>来授予
        更改单个服务器变量的权限
        (Mark Dilger)
       </para>
<!-- pgdoc-cn_end sig_en=a0c20489740846b53e268d7e64d51e14 -->

<!-- pgdoc-cn_start sig_en=c88482c305dcc33a593675b05a14a4e4 sig_cn_org=302be3f6c85535173c060bf02c2e5182 source=15.7 
       <para>
        The new function <function>has_parameter_privilege()</function>
        reports on this privilege.
       </para>
________________________________________________________-->
       <para>
        新函数<function>has_parameter_privilege()</function>报告了这个权限。
       </para>
<!-- pgdoc-cn_end sig_en=c88482c305dcc33a593675b05a14a4e4 -->
      </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2021-11-09 [4168a4745] Add pg_checkpointer predefined role for CHECKPOINT comma
Author: Robert Haas <rhaas@postgresql.org>
2022-07-05 [d3526e59f] Rename pg_checkpointer predefined role to pg_checkpoint.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=a4129f5657fdd7ccfbc291aaf5c933b3 sig_cn_org=8c13a7a68ae272266167e097d20ca48d source=15.7 
       <para>
        Add predefined role <link
        linkend="predefined-roles-table"><literal>pg_checkpoint</literal></link>
        that allows members to run <command>CHECKPOINT</command>
        (Jeff Davis)
       </para>
________________________________________________________-->
       <para>
        添加预定义角色<link
        linkend="predefined-roles-table"><literal>pg_checkpoint</literal></link>
        ，允许成员运行<command>CHECKPOINT</command>
        （Jeff Davis）
       </para>
<!-- pgdoc-cn_end sig_en=a4129f5657fdd7ccfbc291aaf5c933b3 -->

<!-- pgdoc-cn_start sig_en=ee3e69b220d984588ef9c1014c9491d5 sig_cn_org=61f481ce3912e02b02846e98dd61087b source=15.7 
       <para>
        Previously checkpoints could only be run by superusers.
       </para>
________________________________________________________-->
       <para>
        以前只有超级用户才能运行检查点。
       </para>
<!-- pgdoc-cn_end sig_en=ee3e69b220d984588ef9c1014c9491d5 -->
      </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2021-10-27 [77ea4f943] Grant memory views to pg_read_all_stats.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=7ffb81e039c0d80a23a05d9bf99c4d81 sig_cn_org=627ebff1582bdc30103210ee8b8fcda7 source=15.7 
       <para>
        Allow members of the <link
        linkend="predefined-roles-table"><literal>pg_read_all_stats</literal></link>
        predefined role to access the views <link
        linkend="view-pg-backend-memory-contexts"><structname>pg_backend_memory_contexts</structname></link>
        and <link
        linkend="view-pg-shmem-allocations"><structname>pg_shmem_allocations</structname></link>
        (Bharath Rupireddy)
       </para>
________________________________________________________-->
       <para>
        允许<link linkend="predefined-roles-table"><literal>pg_read_all_stats</literal></link>预定义角色的成员访问视图
        <link linkend="view-pg-backend-memory-contexts"><structname>pg_backend_memory_contexts</structname></link>
        和<link linkend="view-pg-shmem-allocations"><structname>pg_shmem_allocations</structname></link>
        （Bharath Rupireddy）
       </para>
<!-- pgdoc-cn_end sig_en=7ffb81e039c0d80a23a05d9bf99c4d81 -->

<!-- pgdoc-cn_start sig_en=a2ddeb36f16dbe958b62e54a2a3404b4 sig_cn_org=cffcc7c1531b73508201d5a33d467b1e source=15.7 
       <para>
        Previously these views could only be accessed by superusers.
       </para>
________________________________________________________-->
       <para>
        以前，这些视图只能由超级用户访问。
       </para>
<!-- pgdoc-cn_end sig_en=a2ddeb36f16dbe958b62e54a2a3404b4 -->
      </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2021-10-26 [f0b051e32] Allow GRANT on pg_log_backend_memory_contexts().
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=4942bae2bfe5f22628a783d79671de59 sig_cn_org=328291a50f76e215fb7a34ece58c7349 source=15.7 
       <para>
        Allow <link linkend="sql-grant"><command>GRANT</command></link>
        to grant permissions on <link
        linkend="functions-admin-signal"><function>pg_log_backend_memory_contexts()</function></link>
        (Jeff Davis)
       </para>
________________________________________________________-->
       <para>
        允许<link linkend="sql-grant"><command>GRANT</command></link>命令授予权限给
		<link linkend="functions-admin-signal"><function>pg_log_backend_memory_contexts()</function></link>
        （Jeff Davis）
       </para>
<!-- pgdoc-cn_end sig_en=4942bae2bfe5f22628a783d79671de59 -->

<!-- pgdoc-cn_start sig_en=11555b0b1ee66dcce86a4f250c3e5f8a sig_cn_org=732c3e75238c4701e046d97668aab846 source=15.7 
       <para>
        Previously this function could only be run by superusers.
       </para>
________________________________________________________-->
       <para>
        以前，只有超级用户才能运行此函数。
       </para>
<!-- pgdoc-cn_end sig_en=11555b0b1ee66dcce86a4f250c3e5f8a -->
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
<!-- pgdoc-cn_start sig_en=c311faa4db812ea8d68b8f9701081a79 sig_cn_org=9970a9c3a0257f1b8b6513e7abfb0f18 source=15.7 
     <title>Server Configuration</title>
________________________________________________________-->
     <title>服务器配置</title>
<!-- pgdoc-cn_end sig_en=c311faa4db812ea8d68b8f9701081a79 -->

     <itemizedlist>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-09-08 [bd1788051] Introduce GUC shared_memory_size
Author: Michael Paquier <michael@paquier.xyz>
2021-09-09 [3b231596c] Make shared_memory_size a preset option
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=b438a8c7638941256726ea8d5696598b sig_cn_org=86efde08fa0d905e4988597d0ec4007e source=15.7 
       <para>
        Add server variable <link
        linkend="guc-shared-memory-size"><varname>shared_memory_size</varname></link>
        to report the size of allocated shared memory (Nathan Bossart)
       </para>
________________________________________________________-->
       <para>
        添加服务器变量<link linkend="guc-shared-memory-size"><varname>shared_memory_size</varname></link>
        以报告分配的共享内存大小（Nathan Bossart）
       </para>
<!-- pgdoc-cn_end sig_en=b438a8c7638941256726ea8d5696598b -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-09-21 [43c1c4f65] Introduce GUC shared_memory_size_in_huge_pages
Author: Michael Paquier <michael@paquier.xyz>
2022-03-24 [bbd4951b7] doc: Improve postgres command for shared_memory_size_in_
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=a3cb2e89dd099d6f6758bf6cd5c87ba7 sig_cn_org=a281568838c651159874112d6ed9cb90 source=15.7 
       <para>
        Add server variable <link
        linkend="guc-shared-memory-size-in-huge-pages"><varname>shared_memory_size_in_huge_pages</varname></link>
        to report the number of huge memory pages required (Nathan Bossart)
       </para>
________________________________________________________-->
       <para>
        添加服务器变量<link linkend="guc-shared-memory-size-in-huge-pages"><varname>shared_memory_size_in_huge_pages</varname></link>
        以报告所需的大内存页数（Nathan Bossart）
       </para>
<!-- pgdoc-cn_end sig_en=a3cb2e89dd099d6f6758bf6cd5c87ba7 -->

<!-- pgdoc-cn_start sig_en=95f7f4c005c6d898d60461906b4aec18 sig_cn_org=a346a8af93eb48a23408f839c36d4bc4 source=15.7 
       <para>
        This is only supported on Linux.
       </para>
________________________________________________________-->
       <para>
        这仅在Linux上受支持。
       </para>
<!-- pgdoc-cn_end sig_en=95f7f4c005c6d898d60461906b4aec18 -->
      </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2022-07-20 [2103266a3] Process shared_preload_libraries in single-user mode.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=d7fa9499105e0b6352d2b90c995e575a sig_cn_org=5f74884ce63aadd87afdaa33902c55d9 source=15.7 
       <para>
        Honor server variable <link
        linkend="guc-shared-preload-libraries"><varname>shared_preload_libraries</varname></link>
        in single-user mode (Jeff Davis)
       </para>
________________________________________________________-->
       <para>
        在单用户模式下，尊从服务器变量<link
        linkend="guc-shared-preload-libraries"><varname>shared_preload_libraries</varname></link>
        （Jeff Davis）
       </para>
<!-- pgdoc-cn_end sig_en=d7fa9499105e0b6352d2b90c995e575a -->

<!-- pgdoc-cn_start sig_en=d0e4399d8f7357b977d4fd34ceb3cd4f sig_cn_org=f6440ca36d4f1d2102ab036202a034fb source=15.7 
       <para>
        This change supports use
        of <varname>shared_preload_libraries</varname> to load custom
        access methods and WAL resource managers, which would be essential
        for database access even in single-user mode.
       </para>
________________________________________________________-->
       <para>
        这个改变支持使用<varname>shared_preload_libraries</varname>来加载自定义访问方法和WAL资源管理器，
        这对于数据库访问即使在单用户模式下也是必不可少的。
       </para>
<!-- pgdoc-cn_end sig_en=d0e4399d8f7357b977d4fd34ceb3cd4f -->
      </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2022-07-02 [a2b0719cc] Default to dynamic_shared_memory_type=sysv on Solaris.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=ff780d7c488fa42ff7450f53dea658fd sig_cn_org=3ff558f9f5342595574292239c7e5377 source=15.7 
       <para>
        On Solaris, make the default setting of <link
        linkend="guc-dynamic-shared-memory-type"><varname>dynamic_shared_memory_type</varname></link>
        be <literal>sysv</literal> (Thomas Munro)
       </para>
________________________________________________________-->
       <para>
        在Solaris上，将默认设置为<link
        linkend="guc-dynamic-shared-memory-type"><varname>dynamic_shared_memory_type</varname></link>
        为<literal>sysv</literal>（Thomas Munro）
       </para>
<!-- pgdoc-cn_end sig_en=ff780d7c488fa42ff7450f53dea658fd -->

<!-- pgdoc-cn_start sig_en=0a3d32f6e419dae9edd705d3d92b8c2f sig_cn_org=c6c32f7010ae8c5a20f29c4505fcb447 source=15.7 
       <para>
        The previous default choice, <literal>posix</literal>, can result
        in spurious failures on this platform.
       </para>
________________________________________________________-->
       <para>
        之前的默认选择，<literal>posix</literal>，可能导致在这个平台上出现假失败。
       </para>
<!-- pgdoc-cn_end sig_en=0a3d32f6e419dae9edd705d3d92b8c2f -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-09-16 [0c39c2920] Support "postgres -C" with runtime-computed GUCs
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=3c70ee58ccef1fa85c6fb949ab73831e sig_cn_org=3059d01494b77afd54afe429fbebe510 source=15.7 
       <para>
        Allow <link linkend="app-postgres"><command>postgres
        -C</command></link> to properly report runtime-computed values
        (Nathan Bossart)
       </para>
________________________________________________________-->
       <para>
        允许<link linkend="app-postgres"><command>postgres
        -C</command></link>正确报告运行时计算的值
        (Nathan Bossart)
       </para>
<!-- pgdoc-cn_end sig_en=3c70ee58ccef1fa85c6fb949ab73831e -->

<!-- pgdoc-cn_start sig_en=bc58b0c834a90f5b9c3eb19e4081a558 sig_cn_org=daef00f0b6c5eb11fc2baa0b73286103 source=15.7 
       <para>
        Previously runtime-computed values <link
        linkend="guc-data-checksums"><varname>data_checksums</varname></link>,
        <link
        linkend="guc-wal-segment-size"><varname>wal_segment_size</varname></link>,
        and <link
        linkend="guc-data-directory-mode"><varname>data_directory_mode</varname></link>
        would report values that would not be accurate on the running
        server.  However, this does not work on a running server.
       </para>
________________________________________________________-->
       <para>
        以前运行时计算的值<link linkend="guc-data-checksums"><varname>data_checksums</varname></link>，
        <link linkend="guc-wal-segment-size"><varname>wal_segment_size</varname></link>，
        和<link linkend="guc-data-directory-mode"><varname>data_directory_mode</varname></link>
        会报告在运行中的服务器上不准确的值。然而，在运行中的服务器上这不起作用。
       </para>
<!-- pgdoc-cn_end sig_en=bc58b0c834a90f5b9c3eb19e4081a558 -->
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=aa4f7ad6cceaebed79202cdc38242aea sig_cn_org=cdfc8a28ba6644dd357a5b6fb7facfd3 source=15.7 
    <title>Streaming Replication and Recovery</title>
________________________________________________________-->
    <title>流式复制和恢复</title>
<!-- pgdoc-cn_end sig_en=aa4f7ad6cceaebed79202cdc38242aea -->

    <itemizedlist>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-11 [dab298471] Add suport for server-side LZ4 base backup compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-03-08 [7cf085f07] Add support for zstd base backup compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-03-30 [51c0d186d] Allow parallel zstd compression when taking a base backu
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=0be3093e549c276089ad8f78a8bbfb48 sig_cn_org=69ed8b9fe123ced44bb1551b8b28136c source=15.7 
      <para>
       Add support for LZ4 and Zstandard compression of server-side <link
       linkend="backup-base-backup">base backups</link> (Jeevan Ladhe,
       Robert Haas)
      </para>
________________________________________________________-->
      <para>
       为服务器端的<link linkend="backup-base-backup">基本备份</link>添加LZ4和Zstandard压缩支持（Jeevan Ladhe，Robert Haas）
      </para>
<!-- pgdoc-cn_end sig_en=0be3093e549c276089ad8f78a8bbfb48 -->
     </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2021-08-02 [7ff23c6d2] Run checkpointer and bgwriter in crash recovery.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=dddaa5d4211958b318d6bc8e853397ad sig_cn_org=335340147bf00034fbd5dd77d862c40e source=15.7 
      <para>
       Run the checkpointer and bgwriter processes during crash recovery
       (Thomas Munro)
      </para>
________________________________________________________-->
      <para>
       在崩溃恢复期间运行检查点和后台写入进程
       (Thomas Munro)
      </para>
<!-- pgdoc-cn_end sig_en=dddaa5d4211958b318d6bc8e853397ad -->

<!-- pgdoc-cn_start sig_en=cbd6200fb07945e51c97513c790321bf sig_cn_org=6715e15961e32efae00c30cc0cfdfb36 source=15.7 
      <para>
       This helps to speed up long crash recoveries.
      </para>
________________________________________________________-->
      <para>
       这有助于加快长时间的崩溃恢复。
      </para>
<!-- pgdoc-cn_end sig_en=cbd6200fb07945e51c97513c790321bf -->
     </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2022-04-07 [5dc0418fa] Prefetch data referenced by the WAL, take II.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=429097f7e13c61fa0388a01d2421cbf2 sig_cn_org=9f3e307174e45aaa02fb13a581a5573e source=15.7 
      <para>
       Allow <acronym>WAL</acronym> processing to pre-fetch needed file
       contents (Thomas Munro)
      </para>
________________________________________________________-->
      <para>
       允许<acronym>WAL</acronym>处理预取所需的文件内容（Thomas Munro）
      </para>
<!-- pgdoc-cn_end sig_en=429097f7e13c61fa0388a01d2421cbf2 -->

<!-- pgdoc-cn_start sig_en=174cd46408c982b7c4f8cc6e91d412f9 sig_cn_org=7b3572d8a9e4fca01adb2eaa74c405ab source=15.7 
      <para>
       This is controlled by the server variable <link
       linkend="guc-recovery-prefetch"><varname>recovery_prefetch</varname></link>.
      </para>
________________________________________________________-->
      <para>
       这由服务器变量 <link
       linkend="guc-recovery-prefetch"><varname>recovery_prefetch</varname></link> 控制。
      </para>
<!-- pgdoc-cn_end sig_en=174cd46408c982b7c4f8cc6e91d412f9 -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-03 [5ef1eefd7] Allow archiving via loadable modules.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=f3075de8f5c4b7188ccc75120696a38c sig_cn_org=1ff0ade2d04d222e832ef019397b29ca source=15.7 
      <para>
       Allow archiving via loadable modules (Nathan Bossart)
      </para>
________________________________________________________-->
      <para>
       允许通过可加载模块进行归档（Nathan Bossart）
      </para>
<!-- pgdoc-cn_end sig_en=f3075de8f5c4b7188ccc75120696a38c -->

<!-- pgdoc-cn_start sig_en=a41616d99eb919925ca7f1efa270e438 sig_cn_org=0b303d71bfaeb6eddb0b0beadadf706b source=15.7 
      <para>
       Previously, archiving was only done by calling shell commands.
       The new server variable <link
       linkend="guc-archive-library"><varname>archive_library</varname></link>
       can be set to specify a library to be called for archiving.
      </para>
________________________________________________________-->
      <para>
       以前，归档只能通过调用shell命令来完成。
       新的服务器变量<link linkend="guc-archive-library"><varname>archive_library</varname></link>
       可以设置为指定一个用于归档的库。
</para>
<!-- pgdoc-cn_end sig_en=a41616d99eb919925ca7f1efa270e438 -->
     </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2021-07-09 [8e7811e95] Eliminate replication protocol error related to IDENTIFY
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=6605a9e475cc685e58da957c38e6b6a9 sig_cn_org=b1dc2ce21494dbe4efe82cca76b11ca7 source=15.7 
      <para>
       No longer require <link
       linkend="protocol-replication"><literal>IDENTIFY_SYSTEM</literal></link>
       to be run before <literal>START_REPLICATION</literal> (Jeff Davis)
      </para>
________________________________________________________-->
      <para>
       不再需要在<literal>START_REPLICATION</literal>之前运行
       <link linkend="protocol-replication"><literal>IDENTIFY_SYSTEM</literal></link>
       （Jeff Davis）
      </para>
<!-- pgdoc-cn_end sig_en=6605a9e475cc685e58da957c38e6b6a9 -->
     </listitem>

    </itemizedlist>

    <sect4>
<!-- pgdoc-cn_start sig_en=eb0cc6f28d5a62da9c8aa33738ebd72d sig_cn_org=ebab24a834caa554d1abdf0e8bd252f9 source=15.7 
     <title><link linkend="logical-replication">Logical Replication</link></title>
________________________________________________________-->
     <title><link linkend="logical-replication">逻辑复制</link></title>
<!-- pgdoc-cn_end sig_en=eb0cc6f28d5a62da9c8aa33738ebd72d -->

     <itemizedlist>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2021-10-27 [5a2832465] Allow publishing the tables of schema.
Author: Amit Kapila <akapila@postgresql.org>
2021-12-08 [1a2aaeb0d] Fix changing the ownership of ALL TABLES IN SCHEMA publi
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-09-22 [f256236fb] Remove ALL keyword from TABLES IN SCHEMA for publication
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=09578441a5345d2fbab4808cd89dcba6 sig_cn_org=13ba3678a9cfac34bf8c6e7f8a365b5d source=15.7 
       <para>
        Allow <link linkend="sql-createpublication">publication</link> of
        all tables in a schema (Vignesh C, Hou Zhijie, Amit Kapila)
       </para>
________________________________________________________-->
       <para>
        允许在模式中<link linkend="sql-createpublication">发布</link>所有表格（Vignesh C，Hou Zhijie，Amit Kapila）
       </para>
<!-- pgdoc-cn_end sig_en=09578441a5345d2fbab4808cd89dcba6 -->

<!-- pgdoc-cn_start sig_en=aa2f657adc00faa6da5829a5d1026080 sig_cn_org=891111ca07a32772f7a55c25e12a072c source=15.7 
       <para>
        For example, this syntax is now supported: <literal>CREATE
        PUBLICATION pub1 FOR TABLES IN SCHEMA s1,s2</literal>.
        <command>ALTER PUBLICATION</command> supports a similar syntax.
        Tables added later to the listed schemas will also be replicated.
       </para>
________________________________________________________-->
       <para>
        例如，现在支持这种语法：<literal>CREATE PUBLICATION pub1 FOR TABLES IN SCHEMA s1,s2</literal>。
        <command>ALTER PUBLICATION</command>支持类似的语法。
        后续添加到列出的模式中的表也将被复制。
       </para>
<!-- pgdoc-cn_end sig_en=aa2f657adc00faa6da5829a5d1026080 -->
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2022-02-22 [52e4f0cd4] Allow specifying row filters for logical replication of
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2022-03-17 [5a0796622] Fix row filters with multiple publications
Author: Amit Kapila <akapila@postgresql.org>
2022-04-18 [676eeb6dd] Add additional documentation for row filters.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=99397556a0bac6d763c8428fbb199140 sig_cn_org=7d4f3378820cda7e2791e2e0a80e58b6 source=15.7 
       <para>
        Allow publication content to be filtered using a
        <literal>WHERE</literal> clause (Hou Zhijie, Euler Taveira,
        Peter Smith, Ajin Cherian, Tomas Vondra, Amit Kapila)
       </para>
________________________________________________________-->
       <para>
        允许使用<literal>WHERE</literal>子句（Hou Zhijie，Euler Taveira，
        Peter Smith，Ajin Cherian，Tomas Vondra，Amit Kapila）过滤发布内容
       </para>
<!-- pgdoc-cn_end sig_en=99397556a0bac6d763c8428fbb199140 -->

<!-- pgdoc-cn_start sig_en=fb4c8c60353c74dd5bbd24920e0b0778 sig_cn_org=8370a6374e9b36dbc24c0cf7fc0f565d source=15.7 
       <para>
        Rows not satisfying the <literal>WHERE</literal> clause are not
        published.
       </para>
________________________________________________________-->
       <para>
        不满足<literal>WHERE</literal>子句的行不会被发布。
       </para>
<!-- pgdoc-cn_end sig_en=fb4c8c60353c74dd5bbd24920e0b0778 -->
      </listitem>

<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2022-03-26 [923def9a5] Allow specifying column lists for logical replication
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=fd78c71eb62b21feb4c63dac067c6dfd sig_cn_org=c61f3e9b13375583f171d2a7f660b44c source=15.7 
       <para>
        Allow publication content to
        be restricted to specific columns (Tomas Vondra, Álvaro Herrera,
        Rahila Syed)
       </para>
________________________________________________________-->
       <para>
        允许将发布内容限制在特定的列中（Tomas Vondra，Álvaro Herrera，Rahila Syed）
       </para>
<!-- pgdoc-cn_end sig_en=fd78c71eb62b21feb4c63dac067c6dfd -->
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2022-03-22 [208c5d65b] Add ALTER SUBSCRIPTION ... SKIP.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=8361e9cdc9b301a64f62cdbdf0371608 sig_cn_org=b260e377c566587260f1f8be7b58661c source=15.7 
       <para>
        Allow skipping of transactions on a subscriber using <link
        linkend="sql-altersubscription"><command>ALTER SUBSCRIPTION
        ... SKIP</command></link> (Masahiko Sawada)
       </para>
________________________________________________________-->
       <para>
        允许跳过订阅者上的事务，使用<link
        linkend="sql-altersubscription"><command>ALTER SUBSCRIPTION
        ... SKIP</command></link>（Masahiko Sawada）
       </para>
<!-- pgdoc-cn_end sig_en=8361e9cdc9b301a64f62cdbdf0371608 -->
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2021-06-30 [cda03cfed] Allow enabling two-phase option via replication protocol
Author: Amit Kapila <akapila@postgresql.org>
2021-07-14 [a8fd13cab] Add support for prepared transactions to built-in logica
Author: Amit Kapila <akapila@postgresql.org>
2021-08-04 [63cf61cde] Add prepare API support for streaming transactions in lo
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=70249a1865aaafb17aa36155f7c6432e sig_cn_org=24ab5c296a3c0097682fad4a6af65644 source=15.7 
       <para>
        Add support for prepared (two-phase) transactions to logical
        replication (Peter Smith, Ajin Cherian, Amit Kapila, Nikhil
        Sontakke, Stas Kelvich)
       </para>
________________________________________________________-->
       <para>
        为逻辑复制添加对预准备（两阶段）事务的支持（Peter Smith，Ajin Cherian，Amit Kapila，Nikhil
        Sontakke，Stas Kelvich）
       </para>
<!-- pgdoc-cn_end sig_en=70249a1865aaafb17aa36155f7c6432e -->

<!-- pgdoc-cn_start sig_en=7fcc49a51e321583b57128a55e5807ee sig_cn_org=08124ee2ea8358d04fd6544865e16e95 source=15.7 
       <para>
        The new <link
        linkend="protocol-replication"><literal>CREATE_REPLICATION_SLOT</literal></link>
        option is called <literal>TWO_PHASE</literal>.
        <application>pg_recvlogical</application> now supports a new
        <option>-&minus;two-phase</option> option during slot creation.
       </para>
________________________________________________________-->
       <para>
        新的<link
        linkend="protocol-replication"><literal>CREATE_REPLICATION_SLOT</literal></link>
        选项被称为<literal>TWO_PHASE</literal>。
        <application>pg_recvlogical</application>现在在插槽创建过程中支持一个新的
        <option>--two-phase</option>选项。
       </para>
<!-- pgdoc-cn_end sig_en=7fcc49a51e321583b57128a55e5807ee -->
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2022-03-30 [d5a9d86d8] Skip empty transactions for logical replication.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=c32c0d49d3b69ae9e58fb18d7205c948 sig_cn_org=12dcc3df3c23a761f9b265823a27d609 source=15.7 
       <para>
        Prevent logical replication of empty transactions (Ajin Cherian,
        Hou Zhijie, Euler Taveira)
       </para>
________________________________________________________-->
       <para>
        防止空事务的逻辑复制（Ajin Cherian，Hou Zhijie，Euler Taveira）
       </para>
<!-- pgdoc-cn_end sig_en=c32c0d49d3b69ae9e58fb18d7205c948 -->

<!-- pgdoc-cn_start sig_en=311dfe70a4ada6729676357b30842634 sig_cn_org=3875dfacb5c7c60dffa3a0e13f8d438f source=15.7 
       <para>
        Previously, publishers would send empty transactions to
        subscribers if subscribed tables were not modified.
       </para>
________________________________________________________-->
       <para>
        以前，如果订阅的表没有被修改，发布者会向订阅者发送空事务。
       </para>
<!-- pgdoc-cn_end sig_en=311dfe70a4ada6729676357b30842634 -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-11-23 [1922d7c6e] Add SQL functions to monitor the directory contents of r
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=8f62e2f346121d5f48fbf3bc8ec0f2c9 sig_cn_org=ebf23eed1791119951a3e0285b272b65 source=15.7 
       <para>
        Add <acronym>SQL</acronym> functions to monitor the directory
        contents of logical replication slots (Bharath Rupireddy)
       </para>
________________________________________________________-->
       <para>
        添加<acronym>SQL</acronym>函数来监视逻辑复制插槽的目录内容（Bharath Rupireddy）
       </para>
<!-- pgdoc-cn_end sig_en=8f62e2f346121d5f48fbf3bc8ec0f2c9 -->

<!-- pgdoc-cn_start sig_en=62849f8306be8c35c665b5eb09c9da83 sig_cn_org=242065a88be073b06d39e9e62f03b30f source=15.7 
       <para>
        The new functions are <link
        linkend="functions-admin-genfile-table"><function>pg_ls_logicalsnapdir()</function></link>,
        <function>pg_ls_logicalmapdir()</function>, and
        <function>pg_ls_replslotdir()</function>.  They can be run by
        members of the predefined <literal>pg_monitor</literal> role.
       </para>
________________________________________________________-->
       <para>
        新函数是<link linkend="functions-admin-genfile-table"><function>pg_ls_logicalsnapdir()</function></link>，
        <function>pg_ls_logicalmapdir()</function>和<function>pg_ls_replslotdir()</function>。
        它们可以由预定义的<literal>pg_monitor</literal>角色的成员运行。
       </para>
<!-- pgdoc-cn_end sig_en=62849f8306be8c35c665b5eb09c9da83 -->
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2022-03-14 [705e20f85] Optionally disable subscriptions on error.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=f73490f1bc02e838341fefcc49e9bc09 sig_cn_org=716ce366a736a7939e7abbc41bae764b source=15.7 
       <para>
        Allow subscribers to stop the application of logical replication changes on error
        (Osumi Takamichi, Mark Dilger)
       </para>
________________________________________________________-->
       <para>
        允许订阅者在错误时停止逻辑复制更改的应用（Osumi Takamichi, Mark Dilger）
       </para>
<!-- pgdoc-cn_end sig_en=f73490f1bc02e838341fefcc49e9bc09 -->

<!-- pgdoc-cn_start sig_en=3fc19cb3cf7627b35d7d73addd544a41 sig_cn_org=944ca8083d17a3a9ae89b3e67ba5b31a source=15.7 
       <para>
        This is enabled with the subscriber option <link
        linkend="sql-createsubscription"><literal>disable_on_error</literal></link>
        and avoids possible infinite error loops during stream application.
       </para>
________________________________________________________-->
       <para>
        这是通过订阅选项 <link
        linkend="sql-createsubscription"><literal>disable_on_error</literal></link>
        启用的，可以避免在流应用过程中可能出现的无限错误循环。
       </para>
<!-- pgdoc-cn_end sig_en=3fc19cb3cf7627b35d7d73addd544a41 -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-02 [f3d4019da] Ensure consistent logical replication of datetime and fl
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=f5f5c5814e12be097ceeed5e6239fa8b sig_cn_org=fed45b22d167fc7b33e6c45b4ede123b source=15.7 
       <para>
        Adjust subscriber server variables to match the publisher so
        datetime and float8 values are interpreted consistently (Japin Li)
       </para>
________________________________________________________-->
       <para>
        调整订阅服务器变量以匹配发布者，以便日期时间和float8值被一致解释（Japin Li）
       </para>
<!-- pgdoc-cn_end sig_en=f5f5c5814e12be097ceeed5e6239fa8b -->

<!-- pgdoc-cn_start sig_en=212979ad2892e04270eb4619c444c645 sig_cn_org=d80414577bc0f6e84813a0955751eca2 source=15.7 
       <para>
        Some publishers might be relying on inconsistent behavior.
       </para>
________________________________________________________-->
       <para>
        一些发布者可能依赖于不一致的行为。
       </para>
<!-- pgdoc-cn_end sig_en=212979ad2892e04270eb4619c444c645 -->
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2021-11-30 [8d74fc96d] Add a view to show the stats of subscription workers.
Author: Amit Kapila <akapila@postgresql.org>
2022-03-01 [7a8507329] Reconsider pg_stat_subscription_workers view.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=f5992acd33a118a987723942a0e9ac61 sig_cn_org=7a40fbcab9201db7654b659ecddec893 source=15.7 
       <para>
        Add system view <link
        linkend="monitoring-pg-stat-subscription-stats"><structname>pg_stat_subscription_stats</structname></link>
        to report on subscriber activity (Masahiko Sawada)
       </para>
________________________________________________________-->
       <para>
        将系统视图<link
        linkend="monitoring-pg-stat-subscription-stats"><structname>pg_stat_subscription_stats</structname></link>
        添加到报告中，以报告订阅者活动（Masahiko Sawada）
       </para>
<!-- pgdoc-cn_end sig_en=f5992acd33a118a987723942a0e9ac61 -->

<!-- pgdoc-cn_start sig_en=c7fb6ca48d328dcb7e1bfa3dd3257a18 sig_cn_org=d62e04490eea84485b14e05983e62c4d source=15.7 
       <para>
        The new function <link
        linkend="monitoring-stats-functions"><function>pg_stat_reset_subscription_stats()</function></link>
        allows resetting these statistics counters.
       </para>
________________________________________________________-->
       <para>
        新函数<link
        linkend="monitoring-stats-functions"><function>pg_stat_reset_subscription_stats()</function></link>
        允许重置这些统计计数器。
       </para>
<!-- pgdoc-cn_end sig_en=c7fb6ca48d328dcb7e1bfa3dd3257a18 -->
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2021-12-08 [a61bff2bf] De-duplicate the result of pg_publication_tables view.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=de286bf5740b06e2a57914a0674af6f7 sig_cn_org=73618ce23ce5652e36c2485446dc3da3 source=15.7 
       <para>
        Suppress duplicate entries in the <link
        linkend="view-pg-publication-tables"><structname>pg_publication_tables</structname></link>
        system view (Hou Zhijie)
       </para>
________________________________________________________-->
       <para>
        在<link linkend="view-pg-publication-tables"><structname>pg_publication_tables</structname></link>
        系统视图中，抑制重复条目（侯志杰）
       </para>
<!-- pgdoc-cn_end sig_en=de286bf5740b06e2a57914a0674af6f7 -->

<!-- pgdoc-cn_start sig_en=1de1772205fb96b24885f17ddf470a5b sig_cn_org=5c5abc2f556115014d95efe60f94bfa8 source=15.7 
       <para>
        In some cases a partition could appear more than once.
       </para>
________________________________________________________-->
       <para>
        在某些情况下，一个分区可能会出现多次。
       </para>
<!-- pgdoc-cn_end sig_en=1de1772205fb96b24885f17ddf470a5b -->
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=0e46664130e2edfe41fbfc4db308e7d9 sig_cn_org=2bb3a00fc3cc909909d82423d80d1d62 source=15.7 
    <title>Utility Commands</title>
________________________________________________________-->
    <title>实用命令</title>
<!-- pgdoc-cn_end sig_en=0e46664130e2edfe41fbfc4db308e7d9 -->

    <itemizedlist>

<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-03-28 [7103ebb7a] Add support for MERGE SQL command
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=ce1199aaccfc578b98ae85d355ae1653 sig_cn_org=4d7940f9c648ffb38714929ab03bb5a3 source=15.7 
      <para>
       Add <acronym>SQL</acronym> <link
       linkend="sql-merge"><command>MERGE</command></link>
       command to adjust one table to match another (Simon Riggs, Pavan
       Deolasee, Álvaro Herrera, Amit Langote)
      </para>
________________________________________________________-->
      <para>
       添加<acronym>SQL</acronym> <link
       linkend="sql-merge"><command>MERGE</command></link>
       命令，用于调整一个表以匹配另一个表（Simon Riggs, Pavan
       Deolasee, Álvaro Herrera, Amit Langote）
      </para>
<!-- pgdoc-cn_end sig_en=ce1199aaccfc578b98ae85d355ae1653 -->

<!-- pgdoc-cn_start sig_en=4e3a78d2f21664a6cec39ef24b4c9fe3 sig_cn_org=ad11893faca88e96e812e1fb68703600 source=15.7 
      <para>
       This is similar to <command>INSERT ... ON CONFLICT</command>
       but more batch-oriented.
      </para>
________________________________________________________-->
      <para>
       这类似于<command>INSERT ... ON CONFLICT</command>，但更适合批量操作。
      </para>
<!-- pgdoc-cn_end sig_en=4e3a78d2f21664a6cec39ef24b4c9fe3 -->
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-01-28 [43f33dc01] Add HEADER support to COPY text format
Author: Peter Eisentraut <peter@eisentraut.org>
2022-03-30 [072132f04] Add header matching mode to COPY FROM
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=389eedb27f8ee6ef10d14f90bece5638 sig_cn_org=c05790cbc7e2d3216f87bc31e9c40284 source=15.7 
      <para>
       Add support for <literal>HEADER</literal> option in <link
       linkend="sql-copy"><command>COPY</command></link> text format
       (Rémi Lapeyre)
      </para>
________________________________________________________-->
      <para>
       在<link linkend="sql-copy"><command>COPY</command></link>文本格式中添加对<literal>HEADER</literal>选项的支持（Rémi Lapeyre）
      </para>
<!-- pgdoc-cn_end sig_en=389eedb27f8ee6ef10d14f90bece5638 -->

<!-- pgdoc-cn_start sig_en=5c91ddff235c308a60294b4a5d0dd23d sig_cn_org=5bf03b5c15556ea20506cc21522de4da source=15.7 
      <para>
       The new option causes the column names to be output, and optionally
       verified on input.
      </para>
________________________________________________________-->
      <para>
       新选项导致列名被输出，并在需要时进行验证。
      </para>
<!-- pgdoc-cn_end sig_en=5c91ddff235c308a60294b4a5d0dd23d -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-03-29 [9c08aea6a] Add new block-by-block strategy for CREATE DATABASE.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=7bdb3990e205c5944a86f5deb051d56c sig_cn_org=996b5374ed18143d0c714ad94525a476 source=15.7 
      <para>
       Add new <acronym>WAL</acronym>-logged method for <link
       linkend="sql-createdatabase">database creation</link> (Dilip Kumar)
      </para>
________________________________________________________-->
      <para>
       添加了新的<acronym>WAL</acronym>记录方法用于<link
       linkend="sql-createdatabase">数据库创建</link>（Dilip Kumar）
      </para>
<!-- pgdoc-cn_end sig_en=7bdb3990e205c5944a86f5deb051d56c -->

<!-- pgdoc-cn_start sig_en=53fd9d6597df98455ef99ef74f1da6cc sig_cn_org=a43af2746e55d83d6cbc1a215d23f1c2 source=15.7 
      <para>
       This is the new default method for copying the template database,
       as it avoids the need for checkpoints during database creation.
       However, it might be slow if the template database is large, so
       the old method is still available.
      </para>
________________________________________________________-->
      <para>
       这是复制模板数据库的新默认方法，因为它避免了在数据库创建过程中需要检查点的需要。
       然而，如果模板数据库很大，这种方法可能会很慢，所以旧方法仍然可用。
      </para>
<!-- pgdoc-cn_end sig_en=53fd9d6597df98455ef99ef74f1da6cc -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-24 [aa0105141] pg_upgrade: Preserve database OIDs.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=1f0639cccd179e2e8db6c2e324d10a50 sig_cn_org=ff0a22d721dafc9a8c6319eb0cc208d8 source=15.7 
      <para>
       Allow <link linkend="sql-createdatabase"><command>CREATE
       DATABASE</command></link> to set the database <acronym>OID</acronym>
       (Shruthi Gowda, Antonin Houska)
      </para>
________________________________________________________-->
      <para>
       允许<link linkend="sql-createdatabase"><command>创建数据库</command></link>来设置数据库<acronym>OID</acronym>
       (Shruthi Gowda, Antonin Houska)
</para>
<!-- pgdoc-cn_end sig_en=1f0639cccd179e2e8db6c2e324d10a50 -->
     </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2022-02-12 [4eb217631] Fix DROP {DATABASE,TABLESPACE} on Windows.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=51e14977771ace6b44dba2f41f305aa1 sig_cn_org=93a44057e441baa0a9d743d3fe3dd209 source=15.7 
      <para>
       Prevent <link linkend="sql-dropdatabase"><command>DROP
       DATABASE</command></link>, <link
       linkend="sql-droptablespace"><command>DROP
       TABLESPACE</command></link>, and <link
       linkend="sql-alterdatabase"><command>ALTER DATABASE SET
       TABLESPACE</command></link> from occasionally failing during
       concurrent use on Windows (Thomas Munro)
      </para>
________________________________________________________-->
      <para>
       防止在Windows上并发使用时偶尔失败的情况下，<link linkend="sql-dropdatabase"><command>DROP
       DATABASE</command></link>，<link
       linkend="sql-droptablespace"><command>DROP
       TABLESPACE</command></link>和<link
       linkend="sql-alterdatabase"><command>ALTER DATABASE SET
       TABLESPACE</command></link>（Thomas Munro）
      </para>
<!-- pgdoc-cn_end sig_en=51e14977771ace6b44dba2f41f305aa1 -->
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-12-08 [d6f96ed94] Allow specifying column list for foreign key ON DELETE S
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=beb4e47c16a695ddfb74d4a767431c15 sig_cn_org=13087942a986fe90c16c3ce17f5dab96 source=15.7 
      <para>
       Allow foreign key <link linkend="ddl-constraints-fk"><literal>ON
       DELETE SET</literal></link> actions to affect only specified columns
       (Paul Martinez)
      </para>
________________________________________________________-->
      <para>
       允许外键<link linkend="ddl-constraints-fk"><literal>ON
       DELETE SET</literal></link>操作仅影响指定的列（Paul Martinez）
      </para>
<!-- pgdoc-cn_end sig_en=beb4e47c16a695ddfb74d4a767431c15 -->

<!-- pgdoc-cn_start sig_en=a1ddf6adbfa382699cdb0517d4160226 sig_cn_org=fe8fede8e7bd8284950c39a5a76dd0f0 source=15.7 
      <para>
       Previously, all of the columns in the foreign key were always
       affected.
      </para>
________________________________________________________-->
      <para>
       以前，外键中的所有列总是受影响。
      </para>
<!-- pgdoc-cn_end sig_en=a1ddf6adbfa382699cdb0517d4160226 -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-07-28 [b0483263d] Add support for SET ACCESS METHOD in ALTER TABLE
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=30748a2ef639cd9b0fcbc9c17756f948 sig_cn_org=ff92cf5781cc95749816d92a995cd172 source=15.7 
      <para>
       Allow <link linkend="sql-altertable"><command>ALTER
       TABLE</command></link> to modify a table's <literal>ACCESS
       METHOD</literal> (Justin Pryzby, Jeff Davis)
      </para>
________________________________________________________-->
      <para>
       允许<link linkend="sql-altertable"><command>ALTER
       TABLE</command></link>修改表的<literal>访问方法</literal>（Justin Pryzby, Jeff Davis）
      </para>
<!-- pgdoc-cn_end sig_en=30748a2ef639cd9b0fcbc9c17756f948 -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-08-10 [7b565843a] Add call to object access hook at the end of table rewri
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=123ccbc4517fb8e369a2d54c4cada120 sig_cn_org=d0255c75b44e60d7126230abc4b3a7a8 source=15.7 
      <para>
       Properly call object access hooks when <link
       linkend="sql-altertable"><command>ALTER TABLE</command></link>
       causes table rewrites (Michael Paquier)
      </para>
________________________________________________________-->
      <para>
       当<link linkend="sql-altertable"><command>ALTER TABLE</command></link>导致表重写时，正确调用对象访问钩子（Michael Paquier）
      </para>
<!-- pgdoc-cn_end sig_en=123ccbc4517fb8e369a2d54c4cada120 -->
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-04-07 [344d62fb9] Unlogged sequences
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=1963fb7701a187d1c20bae2cf275f5b1 sig_cn_org=300cb57da4b29de9a03d0d9c1fd5983a source=15.7 
      <para>
       Allow creation of unlogged <link
       linkend="sql-createsequence">sequences</link> (Peter Eisentraut)
      </para>
________________________________________________________-->
      <para>
       允许创建不记录日志的<link
       linkend="sql-createsequence">序列</link> (Peter Eisentraut)
      </para>
<!-- pgdoc-cn_end sig_en=1963fb7701a187d1c20bae2cf275f5b1 -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-07-22 [c2fa113dd] Close old gap in dependency checks for functions returni
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=dc3bdd0c6fea931e2abd0b934bf232c0 sig_cn_org=21733a1bdb92ef6247d4d678a5143359 source=15.7 
      <para>
       Track dependencies on individual columns in the results of
       functions returning composite types (Tom Lane)
      </para>
________________________________________________________-->
      <para>
       跟踪返回复合类型结果中各列的依赖关系（Tom Lane）
      </para>
<!-- pgdoc-cn_end sig_en=dc3bdd0c6fea931e2abd0b934bf232c0 -->

<!-- pgdoc-cn_start sig_en=0a3277ff1e09e4cc98bee2583552c406 sig_cn_org=5aa17c8cf1742531e07a7bf4751f07f0 source=15.7 
      <para>
       Previously, if a view or rule contained a reference to a specific
       column within the result of a composite-returning function, that
       was not noted as a dependency; the view or rule was only considered
       to depend on the composite type as a whole.  This meant that
       dropping the individual column would be allowed, causing problems
       in later use of the view or rule.  The column-level dependency is
       now also noted, so that dropping such a column will be rejected
       unless the view is changed or dropped.
      </para>
________________________________________________________-->
      <para>
       以前，如果视图或规则包含对复合返回函数结果中特定列的引用，
       那么这不会被视为依赖项；视图或规则只被视为依赖整个复合类型。
       这意味着允许删除单个列，会在后续使用视图或规则时造成问题。
       现在还会注意到列级依赖关系，因此除非更改或删除视图，否则将拒绝删除此类列。
      </para>
<!-- pgdoc-cn_end sig_en=0a3277ff1e09e4cc98bee2583552c406 -->
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=4db1c7313abae97c18199af614e269c9 sig_cn_org=54af108398740cd4ece8c1d790cb2a06 source=15.7 
    <title>Data Types</title>
________________________________________________________-->
    <title>数据类型</title>
<!-- pgdoc-cn_end sig_en=4db1c7313abae97c18199af614e269c9 -->

    <itemizedlist>

<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
2021-07-26 [085f931f5] Allow numeric scale to be negative or greater than preci
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=794182cdfa59100a7aa663aea25064a9 sig_cn_org=e5135543cd3e625ff1396aa7fe0fe17f source=15.7 
      <para>
       Allow the scale of
       a <link linkend="datatype-numeric"><type>numeric</type></link>
       value to be negative, or greater than its precision (Dean Rasheed,
       Tom Lane)
      </para>
________________________________________________________-->
      <para>
       允许一个
       <link linkend="datatype-numeric"><type>数值</type></link>
       值的范围可以是负数，或者大于其精度（Dean Rasheed,
       Tom Lane）
      </para>
<!-- pgdoc-cn_end sig_en=794182cdfa59100a7aa663aea25064a9 -->

<!-- pgdoc-cn_start sig_en=62a4d7da8ee917dfed98c91615c62482 sig_cn_org=f419bd257d40fdcadbd1c1452cf69dda source=15.7 
      <para>
       This allows rounding of values to the left of the decimal point,
       e.g., <literal>'1234'::numeric(4, -2)</literal> returns 1200.
      </para>
________________________________________________________-->
      <para>
       这允许对小数点左侧的值进行四舍五入，例如，<literal>'1234'::numeric(4, -2)</literal> 返回 1200。
      </para>
<!-- pgdoc-cn_end sig_en=62a4d7da8ee917dfed98c91615c62482 -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-02 [e39f99046] Fix overflow hazards in interval input and output conver
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=8f257ff8e0dcb9cb78334591136d4e3e sig_cn_org=9c4b4972ddb35a486efe3af81c6e0c66 source=15.7 
      <para>
       Improve overflow detection when casting values to <link
       linkend="datatype-datetime">interval</link> (Joe Koshakow)
      </para>
________________________________________________________-->
      <para>
       改进将值转换为<link linkend="datatype-datetime">间隔</link>时的溢出检测（Joe Koshakow）
      </para>
<!-- pgdoc-cn_end sig_en=8f257ff8e0dcb9cb78334591136d4e3e -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-08-02 [c034b629c] Change type "char"'s I/O format for non-ASCII characters
-->

    <listitem>
<!-- pgdoc-cn_start sig_en=611ad873dd3d57bb7d790ae682af3335 sig_cn_org=bd5faf2ba368bcb828f6636eb6a8b9f3 source=15.7 
     <para>
      Change the I/O format of type <type>"char"</type> for non-ASCII
      characters (Tom Lane)
     </para>
________________________________________________________-->
     <para>
      更改非ASCII字符的<type>"char"</type>类型的I/O格式（Tom Lane）
     </para>
<!-- pgdoc-cn_end sig_en=611ad873dd3d57bb7d790ae682af3335 -->
    </listitem>

<!--
Author: John Naylor <john.naylor@postgresql.org>
2021-08-26 [bab982161] Update display widths as part of updating Unicode
Author: Peter Eisentraut <peter@eisentraut.org>
2021-09-15 [f7e56f1f5] Update Unicode data to Unicode 14.0.0
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=9025be5be7e2dc882b404f568741a3e9 sig_cn_org=8990ee88ca114355d65aa0869e3d1af8 source=15.7 
      <para>
       Update the display width information of modern Unicode characters,
       like emojis (Jacob Champion)
      </para>
________________________________________________________-->
      <para>
       更新现代Unicode字符（如表情符号）的显示宽度信息（Jacob Champion）
      </para>
<!-- pgdoc-cn_end sig_en=9025be5be7e2dc882b404f568741a3e9 -->

<!-- pgdoc-cn_start sig_en=3d472cd23c9e458dcfad307cf265e344 sig_cn_org=7395ca79c41acc9784728c7d59c024ed source=15.7 
      <para>
       Also update from Unicode 5.0 to 14.0.0.  There is now an automated
       way to keep Postgres updated with Unicode releases.
      </para>
________________________________________________________-->
      <para>
       也更新到Unicode 5.0至14.0.0。现在有一种自动化的方法来保持Postgres与Unicode发布版的同步。
      </para>
<!-- pgdoc-cn_end sig_en=3d472cd23c9e458dcfad307cf265e344 -->
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=a75e46b58752dd4a3c18092d0816bc01 sig_cn_org=None source=14.1 
    <title>Functions</title>
________________________________________________________-->
    <title>Functions</title>
<!-- pgdoc-cn_end sig_en=a75e46b58752dd4a3c18092d0816bc01 -->

    <itemizedlist>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-03-30 [7ae1619bc] Add range_agg with multirange inputs
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=11c29e0471b3bcf856a9c33951c1fb8f sig_cn_org=871c2749b05200e8f83c2f6595d11d3f source=15.7 
      <para>
       Add multirange input to <link
       linkend="functions-aggregate-table"><function>range_agg()</function></link>
       (Paul Jungwirth)
      </para>
________________________________________________________-->
      <para>
       将多范围输入添加到<link
       linkend="functions-aggregate-table"><function>range_agg()</function></link>
       (Paul Jungwirth)
      </para>
<!-- pgdoc-cn_end sig_en=11c29e0471b3bcf856a9c33951c1fb8f -->
     </listitem>

<!--
Author: Fujii Masao <fujii@postgresql.org>
2022-02-10 [400fc6b64] Add min() and max() aggregates for xid8.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=1dd20b89f7dc1f29e0a0805d3bd7b64f sig_cn_org=66a79a4c85f0428e512512f3c079ab69 source=15.7 
      <para>
       Add <link linkend="tutorial-agg"><function>MIN()</function></link>
       and <function>MAX()</function> aggregates for the <link
       linkend="datatype-int"><type>xid8</type></link> data type (Ken Kato)
      </para>
________________________________________________________-->
      <para>
       添加<link linkend="tutorial-agg"><function>MIN()</function></link>
       和<function>MAX()</function>聚合函数，用于<link
       linkend="datatype-int"><type>xid8</type></link>数据类型（Ken Kato）
      </para>
<!-- pgdoc-cn_end sig_en=1dd20b89f7dc1f29e0a0805d3bd7b64f -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-08-03 [642433707] Add assorted new regexp_xxx SQL functions.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=4a337f9081d36c0e7760b23304da151a sig_cn_org=549e6440b75bad3dfd7af8d503e73e70 source=15.7 
      <para>
       Add regular expression functions for compatibility with other
       relational systems (Gilles Darold, Tom Lane)
      </para>
________________________________________________________-->
      <para>
       为了与其他关系系统兼容，添加正则表达式函数（Gilles Darold，Tom Lane）
      </para>
<!-- pgdoc-cn_end sig_en=4a337f9081d36c0e7760b23304da151a -->

<!-- pgdoc-cn_start sig_en=6f75e7689685dabebbbf4b1366e57821 sig_cn_org=5b6d18400ca2b8a5d350f4aa1555b0ba source=15.7 
      <para>
       The new functions are <link
       linkend="functions-string-other"><function>regexp_count()</function></link>,
       <function>regexp_instr()</function>,
       <function>regexp_like()</function>, and
       <function>regexp_substr()</function>.  Some new optional arguments
       were also added to <function>regexp_replace()</function>.
      </para>
________________________________________________________-->
      <para>
       新函数包括<link
       linkend="functions-string-other"><function>regexp_count()</function></link>，
       <function>regexp_instr()</function>，
       <function>regexp_like()</function>和
       <function>regexp_substr()</function>。一些新的可选参数也被添加到
       <function>regexp_replace()</function>中。
      </para>
<!-- pgdoc-cn_end sig_en=6f75e7689685dabebbbf4b1366e57821 -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-13 [c5c192d7b] Implement poly_distance().
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=5e28fbf50f81805bcefd86162a5ea900 sig_cn_org=12914d3f78bd3947192f9b2282783532 source=15.7 
      <para>
       Add the ability to compute the distance between <link
       linkend="datatype-polygon"><type>polygons</type></link> (Tom Lane)
      </para>
________________________________________________________-->
      <para>
       添加计算<link
       linkend="datatype-polygon"><type>polygons</type></link>之间距离的功能（Tom Lane）。
      </para>
<!-- pgdoc-cn_end sig_en=5e28fbf50f81805bcefd86162a5ea900 -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-03-14 [9dde82899] Support "of", "tzh", and "tzm" format codes.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=5f496746243b4c0cc91a0dd55d25258c sig_cn_org=e40aac01368eb0b4669d811b1d4fc6d7 source=15.7 
      <para>
       Add <link
       linkend="functions-formatting-table"><function>to_char()</function></link>
       format codes <literal>of</literal>, <literal>tzh</literal>, and
       <literal>tzm</literal> (Nitin Jadhav)
      </para>
________________________________________________________-->
      <para>
       添加<link
       linkend="functions-formatting-table"><function>to_char()</function></link>
       格式代码<literal>of</literal>，<literal>tzh</literal>和
       <literal>tzm</literal>（Nitin Jadhav）
      </para>
<!-- pgdoc-cn_end sig_en=5f496746243b4c0cc91a0dd55d25258c -->

<!-- pgdoc-cn_start sig_en=8b246e021e3927950d689f5eb3ecd067 sig_cn_org=2562c4b0ebca1866997fd15f48ae0b5c source=15.7 
      <para>
       The upper-case equivalents of these were already supported.
      </para>
________________________________________________________-->
      <para>
       这些的大写等价物已经被支持。
      </para>
<!-- pgdoc-cn_end sig_en=8b246e021e3927950d689f5eb3ecd067 -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-09-06 [388e71af8] Make timetz_zone() stable, and correct a bug for DYNTZ a
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=3d44fe42a3bb90287db11bb51b117a98 sig_cn_org=2f46ee0e8bdf4b97799c0e70ba2ddf74 source=15.7 
      <para>
       When applying <link
       linkend="functions-datetime-zoneconvert"><literal>AT
       TIME ZONE</literal></link> to a <type>time with time zone</type>
       value, use the transaction start time rather than wall clock time
       to determine whether DST applies (Aleksander Alekseev, Tom Lane)
      </para>
________________________________________________________-->
      <para>
       当将<link linkend="functions-datetime-zoneconvert"><literal>AT
       TIME ZONE</literal></link>应用于<type>time with time zone</type>值时，
       使用事务开始时间而不是壁钟时间来确定是否应用DST（Aleksander Alekseev，Tom Lane）
      </para>
<!-- pgdoc-cn_end sig_en=3d44fe42a3bb90287db11bb51b117a98 -->

<!-- pgdoc-cn_start sig_en=1227a1a52f9fee9f69db04f1d3cdc4c7 sig_cn_org=4dd54c93aa1c1ce1f0cd88eddf01b4e4 source=15.7 
      <para>
       This allows the conversion to be considered stable rather than
       volatile, and it saves a kernel call per invocation.
      </para>
________________________________________________________-->
      <para>
       这样可以使转换被视为稳定而不是易变的，并且每次调用都可以节省一个内核调用。
      </para>
<!-- pgdoc-cn_end sig_en=1227a1a52f9fee9f69db04f1d3cdc4c7 -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-06 [cbe25dcff] Disallow making an empty lexeme via array_to_tsvector().
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=c096416b888ae8c24bed20599fbe5f67 sig_cn_org=5023088c11add4e6cef870268d1bd169 source=15.7 
      <para>
       Ignore NULL array elements in <link
       linkend="textsearch-functions-table"><function>ts_delete()</function></link> and
       <function>setweight()</function> functions with array arguments
       (Jean-Christophe Arnu)
      </para>
________________________________________________________-->
      <para>
       忽略<link
       linkend="textsearch-functions-table"><function>ts_delete()</function></link>和<function>setweight()</function>函数中带有数组参数的NULL数组元素
       （Jean-Christophe Arnu）
      </para>
<!-- pgdoc-cn_end sig_en=c096416b888ae8c24bed20599fbe5f67 -->

<!-- pgdoc-cn_start sig_en=449c9ee15a52bcf1100a7818962a8bb5 sig_cn_org=0eb912bdcdf70959d5aeed0d5c37b78d source=15.7 
      <para>
       These functions effectively ignore empty-string array elements
       (since those could never match a valid lexeme).  It seems
       consistent to let them ignore NULL elements too, instead of
       failing.
      </para>
________________________________________________________-->
      <para>
       这些函数有效地忽略空字符串数组元素（因为这些元素永远无法匹配有效的词元）。
       让它们也忽略NULL元素，而不是失败，似乎是一致的。
      </para>
<!-- pgdoc-cn_end sig_en=449c9ee15a52bcf1100a7818962a8bb5 -->
     </listitem>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-07-09 [ca2e4472b] Teach pg_size_pretty and pg_size_bytes about petabytes
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=f91279fc477569083c5fd9484c0a98b4 sig_cn_org=04eff26f90400e503b5f1061663c2231 source=15.7 
      <para>
       Add support for petabyte units to <link
       linkend="functions-admin-dbsize"><function>pg_size_pretty()</function></link>
       and <function>pg_size_bytes()</function> (David Christensen)
      </para>
________________________________________________________-->
      <para>
       为<link linkend="functions-admin-dbsize"><function>pg_size_pretty()</function></link>
       和<function>pg_size_bytes()</function>添加对PB单位的支持（David Christensen）
      </para>
<!-- pgdoc-cn_end sig_en=f91279fc477569083c5fd9484c0a98b4 -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-07-27 [024515cac] In event triggers, use "pg_temp" only for our own temp s
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=391af3e9c0d826239ee1da06a5293c2c sig_cn_org=688be6ef5bcb50f9a0336e1450f2feb2 source=15.7 
      <para>
       Change <link
       linkend="pg-event-trigger-ddl-command-end-functions"><function>pg_event_trigger_ddl_commands()</function></link>
       to output references to other sessions' temporary schemas using the
       actual schema name (Tom Lane)
      </para>
________________________________________________________-->
      <para>
       将<link linkend="pg-event-trigger-ddl-command-end-functions">
	   <function>pg_event_trigger_ddl_commands()</function></link>更改为使用实际模式名称输出对其他会话临时模式的引用（Tom Lane）
      </para>
<!-- pgdoc-cn_end sig_en=391af3e9c0d826239ee1da06a5293c2c -->

<!-- pgdoc-cn_start sig_en=3df14525f4ce4689dca24bcb6986b5bc sig_cn_org=ee5e3d001c6d214f7cf4d2cd3040689a source=15.7 
      <para>
       Previously this function reported all temporary schemas as
       <literal>pg_temp</literal>, but it's misleading to use that for any
       but the current session's temporary schema.
      </para>
________________________________________________________-->
      <para>
       以前，此函数将所有临时模式报告为<literal>pg_temp</literal>，但将其用于除当前会话的临时模式之外是误导性的。
      </para>
<!-- pgdoc-cn_end sig_en=3df14525f4ce4689dca24bcb6986b5bc -->
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=d309384427d685e961e3d2dba5167169 sig_cn_org=e74b937c0b5f71a75c28ad27a3667ad4 source=15.7 
    <title><link linkend="plpgsql">PL/pgSQL</link></title>
________________________________________________________-->
    <title><link linkend="plpgsql">PL/pgSQL</link></title>
<!-- pgdoc-cn_end sig_en=d309384427d685e961e3d2dba5167169 -->

    <itemizedlist>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-30 [ccd10a9bf] Tighten enforcement of variable CONSTANT markings in plp
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=8d976518cba43be3abe76b5915c27384 sig_cn_org=cdcc84183cc7e59690f7450a5b4fab19 source=15.7 
      <para>
       Fix enforcement of PL/pgSQL variable <literal>CONSTANT</literal>
       markings (Tom Lane)
      </para>
________________________________________________________-->
      <para>
       修复了对PL/pgSQL变量<literal>CONSTANT</literal>标记的执行（Tom Lane）
      </para>
<!-- pgdoc-cn_end sig_en=8d976518cba43be3abe76b5915c27384 -->

<!-- pgdoc-cn_start sig_en=9716e4be7f9ac6dbf08ba9c860702e5c sig_cn_org=f4b10e21ad5fdf4dbc892063e7c99c42 source=15.7 
      <para>
       Previously, a variable could be used as a <link
       linkend="plpgsql-statements-calling-procedure"><command>CALL</command></link>
       output parameter or refcursor <command>OPEN</command> variable
       despite being marked <literal>CONSTANT</literal>.
      </para>
________________________________________________________-->
      <para>
       以前，即使标记为<literal>CONSTANT</literal>，变量也可以用作<link
       linkend="plpgsql-statements-calling-procedure"><command>CALL</command></link>的输出参数或refcursor <command>OPEN</command>变量。
      </para>
<!-- pgdoc-cn_end sig_en=9716e4be7f9ac6dbf08ba9c860702e5c -->
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=e0b13fc5380eb77df1be0e8f962da355 sig_cn_org=c5cd5b0417f691c04dfd3be0ce282cdb source=15.7 
    <title><link linkend="libpq">libpq</link></title>
________________________________________________________-->
    <title><link linkend="libpq">libpq</link></title>
<!-- pgdoc-cn_end sig_en=e0b13fc5380eb77df1be0e8f962da355 -->

    <itemizedlist>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-04-01 [c1932e542] libpq: Allow IP address SANs in server certificates
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=9ebc25504a212d5d48a58cf5633010ef sig_cn_org=d5bf613eef16e759621ea56df85362d8 source=15.7 
      <para>
       Allow <acronym>IP</acronym> address matching against a server
       certificate's Subject Alternative Name (Jacob Champion)
      </para>
________________________________________________________-->
      <para>
       允许根据服务器证书的主体替代名称（Jacob Champion）匹配<acronym>IP</acronym>地址
      </para>
<!-- pgdoc-cn_end sig_en=9ebc25504a212d5d48a58cf5633010ef -->
     </listitem>

<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
2022-03-29 [ebc8b7d44] Enable SSL library detection via PQsslAttribute()
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=49023faa17c4503c77bd0aefadfcc3bc sig_cn_org=9e4bed904b4e728bb58d0d8ec16ab113 source=15.7 
      <para>
       Allow <function>PQsslAttribute()</function> to report the
       <acronym>SSL</acronym> library type without requiring a libpq
       connection (Jacob Champion)
      </para>
________________________________________________________-->
      <para>
       允许<function>PQsslAttribute()</function>在不需要libpq连接的情况下报告<acronym>SSL</acronym>库类型（Jacob Champion）
      </para>
<!-- pgdoc-cn_end sig_en=49023faa17c4503c77bd0aefadfcc3bc -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-18 [5987feb70] Make PQcancel use the PGconn's tcp_user_timeout and keep
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=70c27c6e60bdda854ad49e7ce54de408 sig_cn_org=b939d9c1e3da03b92a561695e965b610 source=15.7 
      <para>
       Change query cancellations sent by the client to use the same
       <acronym>TCP</acronym> settings as normal client connections
       (Jelte Fennema)
      </para>
________________________________________________________-->
      <para>
       将客户端发送的查询取消更改为使用与正常客户端连接相同的<acronym>TCP</acronym>设置
       （Jelte Fennema）
      </para>
<!-- pgdoc-cn_end sig_en=70c27c6e60bdda854ad49e7ce54de408 -->

<!-- pgdoc-cn_start sig_en=20a22ed9293b5686e0a6677ef3a0723a sig_cn_org=3253282467c01496c5643c41563c6803 source=15.7 
      <para>
       This allows configured <acronym>TCP</acronym> timeouts to apply
       to query cancel connections.
      </para>
________________________________________________________-->
      <para>
       这允许配置的<acronym>TCP</acronym>超时应用于查询取消连接。
      </para>
<!-- pgdoc-cn_end sig_en=20a22ed9293b5686e0a6677ef3a0723a -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-18 [ce1e7a2f7] Don't let libpq "event" procs break the state of PGresul
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-18 [2e372869a] Don't let libpq PGEVT_CONNRESET callbacks break a PGconn
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=ee6197daae43e40be4b7c5ce69fe3123 sig_cn_org=a2bd9ff20a3d69a26b3b773d0a731d8c source=15.7 
      <para>
       Prevent libpq event callback failures from forcing an error result
       (Tom Lane)
      </para>
________________________________________________________-->
      <para>
       防止libpq事件回调失败导致错误结果（Tom Lane）
      </para>
<!-- pgdoc-cn_end sig_en=ee6197daae43e40be4b7c5ce69fe3123 -->
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=a0fec79636e7958867d23932d63e6c9e sig_cn_org=71c05c96f3c4662d985627c174fcbe6c source=15.7 
    <title>Client Applications</title>
________________________________________________________-->
    <title>客户端应用程序</title>
<!-- pgdoc-cn_end sig_en=a0fec79636e7958867d23932d63e6c9e -->

    <itemizedlist>

<!--
Author: Tatsuo Ishii <ishii@postgresql.org>
2022-03-23 [4a39f87ac] Allow pgbench to retry in some cases.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=78f502baa210ffc88d1ef72f690c1f37 sig_cn_org=f2d155aa3202a941796ba1136a871d79 source=15.7 
      <para>
       Allow <link
       linkend="pgbench"><application>pgbench</application></link> to
       retry after serialization and deadlock failures (Yugo Nagata,
       Marina Polyakova)
      </para>
________________________________________________________-->
      <para>
       允许<link
       linkend="pgbench"><application>pgbench</application></link>在序列化和死锁失败后重试（Yugo Nagata，
       Marina Polyakova）
      </para>
<!-- pgdoc-cn_end sig_en=78f502baa210ffc88d1ef72f690c1f37 -->
     </listitem>

    </itemizedlist>

     <sect4>
      <title><xref linkend="app-psql"/></title>

      <itemizedlist>

<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2021-07-14 [eec57115e] In psql \copy from, send data to server in larger chunks
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=1ec5f20ad9ea5d7cef41adadc3dbc833 sig_cn_org=fc017eedd588a8e2323af64087bb461d source=15.7 
       <para>
        Improve performance
        of <application>psql</application>'s <command>\copy</command>
        command, by sending data in larger chunks (Heikki Linnakangas)
       </para>
________________________________________________________-->
       <para>
        提高<application>psql</application>的<command>\copy</command>命令的性能，通过以更大的数据块发送数据（Heikki Linnakangas）
       </para>
<!-- pgdoc-cn_end sig_en=1ec5f20ad9ea5d7cef41adadc3dbc833 -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-07 [3e707fbb4] psql: add \dconfig command to show server's configuratio
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-11 [5e70d8b5d] Tweak the default behavior of psql's \dconfig.
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-13 [139d46ee2] Further tweak the default behavior of psql's \dconfig.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=07dcddc5b3eec1b33f75503d58a03dc3 sig_cn_org=93e2c5f56ca9c1dcc30e56aa6448c6fc source=15.7 
       <para>
        Add <command>\dconfig</command> command to report server variables
        (Mark Dilger, Tom Lane)
       </para>
________________________________________________________-->
       <para>
        添加<command>\dconfig</command>命令以报告服务器变量（Mark Dilger，Tom Lane）
       </para>
<!-- pgdoc-cn_end sig_en=07dcddc5b3eec1b33f75503d58a03dc3 -->

<!-- pgdoc-cn_start sig_en=e4350a223e6395312ff0c39610a29d4e sig_cn_org=3abe9653e301ca27b14a054c0e331ff1 source=15.7 
       <para>
        This is similar to the server-side <command>SHOW</command>
        command, but it can process patterns to show multiple variables
        conveniently.
       </para>
________________________________________________________-->
       <para>
        这类似于服务器端的<command>SHOW</command>命令，但它可以处理模式以便方便地显示多个变量。
       </para>
<!-- pgdoc-cn_end sig_en=e4350a223e6395312ff0c39610a29d4e -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-20 [33d3eeadb] Add a \getenv command to psql.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=fce789e29f6b4227c404f2f213ffffa9 sig_cn_org=60e793cb93c05777460ddc20d6f59d70 source=15.7 
       <para>
        Add <command>\getenv</command> command
        to assign the value of an environment variable to a
        <application>psql</application> variable (Tom Lane)
       </para>
________________________________________________________-->
       <para>
        添加<command>\getenv</command>命令，将环境变量的值分配给<application>psql</application>变量（Tom Lane）
       </para>
<!-- pgdoc-cn_end sig_en=fce789e29f6b4227c404f2f213ffffa9 -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-06 [328dfbdab] Extend psql's \lo_list/\dl to be able to print large obj
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=5199bc3c90d150d8ab1a4eba2214018f sig_cn_org=97612ee16896dc4dcb7d9a4523a54492 source=15.7 
       <para>
        Add <literal>+</literal> option to the
        <literal>\lo_list</literal> and <literal>\dl</literal> commands to
        show large-object privileges (Pavel Luzanov)
       </para>
________________________________________________________-->
       <para>
        为<literal>\lo_list</literal>和<literal>\dl</literal>命令添加<literal>+</literal>选项，
        以显示大对象权限（Pavel Luzanov）
       </para>
<!-- pgdoc-cn_end sig_en=5199bc3c90d150d8ab1a4eba2214018f -->
      </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2021-07-13 [7c09d2797] Add PSQL_WATCH_PAGER for psql's \watch command.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=77faf6aed92e7b41a275a33331be7178 sig_cn_org=9957c6b6daf32aad6b57efd2e6d308d2 source=15.7 
       <para>
        Add a pager option for the <command>\watch</command>
        command (Pavel Stehule, Thomas Munro)
       </para>
________________________________________________________-->
       <para>
        为<command>\watch</command>命令添加一个分页选项（Pavel Stehule, Thomas Munro）
       </para>
<!-- pgdoc-cn_end sig_en=77faf6aed92e7b41a275a33331be7178 -->

<!-- pgdoc-cn_start sig_en=fc950d9549200dfe66207b31c701d628 sig_cn_org=5a314009a383a6f96268b4396980e6fd source=15.7 
       <para>
        This is only supported on Unix and is controlled by the
        <envar>PSQL_WATCH_PAGER</envar> environment variable.
       </para>
________________________________________________________-->
       <para>
        仅在Unix上支持，并由<envar>PSQL_WATCH_PAGER</envar>环境变量控制。
       </para>
<!-- pgdoc-cn_end sig_en=fc950d9549200dfe66207b31c701d628 -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-01 [83884682f] psql: include intra-query "- -" comments in what's sent t
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-01 [c2f654930] psql: treat "- -" comments between queries as separate hi
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=a09deca0a853c998a6f3af4f9f23520f sig_cn_org=176a58a78b078ccf27b83cd2da06f257 source=15.7 
       <para>
        Make <application>psql</application> include intra-query double-hyphen
        comments in queries sent to the server (Tom Lane, Greg Nancarrow)
       </para>
________________________________________________________-->
       <para>
        让<application>psql</application>在发送到服务器的查询中包含查询内部的双破折号注释
        (Tom Lane, Greg Nancarrow)
       </para>
<!-- pgdoc-cn_end sig_en=a09deca0a853c998a6f3af4f9f23520f -->

<!-- pgdoc-cn_start sig_en=5f353f7e51c9d454e6732f12f862bef0 sig_cn_org=6a936cba7623a590642d11866d1edb5d source=15.7 
       <para>
        Previously such comments were removed from the query
        before being sent.  Double-hyphen comments that are before any
        query text are not sent, and are not recorded as separate
        <application>psql</application> history entries.
       </para>
________________________________________________________-->
       <para>
        以前，这样的注释在发送之前会被删除。在任何查询文本之前的双破折号注释不会被发送，
		也不会被记录为单独的<application>psql</application>历史条目。
       </para>
<!-- pgdoc-cn_end sig_en=5f353f7e51c9d454e6732f12f862bef0 -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-01 [3d858af07] psql: initialize comment-begin setting to a useful value
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=40c68da4f94ff7dcd31d9bede3249750 sig_cn_org=e0861244dada9819e372bb7a4ba6141b source=15.7 
       <para>
        Adjust <application>psql</application> so
        that <application>Readline</application>'s
        meta-<literal>#</literal> command will insert a double-hyphen
        comment marker (Tom Lane)
       </para>
________________________________________________________-->
       <para>
        调整<application>psql</application>，使得<application>Readline</application>的
        meta-<literal>#</literal>命令将插入双破折号注释标记（Tom Lane）
       </para>
<!-- pgdoc-cn_end sig_en=40c68da4f94ff7dcd31d9bede3249750 -->

<!-- pgdoc-cn_start sig_en=e8ad5b3963838ee47865b31d18885a64 sig_cn_org=5f6d63f7557737c48392ae854b2e6e7e source=15.7 
       <para>
        Previously a pound marker was inserted, unless the user had taken
        the trouble to configure a non-default comment marker.
       </para>
________________________________________________________-->
       <para>
        以前会插入一个井号标记，除非用户费心配置了非默认的注释标记。
       </para>
<!-- pgdoc-cn_end sig_en=e8ad5b3963838ee47865b31d18885a64 -->
      </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-04-04 [7844c9918] psql: Show all query results by default
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=2040269419ac75d7f94ae44a16e9a71f sig_cn_org=c33546c3e344366fb75c9cceebf45a3d source=15.7 
       <para>
        Make <application>psql</application> output all results when multiple
        queries are passed to the server at once (Fabien Coelho)
       </para>
________________________________________________________-->
       <para>
        使<application>psql</application>在一次向服务器传递多个查询时输出所有结果（Fabien Coelho）
       </para>
<!-- pgdoc-cn_end sig_en=2040269419ac75d7f94ae44a16e9a71f -->

<!-- pgdoc-cn_start sig_en=aecf29338d32f5dacbc8e46038a73e03 sig_cn_org=a7e385495a662ed72b93f80667dd3f69 source=15.7 
       <para>
        Previously, only the last query result was displayed.  The old
        behavior can be restored by setting
        the <literal>SHOW_ALL_RESULTS</literal> <application>psql</application>
        variable to <literal>off</literal>.
       </para>
________________________________________________________-->
       <para>
        以前，只显示最后一个查询结果。可以通过将<literal>SHOW_ALL_RESULTS</literal> <application>psql</application>变量设置为<literal>off</literal>来恢复旧行为。
       </para>
<!-- pgdoc-cn_end sig_en=aecf29338d32f5dacbc8e46038a73e03 -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-06-15 [a3ff08e0b] Tweak behavior of psql - -single-transaction depending
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=ec64e67e7efaeaadf78cf4ab8c30b29f sig_cn_org=89357c04078fc1bb2112b1683bebe4f4 source=15.7 
       <para>
        After an error is detected
        in <option>-&minus;single-transaction</option> mode, change the
        final <command>COMMIT</command> command
        to <command>ROLLBACK</command> only
        if <varname>ON_ERROR_STOP</varname> is set (Michael Paquier)
       </para>
________________________________________________________-->
       <para>
        在检测到错误后，在<option>--single-transaction</option>模式下，将最终的<command>COMMIT</command>命令更改为只有在设置了<varname>ON_ERROR_STOP</varname>时才更改为<command>ROLLBACK</command>（Michael Paquier）
       </para>
<!-- pgdoc-cn_end sig_en=ec64e67e7efaeaadf78cf4ab8c30b29f -->

<!-- pgdoc-cn_start sig_en=1632383ddc44974ead6a4ec6f61d1e1b sig_cn_org=99d0206e78c51005f777525a46a8cb2b source=15.7 
       <para>
        Previously, detection of an error in a <option>-c</option> command
        or <option>-f</option> script file would lead to
        issuing <command>ROLLBACK</command> at the end, regardless of the
        value of <varname>ON_ERROR_STOP</varname>.
       </para>
________________________________________________________-->
       <para>
        以前，在<option>-c</option>命令或<option>-f</option>脚本文件中检测到错误会导致在结尾处无论<varname>ON_ERROR_STOP</varname>的值如何都会发出<command>ROLLBACK</command>。
       </para>
<!-- pgdoc-cn_end sig_en=1632383ddc44974ead6a4ec6f61d1e1b -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-08-10 [e2ce88b58] Add tab completion for DECLARE .. ASENSITIVE in psql
Author: Michael Paquier <michael@paquier.xyz>
2021-08-25 [346511313] Add tab completion for EXPLAIN .. EXECUTE in psql
Author: Michael Paquier <michael@paquier.xyz>
2021-08-30 [d3fa87657] Add more tab completion support for ALTER TABLE ADD in p
Author: Michael Paquier <michael@paquier.xyz>
2021-08-31 [f2bbadce6] Add tab completion for data types after ALTER TABLE ADD
Author: Fujii Masao <fujii@postgresql.org>
2021-09-01 [b0c066297] Improve tab-completion for CREATE PUBLICATION.
Author: Fujii Masao <fujii@postgresql.org>
2021-10-05 [0b0d277c3] psql: Improve tab-completion for LOCK TABLE.
Author: Michael Paquier <michael@paquier.xyz>
2021-11-05 [a5b336b8b] Improve psql tab completion for COMMENT
Author: Michael Paquier <michael@paquier.xyz>
2021-11-19 [0cd6d3b3c] Improve psql tab completion for transforms, domains and
Author: Michael Paquier <michael@paquier.xyz>
2021-11-29 [f44ceb46e] Improve psql tab completion for views, FDWs, sequences a
Author: Michael Paquier <michael@paquier.xyz>
2021-12-01 [9270778f4] Improve psql tab completion for various DROP commands
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-03 [dfe67c0e8] Tab completion: don't offer valid constraints in VALIDAT
Author: Fujii Masao <fujii@postgresql.org>
2022-01-15 [74527c3e0] Add tab-completion for CREATE FOREIGN TABLE.
Author: Peter Eisentraut <peter@eisentraut.org>
2022-01-27 [fefce9ef9] psql: Add tab completion for ALTER COLLATION / REFRESH V
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-01-28 [95787e849] Tab-complete ALTER PUBLICATION ADD TABLE with list of ta
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-30 [02b8048ba] psql: improve tab-complete's handling of variant SQL nam
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-01 [020258fbd] Treat case of tab-completion keywords a bit more careful
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-09 [f0cd9097c] Further tweaks for psql's new tab-completion logic.
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-03-20 [7fa3db367] psql: handle tab completion of timezone names after "SET
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2022-03-25 [2d2232933] Update tab-completion for CREATE PUBLICATION with sequen
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-13 [b5607b074] Fix case sensitivity in psql's tab completion for GUC na
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=7b2af61feb1c081891f10b2453b03fba sig_cn_org=73b195450a1015f69eac3432e57f4db0 source=15.7 
       <para>
        Improve <application>psql</application>'s tab completion (Shinya
        Kato, Dagfinn Ilmari Mannsåker, Peter Smith, Koyu Tanigawa,
        Ken Kato, David Fetter, Haiying Tang, Peter Eisentraut, Álvaro
        Herrera, Tom Lane, Masahiko Sawada)
       </para>
________________________________________________________-->
       <para>
        改进<application>psql</application>的tab补全（Shinya
        Kato, Dagfinn Ilmari Mannsåker, Peter Smith, Koyu Tanigawa,
        Ken Kato, David Fetter, Haiying Tang, Peter Eisentraut, Álvaro
        Herrera, Tom Lane, Masahiko Sawada）
       </para>
<!-- pgdoc-cn_end sig_en=7b2af61feb1c081891f10b2453b03fba -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-16 [cf0cab868] Remove psql support for server versions preceding 9.2.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=c339fc45c0fd0b2baab1c16e82f91a8a sig_cn_org=f17e76ca880dfc4f85de48b66faeefde source=15.7 
       <para>
        Limit support of <application>psql</application>'s backslash
        commands to servers running <productname>PostgreSQL</productname>
        9.2 or later (Tom Lane)
       </para>
________________________________________________________-->
       <para>
        限制<application>psql</application>的反斜杠命令支持到运行<productname>PostgreSQL</productname>
        9.2或更高版本的服务器（Tom Lane）
       </para>
<!-- pgdoc-cn_end sig_en=c339fc45c0fd0b2baab1c16e82f91a8a -->

<!-- pgdoc-cn_start sig_en=1f0b572ad375fc9447ff3ca1a8ade7ce sig_cn_org=afd15cc8a65c8273c1d9f876195470cf source=15.7 
       <para>
        Remove code that was only used when running with an older server.
        Commands that do not require any version-specific adjustments
        compared to 9.2 will still work.
       </para>
________________________________________________________-->
       <para>
        删除仅在旧服务器上运行时使用的代码。与9.2相比不需要任何特定版本调整的命令仍将有效。
       </para>
<!-- pgdoc-cn_end sig_en=1f0b572ad375fc9447ff3ca1a8ade7ce -->
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><link linkend="app-pgdump"><application>pg_dump</application></link></title>

     <itemizedlist>

<!--
Author: Noah Misch <noah@leadboat.com>
2021-06-28 [a7a7be1f2] Dump public schema ownership and security labels.
Author: Noah Misch <noah@leadboat.com>
2021-06-28 [7ac10f692] Dump COMMENT ON SCHEMA public.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=4c2bbb7e7dcd6dfdb4c0999a2ac36e1e sig_cn_org=c4dab7465b31c9e2c1b425b6be36c462 source=15.7 
       <para>
        Make <application>pg_dump</application> dump
        <literal>public</literal> schema ownership changes and security
        labels (Noah Misch)
       </para>
________________________________________________________-->
       <para>
        使<application>pg_dump</application>命令转储<literal>public</literal>模式所有权更改和安全标签（Noah Misch）
       </para>
<!-- pgdoc-cn_end sig_en=4c2bbb7e7dcd6dfdb4c0999a2ac36e1e -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-06 [989596152] Avoid per-object queries in performance-critical paths i
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-06 [be85727a3] Use PREPARE/EXECUTE for repetitive per-object queries in
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-31 [d5e8930f5] pg_dump: minor performance improvements from eliminating
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=14bf81cd24b9717c35f230f64790f33b sig_cn_org=91ed2ab339eef6f4cc6264e39173c0d7 source=15.7 
       <para>
        Improve performance of dumping databases with many objects
        (Tom Lane)
       </para>
________________________________________________________-->
       <para>
        提高转储具有许多对象的数据库性能
        (Tom Lane)
       </para>
<!-- pgdoc-cn_end sig_en=14bf81cd24b9717c35f230f64790f33b -->

<!-- pgdoc-cn_start sig_en=b4273fa4da95189ede13ffccedf5c2db sig_cn_org=e7eb6b63ab8ded3308c2dc2972707649 source=15.7 
       <para>
        This will also improve the performance of <link
        linkend="pgupgrade"><application>pg_upgrade</application></link>.
       </para>
________________________________________________________-->
       <para>
        这也将提高<link
        linkend="pgupgrade"><application>pg_upgrade</application></link>的性能。
       </para>
<!-- pgdoc-cn_end sig_en=b4273fa4da95189ede13ffccedf5c2db -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-06 [65aaed22a] Account for TOAST data while scheduling parallel dumps.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=0e907453b258e5e7be42327f0f1e0af0 sig_cn_org=e4c115fb2efebbd20597a6da2200ae23 source=15.7 
       <para>
        Improve parallel <application>pg_dump</application>'s performance
        for tables with large <acronym>TOAST</acronym> tables (Tom Lane)
       </para>
________________________________________________________-->
       <para>
        提高具有大型<acronym>TOAST</acronym>表的表的并行<application>pg_dump</application>性能（Tom Lane）
       </para>
<!-- pgdoc-cn_end sig_en=0e907453b258e5e7be42327f0f1e0af0 -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-01-17 [215862886] Add support for - -no-table-access-method in pg_{dump,dum
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=a54e6b82b778aa338f8774432c004b62 sig_cn_org=bd9e1f6db88bf1f3a0d1e84e1e8a18b2 source=15.7 
       <para>
        Add dump/restore option <option>-&minus;no-table-access-method</option>
        to force restore to only use the default table access method
        (Justin Pryzby)
       </para>
________________________________________________________-->
       <para>
        添加dump/restore选项<option>--no-table-access-method</option>，
        强制恢复只使用默认的表访问方法（Justin Pryzby）
       </para>
<!-- pgdoc-cn_end sig_en=a54e6b82b778aa338f8774432c004b62 -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-14 [30e7c175b] Remove pg_dump/pg_dumpall support for dumping from pre-9
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=4d0a392f0a551a310c0f4cec03ffbd03 sig_cn_org=0d66270514dac1ca2a9306a956eedc5a source=15.7 
       <para>
        Limit support of <application>pg_dump</application> and <link
        linkend="app-pg-dumpall"><application>pg_dumpall</application></link>
        to servers running <productname>PostgreSQL</productname> 9.2 or
        later (Tom Lane)
       </para>
________________________________________________________-->
       <para>
        限制对运行<application>pg_dump</application>和<link
        linkend="app-pg-dumpall"><application>pg_dumpall</application></link>
        的支持，仅限于运行<productname>PostgreSQL</productname> 9.2或更高版本（Tom Lane）
       </para>
<!-- pgdoc-cn_end sig_en=4d0a392f0a551a310c0f4cec03ffbd03 -->
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=1788929f4ef70ee9cb769ffde99cc0de sig_cn_org=01e1e1643d29f23f0a82b7a9978cb2a2 source=15.7 
    <title>Server Applications</title>
________________________________________________________-->
    <title>服务器应用</title>
<!-- pgdoc-cn_end sig_en=1788929f4ef70ee9cb769ffde99cc0de -->

    <itemizedlist>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-20 [3500ccc39] Support base backup targets.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=9de601cd65325917b05ff317d009127c sig_cn_org=c366c86fb14008b8f6112e660423bf56 source=15.7 
      <para>
       Add new <link
       linkend="app-pgbasebackup"><application>pg_basebackup</application></link>
       option <option>-&minus;target</option> to control the base backup location
       (Robert Haas)
      </para>
________________________________________________________-->
      <para>
       添加新的<link
       linkend="app-pgbasebackup"><application>pg_basebackup</application></link>
       选项<option>--target</option>以控制基本备份位置
       (Robert Haas)
      </para>
<!-- pgdoc-cn_end sig_en=9de601cd65325917b05ff317d009127c -->

<!-- pgdoc-cn_start sig_en=938fcdcdc5e700aa1043ae945e67df95 sig_cn_org=14f8365ceb0ae344496b8d97806517a2 source=15.7 
      <para>
       The new options are <literal>server</literal> to write the
       backup locally and <literal>blackhole</literal> to discard the
       backup (for testing).
      </para>
________________________________________________________-->
      <para>
       新选项是<literal>server</literal>用于将备份写入本地，<literal>blackhole</literal>用于丢弃备份（用于测试）。
      </para>
<!-- pgdoc-cn_end sig_en=938fcdcdc5e700aa1043ae945e67df95 -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-11 [751b8d23b] pg_basebackup: Allow client-side LZ4 (de)compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-03-08 [7cf085f07] Add support for zstd base backup compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-01-24 [0ad803291] Server-side gzip compression.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=8d2ac4ff1272d80950f84fdc9727879a sig_cn_org=5815b764464e72f47e38531a0fc60bad source=15.7 
      <para>
       Allow <application>pg_basebackup</application> to do server-side
       gzip, LZ4, and Zstandard compression and client-side LZ4 and
       Zstandard compression of base backup files (Dipesh Pandit,
       Jeevan Ladhe)
      </para>
________________________________________________________-->
      <para>
       允许<application>pg_basebackup</application>对基本备份文件进行服务器端gzip、LZ4和Zstandard压缩，
	   并对客户端进行LZ4和Zstandard压缩（Dipesh Pandit，Jeevan Ladhe）
      </para>
<!-- pgdoc-cn_end sig_en=8d2ac4ff1272d80950f84fdc9727879a -->

<!-- pgdoc-cn_start sig_en=84d7dc82fed6185fc13661cad16d80b5 sig_cn_org=e13c718099921fd440670fa3f0d93c83 source=15.7 
      <para>
       Client-side <literal>gzip</literal> compression was already
       supported.
      </para>
________________________________________________________-->
      <para>
       客户端端<literal>gzip</literal>压缩已经被支持。
      </para>
<!-- pgdoc-cn_end sig_en=84d7dc82fed6185fc13661cad16d80b5 -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-28 [d45099425] Allow server-side compression to be used with -Fp.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=6cbe307046c46e503ed7c87c853ab8ea sig_cn_org=4bbaf562a645e332b4d4e2cee7b52f56 source=15.7 
      <para>
       Allow <application>pg_basebackup</application> to compress on
       the server side and decompress on the client side before storage
       (Dipesh Pandit)
      </para>
________________________________________________________-->
      <para>
       允许<application>pg_basebackup</application>在服务器端进行压缩，
       并在客户端进行解压缩后再存储（Dipesh Pandit）
      </para>
<!-- pgdoc-cn_end sig_en=6cbe307046c46e503ed7c87c853ab8ea -->

<!-- pgdoc-cn_start sig_en=9b01d6615a192ec7b03ec80a0ae04009 sig_cn_org=5b244ffeb02386ab2815f9fd3c9a8dba source=15.7 
      <para>
       This is accomplished by specifying compression on the server side
       and plain output format.
      </para>
________________________________________________________-->
      <para>
       这是通过在服务器端指定压缩和纯文本输出格式来实现的。
      </para>
<!-- pgdoc-cn_end sig_en=9b01d6615a192ec7b03ec80a0ae04009 -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-01-21 [5c649fe15] Extend the options of pg_basebackup to control compressi
Author: Robert Haas <rhaas@postgresql.org>
2022-01-24 [0ad803291] Server-side gzip compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-01-25 [e1f860f13] Tidy up a few cosmetic issues related to pg_basebackup.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=97e335b31c92983e24f645d3a96f8dd6 sig_cn_org=d8ac5615456a84deed23113db5f7f356 source=15.7 
      <para>
       Allow <application>pg_basebackup</application>'s
       <option>-&minus;compress</option> option to control the compression
       location (server or client), compression method, and compression
       options (Michael Paquier, Robert Haas)
      </para>
________________________________________________________-->
      <para>
       允许<application>pg_basebackup</application>的
       <option>--compress</option>选项控制压缩
       位置（服务器或客户端）、压缩方法和压缩
       选项（Michael Paquier, Robert Haas）
</para>
<!-- pgdoc-cn_end sig_en=97e335b31c92983e24f645d3a96f8dd6 -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-11-05 [babbbb595] Add support for LZ4 compression in pg_receivewal
Author: Michael Paquier <michael@paquier.xyz>
2022-04-13 [042a923ad] Rework compression options of pg_receivewal
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=3984eb9a502c821edcd325dfeb941a7c sig_cn_org=cec9361c7dff942979ace2214f4fe588 source=15.7 
      <para>
       Add the LZ4 compression method to <link
       linkend="app-pgreceivewal"><application>pg_receivewal</application></link>
       (Georgios Kokolatos)
      </para>
________________________________________________________-->
      <para>
       将LZ4压缩方法添加到<link
       linkend="app-pgreceivewal"><application>pg_receivewal</application></link>
       (Georgios Kokolatos)
      </para>
<!-- pgdoc-cn_end sig_en=3984eb9a502c821edcd325dfeb941a7c -->

<!-- pgdoc-cn_start sig_en=7f814875bd3f2101cd8cad6b820b375b sig_cn_org=343beabb969ad38f9e56446645b54205 source=15.7 
      <para>
       This is enabled via <literal>-&minus;compress=lz4</literal> and requires
       binaries to be built using <option>-&minus;with-lz4</option>.
      </para>
________________________________________________________-->
      <para>
       这是通过<literal>--compress=lz4</literal>启用的，需要使用<option>--with-lz4</option>构建二进制文件。
      </para>
<!-- pgdoc-cn_end sig_en=7f814875bd3f2101cd8cad6b820b375b -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-11-04 [d62bcc8b0] Rework compression options of pg_receivewal
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=b6326c26522875e49d8d7c6b7b574cbb sig_cn_org=d243a44bde95ea22878e60b98daaaedd source=15.7 
      <para>
       Add additional capabilities to
       <application>pg_receivewal</application>'s
       <option>-&minus;compress</option> option (Georgios Kokolatos)
      </para>
________________________________________________________-->
      <para>
       为<application>pg_receivewal</application>的
       <option>--compress</option>选项添加额外功能（Georgios Kokolatos）
      </para>
<!-- pgdoc-cn_end sig_en=b6326c26522875e49d8d7c6b7b574cbb -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-10-26 [f61e1dd2c] Allow pg_receivewal to stream from a slot's restart LSN
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=9b4f09d5cf883ce24637c48d5813ea61 sig_cn_org=8a840e66a834d889961c8e1e6f5fb9da source=15.7 
      <para>
       Improve <application>pg_receivewal</application>'s ability to
       restart at the proper <acronym>WAL</acronym> location (Ronan
       Dunklau)
      </para>
________________________________________________________-->
      <para>
       提高<application>pg_receivewal</application>重新启动时定位正确<acronym>WAL</acronym>位置的能力（Ronan
       Dunklau）
      </para>
<!-- pgdoc-cn_end sig_en=9b4f09d5cf883ce24637c48d5813ea61 -->

<!-- pgdoc-cn_start sig_en=71e3a05110101a1620cdafd91c6e30fd sig_cn_org=2df3131034402a3184f3d1173fd07feb source=15.7 
      <para>
       Previously, <application>pg_receivewal</application> would start
       based on the <acronym>WAL</acronym> file stored in the local archive
       directory, or at the sending server's current <acronym>WAL</acronym>
       flush location.  With this change, if the sending server is running
       Postgres 15 or later, the local archive directory is empty, and
       a replication slot is specified, the replication slot's restart
       point will be used.
      </para>
________________________________________________________-->
      <para>
       以前，<application>pg_receivewal</application>会基于本地归档目录中存储的<acronym>WAL</acronym>文件启动，
       或者基于发送服务器当前的<acronym>WAL</acronym>刷新位置。随着这个改变，如果发送服务器正在运行
       Postgres 15或更高版本，本地归档目录为空，并且指定了复制槽，则将使用复制槽的重启点。
      </para>
<!-- pgdoc-cn_end sig_en=71e3a05110101a1620cdafd91c6e30fd -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-04-07 [0d5c38757] Add option - -config-file to pg_rewind
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=2d9e5bd475803672bcec157226d26b00 sig_cn_org=95d4a4d6ff7244a40851458a280857cb source=15.7 
      <para>
       Add <link
       linkend="app-pgrewind"><application>pg_rewind</application></link>
       option <option>-&minus;config-file</option> to simplify use when server
       configuration files are stored outside the data directory (Gunnar
       Bluth)
      </para>
________________________________________________________-->
      <para>
       添加<link
       linkend="app-pgrewind"><application>pg_rewind</application></link>
       选项<option>--config-file</option>，以简化在服务器配置文件存储在数据目录之外时的使用（Gunnar
       Bluth）
      </para>
<!-- pgdoc-cn_end sig_en=2d9e5bd475803672bcec157226d26b00 -->
     </listitem>

    </itemizedlist>

    <sect4>
     <title><link linkend="pgupgrade"><application>pg_upgrade</application></link></title>

     <itemizedlist>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-02-06 [38bfae365] pg_upgrade: Move all the files generated internally to a
Author: Michael Paquier <michael@paquier.xyz>
2022-02-15 [a00849630] Fix thinko with subdirectories generated by pg_upgrade f
Author: Michael Paquier <michael@paquier.xyz>
2022-09-13 [f5047c129] Move any remaining files generated by pg_upgrade into an
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=ca355fa3990ec98a3c95d218778c0ff4 sig_cn_org=27377f6072a56fc2b6c931b4e8b11d27 source=15.7 
       <para>
        Store <application>pg_upgrade</application>'s log and
        temporary files in a subdirectory of the new cluster called
        <filename>pg_upgrade_output.d</filename> (Justin Pryzby)
       </para>
________________________________________________________-->
       <para>
        将<application>pg_upgrade</application>的日志和临时文件存储在新集群的一个子目录中，该子目录名为<filename>pg_upgrade_output.d</filename>（Justin Pryzby）
       </para>
<!-- pgdoc-cn_end sig_en=ca355fa3990ec98a3c95d218778c0ff4 -->

<!-- pgdoc-cn_start sig_en=930e24e2548251998f09d36266c36135 sig_cn_org=0f588c478441f0e36b1505fe425b27af source=15.7 
       <para>
        Previously such files were left in the current directory,
        requiring manual cleanup.  Now they are automatically removed on
        successful completion of <application>pg_upgrade</application>.
       </para>
________________________________________________________-->
       <para>
        以前这些文件被留在当前目录中，需要手动清理。现在在<application>pg_upgrade</application>成功完成后，它们会被自动删除。
       </para>
<!-- pgdoc-cn_end sig_en=930e24e2548251998f09d36266c36135 -->
      </listitem>

<!--
Author: Andres Freund <andres@anarazel.de>
2022-02-21 [27b02e070] pg_upgrade: Don't print progress status when output is n
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=3e76a91f8bcd042dd99e7cc584abf80a sig_cn_org=fc7498963cd0991a69c624d19c502e80 source=15.7 
       <para>
        Disable default status reporting during
        <application>pg_upgrade</application> operation if the output is
        not a terminal (Andres Freund)
       </para>
________________________________________________________-->
       <para>
        在<application>pg_upgrade</application>操作期间，如果输出不是终端，则禁用默认状态报告（Andres Freund）
       </para>
<!-- pgdoc-cn_end sig_en=3e76a91f8bcd042dd99e7cc584abf80a -->

<!-- pgdoc-cn_start sig_en=a15b53fcde0ad2afc24b039de0fa18e5 sig_cn_org=a6056885057044cd82178374deea1453 source=15.7 
       <para>
        The status reporting output can be enabled for non-tty usage by
        using <option>-&minus;verbose</option>.
       </para>
________________________________________________________-->
       <para>
        状态报告输出可以通过使用<option>--verbose</option>来启用非tty使用。
       </para>
<!-- pgdoc-cn_end sig_en=a15b53fcde0ad2afc24b039de0fa18e5 -->
      </listitem>

<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
2022-03-24 [26ebb0e28] List offending databases in pg_upgrade datallowconn chec
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=7a31fe8d4ecfa8882e31fa158ff297fd sig_cn_org=0c30213b2ee77aee5e1222048f77fe15 source=15.7 
       <para>
        Make <application>pg_upgrade</application> report all databases
        with invalid connection settings (Jeevan Ladhe)
       </para>
________________________________________________________-->
       <para>
        使<application>pg_upgrade</application>报告所有具有无效连接设置的数据库（Jeevan Ladhe）
       </para>
<!-- pgdoc-cn_end sig_en=7a31fe8d4ecfa8882e31fa158ff297fd -->

<!-- pgdoc-cn_start sig_en=13d64e520083d19559e4308c72d8aaec sig_cn_org=480a5b3f54d7fbc5d12703be4ae7f784 source=15.7 
       <para>
        Previously only the first database with an invalid connection
        setting was reported.
       </para>
________________________________________________________-->
       <para>
        以前只报告了第一个具有无效连接设置的数据库。
       </para>
<!-- pgdoc-cn_end sig_en=13d64e520083d19559e4308c72d8aaec -->
      </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-17 [9a974cbcb] pg_upgrade: Preserve relfilenodes and tablespace OIDs.
Author: Robert Haas <rhaas@postgresql.org>
2022-01-24 [aa0105141] pg_upgrade: Preserve database OIDs.
Author: Robert Haas <rhaas@postgresql.org>
2022-07-28 [4ab5dae94] Use TRUNCATE to preserve relfilenode for pg_largeobject
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=a6ca07fcd57faf94aec7817c35db3ff9 sig_cn_org=dfdeadb977e53051d8f9076aa99a235c source=15.7 
       <para>
        Make <application>pg_upgrade</application> preserve tablespace
        and database OIDs, as well as relation relfilenode numbers
        (Shruthi Gowda, Antonin Houska)
       </para>
________________________________________________________-->
       <para>
        使<application>pg_upgrade</application>保留表空间和数据库OID，
        以及关系relfilenode编号（Shruthi Gowda, Antonin Houska）
       </para>
<!-- pgdoc-cn_end sig_en=a6ca07fcd57faf94aec7817c35db3ff9 -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-12-18 [3d5ffccb6] Add option -N/- -no-sync to pg_upgrade
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=6bf5c655319a121310b79802ccb06754 sig_cn_org=d8e6aa0bcf9f6375f8c3e46134d3f6fb source=15.7 
       <para>
        Add a <option>-&minus;no-sync</option> option to
        <application>pg_upgrade</application> (Michael Paquier)
       </para>
________________________________________________________-->
       <para>
        添加一个<option>--no-sync</option>选项到<application>pg_upgrade</application>（Michael Paquier）
       </para>
<!-- pgdoc-cn_end sig_en=6bf5c655319a121310b79802ccb06754 -->

<!-- pgdoc-cn_start sig_en=adb8bbe166957262a080e3325d1ca22c sig_cn_org=3e85a619f0b24103f24bc61a163a5909 source=15.7 
       <para>
        This is recommended only for testing.
       </para>
________________________________________________________-->
       <para>
        这仅建议用于测试目的。
       </para>
<!-- pgdoc-cn_end sig_en=adb8bbe166957262a080e3325d1ca22c -->
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-14 [e469f0aaf] Remove pg_upgrade support for upgrading from pre-9.2 ser
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=a740d8e01555f0add909a6670b376d94 sig_cn_org=0d8662c9e9b68ac2fcc1f54a74963d58 source=15.7 
       <para>
        Limit support of <application>pg_upgrade</application> to old
        servers running <productname>PostgreSQL</productname> 9.2 or later
        (Tom Lane)
       </para>
________________________________________________________-->
       <para>
        限制<application>pg_upgrade</application>的支持范围，仅适用于运行<productname>PostgreSQL</productname> 9.2或更高版本的旧服务器（Tom Lane）
       </para>
<!-- pgdoc-cn_end sig_en=a740d8e01555f0add909a6670b376d94 -->
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><link linkend="pgwaldump"><application>pg_waldump</application></link></title>

     <itemizedlist>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2022-03-24 [127aea2a6] Add additional filtering options to pg_waldump.
Author: Thomas Munro <tmunro@postgresql.org>
2022-03-25 [52b556843] Improve command line options for pg_waldump.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=1f4f847e04ca6e41f043d70ad36c7216 sig_cn_org=3bad1dcde60c678ab11c0dd61938e590 source=15.7 
       <para>
        Allow <application>pg_waldump</application> output to be filtered by
        relation file node, block number, fork number, and full page images
        (David Christensen, Thomas Munro)
       </para>
________________________________________________________-->
       <para>
        允许<application>pg_waldump</application>输出通过关系文件节点、块号、分支号和完整页图像进行过滤
        （David Christensen，Thomas Munro）
       </para>
<!-- pgdoc-cn_end sig_en=1f4f847e04ca6e41f043d70ad36c7216 -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-12-02 [f2c52eeba] pg_waldump: Emit stats summary when interrupted by SIGIN
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=74b9102ec23e6bbdaf20ed7275eb6f4e sig_cn_org=592c80695849c50afbdd46b4db8acb24 source=15.7 
       <para>
        Make <application>pg_waldump</application> report statistics
        before an interrupted exit (Bharath Rupireddy)
       </para>
________________________________________________________-->
       <para>
        在中断退出之前，使<application>pg_waldump</application>报告统计信息（Bharath Rupireddy）
       </para>
<!-- pgdoc-cn_end sig_en=74b9102ec23e6bbdaf20ed7275eb6f4e -->

<!-- pgdoc-cn_start sig_en=b5f001c799cf94c5ef6c37b9ff84a7ec sig_cn_org=9853262c6d0dd1177d4bc3c8a6fb4a93 source=15.7 
       <para>
        For example, issuing a control-C in a terminal running
        <command>pg_waldump -&minus;stats -&minus;follow</command> will report the
        current statistics before exiting.  This does not work on Windows.
       </para>
________________________________________________________-->
       <para>
        例如，在运行<command>pg_waldump --stats --follow</command>的终端中发出控制-C命令将在退出之前报告当前统计信息。这在Windows上不起作用。
       </para>
<!-- pgdoc-cn_end sig_en=b5f001c799cf94c5ef6c37b9ff84a7ec -->
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-12-13 [c8b733c4c] Improve description of some WAL records with transaction
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=3e0277403920dc98f9c2c886251f6f84 sig_cn_org=edbb36c42e66dbbb56cf1f6f1a283fcd source=15.7 
       <para>
        Improve descriptions of some transaction <acronym>WAL</acronym>
        records reported by <application>pg_waldump</application>
        (Masahiko Sawada, Michael Paquier)
       </para>
________________________________________________________-->
       <para>
        改进<acronym>WAL</acronym>事务记录的描述，由<application>pg_waldump</application>（Masahiko Sawada, Michael Paquier）报告。
       </para>
<!-- pgdoc-cn_end sig_en=3e0277403920dc98f9c2c886251f6f84 -->
      </listitem>

<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2021-07-01 [c8bf5098c] Allow specifying pg_waldump - -rmgr option multiple times
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=0b5cad2a421c6f32debcd2b618ba6091 sig_cn_org=07417fd8ec45b4c5e629c6b5569445b9 source=15.7 
       <para>
        Allow <application>pg_waldump</application> to dump information
        about multiple resource managers (Heikki Linnakangas)
       </para>
________________________________________________________-->
       <para>
        允许<application>pg_waldump</application>来转储关于多个资源管理器的信息
        (Heikki Linnakangas)
       </para>
<!-- pgdoc-cn_end sig_en=0b5cad2a421c6f32debcd2b618ba6091 -->

<!-- pgdoc-cn_start sig_en=a92a47d8fec791c5647586180a9be36c sig_cn_org=7f6a59d8a92b1186dde354b4a9479d1e source=15.7 
       <para>
        This is enabled by specifying the <option>-&minus;rmgr</option> option
        multiple times.
       </para>
________________________________________________________-->
       <para>
        通过多次指定<option>--rmgr</option>选项来启用此功能。
       </para>
<!-- pgdoc-cn_end sig_en=a92a47d8fec791c5647586180a9be36c -->
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=33df0e6ec0677d69fcd428dc1e22ab8c sig_cn_org=eaf41b7a0baa417b630bb3fd438f3dcf source=15.7 
    <title>Documentation</title>
________________________________________________________-->
    <title>文档</title>
<!-- pgdoc-cn_end sig_en=33df0e6ec0677d69fcd428dc1e22ab8c -->

    <itemizedlist>

<!--
Author: Fujii Masao <fujii@postgresql.org>
2021-10-05 [f6b5d05ba] doc: Document pg_encoding_to_char() and pg_char_to_encod
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=fada44050adcce6bdde7bdef86d6e721 sig_cn_org=d4f8afb13b490ee7ac624a3f1ad2bcb7 source=15.7 
      <para>
       Add documentation for <link
       linkend="functions-info-catalog-table"><function>pg_encoding_to_char()</function></link>
       and <function>pg_char_to_encoding()</function> (Ian Lawrence
       Barwick)
      </para>
________________________________________________________-->
      <para>
       为<link linkend="functions-info-catalog-table"><function>pg_encoding_to_char()</function></link>
       和<function>pg_char_to_encoding()</function>（Ian Lawrence Barwick）添加文档
      </para>
<!-- pgdoc-cn_end sig_en=fada44050adcce6bdde7bdef86d6e721 -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-10-09 [2ae5d72f0] Doc: improve documentation for ^@ starts-with operator.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=0feef0956891828dbfc8f2028a3688e1 sig_cn_org=fbb67a267e560958f384f3766ce8b964 source=15.7 
      <para>
       Document the <link
       linkend="functions-string-other"><literal>^@</literal></link>
       starts-with operator (Tom Lane)
      </para>
________________________________________________________-->
      <para>
       文档化 <link
       linkend="functions-string-other"><literal>^@</literal></link>
       starts-with 操作符（Tom Lane）
      </para>
<!-- pgdoc-cn_end sig_en=0feef0956891828dbfc8f2028a3688e1 -->
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=8e8ca3a5086f7b0922152f1554f2a1e8 sig_cn_org=8da286f1b8e4513c097b26888684a02b source=15.7 
    <title>Source Code</title>
________________________________________________________-->
    <title>源代码</title>
<!-- pgdoc-cn_end sig_en=8e8ca3a5086f7b0922152f1554f2a1e8 -->

    <itemizedlist>

<!--
Author: Andres Freund <andres@anarazel.de>
2021-12-30 [93d973494] ci: Add continuous integration for github repositories v
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=31b8b137e870cc8884ed495afb4a8e58 sig_cn_org=4be9d4916196a94e2c8daf3d7b2a3722 source=15.7 
      <para>
       Add support for continuous integration testing using cirrus-ci
       (Andres Freund, Thomas Munro, Melanie Plageman)
      </para>
________________________________________________________-->
      <para>
       添加对使用cirrus-ci进行持续集成测试的支持
       (Andres Freund, Thomas Munro, Melanie Plageman)
      </para>
<!-- pgdoc-cn_end sig_en=31b8b137e870cc8884ed495afb4a8e58 -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-18 [6c417bbcc] Add support for building with ZSTD.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=a3c3da7c28e7767f4de510b099d4954d sig_cn_org=14a57cf80c0ff9af4d2bdb5869135909 source=15.7 
      <para>
       Add configure option <link
       linkend="configure-options-features"><option>-&minus;with-zstd</option></link>
       to enable Zstandard builds (Jeevan Ladhe, Robert Haas, Michael
       Paquier)
      </para>
________________________________________________________-->
      <para>
       添加配置选项<link
       linkend="configure-options-features"><option>--with-zstd</option></link>
       以启用 Zstandard 构建（Jeevan Ladhe, Robert Haas, Michael
       Paquier）
      </para>
<!-- pgdoc-cn_end sig_en=a3c3da7c28e7767f4de510b099d4954d -->
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-11-22 [d6d1dfcc9] Add ABI extra field to fmgr magic block
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=50a5cf3258e602bea6f05a9666bb288b sig_cn_org=601c54cadcf720e7fcbbcbbf282f3b98 source=15.7 
      <para>
       Add an ABI identifier field to the magic block in loadable
       libraries, allowing
       non-community <productname>PostgreSQL</productname> distributions
       to identify libraries that are not compatible with other builds
       (Peter Eisentraut)
      </para>
________________________________________________________-->
      <para>
       在可加载库的魔术块中添加一个ABI标识符字段，允许非社区<productname>PostgreSQL</productname>发行版
       识别与其他构建不兼容的库（Peter Eisentraut）
      </para>
<!-- pgdoc-cn_end sig_en=50a5cf3258e602bea6f05a9666bb288b -->

<!-- pgdoc-cn_start sig_en=a4f1618e8c078ae7c743da014656eb1e sig_cn_org=a72bebe434ffb067ce8b8c05e62e5a83 source=15.7 
      <para>
       An ABI field mismatch will generate an error at load time.
      </para>
________________________________________________________-->
      <para>
       ABI字段不匹配将在加载时生成错误。
      </para>
<!-- pgdoc-cn_end sig_en=a4f1618e8c078ae7c743da014656eb1e -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-11 [07eee5a0d] Create a new type category for "internal use" types.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=a3f31d27bb2f18fc36b4a7ca7487f7af sig_cn_org=d052e40271098b6051e1c119d0a4322c source=15.7 
      <para>
       Create a new <link
       linkend="catalog-pg-type"><structfield>pg_type.typcategory</structfield></link>
       value for <type>"char"</type> (Tom Lane)
      </para>
________________________________________________________-->
      <para>
       为<type>"char"</type>（Tom Lane）创建一个新的<link
       linkend="catalog-pg-type"><structfield>pg_type.typcategory</structfield></link>的值
      </para>
<!-- pgdoc-cn_end sig_en=a3f31d27bb2f18fc36b4a7ca7487f7af -->

<!-- pgdoc-cn_start sig_en=3f7814b5fe4b02e21273e7be4d3031af sig_cn_org=e018720517bd0c8402dbf8b232e05eb8 source=15.7 
      <para>
       Some other internal-use-only types have also been assigned to this
       category.
      </para>
________________________________________________________-->
      <para>
       一些其他仅供内部使用的类型也被分配到了这个类别中。
      </para>
<!-- pgdoc-cn_end sig_en=3f7814b5fe4b02e21273e7be4d3031af -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-18 [cc333f323] Modify pg_basebackup to use a new COPY subprotocol for b
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=8e241083358c513003fbf4579ea710cd sig_cn_org=be2fc4a4883c291b3bb58139d140b743 source=15.7 
      <para>
       Add new protocol message <link
       linkend="protocol-replication-base-backup"><literal>TARGET</literal></link>
       to specify a new <command>COPY</command> method to be used for base
       backups (Robert Haas)
      </para>
________________________________________________________-->
      <para>
       添加新的协议消息<link
       linkend="protocol-replication-base-backup"><literal>TARGET</literal></link>
       以指定一个新的<command>COPY</command>方法用于基本备份（Robert Haas）
      </para>
<!-- pgdoc-cn_end sig_en=8e241083358c513003fbf4579ea710cd -->

<!-- pgdoc-cn_start sig_en=9f6560587ce1dd9ba7799ca520b8c95c sig_cn_org=65fb46d5248ce0aea1140ad4058f0ec7 source=15.7 
      <para>
       <link
       linkend="app-pgbasebackup"><application>pg_basebackup</application></link>
       now uses this method.
      </para>
________________________________________________________-->
      <para>
       <link
       linkend="app-pgbasebackup"><application>pg_basebackup</application></link>
       现在使用这种方法。
      </para>
<!-- pgdoc-cn_end sig_en=9f6560587ce1dd9ba7799ca520b8c95c -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-24 [0ad803291] Server-side gzip compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-03-23 [ffd53659c] Replace BASE_BACKUP COMPRESSION_LEVEL option with COMPRE
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=400a4c8968cf6f2c86568c47987af7db sig_cn_org=e1bf022a416311742f64256875409491 source=15.7 
      <para>
       Add new protocol message <link
       linkend="protocol-replication-base-backup"><literal>COMPRESSION</literal></link>
       and <literal>COMPRESSION_DETAIL</literal> to specify the compression
       method and options (Robert Haas)
      </para>
________________________________________________________-->
      <para>
       添加新的协议消息<link
       linkend="protocol-replication-base-backup"><literal>COMPRESSION</literal></link>
       和<literal>COMPRESSION_DETAIL</literal>来指定压缩方法和选项（Robert Haas）
      </para>
<!-- pgdoc-cn_end sig_en=400a4c8968cf6f2c86568c47987af7db -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-10 [9cd28c2e5] Remove server support for old BASE_BACKUP command syntax
Author: Robert Haas <rhaas@postgresql.org>
2022-02-10 [0d4513b61] Remove server support for the previous base backup proto
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=54412a25475e30aee01594236c255a08 sig_cn_org=66773ed796760fcb3150811a63006664 source=15.7 
      <para>
       Remove server support for old <literal>BASE_BACKUP</literal>
       command syntax and base backup protocol (Robert Haas)
      </para>
________________________________________________________-->
      <para>
       移除对旧<literal>BASE_BACKUP</literal>命令语法和基本备份协议的服务器支持（Robert Haas）
      </para>
<!-- pgdoc-cn_end sig_en=54412a25475e30aee01594236c255a08 -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-03-15 [e4ba69f3f] Allow extensions to add new backup targets.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=78563b8ca30e2458242b60388c32c5cf sig_cn_org=269c9f450480846dd0ee7e0da87406ed source=15.7 
      <para>
       Add support for extensions to set custom backup targets (Robert
       Haas)
      </para>
________________________________________________________-->
      <para>
       添加支持扩展以设置自定义备份目标（Robert Haas）
      </para>
<!-- pgdoc-cn_end sig_en=78563b8ca30e2458242b60388c32c5cf -->
     </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2022-04-06 [5c279a6d3] Custom WAL Resource Managers.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=a48460390d9f1b3cd183e85aefde71f4 sig_cn_org=e3be481b611e2bcac31c25882a15a3b3 source=15.7 
      <para>
       Allow extensions to define custom <acronym>WAL</acronym>
       resource managers (Jeff Davis)
      </para>
________________________________________________________-->
      <para>
       允许扩展定义自定义<acronym>WAL</acronym>资源管理器（Jeff Davis）
      </para>
<!-- pgdoc-cn_end sig_en=a48460390d9f1b3cd183e85aefde71f4 -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-01-31 [d10e41d42] Introduce pg_settings_get_flags() to find flags associat
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=87ae12a724fb39ef8c5622601fb2a10f sig_cn_org=32869742672369a3b3ab31a85cd69009 source=15.7 
      <para>
       Add function <link
       linkend="functions-info-catalog-table"><function>pg_settings_get_flags()</function></link>
       to get the flags of server variables (Justin Pryzby)
      </para>
________________________________________________________-->
      <para>
       添加函数<link
       linkend="functions-info-catalog-table"><function>pg_settings_get_flags()</function></link>
       以获取服务器变量的标志（Justin Pryzby）
      </para>
<!-- pgdoc-cn_end sig_en=87ae12a724fb39ef8c5622601fb2a10f -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-04-08 [8ec569479] Apply PGDLLIMPORT markings broadly.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=c9927d928b6b304af3803a61d7c12fbd sig_cn_org=45a276c2bd2acca54f4c241014828dfe source=15.7 
      <para>
       On Windows, export all the server's global variables using
       <literal>PGDLLIMPORT</literal> markers (Robert Haas)
      </para>
________________________________________________________-->
      <para>
       在Windows上，使用<literal>PGDLLIMPORT</literal>标记导出所有服务器的全局变量（Robert Haas）
      </para>
<!-- pgdoc-cn_end sig_en=c9927d928b6b304af3803a61d7c12fbd -->

<!-- pgdoc-cn_start sig_en=3fa4c658155d7283bda4569be6d91055 sig_cn_org=9ef2abd9f76d3778425eebbe16c4a943 source=15.7 
      <para>
       Previously, only specific variables were accessible to extensions
       on Windows.
      </para>
________________________________________________________-->
      <para>
       以前，在Windows上只有特定的变量对扩展程序可访问。
      </para>
<!-- pgdoc-cn_end sig_en=3fa4c658155d7283bda4569be6d91055 -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-07-23 [3b474a2e6] Increase minimum supported GNU make version to 3.81.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=7c2fdba2b9c7881cf944fbd888b1c112 sig_cn_org=d0c0e44c8a6c50d84cb3f679685a86dc source=15.7 
      <para>
       Require GNU <application>make</application> version 3.81 or later
       to build <productname>PostgreSQL</productname> (Tom Lane)
      </para>
________________________________________________________-->
      <para>
       要求使用GNU <application>make</application>版本3.81或更高版本来构建<productname>PostgreSQL</productname>（Tom Lane）
      </para>
<!-- pgdoc-cn_end sig_en=7c2fdba2b9c7881cf944fbd888b1c112 -->
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-11-05 [db7d1a7b0] pgcrypto: Remove non-OpenSSL support
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=f1129e73c4607d8d267398f786a0652b sig_cn_org=feae3730fddebfa747f4b24ff3a09389 source=15.7 
      <para>
       Require OpenSSL to build the <link
       linkend="pgcrypto"><application>pgcrypto</application></link>
       extension (Peter Eisentraut)
      </para>
________________________________________________________-->
      <para>
       需要OpenSSL来构建<link
       linkend="pgcrypto"><application>pgcrypto</application></link>
       扩展（Peter Eisentraut）
      </para>
<!-- pgdoc-cn_end sig_en=f1129e73c4607d8d267398f786a0652b -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-10-07 [92e6a98c3] Adjust configure to insist on Perl version &gt;= 5.8.3.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=e8d712519ea9d5764ca103ee44474868 sig_cn_org=74c608d9dfd2b26ec8e27f158bff12f6 source=15.7 
      <para>
       Require <application>Perl</application>
       version 5.8.3 or later (Dagfinn Ilmari Mannsåker)
      </para>
________________________________________________________-->
      <para>
       需要<application>Perl</application>版本5.8.3或更高（Dagfinn Ilmari Mannsåker）
      </para>
<!-- pgdoc-cn_end sig_en=e8d712519ea9d5764ca103ee44474868 -->
     </listitem>

<!--
Author: Andres Freund <andres@anarazel.de>
2022-02-16 [19252e8ec] plpython: Reject Python 2 during build configuration.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=a59b3b73097804ec54d9998bcc2bdb74 sig_cn_org=33f4a21c4a81ce4ae193054781a371e4 source=15.7 
      <para>
       Require <application>Python</application>
       version 3.2 or later (Andres Freund)
      </para>
________________________________________________________-->
      <para>
       需要<application>Python</application>版本3.2或更高（Andres Freund）
      </para>
<!-- pgdoc-cn_end sig_en=a59b3b73097804ec54d9998bcc2bdb74 -->
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!-- pgdoc-cn_start sig_en=c5c92aad02a6922b735966591556e793 sig_cn_org=f75b4b1338708fc15513b76cf249c1e3 source=15.7 
    <title>Additional Modules</title>
________________________________________________________-->
    <title>附加模块</title>
<!-- pgdoc-cn_end sig_en=c5c92aad02a6922b735966591556e793 -->

    <itemizedlist>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-09-28 [c3b011d99] Support amcheck of sequences
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=dba2f39c0d8823b3d6dfdefdda995bc2 sig_cn_org=1c117f5923e45f0f0b2d216830ff1a2f source=15.7 
      <para>
       Allow <link
       linkend="amcheck"><application>amcheck</application></link> to
       check sequences (Mark Dilger)
      </para>
________________________________________________________-->
      <para>
       允许<link
       linkend="amcheck"><application>amcheck</application></link>检查序列（Mark Dilger）
      </para>
<!-- pgdoc-cn_end sig_en=dba2f39c0d8823b3d6dfdefdda995bc2 -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2021-11-05 [bd807be69] amcheck: Add additional TOAST pointer checks.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=ce451fc7e4c55b596e58123fa0990f74 sig_cn_org=ab045a3ab8b42c1c1ab231dce18ee58d source=15.7 
      <para>
       Improve <application>amcheck</application> sanity checks for
       <acronym>TOAST</acronym> tables (Mark Dilger)
      </para>
________________________________________________________-->
      <para>
       改进<application>amcheck</application>对<acronym>TOAST</acronym>表的健全性检查（Mark Dilger）
      </para>
<!-- pgdoc-cn_end sig_en=ce451fc7e4c55b596e58123fa0990f74 -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-03-15 [c6306db24] Add 'basebackup_to_shell' contrib module.
Author: Robert Haas <rhaas@postgresql.org>
2022-03-30 [26a0c025e] Document basebackup_to_shell.required_role.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=23682b2d5cc31076bee55ca979dacdbd sig_cn_org=43d83bdab6f8fcb146c88343d8463515 source=15.7 
      <para>
       Add new module <application><link
       linkend="basebackup-to-shell">basebackup_to_shell</link></application>
       as an example of a custom backup target (Robert Haas)
      </para>
________________________________________________________-->
      <para>
       将新模块<application><link
       linkend="basebackup-to-shell">basebackup_to_shell</link></application>
       添加为自定义备份目标的示例（Robert Haas）
      </para>
<!-- pgdoc-cn_end sig_en=23682b2d5cc31076bee55ca979dacdbd -->
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-03 [5ef1eefd7] Allow archiving via loadable modules.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=995a0f9f77da18573d6413af659b12d3 sig_cn_org=87ecb3aaa6ae814b6d21ea67d581271e source=15.7 
      <para>
       Add new module <link
       linkend="basic-archive"><application>basic_archive</application></link>
       as an example of performing archiving via a library (Nathan Bossart)
      </para>
________________________________________________________-->
      <para>
       将新模块<link linkend="basic-archive"><application>basic_archive</application></link>
       添加为通过库执行归档的示例（Nathan Bossart）
      </para>
<!-- pgdoc-cn_end sig_en=995a0f9f77da18573d6413af659b12d3 -->
     </listitem>

<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2021-11-06 [57e3c5160] Add bool GiST opclass to btree_gist
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2021-11-08 [e2fbb8837] Fix gist_bool_ops to use gbtreekey2
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2021-12-11 [4c6145b51] Add bool to btree_gist documentation
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=647e8dbcf2aa6e7a911ffe64e7785361 sig_cn_org=89b95afdf2ee0a704ba5d9f760f47260 source=15.7 
      <para>
       Allow <link
       linkend="btree-gist"><application>btree_gist</application></link>
       indexes on boolean columns (Emre Hasegeli)
      </para>
________________________________________________________-->
      <para>
       允许在布尔列上创建<link
       linkend="btree-gist"><application>btree_gist</application></link>
       索引（Emre Hasegeli）
      </para>
<!-- pgdoc-cn_end sig_en=647e8dbcf2aa6e7a911ffe64e7785361 -->

<!-- pgdoc-cn_start sig_en=23aba9d940e82d0d7b0976d8014786c1 sig_cn_org=5ee9fe04b7b4fc4c233b1418e5335477 source=15.7 
      <para>
       These can be used for exclusion constraints.
      </para>
________________________________________________________-->
      <para>
       这些可以用于排除约束。
      </para>
<!-- pgdoc-cn_end sig_en=23aba9d940e82d0d7b0976d8014786c1 -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-07-12 [127404fbe] pageinspect: Improve page_header() for pages of 32kB
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=3e40f46a5bc518c46fc4186017ee369b sig_cn_org=fedfb29dcd1bdbef8b0330e7a4f7268b source=15.7 
      <para>
       Fix <link
       linkend="pageinspect"><application>pageinspect</application></link>'s
       <function>page_header()</function> to handle 32-kilobyte page sizes
       (Quan Zongliang)
      </para>
________________________________________________________-->
      <para>
       修复<link
       linkend="pageinspect"><application>pageinspect</application></link>的
       <function>page_header()</function>以处理32千字节的页面大小
       (全宗亮)
      </para>
<!-- pgdoc-cn_end sig_en=3e40f46a5bc518c46fc4186017ee369b -->

<!-- pgdoc-cn_start sig_en=0af1c13506218ce1ddd6673eaca99340 sig_cn_org=2ba374c89280a6833a6673639a984415 source=15.7 
      <para>
       Previously, improper negative values could be returned in certain
       cases.
      </para>
________________________________________________________-->
      <para>
       以前，在某些情况下可能会返回不正确的负值。
      </para>
<!-- pgdoc-cn_end sig_en=0af1c13506218ce1ddd6673eaca99340 -->
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-04-08 [76cbf7edb] pg_stat_statements: Track I/O timing for temporary file
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=af6908331f34754d708c4b9edf3c0bde sig_cn_org=876f29dfad4181139650037b8261b429 source=15.7 
      <para>
       Add counters for temporary file block I/O to <link
       linkend="pgstatstatements"><application>pg_stat_statements</application></link>
       (Masahiko Sawada)
      </para>
________________________________________________________-->
      <para>
       为临时文件块I/O添加计数器到<link
       linkend="pgstatstatements"><application>pg_stat_statements</application></link>
       （Masahiko Sawada）
      </para>
<!-- pgdoc-cn_end sig_en=af6908331f34754d708c4b9edf3c0bde -->
     </listitem>

<!--
Author: Magnus Hagander <magnus@hagander.net>
2022-04-08 [57d6aea00] Add JIT counters to pg_stat_statements
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=a728da3443d47fa0320fb61238ebaa66 sig_cn_org=0f42a7b9bbdeab26b8584271fe01f515 source=15.7 
      <para>
       Add <acronym>JIT</acronym> counters to pg_stat_statements (Magnus
       Hagander)
      </para>
________________________________________________________-->
      <para>
       在pg_stat_statements中添加<acronym>JIT</acronym>计数器（Magnus Hagander）
      </para>
<!-- pgdoc-cn_end sig_en=a728da3443d47fa0320fb61238ebaa66 -->
     </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2022-04-08 [2258e76f9] Add contrib/pg_walinspect.
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=154bc1e1c773174ec7ff30ddef27bc63 sig_cn_org=8adaec423f1884b52f8c6b25d8d8fdac source=15.7 
      <para>
       Add new module <link
       linkend="pgwalinspect"><application>pg_walinspect</application></link>
       (Bharath Rupireddy)
      </para>
________________________________________________________-->
      <para>
       添加新模块<link
       linkend="pgwalinspect"><application>pg_walinspect</application></link>
       (Bharath Rupireddy)
      </para>
<!-- pgdoc-cn_end sig_en=154bc1e1c773174ec7ff30ddef27bc63 -->

<!-- pgdoc-cn_start sig_en=419968c5080173a5d48055611336c361 sig_cn_org=ee9161e26785a433f1880ea8980a2993 source=15.7 
      <para>
       This gives <acronym>SQL</acronym>-level output similar to <link
       linkend="pgwaldump"><application>pg_waldump</application></link>.
      </para>
________________________________________________________-->
      <para>
       这提供了类似于<acronym>SQL</acronym>级别的输出，类似于<link
       linkend="pgwaldump"><application>pg_waldump</application></link>。
      </para>
<!-- pgdoc-cn_end sig_en=419968c5080173a5d48055611336c361 -->
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-12 [134d97463] Include permissive/enforcing state in sepgsql log messag
-->

     <listitem>
<!-- pgdoc-cn_start sig_en=ea89d4d84379664b9c19e19869333412 sig_cn_org=2795a6e5e8661f3cc2e94cf4af5713e6 source=15.7 
      <para>
       Indicate the permissive/enforcing state in <link
       linkend="sepgsql"><application>sepgsql</application></link> log
       messages (Dave Page)
      </para>
________________________________________________________-->
      <para>
       在<link linkend="sepgsql"><application>sepgsql</application></link>日志消息中指示宽松/强制执行状态（Dave Page）
      </para>
<!-- pgdoc-cn_end sig_en=ea89d4d84379664b9c19e19869333412 -->
     </listitem>

    </itemizedlist>

    <sect4>
     <title><link linkend="postgres-fdw"><application>postgres_fdw</application></link></title>

     <itemizedlist>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-07-30 [5d44fff01] In postgres_fdw, allow CASE expressions to be pushed to
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=0fbb66fb5201770464daa3cdc6daf512 sig_cn_org=7548f000ae1a892066d2e1632101c11a source=15.7 
       <para>
        Allow postgres_fdw to push down <literal>CASE</literal> expressions
        (Alexander Pyhalov)
       </para>
________________________________________________________-->
       <para>
        允许postgres_fdw下推<literal>CASE</literal>表达式（Alexander Pyhalov）
       </para>
<!-- pgdoc-cn_end sig_en=0fbb66fb5201770464daa3cdc6daf512 -->
      </listitem>

<!--
Author: Fujii Masao <fujii@postgresql.org>
2021-09-07 [449ab6350] postgres_fdw: Allow application_name of remote connectio
Author: Fujii Masao <fujii@postgresql.org>
2021-12-24 [6e0cb3dec] postgres_fdw: Allow postgres_fdw.application_name to inc
Author: Fujii Masao <fujii@postgresql.org>
2022-02-18 [94c49d534] postgres_fdw: Make postgres_fdw.application_name support
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=ed7533d9a98d584c4d729717923d7b1a sig_cn_org=95234b3ebaf88b4f093820c4c66d253d source=15.7 
       <para>
        Add server variable
        <varname>postgres_fdw.application_name</varname> to control the
        application name of postgres_fdw connections (Hayato Kuroda)
       </para>
________________________________________________________-->
       <para>
        添加服务器变量<varname>postgres_fdw.application_name</varname>以控制postgres_fdw连接的应用程序名称（Hayato Kuroda）
       </para>
<!-- pgdoc-cn_end sig_en=ed7533d9a98d584c4d729717923d7b1a -->

<!-- pgdoc-cn_start sig_en=d069801b109aa659cedb64197af764b0 sig_cn_org=5f721b16e4ed6ddf554d3d765cf601fa source=15.7 
       <para>
        Previously the remote session's <link
        linkend="guc-application-name"><varname>application_name</varname></link>
        could only be set on the remote server or via a
        <application>postgres_fdw</application> connection specification.
        <varname>postgres_fdw.application_name</varname> supports some
        escape sequences for customization, making it easier to tell such
        connections apart on the remote server.
       </para>
________________________________________________________-->
       <para>
        以前，远程会话的<link
        linkend="guc-application-name"><varname>application_name</varname></link>
        只能在远程服务器上设置，或通过<application>postgres_fdw</application>连接规范设置。
        <varname>postgres_fdw.application_name</varname>支持一些转义序列进行自定义，
        使得在远程服务器上更容易区分这样的连接。
       </para>
<!-- pgdoc-cn_end sig_en=d069801b109aa659cedb64197af764b0 -->
      </listitem>

<!--
Author: Etsuro Fujita <efujita@postgresql.org>
2022-02-24 [04e706d42] postgres_fdw: Add support for parallel commit.
-->

      <listitem>
<!-- pgdoc-cn_start sig_en=ca849dddc776ba50e141da74ff1a8094 sig_cn_org=f436b9c3dfbdff07f721837ee0318350 source=15.7 
       <para>
        Allow parallel commit on <application>postgres_fdw</application>
        servers (Etsuro Fujita)
       </para>
________________________________________________________-->
       <para>
        允许在<application>postgres_fdw</application>服务器上进行并行提交（Etsuro Fujita）
       </para>
<!-- pgdoc-cn_end sig_en=ca849dddc776ba50e141da74ff1a8094 -->

<!-- pgdoc-cn_start sig_en=d5fc20f43aef34b3e34b2069e4cc2047 sig_cn_org=63bc0bd635504be96159ae7005e50b95 source=15.7 
       <para>
        This is enabled with the <literal>CREATE SERVER</literal> option
        <literal>parallel_commit</literal>.
       </para>
________________________________________________________-->
       <para>
        这是通过<literal>CREATE SERVER</literal>选项启用的
        <literal>parallel_commit</literal>。
       </para>
<!-- pgdoc-cn_end sig_en=d5fc20f43aef34b3e34b2069e4cc2047 -->
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

  </sect2>

  <sect2 id="release-15-acknowledgements">
<!-- pgdoc-cn_start sig_en=1283161eb9ef04326ec78e29e7c8fd5c sig_cn_org=f282b0cf6cbb001ab305b5fd88749b75 source=15.7 
   <title>Acknowledgments</title>
________________________________________________________-->
   <title>致谢</title>
<!-- pgdoc-cn_end sig_en=1283161eb9ef04326ec78e29e7c8fd5c -->

<!-- pgdoc-cn_start sig_en=7eaa462bf90c0a47ac17542901cf7779 sig_cn_org=33732ccfe242b6cd3f8728b26ab8fcf0 source=15.7 
   <para>
    The following individuals (in alphabetical order) have contributed
    to this release as patch authors, committers, reviewers, testers,
    or reporters of issues.
   </para>
________________________________________________________-->
   <para>
    以下个人（按字母顺序）作为补丁作者、提交者、审阅者、测试者或问题报告者为这个版本的贡献者。
</para>
<!-- pgdoc-cn_end sig_en=7eaa462bf90c0a47ac17542901cf7779 -->

   <simplelist>
    <member>Abhijit Menon-Sen</member>
    <member>Adam Brusselback</member>
    <member>Adam Mackler</member>
    <member>Adrian Ho</member>
    <member>Ahsan Hadi</member>
    <member>Ajin Cherian</member>
    <member>Alastair McKinley</member>
    <member>Aleksander Alekseev</member>
    <member>Ales Zeleny</member>
    <member>Alex Kingsborough</member>
    <member>Alex Kozhemyakin</member>
    <member>Alexander Korotkov</member>
    <member>Alexander Kukushkin</member>
    <member>Alexander Lakhin</member>
    <member>Alexander Nawratil</member>
    <member>Alexander Pyhalov</member>
    <member>Alexey Borzov</member>
    <member>Alexey Ermakov</member>
    <member>Aliaksandr Kalenik</member>
    <member>Álvaro Herrera</member>
    <member>Amit Kapila</member>
    <member>Amit Khandekar</member>
    <member>Amit Langote</member>
    <member>Amul Sul</member>
    <member>Anastasia Lubennikova</member>
    <member>Anders Kaseorg</member>
    <member>Andreas Dijkman</member>
    <member>Andreas Grob</member>
    <member>Andreas Seltenreich</member>
    <member>Andrei Zubkov</member>
    <member>Andres Freund</member>
    <member>Andrew Alsup</member>
    <member>Andrew Bille</member>
    <member>Andrew Dunstan</member>
    <member>Andrew Gierth</member>
    <member>Andrew Kesper</member>
    <member>Andrey Borodin</member>
    <member>Andrey Lepikhov</member>
    <member>Andrey Sokolov</member>
    <member>Andy Fan</member>
    <member>Anton Melnikov</member>
    <member>Anton Voloshin</member>
    <member>Antonin Houska</member>
    <member>Arjan van de Ven</member>
    <member>Arne Roland</member>
    <member>Arthur Zakirov</member>
    <member>Ashutosh Bapat</member>
    <member>Ashutosh Sharma</member>
    <member>Ashwin Agrawal</member>
    <member>Asif Rehman</member>
    <member>Asim Praveen</member>
    <member>Atsushi Torikoshi</member>
    <member>Aya Iwata</member>
    <member>Bauyrzhan Sakhariyev</member>
    <member>Benoit Lobréau</member>
    <member>Bernd Dorn</member>
    <member>Bertrand Drouvot</member>
    <member>Bharath Rupireddy</member>
    <member>Björn Harrtell</member>
    <member>Boris Kolpackov</member>
    <member>Boris Korzun</member>
    <member>Brad Nicholson</member>
    <member>Brar Piening</member>
    <member>Bruce Momjian</member>
    <member>Bruno da Silva</member>
    <member>Bryn Llewellyn</member>
    <member>Carl Sopchak</member>
    <member>Cary Huang</member>
    <member>Chapman Flack</member>
    <member>Chen Jiaoqian</member>
    <member>Chris Bandy</member>
    <member>Chris Lowder</member>
    <member>Christian Quest</member>
    <member>Christoph Berg</member>
    <member>Christoph Heiss</member>
    <member>Christophe Pettus</member>
    <member>Christopher Painter-Wakefield</member>
    <member>Claudio Freire</member>
    <member>Clemens Zeidler</member>
    <member>Corey Huinker</member>
    <member>Dag Lem</member>
    <member>Dagfinn Ilmari Mannsåker</member>
    <member>Dan Kubb</member>
    <member>Daniel Cherniy</member>
    <member>Daniel Gustafsson</member>
    <member>Daniel Polski</member>
    <member>Daniel Vérité</member>
    <member>Daniel Westermann</member>
    <member>Daniele Varrazzo</member>
    <member>Daniil Anisimov</member>
    <member>Danny Shemesh</member>
    <member>Darafei Praliaskouski</member>
    <member>Daria Lepikhova</member>
    <member>Dave Cramer</member>
    <member>Dave Page</member>
    <member>David Christensen</member>
    <member>David Fetter</member>
    <member>David G. Johnston</member>
    <member>David Rowley</member>
    <member>David Steele</member>
    <member>David Zhang</member>
    <member>Dean Rasheed</member>
    <member>Dian Fay</member>
    <member>Dilip Kumar</member>
    <member>Dipesh Pandit</member>
    <member>Dmitry Dolgov</member>
    <member>Dmitry Koval</member>
    <member>Dmitry Marakasov</member>
    <member>Dominique Devienne</member>
    <member>Dong Wook</member>
    <member>Drew DeVault</member>
    <member>Eduard Català</member>
    <member>Egor Chindyaskin</member>
    <member>Egor Rogov</member>
    <member>Ekaterina Kiryanova</member>
    <member>Elena Indrupskaya</member>
    <member>Elvis Pranskevichus</member>
    <member>Emmanuel Quincerot</member>
    <member>Emre Hasegeli</member>
    <member>Eric Mutta</member>
    <member>Erica Zhang</member>
    <member>Erik Rijkers</member>
    <member>Erki Eessaar</member>
    <member>Etsuro Fujita</member>
    <member>Euler Taveira</member>
    <member>Fabien Coelho</member>
    <member>Fabrice Chapuis</member>
    <member>Fabrice Fontaine</member>
    <member>Fabrízio de Royes Mello</member>
    <member>Feike Steenbergen</member>
    <member>Filip Gospodinov</member>
    <member>Florin Irion</member>
    <member>Floris Van Nee</member>
    <member>Frédéric Yhuel</member>
    <member>Gabriela Serventi</member>
    <member>Gaurab Dey</member>
    <member>Geoff Winkless</member>
    <member>Geoffrey Blake</member>
    <member>Georgios Kokolatos</member>
    <member>Gilles Darold</member>
    <member>Greg Nancarrow</member>
    <member>Greg Rychlewski</member>
    <member>Greg Sabino Mullane</member>
    <member>Greg Stark</member>
    <member>Gregory Smith</member>
    <member>Guillaume Lelarge</member>
    <member>Gunnar Bluth</member>
    <member>Gurjeet Singh</member>
    <member>Haiyang Wang</member>
    <member>Haiying Tang</member>
    <member>Hannu Krosing</member>
    <member>Hans Buschmann</member>
    <member>Hayato Kuroda</member>
    <member>Heath Lord</member>
    <member>Heikki Linnakangas</member>
    <member>Herwig Goemans</member>
    <member>Himanshu Upadhyaya</member>
    <member>Holly Roberts</member>
    <member>Hou Zhijie</member>
    <member>Hubert Lubaczewski</member>
    <member>Ian Barwick</member>
    <member>Ian Campbell</member>
    <member>Ibrar Ahmed</member>
    <member>Ildus Kurbangaliev</member>
    <member>Ilya Anfimov</member>
    <member>Itamar Gafni</member>
    <member>Jacob Champion</member>
    <member>Jaime Casanova</member>
    <member>Jakub Wartak</member>
    <member>James Coleman</member>
    <member>James Hilliard</member>
    <member>James Inform</member>
    <member>Jan Piotrowski</member>
    <member>Japin Li</member>
    <member>Jason Harvey</member>
    <member>Jason Kim</member>
    <member>Jean-Christophe Arnu</member>
    <member>Jeevan Ladhe</member>
    <member>Jeff Davis</member>
    <member>Jeff Janes</member>
    <member>Jehan-Guillaume de Rorthais</member>
    <member>Jelte Fennema</member>
    <member>Jeremy Evans</member>
    <member>Jeremy Schneider</member>
    <member>Jian Guo</member>
    <member>Jian He</member>
    <member>Jimmy Yih</member>
    <member>Jiri Fejfar</member>
    <member>Jitka Plesníková</member>
    <member>Joe Conway</member>
    <member>Joe Wildish</member>
    <member>Joel Jacobson</member>
    <member>Joey Bodoia</member>
    <member>John Naylor</member>
    <member>Jonathan Katz</member>
    <member>Josef Simanek</member>
    <member>Joseph Koshakow</member>
    <member>Josh Soref</member>
    <member>Joshua Brindle</member>
    <member>Juan José Santamaría Flecha</member>
    <member>Julien Rouhaud</member>
    <member>Julien Roze</member>
    <member>Junwang Zhao</member>
    <member>Jürgen Purtz</member>
    <member>Justin Pryzby</member>
    <member>Ken Kato</member>
    <member>Kevin Burke</member>
    <member>Kevin Grittner</member>
    <member>Kevin Humphreys</member>
    <member>Kevin McKibbin</member>
    <member>Kevin Sweet</member>
    <member>Kevin Zheng</member>
    <member>Klaudie Willis</member>
    <member>Konstantin Knizhnik</member>
    <member>Konstantina Skovola</member>
    <member>Kosei Masumura</member>
    <member>Kotaro Kawamoto</member>
    <member>Koyu Tanigawa</member>
    <member>Kuntal Ghosh</member>
    <member>Kyotaro Horiguchi</member>
    <member>Lars Kanis</member>
    <member>Lauren Fliksteen</member>
    <member>Laurent Hasson</member>
    <member>Laurenz Albe</member>
    <member>Leslie Lemaire</member>
    <member>Liam Bowen</member>
    <member>Lingjie Qiang</member>
    <member>Liu Huailing</member>
    <member>Louis Jachiet</member>
    <member>Lukas Fittl</member>
    <member>Ma Liangzhu</member>
    <member>Maciek Sakrejda</member>
    <member>Magnus Hagander</member>
    <member>Mahendra Singh Thalor</member>
    <member>Maksim Milyutin</member>
    <member>Marc Bachmann</member>
    <member>Marcin Krupowicz</member>
    <member>Marcus Gartner</member>
    <member>Marek Szuba</member>
    <member>Marina Polyakova</member>
    <member>Mario Emmenlauer</member>
    <member>Mark Dilger</member>
    <member>Mark Murawski</member>
    <member>Mark Wong</member>
    <member>Markus Wanner</member>
    <member>Markus Winand</member>
    <member>Martijn van Oosterhout</member>
    <member>Martin Jurca</member>
    <member>Martin Kalcher</member>
    <member>Martín Marqués</member>
    <member>Masahiko Sawada</member>
    <member>Masahiro Ikeda</member>
    <member>Masao Fujii</member>
    <member>Masaya Kawamoto</member>
    <member>Masayuki Hirose</member>
    <member>Matthias van de Meent</member>
    <member>Matthijs van der Vleuten</member>
    <member>Maxim Orlov</member>
    <member>Maxim Yablokov</member>
    <member>Melanie Plageman</member>
    <member>Michael Banck</member>
    <member>Michael Harris</member>
    <member>Michael J. Sullivan</member>
    <member>Michael Meskes</member>
    <member>Michael Mühlbeyer</member>
    <member>Michael Paquier</member>
    <member>Michael Powers</member>
    <member>Mike Fiedler</member>
    <member>Mike Oh</member>
    <member>Mikhail Kulagin</member>
    <member>Miles Delahunty</member>
    <member>Naoki Okano</member>
    <member>Nathan Bossart</member>
    <member>Nathan Long</member>
    <member>Nazir Bilal Yavuz</member>
    <member>Neha Sharma</member>
    <member>Neil Chen</member>
    <member>Nicola Contu</member>
    <member>Nicolas Lutic</member>
    <member>Nikhil Benesch</member>
    <member>Nikhil Shetty</member>
    <member>Nikhil Sontakke</member>
    <member>Nikita Glukhov</member>
    <member>Nikolai Berkoff</member>
    <member>Nikolay Samokhvalov</member>
    <member>Nikolay Shaplov</member>
    <member>Nitin Jadhav</member>
    <member>Noah Misch</member>
    <member>Noboru Saito</member>
    <member>Noriyoshi Shinoda</member>
    <member>Olaf Bohlen</member>
    <member>Olly Betts</member>
    <member>Onder Kalaci</member>
    <member>Oskar Stenberg</member>
    <member>Otto Kekalainen</member>
    <member>Paul Guo</member>
    <member>Paul Jungwirth</member>
    <member>Paul Martinez</member>
    <member>Pavan Deolasee</member>
    <member>Pavel Borisov</member>
    <member>Pavel Luzanov</member>
    <member>Pavel Stehule</member>
    <member>Peter Eisentraut</member>
    <member>Peter Geoghegan</member>
    <member>Peter Slavov</member>
    <member>Peter Smith</member>
    <member>Petr Jelínek</member>
    <member>Phil Florent</member>
    <member>Phil Krylov</member>
    <member>Pierre-Aurélien Georges</member>
    <member>Prabhat Sahu</member>
    <member>Quan Zongliang</member>
    <member>Rachel Heaton</member>
    <member>Rahila Syed</member>
    <member>Rajakavitha Kodhandapani</member>
    <member>Rajkumar Raghuwanshi</member>
    <member>Ranier Vilela</member>
    <member>Rei Kamigishi</member>
    <member>Reid Thompson</member>
    <member>Rémi Lapeyre</member>
    <member>Renan Soares Lopes</member>
    <member>Richard Guo</member>
    <member>Richard Wesley</member>
    <member>RKN Sai Krishna</member>
    <member>Robert Haas</member>
    <member>Robert Treat</member>
    <member>Roberto Mello</member>
    <member>Robins Tharakan</member>
    <member>Roger Mason</member>
    <member>Roman Zharkov</member>
    <member>Ronan Dunklau</member>
    <member>Rui Zhao</member>
    <member>Ryan Kelly</member>
    <member>Ryo Matsumura</member>
    <member>Ryohei Takahashi</member>
    <member>Sadhuprasad Patro</member>
    <member>Sait Talha Nisanci</member>
    <member>Sami Imseih</member>
    <member>Sandeep Thakkar</member>
    <member>Sebastian Kemper</member>
    <member>Sehrope Sarkuni</member>
    <member>Sergei Kornilov</member>
    <member>Sergei Shoulbakov</member>
    <member>Sergey Shinderuk</member>
    <member>Shay Rojansky</member>
    <member>Shenhao Wang</member>
    <member>Shi Yu</member>
    <member>Shinya Kato</member>
    <member>Shruthi Gowda</member>
    <member>Simon Perepelitsa</member>
    <member>Simon Riggs</member>
    <member>Sirisha Chamarthi</member>
    <member>Soumyadeep Chakraborty</member>
    <member>Stan Hu</member>
    <member>Stas Kelvich</member>
    <member>Stefen Hillman</member>
    <member>Stephen Frost</member>
    <member>Steve Chavez</member>
    <member>Sumanta Mukherjee</member>
    <member>Suraj Khamkar</member>
    <member>Suraj Kharage</member>
    <member>Sven Klemm</member>
    <member>Takamichi Osumi</member>
    <member>Takayuki Tsunakawa</member>
    <member>Takeshi Ideriha</member>
    <member>Tatsuhiro Nakamori</member>
    <member>Tatsuhito Kasahara</member>
    <member>Tatsuo Ishii</member>
    <member>Tatsuro Yamada</member>
    <member>Teja Mupparti</member>
    <member>Teodor Sigaev</member>
    <member>Thibaud Walkowiak</member>
    <member>Thom Brown</member>
    <member>Thomas McKay</member>
    <member>Thomas Munro</member>
    <member>Tim McNamara</member>
    <member>Timo Stolz</member>
    <member>Timur Khanjanov</member>
    <member>Tom Lane</member>
    <member>Tomas Barton</member>
    <member>Tomas Vondra</member>
    <member>Tony Reix</member>
    <member>Troy Frericks</member>
    <member>Tushar Ahuja</member>
    <member>Victor Wagner</member>
    <member>Victor Yegorov</member>
    <member>Vignesh C</member>
    <member>Vik Fearing</member>
    <member>Vincas Dargis</member>
    <member>Vitaly Burovoy</member>
    <member>Vitaly Voronov</member>
    <member>Vladimir Sitnikov</member>
    <member>Wang Ke</member>
    <member>Wei Sun</member>
    <member>Wei Wang</member>
    <member>Whale Song</member>
    <member>Will Mortensen</member>
    <member>Wolfgang Walther</member>
    <member>Yanliang Lei</member>
    <member>Yaoguang Chen</member>
    <member>Yogendra Suralkar</member>
    <member>YoungHwan Joo</member>
    <member>Yugo Nagata</member>
    <member>Yukun Wang</member>
    <member>Yura Sokolov</member>
    <member>Yusuke Egashira</member>
    <member>Yuzuko Hosoya</member>
    <member>Zhang Mingli</member>
    <member>Zhang Wenjie</member>
    <member>Zhihong Yu</member>
    <member>Zhiyong Wu</member>
   </simplelist>
  </sect2>

 </sect1>
