<!-- doc/src/sgml/sslinfo.sgml -->

<sect1 id="sslinfo" xreflabel="sslinfo">
<!-- pgdoc-cn_start sig_en=31b49fbfefb7471bf5c19b1057c43155 sig_cn_org=None source=14.1 
 <title>sslinfo</title>
________________________________________________________-->
 <title>sslinfo</title>
<!-- pgdoc-cn_end sig_en=31b49fbfefb7471bf5c19b1057c43155 -->

<!-- pgdoc-cn_start sig_en=5614f7be5af86e9905bba71a2355b476 sig_cn_org=None source=14.1 
 <indexterm zone="sslinfo">
  <primary>sslinfo</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="sslinfo">
  <primary>sslinfo</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=5614f7be5af86e9905bba71a2355b476 -->

<!-- pgdoc-cn_start sig_en=e43bf12b2f15f144f07e420461c776f9 sig_cn_org=None source=14.1 
 <para>
  The <filename>sslinfo</filename> module provides information about the SSL
  certificate that the current client provided when connecting to
  <productname>PostgreSQL</productname>.  The module is useless (most functions
  will return NULL) if the current connection does not use SSL.
 </para>
________________________________________________________-->
 <para>
  在连接到<productname>PostgreSQL</productname>时，<filename>sslinfo</filename>模块提供当前客户端提供的 SSL 证书的有关信息。如果当前连接不使用 SSL，这个模块就没有用处（大部分函数将返回 NULL）。
 </para>
<!-- pgdoc-cn_end sig_en=e43bf12b2f15f144f07e420461c776f9 -->

<!-- pgdoc-cn_start sig_en=d119879ea3f153d7f1bd0b0f729559df sig_cn_org=None source=14.1 
 <para>
  Some of the information available through this module can also be obtained
  using the built-in system view <link linkend="monitoring-pg-stat-ssl-view">
  <structname>pg_stat_ssl</structname></link>.
 </para>
________________________________________________________-->
 <para>
  本模块提供的一些信息，也可以使用内置系统视图<link linkend="monitoring-pg-stat-ssl-view">
  <structname>pg_stat_ssl</structname></link>来获得。
 </para>
<!-- pgdoc-cn_end sig_en=d119879ea3f153d7f1bd0b0f729559df -->

<!-- pgdoc-cn_start sig_en=28d0685713fa8d7e5d3a1d1bdbcfb83a sig_cn_org=None source=14.1 
 <para>
  This extension won't build at all unless the installation was
  configured with <literal>-&minus;with-ssl=openssl</literal>.
 </para>
________________________________________________________-->
 <para>
  除非安装时用<literal>--with-ssl=openssl</literal>进行了配置，这个扩展压根就不会被编译。
 </para>
<!-- pgdoc-cn_end sig_en=28d0685713fa8d7e5d3a1d1bdbcfb83a -->

 <sect2>
<!-- pgdoc-cn_start sig_en=31e2435f7254af8fd39244fad363eb6a sig_cn_org=None source=14.1 
  <title>Functions Provided</title>
________________________________________________________-->
  <title>提供的函数</title>
<!-- pgdoc-cn_end sig_en=31e2435f7254af8fd39244fad363eb6a -->

  <variablelist>
   <varlistentry>
<!-- pgdoc-cn_start sig_en=a365ebdff859a49a34c3d0a9f4f10581 sig_cn_org=None source=14.1 
    <term>
     <function>ssl_is_used() returns boolean</function>
     <indexterm>
      <primary>ssl_is_used</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>ssl_is_used() 返回 boolean</function>
    <indexterm>
     <primary>ssl_is_used</primary>
    </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=a365ebdff859a49a34c3d0a9f4f10581 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=fcfd4065f59cc518643543742786e3af sig_cn_org=None source=14.1 
    <para>
     Returns true if current connection to server uses SSL, and false
     otherwise.
    </para>
________________________________________________________-->
    <para>
     如果当前到服务器的连接使用 SSL 则返回 true，否则返回 false。
    </para>
<!-- pgdoc-cn_end sig_en=fcfd4065f59cc518643543742786e3af -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=309079034fc4702fa651bedbc2645d30 sig_cn_org=None source=14.1 
    <term>
     <function>ssl_version() returns text</function>
     <indexterm>
      <primary>ssl_version</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>ssl_version() 返回 text</function>
     <indexterm>
     <primary>ssl_version</primary>
    </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=309079034fc4702fa651bedbc2645d30 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=a558c747e70520d0de1c40e1c6ff784c sig_cn_org=None source=14.1 
    <para>
     Returns the name of the protocol used for the SSL connection (e.g., TLSv1.0,
     TLSv1.1, TLSv1.2 or TLSv1.3).
    </para>
________________________________________________________-->
    <para>
     返回 SSL 连接使用的协议名称（如 TLSv1.0、TLSv1.1、TLSv1.2 或者 TLSv1.3）。
    </para>
<!-- pgdoc-cn_end sig_en=a558c747e70520d0de1c40e1c6ff784c -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=0e0cb7db2070bcbf3144dfc95b850524 sig_cn_org=None source=14.1 
    <term>
     <function>ssl_cipher() returns text</function>
     <indexterm>
      <primary>ssl_cipher</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>ssl_cipher() 返回 text</function>
     <indexterm>
     <primary>ssl_cipher</primary>
    </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=0e0cb7db2070bcbf3144dfc95b850524 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=7a8d61e313e64184944e38157338d50d sig_cn_org=None source=14.1 
    <para>
     Returns the name of the cipher used for the SSL connection
     (e.g., DHE-RSA-AES256-SHA).
    </para>
________________________________________________________-->
    <para>
     返回 SSL 连接所用的加密方法名称（如 DHE-RSA-AES256-SHA）。
    </para>
<!-- pgdoc-cn_end sig_en=7a8d61e313e64184944e38157338d50d -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=de117c52ace57f5f231f0f42ae3465df sig_cn_org=None source=14.1 
    <term>
     <function>ssl_client_cert_present() returns boolean</function>
     <indexterm>
      <primary>ssl_client_cert_present</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>ssl_client_cert_present() 返回 boolean</function>
     <indexterm>
     <primary>ssl_client_cert_present</primary>
    </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=de117c52ace57f5f231f0f42ae3465df -->
    <listitem>
<!-- pgdoc-cn_start sig_en=0012c1126908d05128bd6ea4a34f22a3 sig_cn_org=None source=14.1 
    <para>
     Returns true if current client has presented a valid SSL client
     certificate to the server, and false otherwise.  (The server
     might or might not be configured to require a client certificate.)
    </para>
________________________________________________________-->
    <para>
     如果当前客户端已经向服务器出示了一个合法的 SSL 客户端证书则返回 true，否则返回 false（服务器可能被配置要求一个客户端配置，也可能没有被配置成这样）。
    </para>
<!-- pgdoc-cn_end sig_en=0012c1126908d05128bd6ea4a34f22a3 -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=0e675efb048b7b34b9ff61a807eba8a9 sig_cn_org=None source=14.1 
    <term>
     <function>ssl_client_serial() returns numeric</function>
     <indexterm>
      <primary>ssl_client_serial</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>ssl_client_serial() 返回 numeric</function>
     <indexterm>
     <primary>ssl_client_serial</primary>
    </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=0e675efb048b7b34b9ff61a807eba8a9 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=bf82f614584ebd46174aaf141bdf28ce sig_cn_org=None source=14.1 
    <para>
     Returns serial number of current client certificate.  The combination of
     certificate serial number and certificate issuer is guaranteed to
     uniquely identify a certificate (but not its owner &mdash; the owner
     ought to regularly change their keys, and get new certificates from the
     issuer).
    </para>
________________________________________________________-->
    <para>
     返回当前客户端证书的序列号。证书序列号和证书发行人的组合被确保可以
     唯一标识一个证书（但是不能唯一标识其拥有者 &mdash; 拥有者应该定期地更换其密钥，
     并且从发行人那里得到新的证书）。
    </para>
<!-- pgdoc-cn_end sig_en=bf82f614584ebd46174aaf141bdf28ce -->

<!-- pgdoc-cn_start sig_en=7cdc8c295836061dfc7ae576bcad7e75 sig_cn_org=None source=14.1 
    <para>
     So, if you run your own CA and allow only certificates from this CA to
     be accepted by the server, the serial number is the most reliable (albeit
     not very mnemonic) means to identify a user.
    </para>
________________________________________________________-->
    <para>
     因此，如果你运行自己的 CA 并且只允许服务器接收来自于这个 CA 的证书，序列号就是最可靠的（虽然并非很好记忆）标识一个用户的方法。
    </para>
<!-- pgdoc-cn_end sig_en=7cdc8c295836061dfc7ae576bcad7e75 -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=a6580f7174a3b256527cf4ca5b19ed92 sig_cn_org=None source=14.1 
    <term>
     <function>ssl_client_dn() returns text</function>
     <indexterm>
      <primary>ssl_client_dn</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>ssl_client_dn() 返回 text</function>
     <indexterm>
     <primary>ssl_client_dn</primary>
    </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=a6580f7174a3b256527cf4ca5b19ed92 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=51879e4ae9627789bfb6d0cd83c8c643 sig_cn_org=None source=14.1 
    <para>
     Returns the full subject of the current client certificate, converting
     character data into the current database encoding.  It is assumed that
     if you use non-ASCII characters in the certificate names, your
     database is able to represent these characters, too.  If your database
     uses the SQL_ASCII encoding, non-ASCII characters in the name will be
     represented as UTF-8 sequences.
    </para>
________________________________________________________-->
    <para>
     返回当前客户端证书的完整主题，并且将字符数据转换成当前数据库的编码。我们假定如果你在证书名中使用非 ASCII 字符，你的数据库也有能力展示这些字符。如果你的数据库使用 SQL_ASCII 编码，名称中的非 ASCII 字符将被表示为 UTF-8 序列。
    </para>
<!-- pgdoc-cn_end sig_en=51879e4ae9627789bfb6d0cd83c8c643 -->

<!-- pgdoc-cn_start sig_en=b96d1fbcbee038a128facd22538ef39b sig_cn_org=None source=14.1 
    <para>
     The result looks like <literal>/CN=Somebody /C=Some country/O=Some organization</literal>.
    </para>
________________________________________________________-->
    <para>
     结果看起来像<literal>/CN=某人 /C=某个国家 /O=某个组织</literal>。
    </para>
<!-- pgdoc-cn_end sig_en=b96d1fbcbee038a128facd22538ef39b -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=c8fe18a821986ffe34d61d4ff8017d6d sig_cn_org=None source=14.1 
    <term>
     <function>ssl_issuer_dn() returns text</function>
     <indexterm>
      <primary>ssl_issuer_dn</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>ssl_issuer_dn() 返回 text</function>
    <indexterm>
     <primary>ssl_issuer_dn</primary>
    </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=c8fe18a821986ffe34d61d4ff8017d6d -->
    <listitem>
<!-- pgdoc-cn_start sig_en=07cf4b4980a5818470636da2d3e068f1 sig_cn_org=None source=14.1 
    <para>
     Returns the full issuer name of the current client certificate, converting
     character data into the current database encoding.  Encoding conversions
     are handled the same as for <function>ssl_client_dn</function>.
    </para>
________________________________________________________-->
    <para>
     返回当前客户端证书的完整的发行人名称，并把字符数据转换成当前数据库的编码。编码转换以与<function>ssl_client_dn</function>相同的方式处理。
    </para>
<!-- pgdoc-cn_end sig_en=07cf4b4980a5818470636da2d3e068f1 -->
<!-- pgdoc-cn_start sig_en=16640d653bc9960e3293f2fc1443a141 sig_cn_org=None source=14.1 
    <para>
     The combination of the return value of this function with the
     certificate serial number uniquely identifies the certificate.
    </para>
________________________________________________________-->
    <para>
     这个函数的返回值与证书序列号的组合唯一地标识证书。
    </para>
<!-- pgdoc-cn_end sig_en=16640d653bc9960e3293f2fc1443a141 -->
<!-- pgdoc-cn_start sig_en=c4e4094b79477b09e09b9103cf822415 sig_cn_org=None source=14.1 
    <para>
     This function is really useful only if you have more than one trusted CA
     certificate in your server's certificate authority file, or if this CA
     has issued some intermediate certificate authority certificates.
    </para>
________________________________________________________-->
    <para>
     如果在服务器的证书授权中心文件中有多于一个的可信 CA 证书，或者如果 CAI 已经发行了某些中间认证授权证书，这个函数就真的很有用。
    </para>
<!-- pgdoc-cn_end sig_en=c4e4094b79477b09e09b9103cf822415 -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=180fe2a7a036d65dc59a0f753fb0a704 sig_cn_org=None source=14.1 
    <term>
     <function>ssl_client_dn_field(fieldname text) returns text</function>
     <indexterm>
      <primary>ssl_client_dn_field</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>ssl_client_dn_field(fieldname text) 返回 text</function>
    <indexterm>
     <primary>ssl_client_dn_field</primary>
    </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=180fe2a7a036d65dc59a0f753fb0a704 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=2e45255605c8b909b5ecd042f1f1a6e9 sig_cn_org=None source=14.1 
    <para>
     This function returns the value of the specified field in the
     certificate subject, or NULL if the field is not present.
     Field names are string constants that are converted into ASN1 object
     identifiers using the <productname>OpenSSL</productname> object
     database.  The following values are acceptable:
    </para>
________________________________________________________-->
    <para>
     这个函数返回证书主题中指定域的值，如果域不存在则返回 NULL。
     域的名称是字符串常量，它们被使用<productname>OpenSSL</productname>对象数据库转换成 ASN1 对象标识符。
     下列值是可接受的：
    </para>
<!-- pgdoc-cn_end sig_en=2e45255605c8b909b5ecd042f1f1a6e9 -->
<literallayout class="monospaced">
commonName (alias CN)
surname (alias SN)
name
givenName (alias GN)
countryName (alias C)
localityName (alias L)
stateOrProvinceName (alias ST)
organizationName (alias O)
organizationalUnitName (alias OU)
title
description
initials
postalCode
streetAddress
generationQualifier
description
dnQualifier
x500UniqueIdentifier
pseudonym
role
emailAddress
</literallayout>
<!-- pgdoc-cn_start sig_en=09627569427b182e85d0c7114cc8c3ee sig_cn_org=None source=14.1 
    <para>
     All of these fields are optional, except <structfield>commonName</structfield>.
     It depends
     entirely on your CA's policy which of them would be included and which
     wouldn't.  The meaning of these fields, however, is strictly defined by
     the X.500 and X.509 standards, so you cannot just assign arbitrary
     meaning to them.
    </para>
________________________________________________________-->
    <para>
     这些域中除了<structfield>commonName</structfield>都是可选的。它们之中哪些会被包括或者不会被包括完全取决于你的 CA 策略。不过，这些域的含义由 X.500 和 X.509 标准严格地定义，因此你不能只是为它们分配任意含义。
    </para>
<!-- pgdoc-cn_end sig_en=09627569427b182e85d0c7114cc8c3ee -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=baa949056852abf973d523baae666327 sig_cn_org=None source=14.1 
    <term>
     <function>ssl_issuer_field(fieldname text) returns text</function>
     <indexterm>
      <primary>ssl_issuer_field</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>ssl_issuer_field(fieldname text) 返回 text</function>
    <indexterm>
     <primary>ssl_issuer_field</primary>
    </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=baa949056852abf973d523baae666327 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=a805ea19db9a4e35383f4bca79fdfa62 sig_cn_org=None source=14.1 
    <para>
     Same as <function>ssl_client_dn_field</function>, but for the certificate issuer
     rather than the certificate subject.
    </para>
________________________________________________________-->
    <para>
     和<function>ssl_client_dn_field</function>一样，但是用于证书发行人而不是证书主题。
    </para>
<!-- pgdoc-cn_end sig_en=a805ea19db9a4e35383f4bca79fdfa62 -->
    </listitem>
   </varlistentry>

   <varlistentry>
<!-- pgdoc-cn_start sig_en=fdf122ccfada6c8c8781b896c5e4a727 sig_cn_org=None source=14.1 
    <term>
     <function>ssl_extension_info() returns setof record</function>
     <indexterm>
      <primary>ssl_extension_info</primary>
     </indexterm>
    </term>
________________________________________________________-->
    <term>
     <function>ssl_extension_info() 返回 setof record</function>
     <indexterm>
      <primary>ssl_extension_info</primary>
     </indexterm>
    </term>
<!-- pgdoc-cn_end sig_en=fdf122ccfada6c8c8781b896c5e4a727 -->
    <listitem>
<!-- pgdoc-cn_start sig_en=6c46815868a9eaa1a46e68a575b5e899 sig_cn_org=None source=14.1 
    <para>
     Provide information about extensions of client certificate: extension name,
     extension value, and if it is a critical extension.
    </para>
________________________________________________________-->
    <para>
     提供有关客户端证书扩展的信息：扩展名、扩展值以及是否为
     决定性的扩展。
    </para>
<!-- pgdoc-cn_end sig_en=6c46815868a9eaa1a46e68a575b5e899 -->
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=4cfae8ddf9b6dcc33177b633e0f1dcfc sig_cn_org=None source=14.1 
  <title>Author</title>
________________________________________________________-->
  <title>作者</title>
<!-- pgdoc-cn_end sig_en=4cfae8ddf9b6dcc33177b633e0f1dcfc -->

<!-- pgdoc-cn_start sig_en=04f8799c4e06d66981015690a735af49 sig_cn_org=None source=14.1 
  <para>
   Victor Wagner <email>vitus@cryptocom.ru</email>, Cryptocom LTD
  </para>
________________________________________________________-->
  <para>
   Victor Wagner <email>vitus@cryptocom.ru</email>, Cryptocom LTD
  </para>
<!-- pgdoc-cn_end sig_en=04f8799c4e06d66981015690a735af49 -->

<!-- pgdoc-cn_start sig_en=5b95ef71f607f5538bc469c1c2b6f038 sig_cn_org=None source=14.1 
  <para>
   Dmitry Voronin <email>carriingfate92@yandex.ru</email>
  </para>
________________________________________________________-->
  <para>
   Dmitry Voronin <email>carriingfate92@yandex.ru</email>
  </para>
<!-- pgdoc-cn_end sig_en=5b95ef71f607f5538bc469c1c2b6f038 -->

<!-- pgdoc-cn_start sig_en=e8a29a1d50e2325a7f5cec97bbc32578 sig_cn_org=None source=14.1 
  <para>
   E-Mail of Cryptocom OpenSSL development group:
   <email>openssl@cryptocom.ru</email>
  </para>
________________________________________________________-->
  <para>
   Cryptocom OpenSSL 开发组的 E-Mail：
   <email>openssl@cryptocom.ru</email>
  </para>
<!-- pgdoc-cn_end sig_en=e8a29a1d50e2325a7f5cec97bbc32578 -->
 </sect2>

</sect1>
