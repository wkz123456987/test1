<!-- doc/src/sgml/fuzzystrmatch.sgml -->

<sect1 id="fuzzystrmatch" xreflabel="fuzzystrmatch">
<!-- pgdoc-cn_start sig_en=e988afd10edeb23eb4ffc643210fe1e0 sig_cn_org=None source=14.1 
 <title>fuzzystrmatch</title>
________________________________________________________-->
 <title>fuzzystrmatch</title>
<!-- pgdoc-cn_end sig_en=e988afd10edeb23eb4ffc643210fe1e0 -->

<!-- pgdoc-cn_start sig_en=11e9a2dbd0b8680fd195102abe521528 sig_cn_org=None source=14.1 
 <indexterm zone="fuzzystrmatch">
  <primary>fuzzystrmatch</primary>
 </indexterm>
________________________________________________________-->
 <indexterm zone="fuzzystrmatch">
  <primary>fuzzystrmatch</primary>
 </indexterm>
<!-- pgdoc-cn_end sig_en=11e9a2dbd0b8680fd195102abe521528 -->

<!-- pgdoc-cn_start sig_en=5aa8dd4dfba4df3e6bca721c4d6f0971 sig_cn_org=None source=14.1 
 <para>
  The <filename>fuzzystrmatch</filename> module provides several
  functions to determine similarities and distance between strings.
 </para>
________________________________________________________-->
 <para>
  <filename>fuzzystrmatch</filename>模块提供多个函数来判断字符串之间的相似性和距离。
 </para>
<!-- pgdoc-cn_end sig_en=5aa8dd4dfba4df3e6bca721c4d6f0971 -->

 <caution>
<!-- pgdoc-cn_start sig_en=c2dc514dbd55f54eb86c09a94b9a0616 sig_cn_org=None source=14.1 
  <para>
   At present, the <function>soundex</function>, <function>metaphone</function>,
   <function>dmetaphone</function>, and <function>dmetaphone_alt</function> functions do
   not work well with multibyte encodings (such as UTF-8).
  </para>
________________________________________________________-->
  <para>
   当前，<function>soundex</function>、<function>metaphone</function>、<function>dmetaphone</function>和<function>dmetaphone_alt</function>函数使用多字节编码（例如 UTF-8）下工作得不好。
  </para>
<!-- pgdoc-cn_end sig_en=c2dc514dbd55f54eb86c09a94b9a0616 -->
 </caution>

<!-- pgdoc-cn_start sig_en=73fd7076637bb21a0cce44734412cba6 sig_cn_org=None source=14.1 
 <para>
  This module is considered <quote>trusted</quote>, that is, it can be
  installed by non-superusers who have <literal>CREATE</literal> privilege
  on the current database.
 </para>
________________________________________________________-->
 <para>
  这个模块被视为<quote>trusted</quote>，就是说，它可由在当前数据库上拥有<literal>CREATE</literal>特权的非超级用户安装。
 </para>
<!-- pgdoc-cn_end sig_en=73fd7076637bb21a0cce44734412cba6 -->

 <sect2>
<!-- pgdoc-cn_start sig_en=6db2488492c90d2b4c1e9bc540718783 sig_cn_org=None source=14.1 
  <title>Soundex</title>
________________________________________________________-->
  <title>Soundex</title>
<!-- pgdoc-cn_end sig_en=6db2488492c90d2b4c1e9bc540718783 -->

<!-- pgdoc-cn_start sig_en=8e27bd433273ced728568015cf4ff265 sig_cn_org=None source=14.1 
  <para>
   The Soundex system is a method of matching similar-sounding names
   by converting them to the same code.  It was initially used by the
   United States Census in 1880, 1900, and 1910.  Note that Soundex
   is not very useful for non-English names.
  </para>
________________________________________________________-->
  <para>
   语音表示法系统是一种将相似发音的名字转换成相同的代码来匹配它们的方法。这最初由美国国家统计局在 1880 年、1900 年和 1910 年使用。注意语音表示法对于非英语名称不是很有用。
  </para>
<!-- pgdoc-cn_end sig_en=8e27bd433273ced728568015cf4ff265 -->

<!-- pgdoc-cn_start sig_en=02658cd6563f4dab65bb72465e0edb3a sig_cn_org=None source=14.1 
  <para>
   The <filename>fuzzystrmatch</filename> module provides two functions
   for working with Soundex codes:
  </para>
________________________________________________________-->
  <para>
   <filename>fuzzystrmatch</filename>模块提供了两个函数用于语音表示法代码：
  </para>
<!-- pgdoc-cn_end sig_en=02658cd6563f4dab65bb72465e0edb3a -->

<!-- pgdoc-cn_start sig_en=8732b576f34b3832115a4b2eb8594f9b sig_cn_org=None source=14.1 
  <indexterm>
   <primary>soundex</primary>
  </indexterm>
________________________________________________________-->
  <indexterm>
   <primary>soundex</primary>
  </indexterm>
<!-- pgdoc-cn_end sig_en=8732b576f34b3832115a4b2eb8594f9b -->

<!-- pgdoc-cn_start sig_en=b01da9c746a8ef4709968b87f6feb93b sig_cn_org=None source=14.1 
  <indexterm>
   <primary>difference</primary>
  </indexterm>
________________________________________________________-->
  <indexterm>
   <primary>difference</primary>
  </indexterm>
<!-- pgdoc-cn_end sig_en=b01da9c746a8ef4709968b87f6feb93b -->

<!-- pgdoc-cn_start sig_en=05aff81a6fd81fe916afe9f21c255406 sig_cn_org=None source=14.1 
<synopsis>
soundex(text) returns text
difference(text, text) returns int
</synopsis>
________________________________________________________-->
<synopsis>
soundex(text) 返回 text
difference(text, text) 返回 int
</synopsis>
<!-- pgdoc-cn_end sig_en=05aff81a6fd81fe916afe9f21c255406 -->

<!-- pgdoc-cn_start sig_en=76ea870585550e511f95b640e2357803 sig_cn_org=None source=14.1 
  <para>
   The <function>soundex</function> function converts a string to its Soundex code.
   The <function>difference</function> function converts two strings to their Soundex
   codes and then reports the number of matching code positions.  Since
   Soundex codes have four characters, the result ranges from zero to four,
   with zero being no match and four being an exact match.  (Thus, the
   function is misnamed &mdash; <function>similarity</function> would have been
   a better name.)
  </para>
________________________________________________________-->
  <para>
   <function>soundex</function>函数将一个字符串转换成它的语音表示法代码。<function>difference</function>函数将两个字符串转换成它们的语音表示法代码并且接着报告能匹配代码位置的数量。由于语音表示法代码具有四个字符，结果可以从零到四，零表示没有匹配而四表示完全匹配（因此这个函数的命名并不适当 &mdash; <function>similarity</function>才是更合适的名称）。
  </para>
<!-- pgdoc-cn_end sig_en=76ea870585550e511f95b640e2357803 -->

<!-- pgdoc-cn_start sig_en=9403030e86c076a449f4a140b8734205 sig_cn_org=None source=14.1 
  <para>
   Here are some usage examples:
  </para>
________________________________________________________-->
  <para>
   这里有一些例子：
  </para>
<!-- pgdoc-cn_end sig_en=9403030e86c076a449f4a140b8734205 -->

<!-- pgdoc-cn_start sig_en=bd50f955d19d5a2243a4e1bcfc04a845 sig_cn_org=None source=14.1 
<programlisting>
SELECT soundex('hello world!');

SELECT soundex('Anne'), soundex('Ann'), difference('Anne', 'Ann');
SELECT soundex('Anne'), soundex('Andrew'), difference('Anne', 'Andrew');
SELECT soundex('Anne'), soundex('Margaret'), difference('Anne', 'Margaret');

CREATE TABLE s (nm text);

INSERT INTO s VALUES ('john');
INSERT INTO s VALUES ('joan');
INSERT INTO s VALUES ('wobbly');
INSERT INTO s VALUES ('jack');

SELECT * FROM s WHERE soundex(nm) = soundex('john');

SELECT * FROM s WHERE difference(s.nm, 'john') &gt; 2;
</programlisting>
________________________________________________________-->
<programlisting>
SELECT soundex('hello world!');

SELECT soundex('Anne'), soundex('Ann'), difference('Anne', 'Ann');
SELECT soundex('Anne'), soundex('Andrew'), difference('Anne', 'Andrew');
SELECT soundex('Anne'), soundex('Margaret'), difference('Anne', 'Margaret');

CREATE TABLE s (nm text);

INSERT INTO s VALUES ('john');
INSERT INTO s VALUES ('joan');
INSERT INTO s VALUES ('wobbly');
INSERT INTO s VALUES ('jack');

SELECT * FROM s WHERE soundex(nm) = soundex('john');

SELECT * FROM s WHERE difference(s.nm, 'john') &gt; 2;
</programlisting>
<!-- pgdoc-cn_end sig_en=bd50f955d19d5a2243a4e1bcfc04a845 -->
 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=d6d98c21c7ed0c54195601121f350116 sig_cn_org=None source=14.1 
  <title>Levenshtein</title>
________________________________________________________-->
  <title>Levenshtein</title>
<!-- pgdoc-cn_end sig_en=d6d98c21c7ed0c54195601121f350116 -->

<!-- pgdoc-cn_start sig_en=d2b5b89bfa3e21d34a24d3a17b10970d sig_cn_org=None source=14.1 
  <para>
   This function calculates the Levenshtein distance between two strings:
  </para>
________________________________________________________-->
  <para>
   这个函数计算两个字符串之间的编辑距离。
  </para>
<!-- pgdoc-cn_end sig_en=d2b5b89bfa3e21d34a24d3a17b10970d -->

<!-- pgdoc-cn_start sig_en=6981359b514184337c2ee1f6948220af sig_cn_org=None source=14.1 
  <indexterm>
   <primary>levenshtein</primary>
  </indexterm>
________________________________________________________-->
  <indexterm>
   <primary>levenshtein</primary>
  </indexterm>
<!-- pgdoc-cn_end sig_en=6981359b514184337c2ee1f6948220af -->

<!-- pgdoc-cn_start sig_en=3cc556ef1ae86b5b78579be26f986f95 sig_cn_org=None source=14.1 
  <indexterm>
   <primary>levenshtein_less_equal</primary>
  </indexterm>
________________________________________________________-->
  <indexterm>
   <primary>levenshtein_less_equal</primary>
  </indexterm>
<!-- pgdoc-cn_end sig_en=3cc556ef1ae86b5b78579be26f986f95 -->

<!-- pgdoc-cn_start sig_en=0e97d659e95222109a0a7fa26f4d0767 sig_cn_org=None source=14.1 
<synopsis>
levenshtein(text source, text target, int ins_cost, int del_cost, int sub_cost) returns int
levenshtein(text source, text target) returns int
levenshtein_less_equal(text source, text target, int ins_cost, int del_cost, int sub_cost, int max_d) returns int
levenshtein_less_equal(text source, text target, int max_d) returns int
</synopsis>
________________________________________________________-->
<synopsis>
levenshtein(text source, text target, int ins_cost, int del_cost, int sub_cost) 返回 int
levenshtein(text source, text target) 返回 int
levenshtein_less_equal(text source, text target, int ins_cost, int del_cost, int sub_cost, int max_d) 返回 int
levenshtein_less_equal(text source, text target, int max_d) 返回 int
</synopsis>
<!-- pgdoc-cn_end sig_en=0e97d659e95222109a0a7fa26f4d0767 -->

<!-- pgdoc-cn_start sig_en=179bd4bb54789f2cfc5a532d08fbc44b sig_cn_org=None source=14.1 
  <para>
   Both <literal>source</literal> and <literal>target</literal> can be any
   non-null string, with a maximum of 255 characters.  The cost parameters
   specify how much to charge for a character insertion, deletion, or
   substitution, respectively.  You can omit the cost parameters, as in
   the second version of the function; in that case they all default to 1.
  </para>
________________________________________________________-->
  <para>
   <literal>source</literal>以及<literal>target</literal>都可以是任何非空字符串，
   最长为 255 个字符。代价参数分别指定一个字符插入、删除或替换的开销。
   你可以像这个函数的第二种版本那样忽略代价参数，那样它们都会默认为 1。
  </para>
<!-- pgdoc-cn_end sig_en=179bd4bb54789f2cfc5a532d08fbc44b -->

<!-- pgdoc-cn_start sig_en=e8b3900b08c51f69895d667fda97728b sig_cn_org=None source=14.1 
  <para>
   <function>levenshtein_less_equal</function> is an accelerated version of the
   Levenshtein function for use when only small distances are of interest.
   If the actual distance is less than or equal to <literal>max_d</literal>,
   then <function>levenshtein_less_equal</function> returns the correct
   distance; otherwise it returns some value greater than <literal>max_d</literal>.
   If <literal>max_d</literal> is negative then the behavior is the same as
   <function>levenshtein</function>.
  </para>
________________________________________________________-->
  <para>
   <function>levenshtein_less_equal</function>是 Levenshtein 函数的速度更快
   的版本，它被用于只对小距离感兴趣的情况。如果实际距离小于等于<literal>max_d</literal>，
   那么<function>levenshtein_less_equal</function>返回正确的距离。否则它返回某个
   大于<literal>max_d</literal>的值。如果<literal>max_d</literal>是负值，那么其行为等同于
   <function>levenshtein</function>。
  </para>
<!-- pgdoc-cn_end sig_en=e8b3900b08c51f69895d667fda97728b -->

<!-- pgdoc-cn_start sig_en=66e7ec1500293fd0d4791e7b0d21807c sig_cn_org=None source=14.1 
  <para>
   Examples:
  </para>
________________________________________________________-->
  <para>
   例子：
  </para>
<!-- pgdoc-cn_end sig_en=66e7ec1500293fd0d4791e7b0d21807c -->

<!-- pgdoc-cn_start sig_en=ed499f2cc8ce89f7d1b2d0b6cbbe1c9e sig_cn_org=None source=14.1 
<screen>
test=# SELECT levenshtein('GUMBO', 'GAMBOL');
 levenshtein
-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-
           2
(1 row)

test=# SELECT levenshtein('GUMBO', 'GAMBOL', 2, 1, 1);
 levenshtein
-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-
           3
(1 row)

test=# SELECT levenshtein_less_equal('extensive', 'exhaustive', 2);
 levenshtein_less_equal
-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
                      3
(1 row)

test=# SELECT levenshtein_less_equal('extensive', 'exhaustive', 4);
 levenshtein_less_equal
-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
                      4
(1 row)
</screen>
________________________________________________________-->
<screen>
test=# SELECT levenshtein('GUMBO', 'GAMBOL');
 levenshtein
-------------
           2
(1 row)

test=# SELECT levenshtein('GUMBO', 'GAMBOL', 2,1,1);
 levenshtein
-------------
           3
(1 row)

test=# SELECT levenshtein_less_equal('extensive', 'exhaustive',2);
 levenshtein_less_equal
------------------------
                      3
(1 row)

test=# SELECT levenshtein_less_equal('extensive', 'exhaustive',4);
 levenshtein_less_equal
------------------------
                      4
(1 row)
</screen>
<!-- pgdoc-cn_end sig_en=ed499f2cc8ce89f7d1b2d0b6cbbe1c9e -->
 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=0079db8b4b5987e1be71007572cdf0bb sig_cn_org=None source=14.1 
  <title>Metaphone</title>
________________________________________________________-->
  <title>Metaphone</title>
<!-- pgdoc-cn_end sig_en=0079db8b4b5987e1be71007572cdf0bb -->

<!-- pgdoc-cn_start sig_en=8aaaeb343165b03e2686cd4bf533f9c8 sig_cn_org=None source=14.1 
  <para>
   Metaphone, like Soundex, is based on the idea of constructing a
   representative code for an input string.  Two strings are then
   deemed similar if they have the same codes.
  </para>
________________________________________________________-->
  <para>
   和 Soundex 相似，Metaphone 的思想是构建一个输入字符串的一种代码。如果两个字符串具有相同的代码则认为它们相似。
  </para>
<!-- pgdoc-cn_end sig_en=8aaaeb343165b03e2686cd4bf533f9c8 -->

<!-- pgdoc-cn_start sig_en=d0197d98955cfe05d7daf2310019a2b9 sig_cn_org=None source=14.1 
  <para>
   This function calculates the metaphone code of an input string:
  </para>
________________________________________________________-->
  <para>
   这个函数计算一个输入字符串的变音位代码：
  </para>
<!-- pgdoc-cn_end sig_en=d0197d98955cfe05d7daf2310019a2b9 -->

<!-- pgdoc-cn_start sig_en=1f05aa45b39797aefde0c742136d076e sig_cn_org=None source=14.1 
  <indexterm>
   <primary>metaphone</primary>
  </indexterm>
________________________________________________________-->
  <indexterm>
   <primary>metaphone</primary>
  </indexterm>
<!-- pgdoc-cn_end sig_en=1f05aa45b39797aefde0c742136d076e -->

<!-- pgdoc-cn_start sig_en=0d2dc1c1d177cc1015f57ef6683f5325 sig_cn_org=None source=14.1 
<synopsis>
metaphone(text source, int max_output_length) returns text
</synopsis>
________________________________________________________-->
<synopsis>
metaphone(text source, int max_output_length) 返回 text
</synopsis>
<!-- pgdoc-cn_end sig_en=0d2dc1c1d177cc1015f57ef6683f5325 -->

<!-- pgdoc-cn_start sig_en=cb541cae298dd6857845a356c539d542 sig_cn_org=None source=14.1 
  <para>
   <literal>source</literal> has to be a non-null string with a maximum of
   255 characters.  <literal>max_output_length</literal> sets the maximum
   length of the output metaphone code; if longer, the output is truncated
   to this length.
  </para>
________________________________________________________-->
  <para>
   <literal>source</literal>必须是一个非空字符串，最大长度为 255 个字符。<literal>max_output_length</literal>设置输出的变音位代码的最大长度，如果超长，输出会被截断到这个长度。
  </para>
<!-- pgdoc-cn_end sig_en=cb541cae298dd6857845a356c539d542 -->

<!-- pgdoc-cn_start sig_en=e295c6178d8dee478ebee625e3c6a39e sig_cn_org=None source=14.1 
  <para>
   Example:
  </para>
________________________________________________________-->
  <para>
   例子：
  </para>
<!-- pgdoc-cn_end sig_en=e295c6178d8dee478ebee625e3c6a39e -->

<!-- pgdoc-cn_start sig_en=567f78c4f13bdce718b4fc65a240751a sig_cn_org=None source=14.1 
<screen>
test=# SELECT metaphone('GUMBO', 4);
 metaphone
-&minus;-&minus;-&minus;-&minus;-&minus;-
 KM
(1 row)
</screen>
________________________________________________________-->
<screen>
test=# SELECT metaphone('GUMBO', 4);
 metaphone
-----------
 KM
(1 row)
</screen>
<!-- pgdoc-cn_end sig_en=567f78c4f13bdce718b4fc65a240751a -->
 </sect2>

 <sect2>
<!-- pgdoc-cn_start sig_en=ba374633ff2ba662b40861a0321eadf1 sig_cn_org=None source=14.1 
  <title>Double Metaphone</title>
________________________________________________________-->
  <title>双 Metaphone</title>
<!-- pgdoc-cn_end sig_en=ba374633ff2ba662b40861a0321eadf1 -->

<!-- pgdoc-cn_start sig_en=cf1f45730edbb5b997002e9f342d1eaf sig_cn_org=None source=14.1 
  <para>
   The Double Metaphone system computes two <quote>sounds like</quote> strings
   for a given input string &mdash; a <quote>primary</quote> and an
   <quote>alternate</quote>.  In most cases they are the same, but for non-English
   names especially they can be a bit different, depending on pronunciation.
   These functions compute the primary and alternate codes:
  </para>
________________________________________________________-->
  <para>
   双变音位系统为一个给定输入字符串计算两个<quote>听起来像的</quote>字符串 &mdash; 一个<quote>主要</quote>代码和一个<quote>次要</quote>代码。在大部分情况下它们是相同的，但是对于非英语名称它们可能有一点不同，这取决于发音。这些函数计算主要和次要代码：
  </para>
<!-- pgdoc-cn_end sig_en=cf1f45730edbb5b997002e9f342d1eaf -->

<!-- pgdoc-cn_start sig_en=5732adb22790b583a2fa215a9547f5fb sig_cn_org=None source=14.1 
  <indexterm>
   <primary>dmetaphone</primary>
  </indexterm>
________________________________________________________-->
  <indexterm>
   <primary>dmetaphone</primary>
  </indexterm>
<!-- pgdoc-cn_end sig_en=5732adb22790b583a2fa215a9547f5fb -->

<!-- pgdoc-cn_start sig_en=8b25ed3a3321cb84c0859ab2fc2e68a0 sig_cn_org=None source=14.1 
  <indexterm>
   <primary>dmetaphone_alt</primary>
  </indexterm>
________________________________________________________-->
  <indexterm>
   <primary>dmetaphone_alt</primary>
  </indexterm>
<!-- pgdoc-cn_end sig_en=8b25ed3a3321cb84c0859ab2fc2e68a0 -->

<!-- pgdoc-cn_start sig_en=08455d636d34148d307ac367168d1036 sig_cn_org=None source=14.1 
<synopsis>
dmetaphone(text source) returns text
dmetaphone_alt(text source) returns text
</synopsis>
________________________________________________________-->
<synopsis>
dmetaphone(text source) 返回 text
dmetaphone_alt(text source) 返回 text
</synopsis>
<!-- pgdoc-cn_end sig_en=08455d636d34148d307ac367168d1036 -->

<!-- pgdoc-cn_start sig_en=0bd2043c569d3c34abeb87e3ebb7e0b5 sig_cn_org=None source=14.1 
  <para>
   There is no length limit on the input strings.
  </para>
________________________________________________________-->
  <para>
   对输入字符串没有长度限制。
  </para>
<!-- pgdoc-cn_end sig_en=0bd2043c569d3c34abeb87e3ebb7e0b5 -->

<!-- pgdoc-cn_start sig_en=e295c6178d8dee478ebee625e3c6a39e sig_cn_org=None source=14.1 
  <para>
   Example:
  </para>
________________________________________________________-->
  <para>
   例子：
  </para>
<!-- pgdoc-cn_end sig_en=e295c6178d8dee478ebee625e3c6a39e -->

<!-- pgdoc-cn_start sig_en=6ea7997265ad2e1bcaf194d4b6aec6a4 sig_cn_org=None source=14.1 
<screen>
test=# SELECT dmetaphone('gumbo');
 dmetaphone
-&minus;-&minus;-&minus;-&minus;-&minus;-&minus;
 KMP
(1 row)
</screen>
________________________________________________________-->
<screen>
test=# SELECT dmetaphone('gumbo');
 dmetaphone
------------
 KMP
(1 row)
</screen>
<!-- pgdoc-cn_end sig_en=6ea7997265ad2e1bcaf194d4b6aec6a4 -->
 </sect2>

</sect1>
